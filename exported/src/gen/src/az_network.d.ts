import { CommandBuilder } from '../base';
import { az_network_application_gateway_address_pool_create_command_result } from './models/az_network_application_gateway_address_pool_create_command_result';
import { az_network_application_gateway_address_pool_delete_command_result } from './models/az_network_application_gateway_address_pool_delete_command_result';
import { az_network_application_gateway_address_pool_list_command_result } from './models/az_network_application_gateway_address_pool_list_command_result';
import { az_network_application_gateway_address_pool_show_command_result } from './models/az_network_application_gateway_address_pool_show_command_result';
import { az_network_application_gateway_address_pool_update_command_result } from './models/az_network_application_gateway_address_pool_update_command_result';
import { az_network_application_gateway_auth_cert_create_command_result } from './models/az_network_application_gateway_auth_cert_create_command_result';
import { az_network_application_gateway_auth_cert_delete_command_result } from './models/az_network_application_gateway_auth_cert_delete_command_result';
import { az_network_application_gateway_auth_cert_list_command_result } from './models/az_network_application_gateway_auth_cert_list_command_result';
import { az_network_application_gateway_auth_cert_show_command_result } from './models/az_network_application_gateway_auth_cert_show_command_result';
import { az_network_application_gateway_auth_cert_update_command_result } from './models/az_network_application_gateway_auth_cert_update_command_result';
import { az_network_application_gateway_frontend_ip_create_command_result } from './models/az_network_application_gateway_frontend_ip_create_command_result';
import { az_network_application_gateway_frontend_ip_delete_command_result } from './models/az_network_application_gateway_frontend_ip_delete_command_result';
import { az_network_application_gateway_frontend_ip_list_command_result } from './models/az_network_application_gateway_frontend_ip_list_command_result';
import { az_network_application_gateway_frontend_ip_show_command_result } from './models/az_network_application_gateway_frontend_ip_show_command_result';
import { az_network_application_gateway_frontend_ip_update_command_result } from './models/az_network_application_gateway_frontend_ip_update_command_result';
import { az_network_application_gateway_frontend_port_create_command_result } from './models/az_network_application_gateway_frontend_port_create_command_result';
import { az_network_application_gateway_frontend_port_delete_command_result } from './models/az_network_application_gateway_frontend_port_delete_command_result';
import { az_network_application_gateway_frontend_port_list_command_result } from './models/az_network_application_gateway_frontend_port_list_command_result';
import { az_network_application_gateway_frontend_port_show_command_result } from './models/az_network_application_gateway_frontend_port_show_command_result';
import { az_network_application_gateway_frontend_port_update_command_result } from './models/az_network_application_gateway_frontend_port_update_command_result';
import { az_network_application_gateway_http_listener_create_command_result } from './models/az_network_application_gateway_http_listener_create_command_result';
import { az_network_application_gateway_http_listener_delete_command_result } from './models/az_network_application_gateway_http_listener_delete_command_result';
import { az_network_application_gateway_http_listener_list_command_result } from './models/az_network_application_gateway_http_listener_list_command_result';
import { az_network_application_gateway_http_listener_show_command_result } from './models/az_network_application_gateway_http_listener_show_command_result';
import { az_network_application_gateway_http_listener_update_command_result } from './models/az_network_application_gateway_http_listener_update_command_result';
import { az_network_application_gateway_http_settings_create_command_result } from './models/az_network_application_gateway_http_settings_create_command_result';
import { az_network_application_gateway_http_settings_delete_command_result } from './models/az_network_application_gateway_http_settings_delete_command_result';
import { az_network_application_gateway_http_settings_list_command_result } from './models/az_network_application_gateway_http_settings_list_command_result';
import { az_network_application_gateway_http_settings_show_command_result } from './models/az_network_application_gateway_http_settings_show_command_result';
import { az_network_application_gateway_http_settings_update_command_result } from './models/az_network_application_gateway_http_settings_update_command_result';
import { az_network_application_gateway_identity_assign_command_result } from './models/az_network_application_gateway_identity_assign_command_result';
import { az_network_application_gateway_identity_remove_command_result } from './models/az_network_application_gateway_identity_remove_command_result';
import { az_network_application_gateway_identity_show_command_result } from './models/az_network_application_gateway_identity_show_command_result';
import { az_network_application_gateway_private_link_ip_config_add_command_result } from './models/az_network_application_gateway_private_link_ip_config_add_command_result';
import { az_network_application_gateway_private_link_ip_config_list_command_result } from './models/az_network_application_gateway_private_link_ip_config_list_command_result';
import { az_network_application_gateway_private_link_ip_config_remove_command_result } from './models/az_network_application_gateway_private_link_ip_config_remove_command_result';
import { az_network_application_gateway_private_link_ip_config_show_command_result } from './models/az_network_application_gateway_private_link_ip_config_show_command_result';
import { az_network_application_gateway_private_link_ip_config_wait_command_result } from './models/az_network_application_gateway_private_link_ip_config_wait_command_result';
import { az_network_application_gateway_private_link_add_command_result } from './models/az_network_application_gateway_private_link_add_command_result';
import { az_network_application_gateway_private_link_list_command_result } from './models/az_network_application_gateway_private_link_list_command_result';
import { az_network_application_gateway_private_link_remove_command_result } from './models/az_network_application_gateway_private_link_remove_command_result';
import { az_network_application_gateway_private_link_show_command_result } from './models/az_network_application_gateway_private_link_show_command_result';
import { az_network_application_gateway_private_link_wait_command_result } from './models/az_network_application_gateway_private_link_wait_command_result';
import { az_network_application_gateway_probe_create_command_result } from './models/az_network_application_gateway_probe_create_command_result';
import { az_network_application_gateway_probe_delete_command_result } from './models/az_network_application_gateway_probe_delete_command_result';
import { az_network_application_gateway_probe_list_command_result } from './models/az_network_application_gateway_probe_list_command_result';
import { az_network_application_gateway_probe_show_command_result } from './models/az_network_application_gateway_probe_show_command_result';
import { az_network_application_gateway_probe_update_command_result } from './models/az_network_application_gateway_probe_update_command_result';
import { az_network_application_gateway_redirect_config_create_command_result } from './models/az_network_application_gateway_redirect_config_create_command_result';
import { az_network_application_gateway_redirect_config_delete_command_result } from './models/az_network_application_gateway_redirect_config_delete_command_result';
import { az_network_application_gateway_redirect_config_list_command_result } from './models/az_network_application_gateway_redirect_config_list_command_result';
import { az_network_application_gateway_redirect_config_show_command_result } from './models/az_network_application_gateway_redirect_config_show_command_result';
import { az_network_application_gateway_redirect_config_update_command_result } from './models/az_network_application_gateway_redirect_config_update_command_result';
import { az_network_application_gateway_rewrite_rule_condition_create_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_create_command_result';
import { az_network_application_gateway_rewrite_rule_condition_delete_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_delete_command_result';
import { az_network_application_gateway_rewrite_rule_condition_list_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_list_command_result';
import { az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_result';
import { az_network_application_gateway_rewrite_rule_condition_show_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_show_command_result';
import { az_network_application_gateway_rewrite_rule_condition_update_command_result } from './models/az_network_application_gateway_rewrite_rule_condition_update_command_result';
import { az_network_application_gateway_rewrite_rule_set_create_command_result } from './models/az_network_application_gateway_rewrite_rule_set_create_command_result';
import { az_network_application_gateway_rewrite_rule_set_delete_command_result } from './models/az_network_application_gateway_rewrite_rule_set_delete_command_result';
import { az_network_application_gateway_rewrite_rule_set_list_command_result } from './models/az_network_application_gateway_rewrite_rule_set_list_command_result';
import { az_network_application_gateway_rewrite_rule_set_show_command_result } from './models/az_network_application_gateway_rewrite_rule_set_show_command_result';
import { az_network_application_gateway_rewrite_rule_set_update_command_result } from './models/az_network_application_gateway_rewrite_rule_set_update_command_result';
import { az_network_application_gateway_rewrite_rule_create_command_result } from './models/az_network_application_gateway_rewrite_rule_create_command_result';
import { az_network_application_gateway_rewrite_rule_delete_command_result } from './models/az_network_application_gateway_rewrite_rule_delete_command_result';
import { az_network_application_gateway_rewrite_rule_list_command_result } from './models/az_network_application_gateway_rewrite_rule_list_command_result';
import { az_network_application_gateway_rewrite_rule_list_request_headers_command_result } from './models/az_network_application_gateway_rewrite_rule_list_request_headers_command_result';
import { az_network_application_gateway_rewrite_rule_list_response_headers_command_result } from './models/az_network_application_gateway_rewrite_rule_list_response_headers_command_result';
import { az_network_application_gateway_rewrite_rule_show_command_result } from './models/az_network_application_gateway_rewrite_rule_show_command_result';
import { az_network_application_gateway_rewrite_rule_update_command_result } from './models/az_network_application_gateway_rewrite_rule_update_command_result';
import { az_network_application_gateway_root_cert_create_command_result } from './models/az_network_application_gateway_root_cert_create_command_result';
import { az_network_application_gateway_root_cert_delete_command_result } from './models/az_network_application_gateway_root_cert_delete_command_result';
import { az_network_application_gateway_root_cert_list_command_result } from './models/az_network_application_gateway_root_cert_list_command_result';
import { az_network_application_gateway_root_cert_show_command_result } from './models/az_network_application_gateway_root_cert_show_command_result';
import { az_network_application_gateway_root_cert_update_command_result } from './models/az_network_application_gateway_root_cert_update_command_result';
import { az_network_application_gateway_rule_create_command_result } from './models/az_network_application_gateway_rule_create_command_result';
import { az_network_application_gateway_rule_delete_command_result } from './models/az_network_application_gateway_rule_delete_command_result';
import { az_network_application_gateway_rule_list_command_result } from './models/az_network_application_gateway_rule_list_command_result';
import { az_network_application_gateway_rule_show_command_result } from './models/az_network_application_gateway_rule_show_command_result';
import { az_network_application_gateway_rule_update_command_result } from './models/az_network_application_gateway_rule_update_command_result';
import { az_network_application_gateway_ssl_cert_create_command_result } from './models/az_network_application_gateway_ssl_cert_create_command_result';
import { az_network_application_gateway_ssl_cert_delete_command_result } from './models/az_network_application_gateway_ssl_cert_delete_command_result';
import { az_network_application_gateway_ssl_cert_list_command_result } from './models/az_network_application_gateway_ssl_cert_list_command_result';
import { az_network_application_gateway_ssl_cert_show_command_result } from './models/az_network_application_gateway_ssl_cert_show_command_result';
import { az_network_application_gateway_ssl_cert_update_command_result } from './models/az_network_application_gateway_ssl_cert_update_command_result';
import { az_network_application_gateway_ssl_policy_predefined_list_command_result } from './models/az_network_application_gateway_ssl_policy_predefined_list_command_result';
import { az_network_application_gateway_ssl_policy_predefined_show_command_result } from './models/az_network_application_gateway_ssl_policy_predefined_show_command_result';
import { az_network_application_gateway_ssl_policy_list_options_command_result } from './models/az_network_application_gateway_ssl_policy_list_options_command_result';
import { az_network_application_gateway_ssl_policy_set_command_result } from './models/az_network_application_gateway_ssl_policy_set_command_result';
import { az_network_application_gateway_ssl_policy_show_command_result } from './models/az_network_application_gateway_ssl_policy_show_command_result';
import { az_network_application_gateway_url_path_map_rule_create_command_result } from './models/az_network_application_gateway_url_path_map_rule_create_command_result';
import { az_network_application_gateway_url_path_map_rule_delete_command_result } from './models/az_network_application_gateway_url_path_map_rule_delete_command_result';
import { az_network_application_gateway_url_path_map_create_command_result } from './models/az_network_application_gateway_url_path_map_create_command_result';
import { az_network_application_gateway_url_path_map_delete_command_result } from './models/az_network_application_gateway_url_path_map_delete_command_result';
import { az_network_application_gateway_url_path_map_list_command_result } from './models/az_network_application_gateway_url_path_map_list_command_result';
import { az_network_application_gateway_url_path_map_show_command_result } from './models/az_network_application_gateway_url_path_map_show_command_result';
import { az_network_application_gateway_url_path_map_update_command_result } from './models/az_network_application_gateway_url_path_map_update_command_result';
import { az_network_application_gateway_waf_config_list_rule_sets_command_result } from './models/az_network_application_gateway_waf_config_list_rule_sets_command_result';
import { az_network_application_gateway_waf_config_set_command_result } from './models/az_network_application_gateway_waf_config_set_command_result';
import { az_network_application_gateway_waf_config_show_command_result } from './models/az_network_application_gateway_waf_config_show_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_create_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_create_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_delete_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_delete_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_list_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_list_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_show_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_show_command_result';
import { az_network_application_gateway_waf_policy_custom_rule_update_command_result } from './models/az_network_application_gateway_waf_policy_custom_rule_update_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_result';
import { az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_result } from './models/az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_result';
import { az_network_application_gateway_waf_policy_policy_setting_list_command_result } from './models/az_network_application_gateway_waf_policy_policy_setting_list_command_result';
import { az_network_application_gateway_waf_policy_policy_setting_update_command_result } from './models/az_network_application_gateway_waf_policy_policy_setting_update_command_result';
import { az_network_application_gateway_waf_policy_create_command_result } from './models/az_network_application_gateway_waf_policy_create_command_result';
import { az_network_application_gateway_waf_policy_delete_command_result } from './models/az_network_application_gateway_waf_policy_delete_command_result';
import { az_network_application_gateway_waf_policy_list_command_result } from './models/az_network_application_gateway_waf_policy_list_command_result';
import { az_network_application_gateway_waf_policy_show_command_result } from './models/az_network_application_gateway_waf_policy_show_command_result';
import { az_network_application_gateway_waf_policy_update_command_result } from './models/az_network_application_gateway_waf_policy_update_command_result';
import { az_network_application_gateway_waf_policy_wait_command_result } from './models/az_network_application_gateway_waf_policy_wait_command_result';
import { az_network_application_gateway_create_command_result } from './models/az_network_application_gateway_create_command_result';
import { az_network_application_gateway_delete_command_result } from './models/az_network_application_gateway_delete_command_result';
import { az_network_application_gateway_list_command_result } from './models/az_network_application_gateway_list_command_result';
import { az_network_application_gateway_show_command_result } from './models/az_network_application_gateway_show_command_result';
import { az_network_application_gateway_show_backend_health_command_result } from './models/az_network_application_gateway_show_backend_health_command_result';
import { az_network_application_gateway_start_command_result } from './models/az_network_application_gateway_start_command_result';
import { az_network_application_gateway_stop_command_result } from './models/az_network_application_gateway_stop_command_result';
import { az_network_application_gateway_update_command_result } from './models/az_network_application_gateway_update_command_result';
import { az_network_application_gateway_wait_command_result } from './models/az_network_application_gateway_wait_command_result';
import { az_network_asg_create_command_result } from './models/az_network_asg_create_command_result';
import { az_network_asg_delete_command_result } from './models/az_network_asg_delete_command_result';
import { az_network_asg_list_command_result } from './models/az_network_asg_list_command_result';
import { az_network_asg_show_command_result } from './models/az_network_asg_show_command_result';
import { az_network_asg_update_command_result } from './models/az_network_asg_update_command_result';
import { az_network_bastion_create_command_result } from './models/az_network_bastion_create_command_result';
import { az_network_bastion_delete_command_result } from './models/az_network_bastion_delete_command_result';
import { az_network_bastion_list_command_result } from './models/az_network_bastion_list_command_result';
import { az_network_bastion_show_command_result } from './models/az_network_bastion_show_command_result';
import { az_network_ddos_protection_create_command_result } from './models/az_network_ddos_protection_create_command_result';
import { az_network_ddos_protection_delete_command_result } from './models/az_network_ddos_protection_delete_command_result';
import { az_network_ddos_protection_list_command_result } from './models/az_network_ddos_protection_list_command_result';
import { az_network_ddos_protection_show_command_result } from './models/az_network_ddos_protection_show_command_result';
import { az_network_ddos_protection_update_command_result } from './models/az_network_ddos_protection_update_command_result';
import { az_network_dns_record_set_a_add_record_command_result } from './models/az_network_dns_record_set_a_add_record_command_result';
import { az_network_dns_record_set_a_create_command_result } from './models/az_network_dns_record_set_a_create_command_result';
import { az_network_dns_record_set_a_delete_command_result } from './models/az_network_dns_record_set_a_delete_command_result';
import { az_network_dns_record_set_a_list_command_result } from './models/az_network_dns_record_set_a_list_command_result';
import { az_network_dns_record_set_a_remove_record_command_result } from './models/az_network_dns_record_set_a_remove_record_command_result';
import { az_network_dns_record_set_a_show_command_result } from './models/az_network_dns_record_set_a_show_command_result';
import { az_network_dns_record_set_a_update_command_result } from './models/az_network_dns_record_set_a_update_command_result';
import { az_network_dns_record_set_aaaa_add_record_command_result } from './models/az_network_dns_record_set_aaaa_add_record_command_result';
import { az_network_dns_record_set_aaaa_create_command_result } from './models/az_network_dns_record_set_aaaa_create_command_result';
import { az_network_dns_record_set_aaaa_delete_command_result } from './models/az_network_dns_record_set_aaaa_delete_command_result';
import { az_network_dns_record_set_aaaa_list_command_result } from './models/az_network_dns_record_set_aaaa_list_command_result';
import { az_network_dns_record_set_aaaa_remove_record_command_result } from './models/az_network_dns_record_set_aaaa_remove_record_command_result';
import { az_network_dns_record_set_aaaa_show_command_result } from './models/az_network_dns_record_set_aaaa_show_command_result';
import { az_network_dns_record_set_aaaa_update_command_result } from './models/az_network_dns_record_set_aaaa_update_command_result';
import { az_network_dns_record_set_caa_add_record_command_result } from './models/az_network_dns_record_set_caa_add_record_command_result';
import { az_network_dns_record_set_caa_create_command_result } from './models/az_network_dns_record_set_caa_create_command_result';
import { az_network_dns_record_set_caa_delete_command_result } from './models/az_network_dns_record_set_caa_delete_command_result';
import { az_network_dns_record_set_caa_list_command_result } from './models/az_network_dns_record_set_caa_list_command_result';
import { az_network_dns_record_set_caa_remove_record_command_result } from './models/az_network_dns_record_set_caa_remove_record_command_result';
import { az_network_dns_record_set_caa_show_command_result } from './models/az_network_dns_record_set_caa_show_command_result';
import { az_network_dns_record_set_caa_update_command_result } from './models/az_network_dns_record_set_caa_update_command_result';
import { az_network_dns_record_set_cname_create_command_result } from './models/az_network_dns_record_set_cname_create_command_result';
import { az_network_dns_record_set_cname_delete_command_result } from './models/az_network_dns_record_set_cname_delete_command_result';
import { az_network_dns_record_set_cname_list_command_result } from './models/az_network_dns_record_set_cname_list_command_result';
import { az_network_dns_record_set_cname_remove_record_command_result } from './models/az_network_dns_record_set_cname_remove_record_command_result';
import { az_network_dns_record_set_cname_set_record_command_result } from './models/az_network_dns_record_set_cname_set_record_command_result';
import { az_network_dns_record_set_cname_show_command_result } from './models/az_network_dns_record_set_cname_show_command_result';
import { az_network_dns_record_set_mx_add_record_command_result } from './models/az_network_dns_record_set_mx_add_record_command_result';
import { az_network_dns_record_set_mx_create_command_result } from './models/az_network_dns_record_set_mx_create_command_result';
import { az_network_dns_record_set_mx_delete_command_result } from './models/az_network_dns_record_set_mx_delete_command_result';
import { az_network_dns_record_set_mx_list_command_result } from './models/az_network_dns_record_set_mx_list_command_result';
import { az_network_dns_record_set_mx_remove_record_command_result } from './models/az_network_dns_record_set_mx_remove_record_command_result';
import { az_network_dns_record_set_mx_show_command_result } from './models/az_network_dns_record_set_mx_show_command_result';
import { az_network_dns_record_set_mx_update_command_result } from './models/az_network_dns_record_set_mx_update_command_result';
import { az_network_dns_record_set_ns_add_record_command_result } from './models/az_network_dns_record_set_ns_add_record_command_result';
import { az_network_dns_record_set_ns_create_command_result } from './models/az_network_dns_record_set_ns_create_command_result';
import { az_network_dns_record_set_ns_delete_command_result } from './models/az_network_dns_record_set_ns_delete_command_result';
import { az_network_dns_record_set_ns_list_command_result } from './models/az_network_dns_record_set_ns_list_command_result';
import { az_network_dns_record_set_ns_remove_record_command_result } from './models/az_network_dns_record_set_ns_remove_record_command_result';
import { az_network_dns_record_set_ns_show_command_result } from './models/az_network_dns_record_set_ns_show_command_result';
import { az_network_dns_record_set_ns_update_command_result } from './models/az_network_dns_record_set_ns_update_command_result';
import { az_network_dns_record_set_ptr_add_record_command_result } from './models/az_network_dns_record_set_ptr_add_record_command_result';
import { az_network_dns_record_set_ptr_create_command_result } from './models/az_network_dns_record_set_ptr_create_command_result';
import { az_network_dns_record_set_ptr_delete_command_result } from './models/az_network_dns_record_set_ptr_delete_command_result';
import { az_network_dns_record_set_ptr_list_command_result } from './models/az_network_dns_record_set_ptr_list_command_result';
import { az_network_dns_record_set_ptr_remove_record_command_result } from './models/az_network_dns_record_set_ptr_remove_record_command_result';
import { az_network_dns_record_set_ptr_show_command_result } from './models/az_network_dns_record_set_ptr_show_command_result';
import { az_network_dns_record_set_ptr_update_command_result } from './models/az_network_dns_record_set_ptr_update_command_result';
import { az_network_dns_record_set_soa_show_command_result } from './models/az_network_dns_record_set_soa_show_command_result';
import { az_network_dns_record_set_soa_update_command_result } from './models/az_network_dns_record_set_soa_update_command_result';
import { az_network_dns_record_set_srv_add_record_command_result } from './models/az_network_dns_record_set_srv_add_record_command_result';
import { az_network_dns_record_set_srv_create_command_result } from './models/az_network_dns_record_set_srv_create_command_result';
import { az_network_dns_record_set_srv_delete_command_result } from './models/az_network_dns_record_set_srv_delete_command_result';
import { az_network_dns_record_set_srv_list_command_result } from './models/az_network_dns_record_set_srv_list_command_result';
import { az_network_dns_record_set_srv_remove_record_command_result } from './models/az_network_dns_record_set_srv_remove_record_command_result';
import { az_network_dns_record_set_srv_show_command_result } from './models/az_network_dns_record_set_srv_show_command_result';
import { az_network_dns_record_set_srv_update_command_result } from './models/az_network_dns_record_set_srv_update_command_result';
import { az_network_dns_record_set_txt_add_record_command_result } from './models/az_network_dns_record_set_txt_add_record_command_result';
import { az_network_dns_record_set_txt_create_command_result } from './models/az_network_dns_record_set_txt_create_command_result';
import { az_network_dns_record_set_txt_delete_command_result } from './models/az_network_dns_record_set_txt_delete_command_result';
import { az_network_dns_record_set_txt_list_command_result } from './models/az_network_dns_record_set_txt_list_command_result';
import { az_network_dns_record_set_txt_remove_record_command_result } from './models/az_network_dns_record_set_txt_remove_record_command_result';
import { az_network_dns_record_set_txt_show_command_result } from './models/az_network_dns_record_set_txt_show_command_result';
import { az_network_dns_record_set_txt_update_command_result } from './models/az_network_dns_record_set_txt_update_command_result';
import { az_network_dns_record_set_list_command_result } from './models/az_network_dns_record_set_list_command_result';
import { az_network_dns_zone_create_command_result } from './models/az_network_dns_zone_create_command_result';
import { az_network_dns_zone_delete_command_result } from './models/az_network_dns_zone_delete_command_result';
import { az_network_dns_zone_export_command_result } from './models/az_network_dns_zone_export_command_result';
import { az_network_dns_zone_import_command_result } from './models/az_network_dns_zone_import_command_result';
import { az_network_dns_zone_list_command_result } from './models/az_network_dns_zone_list_command_result';
import { az_network_dns_zone_show_command_result } from './models/az_network_dns_zone_show_command_result';
import { az_network_dns_zone_update_command_result } from './models/az_network_dns_zone_update_command_result';
import { az_network_dns_list_references_command_result } from './models/az_network_dns_list_references_command_result';
import { az_network_express_route_auth_create_command_result } from './models/az_network_express_route_auth_create_command_result';
import { az_network_express_route_auth_delete_command_result } from './models/az_network_express_route_auth_delete_command_result';
import { az_network_express_route_auth_list_command_result } from './models/az_network_express_route_auth_list_command_result';
import { az_network_express_route_auth_show_command_result } from './models/az_network_express_route_auth_show_command_result';
import { az_network_express_route_gateway_connection_create_command_result } from './models/az_network_express_route_gateway_connection_create_command_result';
import { az_network_express_route_gateway_connection_delete_command_result } from './models/az_network_express_route_gateway_connection_delete_command_result';
import { az_network_express_route_gateway_connection_list_command_result } from './models/az_network_express_route_gateway_connection_list_command_result';
import { az_network_express_route_gateway_connection_show_command_result } from './models/az_network_express_route_gateway_connection_show_command_result';
import { az_network_express_route_gateway_connection_update_command_result } from './models/az_network_express_route_gateway_connection_update_command_result';
import { az_network_express_route_gateway_create_command_result } from './models/az_network_express_route_gateway_create_command_result';
import { az_network_express_route_gateway_delete_command_result } from './models/az_network_express_route_gateway_delete_command_result';
import { az_network_express_route_gateway_list_command_result } from './models/az_network_express_route_gateway_list_command_result';
import { az_network_express_route_gateway_show_command_result } from './models/az_network_express_route_gateway_show_command_result';
import { az_network_express_route_gateway_update_command_result } from './models/az_network_express_route_gateway_update_command_result';
import { az_network_express_route_peering_connection_create_command_result } from './models/az_network_express_route_peering_connection_create_command_result';
import { az_network_express_route_peering_connection_delete_command_result } from './models/az_network_express_route_peering_connection_delete_command_result';
import { az_network_express_route_peering_connection_show_command_result } from './models/az_network_express_route_peering_connection_show_command_result';
import { az_network_express_route_peering_peer_connection_list_command_result } from './models/az_network_express_route_peering_peer_connection_list_command_result';
import { az_network_express_route_peering_peer_connection_show_command_result } from './models/az_network_express_route_peering_peer_connection_show_command_result';
import { az_network_express_route_peering_create_command_result } from './models/az_network_express_route_peering_create_command_result';
import { az_network_express_route_peering_delete_command_result } from './models/az_network_express_route_peering_delete_command_result';
import { az_network_express_route_peering_list_command_result } from './models/az_network_express_route_peering_list_command_result';
import { az_network_express_route_peering_show_command_result } from './models/az_network_express_route_peering_show_command_result';
import { az_network_express_route_peering_update_command_result } from './models/az_network_express_route_peering_update_command_result';
import { az_network_express_route_port_identity_assign_command_result } from './models/az_network_express_route_port_identity_assign_command_result';
import { az_network_express_route_port_identity_remove_command_result } from './models/az_network_express_route_port_identity_remove_command_result';
import { az_network_express_route_port_identity_show_command_result } from './models/az_network_express_route_port_identity_show_command_result';
import { az_network_express_route_port_link_list_command_result } from './models/az_network_express_route_port_link_list_command_result';
import { az_network_express_route_port_link_show_command_result } from './models/az_network_express_route_port_link_show_command_result';
import { az_network_express_route_port_link_update_command_result } from './models/az_network_express_route_port_link_update_command_result';
import { az_network_express_route_port_location_list_command_result } from './models/az_network_express_route_port_location_list_command_result';
import { az_network_express_route_port_location_show_command_result } from './models/az_network_express_route_port_location_show_command_result';
import { az_network_express_route_port_create_command_result } from './models/az_network_express_route_port_create_command_result';
import { az_network_express_route_port_delete_command_result } from './models/az_network_express_route_port_delete_command_result';
import { az_network_express_route_port_list_command_result } from './models/az_network_express_route_port_list_command_result';
import { az_network_express_route_port_show_command_result } from './models/az_network_express_route_port_show_command_result';
import { az_network_express_route_port_update_command_result } from './models/az_network_express_route_port_update_command_result';
import { az_network_express_route_create_command_result } from './models/az_network_express_route_create_command_result';
import { az_network_express_route_delete_command_result } from './models/az_network_express_route_delete_command_result';
import { az_network_express_route_get_stats_command_result } from './models/az_network_express_route_get_stats_command_result';
import { az_network_express_route_list_command_result } from './models/az_network_express_route_list_command_result';
import { az_network_express_route_list_arp_tables_command_result } from './models/az_network_express_route_list_arp_tables_command_result';
import { az_network_express_route_list_route_tables_command_result } from './models/az_network_express_route_list_route_tables_command_result';
import { az_network_express_route_list_service_providers_command_result } from './models/az_network_express_route_list_service_providers_command_result';
import { az_network_express_route_show_command_result } from './models/az_network_express_route_show_command_result';
import { az_network_express_route_update_command_result } from './models/az_network_express_route_update_command_result';
import { az_network_express_route_wait_command_result } from './models/az_network_express_route_wait_command_result';
import { az_network_lb_address_pool_address_add_command_result } from './models/az_network_lb_address_pool_address_add_command_result';
import { az_network_lb_address_pool_address_list_command_result } from './models/az_network_lb_address_pool_address_list_command_result';
import { az_network_lb_address_pool_address_remove_command_result } from './models/az_network_lb_address_pool_address_remove_command_result';
import { az_network_lb_address_pool_create_command_result } from './models/az_network_lb_address_pool_create_command_result';
import { az_network_lb_address_pool_delete_command_result } from './models/az_network_lb_address_pool_delete_command_result';
import { az_network_lb_address_pool_list_command_result } from './models/az_network_lb_address_pool_list_command_result';
import { az_network_lb_address_pool_show_command_result } from './models/az_network_lb_address_pool_show_command_result';
import { az_network_lb_frontend_ip_create_command_result } from './models/az_network_lb_frontend_ip_create_command_result';
import { az_network_lb_frontend_ip_delete_command_result } from './models/az_network_lb_frontend_ip_delete_command_result';
import { az_network_lb_frontend_ip_list_command_result } from './models/az_network_lb_frontend_ip_list_command_result';
import { az_network_lb_frontend_ip_show_command_result } from './models/az_network_lb_frontend_ip_show_command_result';
import { az_network_lb_frontend_ip_update_command_result } from './models/az_network_lb_frontend_ip_update_command_result';
import { az_network_lb_inbound_nat_pool_create_command_result } from './models/az_network_lb_inbound_nat_pool_create_command_result';
import { az_network_lb_inbound_nat_pool_delete_command_result } from './models/az_network_lb_inbound_nat_pool_delete_command_result';
import { az_network_lb_inbound_nat_pool_list_command_result } from './models/az_network_lb_inbound_nat_pool_list_command_result';
import { az_network_lb_inbound_nat_pool_show_command_result } from './models/az_network_lb_inbound_nat_pool_show_command_result';
import { az_network_lb_inbound_nat_pool_update_command_result } from './models/az_network_lb_inbound_nat_pool_update_command_result';
import { az_network_lb_inbound_nat_rule_create_command_result } from './models/az_network_lb_inbound_nat_rule_create_command_result';
import { az_network_lb_inbound_nat_rule_delete_command_result } from './models/az_network_lb_inbound_nat_rule_delete_command_result';
import { az_network_lb_inbound_nat_rule_list_command_result } from './models/az_network_lb_inbound_nat_rule_list_command_result';
import { az_network_lb_inbound_nat_rule_show_command_result } from './models/az_network_lb_inbound_nat_rule_show_command_result';
import { az_network_lb_inbound_nat_rule_update_command_result } from './models/az_network_lb_inbound_nat_rule_update_command_result';
import { az_network_lb_outbound_rule_create_command_result } from './models/az_network_lb_outbound_rule_create_command_result';
import { az_network_lb_outbound_rule_delete_command_result } from './models/az_network_lb_outbound_rule_delete_command_result';
import { az_network_lb_outbound_rule_list_command_result } from './models/az_network_lb_outbound_rule_list_command_result';
import { az_network_lb_outbound_rule_show_command_result } from './models/az_network_lb_outbound_rule_show_command_result';
import { az_network_lb_outbound_rule_update_command_result } from './models/az_network_lb_outbound_rule_update_command_result';
import { az_network_lb_probe_create_command_result } from './models/az_network_lb_probe_create_command_result';
import { az_network_lb_probe_delete_command_result } from './models/az_network_lb_probe_delete_command_result';
import { az_network_lb_probe_list_command_result } from './models/az_network_lb_probe_list_command_result';
import { az_network_lb_probe_show_command_result } from './models/az_network_lb_probe_show_command_result';
import { az_network_lb_probe_update_command_result } from './models/az_network_lb_probe_update_command_result';
import { az_network_lb_rule_create_command_result } from './models/az_network_lb_rule_create_command_result';
import { az_network_lb_rule_delete_command_result } from './models/az_network_lb_rule_delete_command_result';
import { az_network_lb_rule_list_command_result } from './models/az_network_lb_rule_list_command_result';
import { az_network_lb_rule_show_command_result } from './models/az_network_lb_rule_show_command_result';
import { az_network_lb_rule_update_command_result } from './models/az_network_lb_rule_update_command_result';
import { az_network_lb_create_command_result } from './models/az_network_lb_create_command_result';
import { az_network_lb_delete_command_result } from './models/az_network_lb_delete_command_result';
import { az_network_lb_list_command_result } from './models/az_network_lb_list_command_result';
import { az_network_lb_show_command_result } from './models/az_network_lb_show_command_result';
import { az_network_lb_update_command_result } from './models/az_network_lb_update_command_result';
import { az_network_local_gateway_create_command_result } from './models/az_network_local_gateway_create_command_result';
import { az_network_local_gateway_delete_command_result } from './models/az_network_local_gateway_delete_command_result';
import { az_network_local_gateway_list_command_result } from './models/az_network_local_gateway_list_command_result';
import { az_network_local_gateway_show_command_result } from './models/az_network_local_gateway_show_command_result';
import { az_network_local_gateway_update_command_result } from './models/az_network_local_gateway_update_command_result';
import { az_network_local_gateway_wait_command_result } from './models/az_network_local_gateway_wait_command_result';
import { az_network_nat_gateway_create_command_result } from './models/az_network_nat_gateway_create_command_result';
import { az_network_nat_gateway_delete_command_result } from './models/az_network_nat_gateway_delete_command_result';
import { az_network_nat_gateway_list_command_result } from './models/az_network_nat_gateway_list_command_result';
import { az_network_nat_gateway_show_command_result } from './models/az_network_nat_gateway_show_command_result';
import { az_network_nat_gateway_update_command_result } from './models/az_network_nat_gateway_update_command_result';
import { az_network_nat_gateway_wait_command_result } from './models/az_network_nat_gateway_wait_command_result';
import { az_network_nic_ip_config_address_pool_add_command_result } from './models/az_network_nic_ip_config_address_pool_add_command_result';
import { az_network_nic_ip_config_address_pool_remove_command_result } from './models/az_network_nic_ip_config_address_pool_remove_command_result';
import { az_network_nic_ip_config_inbound_nat_rule_add_command_result } from './models/az_network_nic_ip_config_inbound_nat_rule_add_command_result';
import { az_network_nic_ip_config_inbound_nat_rule_remove_command_result } from './models/az_network_nic_ip_config_inbound_nat_rule_remove_command_result';
import { az_network_nic_ip_config_create_command_result } from './models/az_network_nic_ip_config_create_command_result';
import { az_network_nic_ip_config_delete_command_result } from './models/az_network_nic_ip_config_delete_command_result';
import { az_network_nic_ip_config_list_command_result } from './models/az_network_nic_ip_config_list_command_result';
import { az_network_nic_ip_config_show_command_result } from './models/az_network_nic_ip_config_show_command_result';
import { az_network_nic_ip_config_update_command_result } from './models/az_network_nic_ip_config_update_command_result';
import { az_network_nic_create_command_result } from './models/az_network_nic_create_command_result';
import { az_network_nic_delete_command_result } from './models/az_network_nic_delete_command_result';
import { az_network_nic_list_command_result } from './models/az_network_nic_list_command_result';
import { az_network_nic_list_effective_nsg_command_result } from './models/az_network_nic_list_effective_nsg_command_result';
import { az_network_nic_show_command_result } from './models/az_network_nic_show_command_result';
import { az_network_nic_show_effective_route_table_command_result } from './models/az_network_nic_show_effective_route_table_command_result';
import { az_network_nic_update_command_result } from './models/az_network_nic_update_command_result';
import { az_network_nic_wait_command_result } from './models/az_network_nic_wait_command_result';
import { az_network_nsg_rule_create_command_result } from './models/az_network_nsg_rule_create_command_result';
import { az_network_nsg_rule_delete_command_result } from './models/az_network_nsg_rule_delete_command_result';
import { az_network_nsg_rule_list_command_result } from './models/az_network_nsg_rule_list_command_result';
import { az_network_nsg_rule_show_command_result } from './models/az_network_nsg_rule_show_command_result';
import { az_network_nsg_rule_update_command_result } from './models/az_network_nsg_rule_update_command_result';
import { az_network_nsg_create_command_result } from './models/az_network_nsg_create_command_result';
import { az_network_nsg_delete_command_result } from './models/az_network_nsg_delete_command_result';
import { az_network_nsg_list_command_result } from './models/az_network_nsg_list_command_result';
import { az_network_nsg_show_command_result } from './models/az_network_nsg_show_command_result';
import { az_network_nsg_update_command_result } from './models/az_network_nsg_update_command_result';
import { az_network_private_dns_link_vnet_create_command_result } from './models/az_network_private_dns_link_vnet_create_command_result';
import { az_network_private_dns_link_vnet_delete_command_result } from './models/az_network_private_dns_link_vnet_delete_command_result';
import { az_network_private_dns_link_vnet_list_command_result } from './models/az_network_private_dns_link_vnet_list_command_result';
import { az_network_private_dns_link_vnet_show_command_result } from './models/az_network_private_dns_link_vnet_show_command_result';
import { az_network_private_dns_link_vnet_update_command_result } from './models/az_network_private_dns_link_vnet_update_command_result';
import { az_network_private_dns_link_vnet_wait_command_result } from './models/az_network_private_dns_link_vnet_wait_command_result';
import { az_network_private_dns_record_set_a_add_record_command_result } from './models/az_network_private_dns_record_set_a_add_record_command_result';
import { az_network_private_dns_record_set_a_create_command_result } from './models/az_network_private_dns_record_set_a_create_command_result';
import { az_network_private_dns_record_set_a_delete_command_result } from './models/az_network_private_dns_record_set_a_delete_command_result';
import { az_network_private_dns_record_set_a_list_command_result } from './models/az_network_private_dns_record_set_a_list_command_result';
import { az_network_private_dns_record_set_a_remove_record_command_result } from './models/az_network_private_dns_record_set_a_remove_record_command_result';
import { az_network_private_dns_record_set_a_show_command_result } from './models/az_network_private_dns_record_set_a_show_command_result';
import { az_network_private_dns_record_set_a_update_command_result } from './models/az_network_private_dns_record_set_a_update_command_result';
import { az_network_private_dns_record_set_aaaa_add_record_command_result } from './models/az_network_private_dns_record_set_aaaa_add_record_command_result';
import { az_network_private_dns_record_set_aaaa_create_command_result } from './models/az_network_private_dns_record_set_aaaa_create_command_result';
import { az_network_private_dns_record_set_aaaa_delete_command_result } from './models/az_network_private_dns_record_set_aaaa_delete_command_result';
import { az_network_private_dns_record_set_aaaa_list_command_result } from './models/az_network_private_dns_record_set_aaaa_list_command_result';
import { az_network_private_dns_record_set_aaaa_remove_record_command_result } from './models/az_network_private_dns_record_set_aaaa_remove_record_command_result';
import { az_network_private_dns_record_set_aaaa_show_command_result } from './models/az_network_private_dns_record_set_aaaa_show_command_result';
import { az_network_private_dns_record_set_aaaa_update_command_result } from './models/az_network_private_dns_record_set_aaaa_update_command_result';
import { az_network_private_dns_record_set_cname_create_command_result } from './models/az_network_private_dns_record_set_cname_create_command_result';
import { az_network_private_dns_record_set_cname_delete_command_result } from './models/az_network_private_dns_record_set_cname_delete_command_result';
import { az_network_private_dns_record_set_cname_list_command_result } from './models/az_network_private_dns_record_set_cname_list_command_result';
import { az_network_private_dns_record_set_cname_remove_record_command_result } from './models/az_network_private_dns_record_set_cname_remove_record_command_result';
import { az_network_private_dns_record_set_cname_set_record_command_result } from './models/az_network_private_dns_record_set_cname_set_record_command_result';
import { az_network_private_dns_record_set_cname_show_command_result } from './models/az_network_private_dns_record_set_cname_show_command_result';
import { az_network_private_dns_record_set_cname_update_command_result } from './models/az_network_private_dns_record_set_cname_update_command_result';
import { az_network_private_dns_record_set_mx_add_record_command_result } from './models/az_network_private_dns_record_set_mx_add_record_command_result';
import { az_network_private_dns_record_set_mx_create_command_result } from './models/az_network_private_dns_record_set_mx_create_command_result';
import { az_network_private_dns_record_set_mx_delete_command_result } from './models/az_network_private_dns_record_set_mx_delete_command_result';
import { az_network_private_dns_record_set_mx_list_command_result } from './models/az_network_private_dns_record_set_mx_list_command_result';
import { az_network_private_dns_record_set_mx_remove_record_command_result } from './models/az_network_private_dns_record_set_mx_remove_record_command_result';
import { az_network_private_dns_record_set_mx_show_command_result } from './models/az_network_private_dns_record_set_mx_show_command_result';
import { az_network_private_dns_record_set_mx_update_command_result } from './models/az_network_private_dns_record_set_mx_update_command_result';
import { az_network_private_dns_record_set_ptr_add_record_command_result } from './models/az_network_private_dns_record_set_ptr_add_record_command_result';
import { az_network_private_dns_record_set_ptr_create_command_result } from './models/az_network_private_dns_record_set_ptr_create_command_result';
import { az_network_private_dns_record_set_ptr_delete_command_result } from './models/az_network_private_dns_record_set_ptr_delete_command_result';
import { az_network_private_dns_record_set_ptr_list_command_result } from './models/az_network_private_dns_record_set_ptr_list_command_result';
import { az_network_private_dns_record_set_ptr_remove_record_command_result } from './models/az_network_private_dns_record_set_ptr_remove_record_command_result';
import { az_network_private_dns_record_set_ptr_show_command_result } from './models/az_network_private_dns_record_set_ptr_show_command_result';
import { az_network_private_dns_record_set_ptr_update_command_result } from './models/az_network_private_dns_record_set_ptr_update_command_result';
import { az_network_private_dns_record_set_soa_show_command_result } from './models/az_network_private_dns_record_set_soa_show_command_result';
import { az_network_private_dns_record_set_soa_update_command_result } from './models/az_network_private_dns_record_set_soa_update_command_result';
import { az_network_private_dns_record_set_srv_add_record_command_result } from './models/az_network_private_dns_record_set_srv_add_record_command_result';
import { az_network_private_dns_record_set_srv_create_command_result } from './models/az_network_private_dns_record_set_srv_create_command_result';
import { az_network_private_dns_record_set_srv_delete_command_result } from './models/az_network_private_dns_record_set_srv_delete_command_result';
import { az_network_private_dns_record_set_srv_list_command_result } from './models/az_network_private_dns_record_set_srv_list_command_result';
import { az_network_private_dns_record_set_srv_remove_record_command_result } from './models/az_network_private_dns_record_set_srv_remove_record_command_result';
import { az_network_private_dns_record_set_srv_show_command_result } from './models/az_network_private_dns_record_set_srv_show_command_result';
import { az_network_private_dns_record_set_srv_update_command_result } from './models/az_network_private_dns_record_set_srv_update_command_result';
import { az_network_private_dns_record_set_txt_add_record_command_result } from './models/az_network_private_dns_record_set_txt_add_record_command_result';
import { az_network_private_dns_record_set_txt_create_command_result } from './models/az_network_private_dns_record_set_txt_create_command_result';
import { az_network_private_dns_record_set_txt_delete_command_result } from './models/az_network_private_dns_record_set_txt_delete_command_result';
import { az_network_private_dns_record_set_txt_list_command_result } from './models/az_network_private_dns_record_set_txt_list_command_result';
import { az_network_private_dns_record_set_txt_remove_record_command_result } from './models/az_network_private_dns_record_set_txt_remove_record_command_result';
import { az_network_private_dns_record_set_txt_show_command_result } from './models/az_network_private_dns_record_set_txt_show_command_result';
import { az_network_private_dns_record_set_txt_update_command_result } from './models/az_network_private_dns_record_set_txt_update_command_result';
import { az_network_private_dns_record_set_list_command_result } from './models/az_network_private_dns_record_set_list_command_result';
import { az_network_private_dns_zone_create_command_result } from './models/az_network_private_dns_zone_create_command_result';
import { az_network_private_dns_zone_delete_command_result } from './models/az_network_private_dns_zone_delete_command_result';
import { az_network_private_dns_zone_export_command_result } from './models/az_network_private_dns_zone_export_command_result';
import { az_network_private_dns_zone_import_command_result } from './models/az_network_private_dns_zone_import_command_result';
import { az_network_private_dns_zone_list_command_result } from './models/az_network_private_dns_zone_list_command_result';
import { az_network_private_dns_zone_show_command_result } from './models/az_network_private_dns_zone_show_command_result';
import { az_network_private_dns_zone_update_command_result } from './models/az_network_private_dns_zone_update_command_result';
import { az_network_private_dns_zone_wait_command_result } from './models/az_network_private_dns_zone_wait_command_result';
import { az_network_private_endpoint_dns_zone_group_add_command_result } from './models/az_network_private_endpoint_dns_zone_group_add_command_result';
import { az_network_private_endpoint_dns_zone_group_create_command_result } from './models/az_network_private_endpoint_dns_zone_group_create_command_result';
import { az_network_private_endpoint_dns_zone_group_delete_command_result } from './models/az_network_private_endpoint_dns_zone_group_delete_command_result';
import { az_network_private_endpoint_dns_zone_group_list_command_result } from './models/az_network_private_endpoint_dns_zone_group_list_command_result';
import { az_network_private_endpoint_dns_zone_group_remove_command_result } from './models/az_network_private_endpoint_dns_zone_group_remove_command_result';
import { az_network_private_endpoint_dns_zone_group_show_command_result } from './models/az_network_private_endpoint_dns_zone_group_show_command_result';
import { az_network_private_endpoint_connection_approve_command_result } from './models/az_network_private_endpoint_connection_approve_command_result';
import { az_network_private_endpoint_connection_delete_command_result } from './models/az_network_private_endpoint_connection_delete_command_result';
import { az_network_private_endpoint_connection_list_command_result } from './models/az_network_private_endpoint_connection_list_command_result';
import { az_network_private_endpoint_connection_reject_command_result } from './models/az_network_private_endpoint_connection_reject_command_result';
import { az_network_private_endpoint_connection_show_command_result } from './models/az_network_private_endpoint_connection_show_command_result';
import { az_network_private_endpoint_create_command_result } from './models/az_network_private_endpoint_create_command_result';
import { az_network_private_endpoint_delete_command_result } from './models/az_network_private_endpoint_delete_command_result';
import { az_network_private_endpoint_list_command_result } from './models/az_network_private_endpoint_list_command_result';
import { az_network_private_endpoint_list_types_command_result } from './models/az_network_private_endpoint_list_types_command_result';
import { az_network_private_endpoint_show_command_result } from './models/az_network_private_endpoint_show_command_result';
import { az_network_private_endpoint_update_command_result } from './models/az_network_private_endpoint_update_command_result';
import { az_network_private_link_resource_list_command_result } from './models/az_network_private_link_resource_list_command_result';
import { az_network_private_link_service_connection_delete_command_result } from './models/az_network_private_link_service_connection_delete_command_result';
import { az_network_private_link_service_connection_update_command_result } from './models/az_network_private_link_service_connection_update_command_result';
import { az_network_private_link_service_create_command_result } from './models/az_network_private_link_service_create_command_result';
import { az_network_private_link_service_delete_command_result } from './models/az_network_private_link_service_delete_command_result';
import { az_network_private_link_service_list_command_result } from './models/az_network_private_link_service_list_command_result';
import { az_network_private_link_service_show_command_result } from './models/az_network_private_link_service_show_command_result';
import { az_network_private_link_service_update_command_result } from './models/az_network_private_link_service_update_command_result';
import { az_network_profile_delete_command_result } from './models/az_network_profile_delete_command_result';
import { az_network_profile_list_command_result } from './models/az_network_profile_list_command_result';
import { az_network_profile_show_command_result } from './models/az_network_profile_show_command_result';
import { az_network_public_ip_prefix_create_command_result } from './models/az_network_public_ip_prefix_create_command_result';
import { az_network_public_ip_prefix_delete_command_result } from './models/az_network_public_ip_prefix_delete_command_result';
import { az_network_public_ip_prefix_list_command_result } from './models/az_network_public_ip_prefix_list_command_result';
import { az_network_public_ip_prefix_show_command_result } from './models/az_network_public_ip_prefix_show_command_result';
import { az_network_public_ip_prefix_update_command_result } from './models/az_network_public_ip_prefix_update_command_result';
import { az_network_public_ip_create_command_result } from './models/az_network_public_ip_create_command_result';
import { az_network_public_ip_delete_command_result } from './models/az_network_public_ip_delete_command_result';
import { az_network_public_ip_list_command_result } from './models/az_network_public_ip_list_command_result';
import { az_network_public_ip_show_command_result } from './models/az_network_public_ip_show_command_result';
import { az_network_public_ip_update_command_result } from './models/az_network_public_ip_update_command_result';
import { az_network_route_filter_rule_create_command_result } from './models/az_network_route_filter_rule_create_command_result';
import { az_network_route_filter_rule_delete_command_result } from './models/az_network_route_filter_rule_delete_command_result';
import { az_network_route_filter_rule_list_command_result } from './models/az_network_route_filter_rule_list_command_result';
import { az_network_route_filter_rule_list_service_communities_command_result } from './models/az_network_route_filter_rule_list_service_communities_command_result';
import { az_network_route_filter_rule_show_command_result } from './models/az_network_route_filter_rule_show_command_result';
import { az_network_route_filter_rule_update_command_result } from './models/az_network_route_filter_rule_update_command_result';
import { az_network_route_filter_create_command_result } from './models/az_network_route_filter_create_command_result';
import { az_network_route_filter_delete_command_result } from './models/az_network_route_filter_delete_command_result';
import { az_network_route_filter_list_command_result } from './models/az_network_route_filter_list_command_result';
import { az_network_route_filter_show_command_result } from './models/az_network_route_filter_show_command_result';
import { az_network_route_filter_update_command_result } from './models/az_network_route_filter_update_command_result';
import { az_network_route_table_route_create_command_result } from './models/az_network_route_table_route_create_command_result';
import { az_network_route_table_route_delete_command_result } from './models/az_network_route_table_route_delete_command_result';
import { az_network_route_table_route_list_command_result } from './models/az_network_route_table_route_list_command_result';
import { az_network_route_table_route_show_command_result } from './models/az_network_route_table_route_show_command_result';
import { az_network_route_table_route_update_command_result } from './models/az_network_route_table_route_update_command_result';
import { az_network_route_table_create_command_result } from './models/az_network_route_table_create_command_result';
import { az_network_route_table_delete_command_result } from './models/az_network_route_table_delete_command_result';
import { az_network_route_table_list_command_result } from './models/az_network_route_table_list_command_result';
import { az_network_route_table_show_command_result } from './models/az_network_route_table_show_command_result';
import { az_network_route_table_update_command_result } from './models/az_network_route_table_update_command_result';
import { az_network_security_partner_provider_create_command_result } from './models/az_network_security_partner_provider_create_command_result';
import { az_network_security_partner_provider_delete_command_result } from './models/az_network_security_partner_provider_delete_command_result';
import { az_network_security_partner_provider_list_command_result } from './models/az_network_security_partner_provider_list_command_result';
import { az_network_security_partner_provider_show_command_result } from './models/az_network_security_partner_provider_show_command_result';
import { az_network_security_partner_provider_update_command_result } from './models/az_network_security_partner_provider_update_command_result';
import { az_network_service_endpoint_policy_definition_create_command_result } from './models/az_network_service_endpoint_policy_definition_create_command_result';
import { az_network_service_endpoint_policy_definition_delete_command_result } from './models/az_network_service_endpoint_policy_definition_delete_command_result';
import { az_network_service_endpoint_policy_definition_list_command_result } from './models/az_network_service_endpoint_policy_definition_list_command_result';
import { az_network_service_endpoint_policy_definition_show_command_result } from './models/az_network_service_endpoint_policy_definition_show_command_result';
import { az_network_service_endpoint_policy_definition_update_command_result } from './models/az_network_service_endpoint_policy_definition_update_command_result';
import { az_network_service_endpoint_policy_create_command_result } from './models/az_network_service_endpoint_policy_create_command_result';
import { az_network_service_endpoint_policy_delete_command_result } from './models/az_network_service_endpoint_policy_delete_command_result';
import { az_network_service_endpoint_policy_list_command_result } from './models/az_network_service_endpoint_policy_list_command_result';
import { az_network_service_endpoint_policy_show_command_result } from './models/az_network_service_endpoint_policy_show_command_result';
import { az_network_service_endpoint_policy_update_command_result } from './models/az_network_service_endpoint_policy_update_command_result';
import { az_network_service_endpoint_list_command_result } from './models/az_network_service_endpoint_list_command_result';
import { az_network_traffic_manager_endpoint_create_command_result } from './models/az_network_traffic_manager_endpoint_create_command_result';
import { az_network_traffic_manager_endpoint_delete_command_result } from './models/az_network_traffic_manager_endpoint_delete_command_result';
import { az_network_traffic_manager_endpoint_list_command_result } from './models/az_network_traffic_manager_endpoint_list_command_result';
import { az_network_traffic_manager_endpoint_show_command_result } from './models/az_network_traffic_manager_endpoint_show_command_result';
import { az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_result } from './models/az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_result';
import { az_network_traffic_manager_endpoint_update_command_result } from './models/az_network_traffic_manager_endpoint_update_command_result';
import { az_network_traffic_manager_profile_check_dns_command_result } from './models/az_network_traffic_manager_profile_check_dns_command_result';
import { az_network_traffic_manager_profile_create_command_result } from './models/az_network_traffic_manager_profile_create_command_result';
import { az_network_traffic_manager_profile_delete_command_result } from './models/az_network_traffic_manager_profile_delete_command_result';
import { az_network_traffic_manager_profile_list_command_result } from './models/az_network_traffic_manager_profile_list_command_result';
import { az_network_traffic_manager_profile_show_command_result } from './models/az_network_traffic_manager_profile_show_command_result';
import { az_network_traffic_manager_profile_update_command_result } from './models/az_network_traffic_manager_profile_update_command_result';
import { az_network_virtual_appliance_site_create_command_result } from './models/az_network_virtual_appliance_site_create_command_result';
import { az_network_virtual_appliance_site_delete_command_result } from './models/az_network_virtual_appliance_site_delete_command_result';
import { az_network_virtual_appliance_site_list_command_result } from './models/az_network_virtual_appliance_site_list_command_result';
import { az_network_virtual_appliance_site_show_command_result } from './models/az_network_virtual_appliance_site_show_command_result';
import { az_network_virtual_appliance_site_update_command_result } from './models/az_network_virtual_appliance_site_update_command_result';
import { az_network_virtual_appliance_sku_list_command_result } from './models/az_network_virtual_appliance_sku_list_command_result';
import { az_network_virtual_appliance_sku_show_command_result } from './models/az_network_virtual_appliance_sku_show_command_result';
import { az_network_virtual_appliance_create_command_result } from './models/az_network_virtual_appliance_create_command_result';
import { az_network_virtual_appliance_delete_command_result } from './models/az_network_virtual_appliance_delete_command_result';
import { az_network_virtual_appliance_list_command_result } from './models/az_network_virtual_appliance_list_command_result';
import { az_network_virtual_appliance_show_command_result } from './models/az_network_virtual_appliance_show_command_result';
import { az_network_virtual_appliance_update_command_result } from './models/az_network_virtual_appliance_update_command_result';
import { az_network_vnet_peering_create_command_result } from './models/az_network_vnet_peering_create_command_result';
import { az_network_vnet_peering_delete_command_result } from './models/az_network_vnet_peering_delete_command_result';
import { az_network_vnet_peering_list_command_result } from './models/az_network_vnet_peering_list_command_result';
import { az_network_vnet_peering_show_command_result } from './models/az_network_vnet_peering_show_command_result';
import { az_network_vnet_peering_update_command_result } from './models/az_network_vnet_peering_update_command_result';
import { az_network_vnet_subnet_create_command_result } from './models/az_network_vnet_subnet_create_command_result';
import { az_network_vnet_subnet_delete_command_result } from './models/az_network_vnet_subnet_delete_command_result';
import { az_network_vnet_subnet_list_command_result } from './models/az_network_vnet_subnet_list_command_result';
import { az_network_vnet_subnet_list_available_delegations_command_result } from './models/az_network_vnet_subnet_list_available_delegations_command_result';
import { az_network_vnet_subnet_show_command_result } from './models/az_network_vnet_subnet_show_command_result';
import { az_network_vnet_subnet_update_command_result } from './models/az_network_vnet_subnet_update_command_result';
import { az_network_vnet_gateway_aad_assign_command_result } from './models/az_network_vnet_gateway_aad_assign_command_result';
import { az_network_vnet_gateway_aad_remove_command_result } from './models/az_network_vnet_gateway_aad_remove_command_result';
import { az_network_vnet_gateway_aad_show_command_result } from './models/az_network_vnet_gateway_aad_show_command_result';
import { az_network_vnet_gateway_ipsec_policy_add_command_result } from './models/az_network_vnet_gateway_ipsec_policy_add_command_result';
import { az_network_vnet_gateway_ipsec_policy_clear_command_result } from './models/az_network_vnet_gateway_ipsec_policy_clear_command_result';
import { az_network_vnet_gateway_ipsec_policy_list_command_result } from './models/az_network_vnet_gateway_ipsec_policy_list_command_result';
import { az_network_vnet_gateway_revoked_cert_create_command_result } from './models/az_network_vnet_gateway_revoked_cert_create_command_result';
import { az_network_vnet_gateway_revoked_cert_delete_command_result } from './models/az_network_vnet_gateway_revoked_cert_delete_command_result';
import { az_network_vnet_gateway_root_cert_create_command_result } from './models/az_network_vnet_gateway_root_cert_create_command_result';
import { az_network_vnet_gateway_root_cert_delete_command_result } from './models/az_network_vnet_gateway_root_cert_delete_command_result';
import { az_network_vnet_gateway_vpn_client_generate_command_result } from './models/az_network_vnet_gateway_vpn_client_generate_command_result';
import { az_network_vnet_gateway_vpn_client_show_url_command_result } from './models/az_network_vnet_gateway_vpn_client_show_url_command_result';
import { az_network_vnet_gateway_create_command_result } from './models/az_network_vnet_gateway_create_command_result';
import { az_network_vnet_gateway_delete_command_result } from './models/az_network_vnet_gateway_delete_command_result';
import { az_network_vnet_gateway_list_command_result } from './models/az_network_vnet_gateway_list_command_result';
import { az_network_vnet_gateway_list_advertised_routes_command_result } from './models/az_network_vnet_gateway_list_advertised_routes_command_result';
import { az_network_vnet_gateway_list_bgp_peer_status_command_result } from './models/az_network_vnet_gateway_list_bgp_peer_status_command_result';
import { az_network_vnet_gateway_list_learned_routes_command_result } from './models/az_network_vnet_gateway_list_learned_routes_command_result';
import { az_network_vnet_gateway_reset_command_result } from './models/az_network_vnet_gateway_reset_command_result';
import { az_network_vnet_gateway_show_command_result } from './models/az_network_vnet_gateway_show_command_result';
import { az_network_vnet_gateway_update_command_result } from './models/az_network_vnet_gateway_update_command_result';
import { az_network_vnet_gateway_wait_command_result } from './models/az_network_vnet_gateway_wait_command_result';
import { az_network_vnet_check_ip_address_command_result } from './models/az_network_vnet_check_ip_address_command_result';
import { az_network_vnet_create_command_result } from './models/az_network_vnet_create_command_result';
import { az_network_vnet_delete_command_result } from './models/az_network_vnet_delete_command_result';
import { az_network_vnet_list_command_result } from './models/az_network_vnet_list_command_result';
import { az_network_vnet_list_available_ips_command_result } from './models/az_network_vnet_list_available_ips_command_result';
import { az_network_vnet_list_endpoint_services_command_result } from './models/az_network_vnet_list_endpoint_services_command_result';
import { az_network_vnet_show_command_result } from './models/az_network_vnet_show_command_result';
import { az_network_vnet_update_command_result } from './models/az_network_vnet_update_command_result';
import { az_network_vpn_connection_ipsec_policy_add_command_result } from './models/az_network_vpn_connection_ipsec_policy_add_command_result';
import { az_network_vpn_connection_ipsec_policy_clear_command_result } from './models/az_network_vpn_connection_ipsec_policy_clear_command_result';
import { az_network_vpn_connection_ipsec_policy_list_command_result } from './models/az_network_vpn_connection_ipsec_policy_list_command_result';
import { az_network_vpn_connection_shared_key_reset_command_result } from './models/az_network_vpn_connection_shared_key_reset_command_result';
import { az_network_vpn_connection_shared_key_show_command_result } from './models/az_network_vpn_connection_shared_key_show_command_result';
import { az_network_vpn_connection_shared_key_update_command_result } from './models/az_network_vpn_connection_shared_key_update_command_result';
import { az_network_vpn_connection_create_command_result } from './models/az_network_vpn_connection_create_command_result';
import { az_network_vpn_connection_delete_command_result } from './models/az_network_vpn_connection_delete_command_result';
import { az_network_vpn_connection_list_command_result } from './models/az_network_vpn_connection_list_command_result';
import { az_network_vpn_connection_show_command_result } from './models/az_network_vpn_connection_show_command_result';
import { az_network_vpn_connection_update_command_result } from './models/az_network_vpn_connection_update_command_result';
import { az_network_vrouter_peering_create_command_result } from './models/az_network_vrouter_peering_create_command_result';
import { az_network_vrouter_peering_delete_command_result } from './models/az_network_vrouter_peering_delete_command_result';
import { az_network_vrouter_peering_list_command_result } from './models/az_network_vrouter_peering_list_command_result';
import { az_network_vrouter_peering_show_command_result } from './models/az_network_vrouter_peering_show_command_result';
import { az_network_vrouter_peering_update_command_result } from './models/az_network_vrouter_peering_update_command_result';
import { az_network_vrouter_create_command_result } from './models/az_network_vrouter_create_command_result';
import { az_network_vrouter_delete_command_result } from './models/az_network_vrouter_delete_command_result';
import { az_network_vrouter_list_command_result } from './models/az_network_vrouter_list_command_result';
import { az_network_vrouter_show_command_result } from './models/az_network_vrouter_show_command_result';
import { az_network_vrouter_update_command_result } from './models/az_network_vrouter_update_command_result';
import { az_network_watcher_connection_monitor_endpoint_add_command_result } from './models/az_network_watcher_connection_monitor_endpoint_add_command_result';
import { az_network_watcher_connection_monitor_endpoint_list_command_result } from './models/az_network_watcher_connection_monitor_endpoint_list_command_result';
import { az_network_watcher_connection_monitor_endpoint_remove_command_result } from './models/az_network_watcher_connection_monitor_endpoint_remove_command_result';
import { az_network_watcher_connection_monitor_endpoint_show_command_result } from './models/az_network_watcher_connection_monitor_endpoint_show_command_result';
import { az_network_watcher_connection_monitor_output_add_command_result } from './models/az_network_watcher_connection_monitor_output_add_command_result';
import { az_network_watcher_connection_monitor_output_list_command_result } from './models/az_network_watcher_connection_monitor_output_list_command_result';
import { az_network_watcher_connection_monitor_output_remove_command_result } from './models/az_network_watcher_connection_monitor_output_remove_command_result';
import { az_network_watcher_connection_monitor_test_configuration_add_command_result } from './models/az_network_watcher_connection_monitor_test_configuration_add_command_result';
import { az_network_watcher_connection_monitor_test_configuration_list_command_result } from './models/az_network_watcher_connection_monitor_test_configuration_list_command_result';
import { az_network_watcher_connection_monitor_test_configuration_remove_command_result } from './models/az_network_watcher_connection_monitor_test_configuration_remove_command_result';
import { az_network_watcher_connection_monitor_test_configuration_show_command_result } from './models/az_network_watcher_connection_monitor_test_configuration_show_command_result';
import { az_network_watcher_connection_monitor_test_group_add_command_result } from './models/az_network_watcher_connection_monitor_test_group_add_command_result';
import { az_network_watcher_connection_monitor_test_group_list_command_result } from './models/az_network_watcher_connection_monitor_test_group_list_command_result';
import { az_network_watcher_connection_monitor_test_group_remove_command_result } from './models/az_network_watcher_connection_monitor_test_group_remove_command_result';
import { az_network_watcher_connection_monitor_test_group_show_command_result } from './models/az_network_watcher_connection_monitor_test_group_show_command_result';
import { az_network_watcher_connection_monitor_create_command_result } from './models/az_network_watcher_connection_monitor_create_command_result';
import { az_network_watcher_connection_monitor_delete_command_result } from './models/az_network_watcher_connection_monitor_delete_command_result';
import { az_network_watcher_connection_monitor_list_command_result } from './models/az_network_watcher_connection_monitor_list_command_result';
import { az_network_watcher_connection_monitor_query_command_result } from './models/az_network_watcher_connection_monitor_query_command_result';
import { az_network_watcher_connection_monitor_show_command_result } from './models/az_network_watcher_connection_monitor_show_command_result';
import { az_network_watcher_connection_monitor_start_command_result } from './models/az_network_watcher_connection_monitor_start_command_result';
import { az_network_watcher_connection_monitor_stop_command_result } from './models/az_network_watcher_connection_monitor_stop_command_result';
import { az_network_watcher_flow_log_configure_command_result } from './models/az_network_watcher_flow_log_configure_command_result';
import { az_network_watcher_flow_log_create_command_result } from './models/az_network_watcher_flow_log_create_command_result';
import { az_network_watcher_flow_log_delete_command_result } from './models/az_network_watcher_flow_log_delete_command_result';
import { az_network_watcher_flow_log_list_command_result } from './models/az_network_watcher_flow_log_list_command_result';
import { az_network_watcher_flow_log_show_command_result } from './models/az_network_watcher_flow_log_show_command_result';
import { az_network_watcher_flow_log_update_command_result } from './models/az_network_watcher_flow_log_update_command_result';
import { az_network_watcher_packet_capture_create_command_result } from './models/az_network_watcher_packet_capture_create_command_result';
import { az_network_watcher_packet_capture_delete_command_result } from './models/az_network_watcher_packet_capture_delete_command_result';
import { az_network_watcher_packet_capture_list_command_result } from './models/az_network_watcher_packet_capture_list_command_result';
import { az_network_watcher_packet_capture_show_command_result } from './models/az_network_watcher_packet_capture_show_command_result';
import { az_network_watcher_packet_capture_show_status_command_result } from './models/az_network_watcher_packet_capture_show_status_command_result';
import { az_network_watcher_packet_capture_stop_command_result } from './models/az_network_watcher_packet_capture_stop_command_result';
import { az_network_watcher_troubleshooting_show_command_result } from './models/az_network_watcher_troubleshooting_show_command_result';
import { az_network_watcher_troubleshooting_start_command_result } from './models/az_network_watcher_troubleshooting_start_command_result';
import { az_network_watcher_configure_command_result } from './models/az_network_watcher_configure_command_result';
import { az_network_watcher_list_command_result } from './models/az_network_watcher_list_command_result';
import { az_network_watcher_run_configuration_diagnostic_command_result } from './models/az_network_watcher_run_configuration_diagnostic_command_result';
import { az_network_watcher_show_next_hop_command_result } from './models/az_network_watcher_show_next_hop_command_result';
import { az_network_watcher_show_security_group_view_command_result } from './models/az_network_watcher_show_security_group_view_command_result';
import { az_network_watcher_show_topology_command_result } from './models/az_network_watcher_show_topology_command_result';
import { az_network_watcher_test_connectivity_command_result } from './models/az_network_watcher_test_connectivity_command_result';
import { az_network_watcher_test_ip_flow_command_result } from './models/az_network_watcher_test_ip_flow_command_result';
import { az_network_list_service_aliases_command_result } from './models/az_network_list_service_aliases_command_result';
import { az_network_list_service_tags_command_result } from './models/az_network_list_service_tags_command_result';
import { az_network_list_usages_command_result } from './models/az_network_list_usages_command_result';
/** Manage address pools of an application gateway. */
export declare class az_network_application_gateway_address_pool {
    /**
     * Create an address pool.
     *
     * Syntax:
     * ```
     * az network application-gateway address-pool create --gateway-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    [--no-wait]
     *                                                    [--servers]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the backend address pool.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_address_pool_create_command_builder;
    /**
     * Delete an address pool.
     *
     * Syntax:
     * ```
     * az network application-gateway address-pool delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_address_pool_delete_command_builder;
    /**
     * List address pools.
     *
     * Syntax:
     * ```
     * az network application-gateway address-pool list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_address_pool_list_command_builder;
    /**
     * Get the details of an address pool.
     *
     * Syntax:
     * ```
     * az network application-gateway address-pool show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_address_pool_show_command_builder;
    /**
     * Update an address pool.
     *
     * Syntax:
     * ```
     * az network application-gateway address-pool update [--add]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--servers]
     *                                                    [--set]
     *                                                    [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_address_pool_update_command_builder;
}
/** Manage authorization certificates of an application gateway. */
export declare class az_network_application_gateway_auth_cert {
    /**
     * Create an authorization certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway auth-cert create --cert-file
     *                                                 --gateway-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--no-wait]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} certFile Certificate file path.
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the authentication certificate.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(certFile: string, gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_auth_cert_create_command_builder;
    /**
     * Delete an authorization certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway auth-cert delete [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_auth_cert_delete_command_builder;
    /**
     * List authorization certificates.
     *
     * Syntax:
     * ```
     * az network application-gateway auth-cert list --gateway-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_auth_cert_list_command_builder;
    /**
     * Show an authorization certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway auth-cert show [--gateway-name]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_auth_cert_show_command_builder;
    /**
     * Update an authorization certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway auth-cert update --cert-file
     *                                                 [--add]
     *                                                 [--force-string]
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--remove]
     *                                                 [--resource-group]
     *                                                 [--set]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} certFile Certificate file path.
     */
    static update(certFile: string): az_network_application_gateway_auth_cert_update_command_builder;
}
/** Manage frontend IP addresses of an application gateway. */
export declare class az_network_application_gateway_frontend_ip {
    /**
     * Create a frontend IP address.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-ip create --gateway-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--no-wait]
     *                                                   [--private-ip-address]
     *                                                   [--public-ip-address]
     *                                                   [--subnet]
     *                                                   [--subscription]
     *                                                   [--vnet-name]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the frontend IP configuration.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /**
     * Delete a frontend IP address.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-ip delete [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--no-wait]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_frontend_ip_delete_command_builder;
    /**
     * List frontend IP addresses.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-ip list --gateway-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_frontend_ip_list_command_builder;
    /**
     * Get the details of a frontend IP address.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-ip show [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--query-examples]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_frontend_ip_show_command_builder;
    /**
     * Update a frontend IP address.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-ip update [--add]
     *                                                   [--force-string]
     *                                                   [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--no-wait]
     *                                                   [--private-ip-address]
     *                                                   [--public-ip-address]
     *                                                   [--remove]
     *                                                   [--resource-group]
     *                                                   [--set]
     *                                                   [--subnet]
     *                                                   [--subscription]
     *                                                   [--vnet-name]
     * ```
     */
    static update(): az_network_application_gateway_frontend_ip_update_command_builder;
}
/** Manage frontend ports of an application gateway. */
export declare class az_network_application_gateway_frontend_port {
    /**
     * Create a frontend port.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-port create --gateway-name
     *                                                     --name
     *                                                     --port
     *                                                     --resource-group
     *                                                     [--no-wait]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the frontend port.
     * @param {string} port The port number.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, port: string, resourceGroup: string): az_network_application_gateway_frontend_port_create_command_builder;
    /**
     * Delete a frontend port.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-port delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_frontend_port_delete_command_builder;
    /**
     * List frontend ports.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-port list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_frontend_port_list_command_builder;
    /**
     * Get the details of a frontend port.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-port show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_frontend_port_show_command_builder;
    /**
     * Update a frontend port.
     *
     * Syntax:
     * ```
     * az network application-gateway frontend-port update [--add]
     *                                                     [--force-string]
     *                                                     [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--port]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--set]
     *                                                     [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_frontend_port_update_command_builder;
}
/** Manage HTTP listeners of an application gateway. */
export declare class az_network_application_gateway_http_listener {
    /**
     * Create an HTTP listener.
     *
     * Syntax:
     * ```
     * az network application-gateway http-listener create --frontend-port
     *                                                     --gateway-name
     *                                                     --name
     *                                                     --resource-group
     *                                                     [--frontend-ip]
     *                                                     [--host-name]
     *                                                     [--host-names]
     *                                                     [--no-wait]
     *                                                     [--ssl-cert]
     *                                                     [--subscription]
     *                                                     [--waf-policy]
     * ```
     *
     * @param {string} frontendPort The name or ID of the frontend port.
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the HTTP listener.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(frontendPort: string, gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_http_listener_create_command_builder;
    /**
     * Delete an HTTP listener.
     *
     * Syntax:
     * ```
     * az network application-gateway http-listener delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_http_listener_delete_command_builder;
    /**
     * List HTTP listeners.
     *
     * Syntax:
     * ```
     * az network application-gateway http-listener list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_http_listener_list_command_builder;
    /**
     * Get the details of an HTTP listener.
     *
     * Syntax:
     * ```
     * az network application-gateway http-listener show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_http_listener_show_command_builder;
    /**
     * Update an HTTP listener.
     *
     * Syntax:
     * ```
     * az network application-gateway http-listener update [--add]
     *                                                     [--force-string]
     *                                                     [--frontend-ip]
     *                                                     [--frontend-port]
     *                                                     [--gateway-name]
     *                                                     [--host-name]
     *                                                     [--host-names]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--set]
     *                                                     [--ssl-cert]
     *                                                     [--subscription]
     *                                                     [--waf-policy]
     * ```
     */
    static update(): az_network_application_gateway_http_listener_update_command_builder;
}
/** Manage HTTP settings of an application gateway. */
export declare class az_network_application_gateway_http_settings {
    /**
     * Create HTTP settings.
     *
     * Syntax:
     * ```
     * az network application-gateway http-settings create --gateway-name
     *                                                     --name
     *                                                     --port
     *                                                     --resource-group
     *                                                     [--affinity-cookie-name]
     *                                                     [--auth-certs]
     *                                                     [--connection-draining-timeout]
     *                                                     [--cookie-based-affinity {Disabled, Enabled}]
     *                                                     [--enable-probe {false, true}]
     *                                                     [--host-name]
     *                                                     [--host-name-from-backend-pool {false, true}]
     *                                                     [--no-wait]
     *                                                     [--path]
     *                                                     [--probe]
     *                                                     [--protocol {Http, Https}]
     *                                                     [--root-certs]
     *                                                     [--subscription]
     *                                                     [--timeout]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the backed HTTP settings.
     * @param {string} port The port number.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, port: string, resourceGroup: string): az_network_application_gateway_http_settings_create_command_builder;
    /**
     * Delete HTTP settings.
     *
     * Syntax:
     * ```
     * az network application-gateway http-settings delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_http_settings_delete_command_builder;
    /**
     * List HTTP settings.
     *
     * Syntax:
     * ```
     * az network application-gateway http-settings list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_http_settings_list_command_builder;
    /**
     * Get the details of a gateway's HTTP settings.
     *
     * Syntax:
     * ```
     * az network application-gateway http-settings show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_http_settings_show_command_builder;
    /**
     * Update HTTP settings.
     *
     * Syntax:
     * ```
     * az network application-gateway http-settings update [--add]
     *                                                     [--affinity-cookie-name]
     *                                                     [--auth-certs]
     *                                                     [--connection-draining-timeout]
     *                                                     [--cookie-based-affinity {Disabled, Enabled}]
     *                                                     [--enable-probe {false, true}]
     *                                                     [--force-string]
     *                                                     [--gateway-name]
     *                                                     [--host-name]
     *                                                     [--host-name-from-backend-pool {false, true}]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--path]
     *                                                     [--port]
     *                                                     [--probe]
     *                                                     [--protocol {Http, Https}]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--root-certs]
     *                                                     [--set]
     *                                                     [--subscription]
     *                                                     [--timeout]
     * ```
     */
    static update(): az_network_application_gateway_http_settings_update_command_builder;
}
/** Manage the managed service identity of an application gateway. */
export declare class az_network_application_gateway_identity {
    /**
     * Assign a managed service identity to an application-gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway identity assign --identity
     *                                                [--gateway-name]
     *                                                [--ids]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     *
     * @param {string} identity Name or ID of the ManagedIdentity Resource.
     */
    static assign(identity: string): az_network_application_gateway_identity_assign_command_builder;
    /**
     * Remove the managed service identity of an application-gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway identity remove [--gateway-name]
     *                                                [--ids]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static remove(): az_network_application_gateway_identity_remove_command_builder;
    /**
     * Show the managed service identity of an application-gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway identity show [--gateway-name]
     *                                              [--ids]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_identity_show_command_builder;
}
/** Manage IP configuration of a Private Link to configure its capability. */
export declare class az_network_application_gateway_private_link_ip_config {
    /**
     * Add an IP configuration to a Private Link to scale up its capability.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link ip-config add --name
     *                                                           --private-link
     *                                                           [--gateway-name]
     *                                                           [--ids]
     *                                                           [--ip-address]
     *                                                           [--no-wait]
     *                                                           [--primary {false, true}]
     *                                                           [--resource-group]
     *                                                           [--subscription]
     * ```
     *
     * @param {string} name The name of the private IP for Private Link.
     * @param {string} privateLink The name of Private Link.
     */
    static add(name: string, privateLink: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /**
     * List all the IP configuration of a Private Link.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link ip-config list --gateway-name
     *                                                            --private-link
     *                                                            --resource-group
     *                                                            [--query-examples]
     *                                                            [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} privateLink The name of Private Link.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, privateLink: string, resourceGroup: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
    /**
     * Remove an IP configuration from a Private Link to scale down its capability.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link ip-config remove --name
     *                                                              --private-link
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--no-wait]
     *                                                              [--resource-group]
     *                                                              [--subscription]
     *                                                              [--yes]
     * ```
     *
     * @param {string} name The name of the private IP for Private Link.
     * @param {string} privateLink The name of Private Link.
     */
    static remove(name: string, privateLink: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /**
     * Show an IP configuration of a Private Link.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link ip-config show --name
     *                                                            --private-link
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     * ```
     *
     * @param {string} name The name of the private IP for Private Link.
     * @param {string} privateLink The name of Private Link.
     */
    static show(name: string, privateLink: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /**
     * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link ip-config wait [--created]
     *                                                            [--custom]
     *                                                            [--deleted]
     *                                                            [--exists]
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--interval]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     *                                                            [--timeout]
     *                                                            [--updated]
     * ```
     */
    static wait(): az_network_application_gateway_private_link_ip_config_wait_command_builder;
}
/** Manage Private Link of an Application Gateway. */
export declare class az_network_application_gateway_private_link {
    /**
     * Add a new Private Link with a default IP Configuration and associate it with an existing Frontend IP.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link add --frontend-ip
     *                                                 --name
     *                                                 --subnet
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--ip-address]
     *                                                 [--no-wait]
     *                                                 [--primary {false, true}]
     *                                                 [--resource-group]
     *                                                 [--subnet-prefix]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} frontendIp The frontend IP which the Private Link will associate to.
     * @param {string} name The name of Private Link.
     * @param {string} subnet The name or an existing ID of a subnet within the same vnet of an application gateway.
     */
    static add(frontendIp: string, name: string, subnet: string): az_network_application_gateway_private_link_add_command_builder;
    /**
     * List all the Private Link.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_private_link_list_command_builder;
    /**
     * Remove a Private Link and clear association with Frontend IP. The subnet associate with a Private Link might need to clear manually.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link remove --name
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     *                                                    [--yes]
     * ```
     *
     * @param {string} name The name of Private Link.
     */
    static remove(name: string): az_network_application_gateway_private_link_remove_command_builder;
    /**
     * Show a Private Link.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link show --name
     *                                                  [--gateway-name]
     *                                                  [--ids]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} name The name of Private Link.
     */
    static show(name: string): az_network_application_gateway_private_link_show_command_builder;
    /**
     * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
     *
     * Syntax:
     * ```
     * az network application-gateway private-link wait [--created]
     *                                                  [--custom]
     *                                                  [--deleted]
     *                                                  [--exists]
     *                                                  [--gateway-name]
     *                                                  [--ids]
     *                                                  [--interval]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     *                                                  [--timeout]
     *                                                  [--updated]
     * ```
     */
    static wait(): az_network_application_gateway_private_link_wait_command_builder;
}
/** Manage probes to gather and evaluate information on a gateway. */
export declare class az_network_application_gateway_probe {
    /**
     * Create a probe.
     *
     * Syntax:
     * ```
     * az network application-gateway probe create --gateway-name
     *                                             --name
     *                                             --path
     *                                             --protocol {Http, Https}
     *                                             --resource-group
     *                                             [--host]
     *                                             [--host-name-from-http-settings {false, true}]
     *                                             [--interval]
     *                                             [--match-body]
     *                                             [--match-status-codes]
     *                                             [--min-servers]
     *                                             [--no-wait]
     *                                             [--port]
     *                                             [--subscription]
     *                                             [--threshold]
     *                                             [--timeout]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the probe.
     * @param {string} path The relative path of the probe. Valid paths start from "/".
     * @param {'Http' | 'Https'} protocol The HTTP settings protocol.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, path: string, protocol: 'Http' | 'Https', resourceGroup: string): az_network_application_gateway_probe_create_command_builder;
    /**
     * Delete a probe.
     *
     * Syntax:
     * ```
     * az network application-gateway probe delete [--gateway-name]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--no-wait]
     *                                             [--resource-group]
     *                                             [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_probe_delete_command_builder;
    /**
     * List probes.
     *
     * Syntax:
     * ```
     * az network application-gateway probe list --gateway-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_probe_list_command_builder;
    /**
     * Get the details of a probe.
     *
     * Syntax:
     * ```
     * az network application-gateway probe show [--gateway-name]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_probe_show_command_builder;
    /**
     * Update a probe.
     *
     * Syntax:
     * ```
     * az network application-gateway probe update [--add]
     *                                             [--force-string]
     *                                             [--gateway-name]
     *                                             [--host]
     *                                             [--host-name-from-http-settings {false, true}]
     *                                             [--ids]
     *                                             [--interval]
     *                                             [--match-body]
     *                                             [--match-status-codes]
     *                                             [--min-servers]
     *                                             [--name]
     *                                             [--no-wait]
     *                                             [--path]
     *                                             [--port]
     *                                             [--protocol {Http, Https}]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--threshold]
     *                                             [--timeout]
     * ```
     */
    static update(): az_network_application_gateway_probe_update_command_builder;
}
/** Manage redirect configurations. */
export declare class az_network_application_gateway_redirect_config {
    /**
     * Create a redirect configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway redirect-config create --gateway-name
     *                                                       --name
     *                                                       --resource-group
     *                                                       --type {Found, Permanent, SeeOther, Temporary}
     *                                                       [--include-path {false, true}]
     *                                                       [--include-query-string {false, true}]
     *                                                       [--no-wait]
     *                                                       [--subscription]
     *                                                       [--target-listener]
     *                                                       [--target-url]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the redirect configuration.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Found' | 'Permanent' | 'SeeOther' | 'Temporary'} type HTTP redirection type.
     */
    static create(gatewayName: string, name: string, resourceGroup: string, type: 'Found' | 'Permanent' | 'SeeOther' | 'Temporary'): az_network_application_gateway_redirect_config_create_command_builder;
    /**
     * Delete a redirect configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway redirect-config delete [--gateway-name]
     *                                                       [--ids]
     *                                                       [--name]
     *                                                       [--no-wait]
     *                                                       [--resource-group]
     *                                                       [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_redirect_config_delete_command_builder;
    /**
     * List redirect configurations.
     *
     * Syntax:
     * ```
     * az network application-gateway redirect-config list --gateway-name
     *                                                     --resource-group
     *                                                     [--query-examples]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_redirect_config_list_command_builder;
    /**
     * Get the details of a redirect configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway redirect-config show [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--query-examples]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_redirect_config_show_command_builder;
    /**
     * Update a redirect configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway redirect-config update [--add]
     *                                                       [--force-string]
     *                                                       [--gateway-name]
     *                                                       [--ids]
     *                                                       [--include-path {false, true}]
     *                                                       [--include-query-string {false, true}]
     *                                                       [--name]
     *                                                       [--no-wait]
     *                                                       [--remove]
     *                                                       [--resource-group]
     *                                                       [--set]
     *                                                       [--subscription]
     *                                                       [--target-listener]
     *                                                       [--target-url]
     *                                                       [--type {Found, Permanent, SeeOther, Temporary}]
     * ```
     */
    static update(): az_network_application_gateway_redirect_config_update_command_builder;
}
/** Manage rewrite rule conditions of an application gateway. */
export declare class az_network_application_gateway_rewrite_rule_condition {
    /**
     * Create a rewrite rule condition.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition create --gateway-name
     *                                                              --resource-group
     *                                                              --rule-name
     *                                                              --rule-set-name
     *                                                              --variable
     *                                                              [--ignore-case {false, true}]
     *                                                              [--negate {false, true}]
     *                                                              [--no-wait]
     *                                                              [--pattern]
     *                                                              [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} ruleName Name of the rewrite rule.
     * @param {string} ruleSetName Name of the rewrite rule set.
     * @param {string} variable The variable whose value is being evaluated.
     */
    static create(gatewayName: string, resourceGroup: string, ruleName: string, ruleSetName: string, variable: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /**
     * Delete a rewrite rule condition.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition delete --variable
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--no-wait]
     *                                                              [--resource-group]
     *                                                              [--rule-name]
     *                                                              [--rule-set-name]
     *                                                              [--subscription]
     * ```
     *
     * @param {string} variable The variable whose value is being evaluated.
     */
    static delete(variable: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /**
     * List rewrite rule conditions.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition list --gateway-name
     *                                                            --resource-group
     *                                                            --rule-name
     *                                                            --rule-set-name
     *                                                            [--query-examples]
     *                                                            [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} ruleName Name of the rewrite rule.
     * @param {string} ruleSetName Name of the rewrite rule set.
     */
    static list(gatewayName: string, resourceGroup: string, ruleName: string, ruleSetName: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /**
     * Lists all available server variables.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition list-server-variables [--subscription]
     * ```
     */
    static list_server_variables(): az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_builder;
    /**
     * Get the details of a rewrite rule condition.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition show --variable
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--rule-name]
     *                                                            [--rule-set-name]
     *                                                            [--subscription]
     * ```
     *
     * @param {string} variable The variable whose value is being evaluated.
     */
    static show(variable: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /**
     * Update a rewrite rule condition.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule condition update --variable
     *                                                              [--add]
     *                                                              [--force-string]
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--ignore-case {false, true}]
     *                                                              [--negate {false, true}]
     *                                                              [--no-wait]
     *                                                              [--pattern]
     *                                                              [--remove]
     *                                                              [--resource-group]
     *                                                              [--rule-name]
     *                                                              [--rule-set-name]
     *                                                              [--set]
     *                                                              [--subscription]
     * ```
     *
     * @param {string} variable The variable whose value is being evaluated.
     */
    static update(variable: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
}
/** Manage rewrite rule sets of an application gateway. */
export declare class az_network_application_gateway_rewrite_rule_set {
    /**
     * Create a rewrite rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule set create --gateway-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        [--no-wait]
     *                                                        [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the rewrite rule set.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
    /**
     * Delete a rewrite rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule set delete [--gateway-name]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--no-wait]
     *                                                        [--resource-group]
     *                                                        [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /**
     * List rewrite rule sets.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule set list --gateway-name
     *                                                      --resource-group
     *                                                      [--query-examples]
     *                                                      [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_rewrite_rule_set_list_command_builder;
    /**
     * Get the details of a rewrite rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule set show [--gateway-name]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--query-examples]
     *                                                      [--resource-group]
     *                                                      [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /**
     * Update a rewrite rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule set update [--add]
     *                                                        [--force-string]
     *                                                        [--gateway-name]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--no-wait]
     *                                                        [--remove]
     *                                                        [--resource-group]
     *                                                        [--set]
     *                                                        [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_rewrite_rule_set_update_command_builder;
}
/** Manage rewrite rules of an application gateway. */
export declare class az_network_application_gateway_rewrite_rule {
    /**
     * Create a rewrite rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule create --gateway-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    --rule-set-name
     *                                                    [--enable-reroute {false, true}]
     *                                                    [--modified-path]
     *                                                    [--modified-query-string]
     *                                                    [--no-wait]
     *                                                    [--request-headers]
     *                                                    [--response-headers]
     *                                                    [--sequence]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name Name of the rewrite rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} ruleSetName Name of the rewrite rule set.
     */
    static create(gatewayName: string, name: string, resourceGroup: string, ruleSetName: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /**
     * Delete a rewrite rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--rule-set-name]
     *                                                    [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /**
     * List rewrite rules.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule list --gateway-name
     *                                                  --resource-group
     *                                                  --rule-set-name
     *                                                  [--query-examples]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} ruleSetName Name of the rewrite rule set.
     */
    static list(gatewayName: string, resourceGroup: string, ruleSetName: string): az_network_application_gateway_rewrite_rule_list_command_builder;
    /**
     * Lists all available request headers.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule list-request-headers [--subscription]
     * ```
     */
    static list_request_headers(): az_network_application_gateway_rewrite_rule_list_request_headers_command_builder;
    /**
     * Lists all available response headers.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule list-response-headers [--subscription]
     * ```
     */
    static list_response_headers(): az_network_application_gateway_rewrite_rule_list_response_headers_command_builder;
    /**
     * Get the details of a rewrite rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--rule-set-name]
     *                                                  [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_rewrite_rule_show_command_builder;
    /**
     * Update a rewrite rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rewrite-rule update [--add]
     *                                                    [--enable-reroute {false, true}]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--modified-path]
     *                                                    [--modified-query-string]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--request-headers]
     *                                                    [--resource-group]
     *                                                    [--response-headers]
     *                                                    [--rule-set-name]
     *                                                    [--sequence]
     *                                                    [--set]
     *                                                    [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_rewrite_rule_update_command_builder;
}
/** Manage trusted root certificates of an application gateway. */
export declare class az_network_application_gateway_root_cert {
    /**
     * Upload a trusted root certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway root-cert create --gateway-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--cert-file]
     *                                                 [--keyvault-secret]
     *                                                 [--no-wait]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the trusted root certificate.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_root_cert_create_command_builder;
    /**
     * Delete a trusted root certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway root-cert delete [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_root_cert_delete_command_builder;
    /**
     * List trusted root certificates.
     *
     * Syntax:
     * ```
     * az network application-gateway root-cert list --gateway-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_root_cert_list_command_builder;
    /**
     * Get the details of a trusted root certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway root-cert show [--gateway-name]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_root_cert_show_command_builder;
    /**
     * Update a trusted root certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway root-cert update [--add]
     *                                                 [--cert-file]
     *                                                 [--force-string]
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--keyvault-secret]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--remove]
     *                                                 [--resource-group]
     *                                                 [--set]
     *                                                 [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_root_cert_update_command_builder;
}
/** Evaluate probe information and define routing rules. */
export declare class az_network_application_gateway_rule {
    /**
     * Create a rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rule create --gateway-name
     *                                            --name
     *                                            --resource-group
     *                                            [--address-pool]
     *                                            [--http-listener]
     *                                            [--http-settings]
     *                                            [--no-wait]
     *                                            [--redirect-config]
     *                                            [--rewrite-rule-set]
     *                                            [--rule-type]
     *                                            [--subscription]
     *                                            [--url-path-map]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the request routing rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_rule_create_command_builder;
    /**
     * Delete a rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rule delete [--gateway-name]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--no-wait]
     *                                            [--resource-group]
     *                                            [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_rule_delete_command_builder;
    /**
     * List rules.
     *
     * Syntax:
     * ```
     * az network application-gateway rule list --gateway-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_rule_list_command_builder;
    /**
     * Get the details of a rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rule show [--gateway-name]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_rule_show_command_builder;
    /**
     * Update a rule.
     *
     * Syntax:
     * ```
     * az network application-gateway rule update [--add]
     *                                            [--address-pool]
     *                                            [--force-string]
     *                                            [--gateway-name]
     *                                            [--http-listener]
     *                                            [--http-settings]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--no-wait]
     *                                            [--redirect-config]
     *                                            [--remove]
     *                                            [--resource-group]
     *                                            [--rewrite-rule-set]
     *                                            [--rule-type]
     *                                            [--set]
     *                                            [--subscription]
     *                                            [--url-path-map]
     * ```
     */
    static update(): az_network_application_gateway_rule_update_command_builder;
}
/** Manage SSL certificates of an application gateway. */
export declare class az_network_application_gateway_ssl_cert {
    /**
     * Upload an SSL certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-cert create --gateway-name
     *                                                --name
     *                                                --resource-group
     *                                                [--cert-file]
     *                                                [--cert-password]
     *                                                [--key-vault-secret-id]
     *                                                [--no-wait]
     *                                                [--subscription]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the SSL certificate.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, resourceGroup: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /**
     * Delete an SSL certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-cert delete [--gateway-name]
     *                                                [--ids]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_ssl_cert_delete_command_builder;
    /**
     * List SSL certificates.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-cert list --gateway-name
     *                                              --resource-group
     *                                              [--query-examples]
     *                                              [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_ssl_cert_list_command_builder;
    /**
     * Get the details of an SSL certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-cert show [--gateway-name]
     *                                              [--ids]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_ssl_cert_show_command_builder;
    /**
     * Update an SSL certificate.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-cert update [--add]
     *                                                [--cert-file]
     *                                                [--cert-password]
     *                                                [--force-string]
     *                                                [--gateway-name]
     *                                                [--ids]
     *                                                [--key-vault-secret-id]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--remove]
     *                                                [--resource-group]
     *                                                [--set]
     *                                                [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_ssl_cert_update_command_builder;
}
/** Get information on predefined SSL policies. */
export declare class az_network_application_gateway_ssl_policy_predefined {
    /**
     * Lists all SSL predefined policies for configuring SSL policy.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-policy predefined list [--query-examples]
     *                                                           [--subscription]
     * ```
     */
    static list(): az_network_application_gateway_ssl_policy_predefined_list_command_builder;
    /**
     * Gets SSL predefined policy with the specified policy name.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-policy predefined show --name
     *                                                           [--query-examples]
     *                                                           [--subscription]
     * ```
     *
     * @param {string} name Name of Ssl predefined policy.
     */
    static show(name: string): az_network_application_gateway_ssl_policy_predefined_show_command_builder;
}
/** Manage the SSL policy of an application gateway. */
export declare class az_network_application_gateway_ssl_policy {
    /**
     * Lists available SSL options for configuring SSL policy.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-policy list-options [--subscription]
     * ```
     */
    static list_options(): az_network_application_gateway_ssl_policy_list_options_command_builder;
    /**
     * Update or clear SSL policy settings.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-policy set [--cipher-suites]
     *                                               [--disabled-ssl-protocols]
     *                                               [--gateway-name]
     *                                               [--ids]
     *                                               [--min-protocol-version]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--policy-type]
     *                                               [--resource-group]
     *                                               [--subscription]
     * ```
     */
    static set(): az_network_application_gateway_ssl_policy_set_command_builder;
    /**
     * Get the details of gateway's SSL policy settings.
     *
     * Syntax:
     * ```
     * az network application-gateway ssl-policy show [--gateway-name]
     *                                                [--ids]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_ssl_policy_show_command_builder;
}
/** Manage the rules of a URL path map. */
export declare class az_network_application_gateway_url_path_map_rule {
    /**
     * Create a rule for a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map rule create --gateway-name
     *                                                         --name
     *                                                         --path-map-name
     *                                                         --paths
     *                                                         --resource-group
     *                                                         [--address-pool]
     *                                                         [--http-settings]
     *                                                         [--no-wait]
     *                                                         [--redirect-config]
     *                                                         [--rewrite-rule-set]
     *                                                         [--subscription]
     *                                                         [--waf-policy]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the url-path-map rule.
     * @param {string} pathMapName The name of the URL path map.
     * @param {string} paths Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/").
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, pathMapName: string, paths: string, resourceGroup: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /**
     * Delete a rule of a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map rule delete [--gateway-name]
     *                                                         [--ids]
     *                                                         [--name]
     *                                                         [--no-wait]
     *                                                         [--path-map-name]
     *                                                         [--resource-group]
     *                                                         [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_url_path_map_rule_delete_command_builder;
}
/** Manage URL path maps of an application gateway. */
export declare class az_network_application_gateway_url_path_map {
    /**
     * Create a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map create --gateway-name
     *                                                    --name
     *                                                    --paths
     *                                                    --resource-group
     *                                                    [--address-pool]
     *                                                    [--default-address-pool]
     *                                                    [--default-http-settings]
     *                                                    [--default-redirect-config]
     *                                                    [--default-rewrite-rule-set]
     *                                                    [--http-settings]
     *                                                    [--no-wait]
     *                                                    [--redirect-config]
     *                                                    [--rewrite-rule-set]
     *                                                    [--rule-name]
     *                                                    [--subscription]
     *                                                    [--waf-policy]
     * ```
     *
     * @param {string} gatewayName Name of the application gateway.
     * @param {string} name The name of the URL path map.
     * @param {string} paths Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/").
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, paths: string, resourceGroup: string): az_network_application_gateway_url_path_map_create_command_builder;
    /**
     * Delete a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_url_path_map_delete_command_builder;
    /**
     * List URL path maps.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName The name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_application_gateway_url_path_map_list_command_builder;
    /**
     * Get the details of a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_url_path_map_show_command_builder;
    /**
     * Update a URL path map.
     *
     * Syntax:
     * ```
     * az network application-gateway url-path-map update [--add]
     *                                                    [--default-address-pool]
     *                                                    [--default-http-settings]
     *                                                    [--default-redirect-config]
     *                                                    [--default-rewrite-rule-set]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--set]
     *                                                    [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_url_path_map_update_command_builder;
}
/** Configure the settings of a web application firewall. */
export declare class az_network_application_gateway_waf_config {
    /**
     * Get information on available WAF rule sets, rule groups, and rule IDs.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-config list-rule-sets [--group]
     *                                                          [--subscription]
     *                                                          [--type]
     *                                                          [--version]
     * ```
     */
    static list_rule_sets(): az_network_application_gateway_waf_config_list_rule_sets_command_builder;
    /**
     * Update the firewall configuration of a web application.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-config set --enabled {false, true}
     *                                               [--disabled-rule-groups]
     *                                               [--disabled-rules]
     *                                               [--exclusion]
     *                                               [--file-upload-limit]
     *                                               [--firewall-mode {Detection, Prevention}]
     *                                               [--gateway-name]
     *                                               [--ids]
     *                                               [--max-request-body-size]
     *                                               [--no-wait]
     *                                               [--request-body-check {false, true}]
     *                                               [--resource-group]
     *                                               [--rule-set-type]
     *                                               [--rule-set-version]
     *                                               [--subscription]
     * ```
     *
     * @param {boolean} enabled Specify whether the application firewall is enabled.
     */
    static set(enabled: boolean): az_network_application_gateway_waf_config_set_command_builder;
    /**
     * Get the firewall configuration of a web application.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-config show [--gateway-name]
     *                                                [--ids]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_waf_config_show_command_builder;
}
/** Manage application gateway web application firewall (WAF) policies. */
export declare class az_network_application_gateway_waf_policy_custom_rule_match_condition {
    /**
     * A match condition to an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule match-condition add --match-variables
     *                                                                           --operator {BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual, Regex}
     *                                                                           --values
     *                                                                           [--ids]
     *                                                                           [--name]
     *                                                                           [--negate {false, true}]
     *                                                                           [--policy-name]
     *                                                                           [--resource-group]
     *                                                                           [--subscription]
     *                                                                           [--transforms {HtmlEntityDecode, Lowercase, RemoveNulls, Trim, UrlDecode, UrlEncode}]
     * ```
     *
     * @param {string} matchVariables Space-separated list of variables to use when matching. Variable values: RemoteAddr, RequestMethod, QueryString, PostArgs, RequestUri, RequestHeaders, RequestBody, RequestCookies.
     * @param {'BeginsWith' | 'Contains' | 'EndsWith' | 'Equal' | 'GeoMatch' | 'GreaterThan' | 'GreaterThanOrEqual' | 'IPMatch' | 'LessThan' | 'LessThanOrEqual' | 'Regex'} operator Operator for matching.
     * @param {string} values Space-separated list of values to match.
     */
    static add(matchVariables: string, operator: 'BeginsWith' | 'Contains' | 'EndsWith' | 'Equal' | 'GeoMatch' | 'GreaterThan' | 'GreaterThanOrEqual' | 'IPMatch' | 'LessThan' | 'LessThanOrEqual' | 'Regex', values: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /**
     * List application gateway WAF policy custom rule match conditions.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule match-condition list --name
     *                                                                            --policy-name
     *                                                                            --resource-group
     *                                                                            [--query-examples]
     *                                                                            [--subscription]
     * ```
     *
     * @param {string} name Name of the WAF policy rule.
     * @param {string} policyName The name of the application gateway WAF policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(name: string, policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
    /**
     * Remove a match condition from an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule match-condition remove --index
     *                                                                              [--ids]
     *                                                                              [--name]
     *                                                                              [--policy-name]
     *                                                                              [--resource-group]
     *                                                                              [--subscription]
     * ```
     *
     * @param {string} index Index of the match condition to remove.
     */
    static remove(index: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
}
/** Manage application gateway web application firewall (WAF) policy custom rules. */
export declare class az_network_application_gateway_waf_policy_custom_rule {
    /**
     * Create an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule create --action {Allow, Block, Log}
     *                                                              --name
     *                                                              --policy-name
     *                                                              --priority
     *                                                              --resource-group
     *                                                              --rule-type {Invalid, MatchRule}
     *                                                              [--subscription]
     * ```
     *
     * @param {'Allow' | 'Block' | 'Log'} action Action to take.
     * @param {string} name Name of the WAF policy rule.
     * @param {string} policyName The name of the application gateway WAF policy.
     * @param {string} priority Rule priority. Lower values are evaluated prior to higher values.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Invalid' | 'MatchRule'} ruleType Type of rule.
     */
    static create(action: 'Allow' | 'Block' | 'Log', name: string, policyName: string, priority: string, resourceGroup: string, ruleType: 'Invalid' | 'MatchRule'): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /**
     * Delete an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule delete [--ids]
     *                                                              [--name]
     *                                                              [--policy-name]
     *                                                              [--resource-group]
     *                                                              [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
    /**
     * List application gateway WAF policy custom rules.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule list --policy-name
     *                                                            --resource-group
     *                                                            [--query-examples]
     *                                                            [--subscription]
     * ```
     *
     * @param {string} policyName The name of the application gateway WAF policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_custom_rule_list_command_builder;
    /**
     * Get the details of an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule show [--ids]
     *                                                            [--name]
     *                                                            [--policy-name]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /**
     * Update an application gateway WAF policy custom rule.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy custom-rule update [--action {Allow, Block, Log}]
     *                                                              [--add]
     *                                                              [--force-string]
     *                                                              [--ids]
     *                                                              [--name]
     *                                                              [--policy-name]
     *                                                              [--priority]
     *                                                              [--remove]
     *                                                              [--resource-group]
     *                                                              [--rule-type {Invalid, MatchRule}]
     *                                                              [--set]
     *                                                              [--subscription]
     * ```
     */
    static update(): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
}
/** Manage OWASP CRS exclusions that are applied on a WAF policy managed rules. */
export declare class az_network_application_gateway_waf_policy_managed_rule_exclusion {
    /**
     * Add an OWASP CRS exclusion rule to the WAF policy managed rules.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule exclusion add --match-variable {RequestArgNames, RequestCookieNames, RequestHeaderNames}
     *                                                                      --policy-name
     *                                                                      --resource-group
     *                                                                      --selector
     *                                                                      --selector-match-operator {Contains, EndsWith, Equals, EqualsAny, StartsWith}
     *                                                                      [--subscription]
     * ```
     *
     * @param {'RequestArgNames' | 'RequestCookieNames' | 'RequestHeaderNames'} matchVariable The variable to be excluded.
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} selector When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
     * @param {'Contains' | 'EndsWith' | 'Equals' | 'EqualsAny' | 'StartsWith'} selectorMatchOperator When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
     */
    static add(matchVariable: 'RequestArgNames' | 'RequestCookieNames' | 'RequestHeaderNames', policyName: string, resourceGroup: string, selector: string, selectorMatchOperator: 'Contains' | 'EndsWith' | 'Equals' | 'EqualsAny' | 'StartsWith'): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /**
     * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule exclusion list --policy-name
     *                                                                       --resource-group
     *                                                                       [--query-examples]
     *                                                                       [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder;
    /**
     * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule exclusion remove --policy-name
     *                                                                         --resource-group
     *                                                                         [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static remove(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_builder;
}
/** Manage managed rule set of managed rules of a WAF policy. */
export declare class az_network_application_gateway_waf_policy_managed_rule_rule_set {
    /**
     * Add managed rule set to the WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule rule-set add --policy-name
     *                                                                     --resource-group
     *                                                                     --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                     --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                     [--group-name]
     *                                                                     [--rules]
     *                                                                     [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
     * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
     */
    static add(policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /**
     * List all managed rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule rule-set list --policy-name
     *                                                                      --resource-group
     *                                                                      [--query-examples]
     *                                                                      [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder;
    /**
     * Remove a managed rule set by rule set group name if rule_group_name is specified. Otherwise, remove all rule set.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule rule-set remove --policy-name
     *                                                                        --resource-group
     *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                        [--group-name]
     *                                                                        [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
     * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
     */
    static remove(policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /**
     * Update(Override) existing rule set of a WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy managed-rule rule-set update --group-name
     *                                                                        --policy-name
     *                                                                        --resource-group
     *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                        [--add]
     *                                                                        [--force-string]
     *                                                                        [--remove]
     *                                                                        [--rules]
     *                                                                        [--set]
     *                                                                        [--subscription]
     * ```
     *
     * @param {string} groupName The name of the web application firewall rule set group.
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
     * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
     */
    static update(groupName: string, policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
}
/** Manage managed rules of a waf-policy. Visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/afds/afds-overview">https://docs.microsoft.com/en-us/azure/web-application-firewall/afds/afds-overview</a>. */
export declare class az_network_application_gateway_waf_policy_managed_rule {
}
/** Defines contents of a web application firewall global configuration. */
export declare class az_network_application_gateway_waf_policy_policy_setting {
    /**
     * List properties of a web application firewall global configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy policy-setting list --policy-name
     *                                                               --resource-group
     *                                                               [--query-examples]
     *                                                               [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_policy_setting_list_command_builder;
    /**
     * Update properties of a web application firewall global configuration.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy policy-setting update --policy-name
     *                                                                 --resource-group
     *                                                                 [--add]
     *                                                                 [--file-upload-limit-in-mb]
     *                                                                 [--force-string]
     *                                                                 [--max-request-body-size-in-kb]
     *                                                                 [--mode {Detection, Prevention}]
     *                                                                 [--remove]
     *                                                                 [--request-body-check {false, true}]
     *                                                                 [--set]
     *                                                                 [--state {Disabled, Enabled}]
     *                                                                 [--subscription]
     * ```
     *
     * @param {string} policyName The name of the web application firewall policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(policyName: string, resourceGroup: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
}
/** Manage application gateway web application firewall (WAF) policies. */
export declare class az_network_application_gateway_waf_policy {
    /**
     * Create an application gateway WAF policy.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy create --name
     *                                                  --resource-group
     *                                                  [--location]
     *                                                  [--subscription]
     *                                                  [--tags]
     *                                                  [--type {Microsoft_BotManagerRuleSet, OWASP}]
     *                                                  [--version {0.1, 2.2.9, 3.0, 3.1}]
     * ```
     *
     * @param {string} name The name of the application gateway WAF policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_application_gateway_waf_policy_create_command_builder;
    /**
     * Delete an application gateway WAF policy.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy delete [--ids]
     *                                                  [--name]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_waf_policy_delete_command_builder;
    /**
     * List application gateway WAF policies.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy list [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static list(): az_network_application_gateway_waf_policy_list_command_builder;
    /**
     * Get the details of an application gateway WAF policy.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy show [--ids]
     *                                                [--name]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_waf_policy_show_command_builder;
    /**
     * Update an application gateway WAF policy.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy update [--add]
     *                                                  [--force-string]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--remove]
     *                                                  [--resource-group]
     *                                                  [--set]
     *                                                  [--subscription]
     *                                                  [--tags]
     * ```
     */
    static update(): az_network_application_gateway_waf_policy_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the application gateway WAF policy is met.
     *
     * Syntax:
     * ```
     * az network application-gateway waf-policy wait [--created]
     *                                                [--custom]
     *                                                [--deleted]
     *                                                [--exists]
     *                                                [--ids]
     *                                                [--interval]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     *                                                [--timeout]
     *                                                [--updated]
     * ```
     */
    static wait(): az_network_application_gateway_waf_policy_wait_command_builder;
}
/** Manage application-level routing and load balancing services. */
export declare class az_network_application_gateway {
    /**
     * Create an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway create --name
     *                                       --resource-group
     *                                       [--capacity]
     *                                       [--cert-file]
     *                                       [--cert-password]
     *                                       [--connection-draining-timeout]
     *                                       [--custom-error-pages]
     *                                       [--enable-private-link]
     *                                       [--frontend-port]
     *                                       [--http-settings-cookie-based-affinity {Disabled, Enabled}]
     *                                       [--http-settings-port]
     *                                       [--http-settings-protocol {Http, Https}]
     *                                       [--http2 {Disabled, Enabled}]
     *                                       [--identity]
     *                                       [--key-vault-secret-id]
     *                                       [--location]
     *                                       [--max-capacity]
     *                                       [--min-capacity]
     *                                       [--no-wait]
     *                                       [--private-ip-address]
     *                                       [--private-link-ip-address]
     *                                       [--private-link-primary {false, true}]
     *                                       [--private-link-subnet]
     *                                       [--private-link-subnet-prefix]
     *                                       [--public-ip-address]
     *                                       [--public-ip-address-allocation]
     *                                       [--routing-rule-type {Basic, PathBasedRouting}]
     *                                       [--servers]
     *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
     *                                       [--subnet]
     *                                       [--subnet-address-prefix]
     *                                       [--subscription]
     *                                       [--tags]
     *                                       [--validate]
     *                                       [--vnet-address-prefix]
     *                                       [--vnet-name]
     *                                       [--waf-policy]
     *                                       [--zones {1, 2, 3}]
     * ```
     *
     * @param {string} name Name of the application gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_application_gateway_create_command_builder;
    /**
     * Delete an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway delete [--ids]
     *                                       [--name]
     *                                       [--no-wait]
     *                                       [--resource-group]
     *                                       [--subscription]
     * ```
     */
    static delete(): az_network_application_gateway_delete_command_builder;
    /**
     * List application gateways.
     *
     * Syntax:
     * ```
     * az network application-gateway list [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     * ```
     */
    static list(): az_network_application_gateway_list_command_builder;
    /**
     * Get the details of an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway show [--ids]
     *                                     [--name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     * ```
     */
    static show(): az_network_application_gateway_show_command_builder;
    /**
     * Get information on the backend health of an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway show-backend-health [--expand]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static show_backend_health(): az_network_application_gateway_show_backend_health_command_builder;
    /**
     * Start an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway start [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     * ```
     */
    static start(): az_network_application_gateway_start_command_builder;
    /**
     * Stop an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway stop [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     * ```
     */
    static stop(): az_network_application_gateway_stop_command_builder;
    /**
     * Update an application gateway.
     *
     * Syntax:
     * ```
     * az network application-gateway update [--add]
     *                                       [--capacity]
     *                                       [--custom-error-pages]
     *                                       [--force-string]
     *                                       [--http2 {Disabled, Enabled}]
     *                                       [--ids]
     *                                       [--max-capacity]
     *                                       [--min-capacity]
     *                                       [--name]
     *                                       [--no-wait]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
     *                                       [--subscription]
     *                                       [--tags]
     * ```
     */
    static update(): az_network_application_gateway_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the application gateway is met.
     *
     * Syntax:
     * ```
     * az network application-gateway wait [--created]
     *                                     [--custom]
     *                                     [--deleted]
     *                                     [--exists]
     *                                     [--ids]
     *                                     [--interval]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     *                                     [--timeout]
     *                                     [--updated]
     * ```
     */
    static wait(): az_network_application_gateway_wait_command_builder;
}
/** Manage application security groups (ASGs). */
export declare class az_network_asg {
    /**
     * Create an application security group.
     *
     * Syntax:
     * ```
     * az network asg create --name
     *                       --resource-group
     *                       [--location]
     *                       [--subscription]
     *                       [--tags]
     * ```
     *
     * @param {string} name Name of the new application security group resource.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_asg_create_command_builder;
    /**
     * Delete an application security group.
     *
     * Syntax:
     * ```
     * az network asg delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     * ```
     */
    static delete(): az_network_asg_delete_command_builder;
    /**
     * List all application security groups in a subscription.
     *
     * Syntax:
     * ```
     * az network asg list [--query-examples]
     *                     [--subscription]
     * ```
     */
    static list(): az_network_asg_list_command_builder;
    /**
     * Get details of an application security group.
     *
     * Syntax:
     * ```
     * az network asg show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     * ```
     */
    static show(): az_network_asg_show_command_builder;
    /**
     * Update an application security group.
     *
     * Syntax:
     * ```
     * az network asg update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     *                       [--tags]
     * ```
     */
    static update(): az_network_asg_update_command_builder;
}
/** Manage Azure bastion host. */
export declare class az_network_bastion {
    /**
     * Create a Azure bastion host machine.
     *
     * Syntax:
     * ```
     * az network bastion create --name
     *                           --public-ip-address
     *                           --resource-group
     *                           --vnet-name
     *                           [--location]
     *                           [--subscription]
     * ```
     *
     * @param {string} name Name of the Bastion Host.
     * @param {string} publicIpAddress Name or ID of the Azure public IP. The SKU of the public IP must be Standard.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetName Name of the virtual network. It must have a subnet called AzureBastionSubnet.
     */
    static create(name: string, publicIpAddress: string, resourceGroup: string, vnetName: string): az_network_bastion_create_command_builder;
    /**
     * Delete a Azure bastion host machine.
     *
     * Syntax:
     * ```
     * az network bastion delete --name
     *                           --resource-group
     *                           [--subscription]
     * ```
     *
     * @param {string} name Name of the Bastion Host.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_bastion_delete_command_builder;
    /**
     * List all Azure bastion host machines.
     *
     * Syntax:
     * ```
     * az network bastion list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     * ```
     */
    static list(): az_network_bastion_list_command_builder;
    /**
     * Show a Azure bastion host machine.
     *
     * Syntax:
     * ```
     * az network bastion show --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     * ```
     *
     * @param {string} name Name of the Bastion Host.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_bastion_show_command_builder;
}
/** Manage DDoS Protection Plans. */
export declare class az_network_ddos_protection {
    /**
     * Create a DDoS protection plan.
     *
     * Syntax:
     * ```
     * az network ddos-protection create --name
     *                                   --resource-group
     *                                   [--location]
     *                                   [--subscription]
     *                                   [--tags]
     *                                   [--vnets]
     * ```
     *
     * @param {string} name Name of the DDoS protection plan.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_ddos_protection_create_command_builder;
    /**
     * Delete a DDoS protection plan.
     *
     * Syntax:
     * ```
     * az network ddos-protection delete [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     * ```
     */
    static delete(): az_network_ddos_protection_delete_command_builder;
    /**
     * List DDoS protection plans.
     *
     * Syntax:
     * ```
     * az network ddos-protection list [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     */
    static list(): az_network_ddos_protection_list_command_builder;
    /**
     * Show details of a DDoS protection plan.
     *
     * Syntax:
     * ```
     * az network ddos-protection show [--ids]
     *                                 [--name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     */
    static show(): az_network_ddos_protection_show_command_builder;
    /**
     * Update a DDoS protection plan.
     *
     * Syntax:
     * ```
     * az network ddos-protection update [--add]
     *                                   [--force-string]
     *                                   [--ids]
     *                                   [--location]
     *                                   [--name]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--set]
     *                                   [--subscription]
     *                                   [--tags]
     *                                   [--vnets]
     * ```
     */
    static update(): az_network_ddos_protection_update_command_builder;
}
/** Manage DNS A records. */
export declare class az_network_dns_record_set_a {
    /**
     * Add an A record.
     *
     * Syntax:
     * ```
     * az network dns record-set a add-record --ipv4-address
     *                                        --record-set-name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-none-match]
     *                                        [--subscription]
     *                                        [--ttl]
     * ```
     *
     * @param {string} ipv4Address IPv4 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_add_record_command_builder;
    /**
     * Create an empty A record set.
     *
     * Syntax:
     * ```
     * az network dns record-set a create --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--if-match]
     *                                    [--if-none-match]
     *                                    [--metadata]
     *                                    [--subscription]
     *                                    [--target-resource]
     *                                    [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_create_command_builder;
    /**
     * Delete an A record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set a delete --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--if-match]
     *                                    [--subscription]
     *                                    [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_delete_command_builder;
    /**
     * List all A record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set a list --resource-group
     *                                  --zone-name
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_a_list_command_builder;
    /**
     * Remove an A record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set a remove-record --ipv4-address
     *                                           --record-set-name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--keep-empty-record-set]
     *                                           [--subscription]
     * ```
     *
     * @param {string} ipv4Address IPv4 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_remove_record_command_builder;
    /**
     * Get the details of an A record set.
     *
     * Syntax:
     * ```
     * az network dns record-set a show --name
     *                                  --resource-group
     *                                  --zone-name
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_show_command_builder;
    /**
     * Update an A record set.
     *
     * Syntax:
     * ```
     * az network dns record-set a update --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--if-match]
     *                                    [--if-none-match]
     *                                    [--metadata]
     *                                    [--remove]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_a_update_command_builder;
}
/** Manage DNS AAAA records. */
export declare class az_network_dns_record_set_aaaa {
    /**
     * Add an AAAA record.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa add-record --ipv6-address
     *                                           --record-set-name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--if-none-match]
     *                                           [--subscription]
     *                                           [--ttl]
     * ```
     *
     * @param {string} ipv6Address IPv6 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /**
     * Create an empty AAAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa create --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--if-match]
     *                                       [--if-none-match]
     *                                       [--metadata]
     *                                       [--subscription]
     *                                       [--target-resource]
     *                                       [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_create_command_builder;
    /**
     * Delete an AAAA record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa delete --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--if-match]
     *                                       [--subscription]
     *                                       [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /**
     * List all AAAA record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa list --resource-group
     *                                     --zone-name
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_list_command_builder;
    /**
     * Remove AAAA record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa remove-record --ipv6-address
     *                                              --record-set-name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--keep-empty-record-set]
     *                                              [--subscription]
     * ```
     *
     * @param {string} ipv6Address IPv6 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /**
     * Get the details of an AAAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa show --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_show_command_builder;
    /**
     * Update an AAAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set aaaa update --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--add]
     *                                       [--force-string]
     *                                       [--if-match]
     *                                       [--if-none-match]
     *                                       [--metadata]
     *                                       [--remove]
     *                                       [--set]
     *                                       [--subscription]
     *                                       [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_aaaa_update_command_builder;
}
/** Manage DNS CAA records. */
export declare class az_network_dns_record_set_caa {
    /**
     * Add a CAA record.
     *
     * Syntax:
     * ```
     * az network dns record-set caa add-record --flags
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --tag
     *                                          --value
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     *                                          [--ttl]
     * ```
     *
     * @param {string} flags Integer flags for the record.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} tag Record tag.
     * @param {string} value Value of the CAA record.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(flags: string, recordSetName: string, resourceGroup: string, tag: string, value: string, zoneName: string): az_network_dns_record_set_caa_add_record_command_builder;
    /**
     * Create an empty CAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set caa create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_caa_create_command_builder;
    /**
     * Delete a CAA record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set caa delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_caa_delete_command_builder;
    /**
     * List all CAA record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set caa list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_caa_list_command_builder;
    /**
     * Remove a CAA record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set caa remove-record --flags
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --tag
     *                                             --value
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} flags Integer flags for the record.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} tag Record tag.
     * @param {string} value Value of the CAA record.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(flags: string, recordSetName: string, resourceGroup: string, tag: string, value: string, zoneName: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /**
     * Get the details of a CAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set caa show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_caa_show_command_builder;
    /**
     * Update a CAA record set.
     *
     * Syntax:
     * ```
     * az network dns record-set caa update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_caa_update_command_builder;
}
/** Manage DNS CNAME records. */
export declare class az_network_dns_record_set_cname {
    /**
     * Create an empty CNAME record set.
     *
     * Syntax:
     * ```
     * az network dns record-set cname create --name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-match]
     *                                        [--if-none-match]
     *                                        [--metadata]
     *                                        [--subscription]
     *                                        [--target-resource]
     *                                        [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_create_command_builder;
    /**
     * Delete a CNAME record set and its associated record.
     *
     * Syntax:
     * ```
     * az network dns record-set cname delete --name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-match]
     *                                        [--subscription]
     *                                        [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_delete_command_builder;
    /**
     * List the CNAME record set in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set cname list --resource-group
     *                                      --zone-name
     *                                      [--query-examples]
     *                                      [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_list_command_builder;
    /**
     * Remove a CNAME record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set cname remove-record --cname
     *                                               --record-set-name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--keep-empty-record-set]
     *                                               [--subscription]
     * ```
     *
     * @param {string} cname Value of the cname record-set. It should be Canonical name.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(cname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /**
     * Set the value of a CNAME record.
     *
     * Syntax:
     * ```
     * az network dns record-set cname set-record --cname
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--if-none-match]
     *                                            [--subscription]
     *                                            [--ttl]
     * ```
     *
     * @param {string} cname Value of the cname record-set. It should be Canonical name.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static set_record(cname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_set_record_command_builder;
    /**
     * Get the details of a CNAME record set.
     *
     * Syntax:
     * ```
     * az network dns record-set cname show --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--query-examples]
     *                                      [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_cname_show_command_builder;
}
/** Manage DNS MX records. */
export declare class az_network_dns_record_set_mx {
    /**
     * Add an MX record.
     *
     * Syntax:
     * ```
     * az network dns record-set mx add-record --exchange
     *                                         --preference
     *                                         --record-set-name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-none-match]
     *                                         [--subscription]
     *                                         [--ttl]
     * ```
     *
     * @param {string} exchange Exchange metric.
     * @param {string} preference Preference metric.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_add_record_command_builder;
    /**
     * Create an empty MX record set.
     *
     * Syntax:
     * ```
     * az network dns record-set mx create --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--subscription]
     *                                     [--target-resource]
     *                                     [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_create_command_builder;
    /**
     * Delete an MX record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set mx delete --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--subscription]
     *                                     [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_delete_command_builder;
    /**
     * List all MX record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set mx list --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_list_command_builder;
    /**
     * Remove an MX record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set mx remove-record --exchange
     *                                            --preference
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--keep-empty-record-set]
     *                                            [--subscription]
     * ```
     *
     * @param {string} exchange Exchange metric.
     * @param {string} preference Preference metric.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /**
     * Get the details of an MX record set.
     *
     * Syntax:
     * ```
     * az network dns record-set mx show --name
     *                                   --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_show_command_builder;
    /**
     * Update an MX record set.
     *
     * Syntax:
     * ```
     * az network dns record-set mx update --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_mx_update_command_builder;
}
/** Manage DNS NS records. */
export declare class az_network_dns_record_set_ns {
    /**
     * Add an NS record.
     *
     * Syntax:
     * ```
     * az network dns record-set ns add-record --nsdname
     *                                         --record-set-name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-none-match]
     *                                         [--subscriptionid]
     *                                         [--ttl]
     * ```
     *
     * @param {string} nsdname Name server domain name.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(nsdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_add_record_command_builder;
    /**
     * Create an empty NS record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ns create --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--subscription]
     *                                     [--target-resource]
     *                                     [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_create_command_builder;
    /**
     * Delete an NS record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set ns delete --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--subscription]
     *                                     [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_delete_command_builder;
    /**
     * List all NS record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set ns list --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_list_command_builder;
    /**
     * Remove an NS record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ns remove-record --nsdname
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--keep-empty-record-set]
     *                                            [--subscription]
     * ```
     *
     * @param {string} nsdname Name server domain name.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(nsdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /**
     * Get the details of an NS record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ns show --name
     *                                   --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_show_command_builder;
    /**
     * Update an NS record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ns update --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ns_update_command_builder;
}
/** Manage DNS PTR records. */
export declare class az_network_dns_record_set_ptr {
    /**
     * Add a PTR record.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr add-record --ptrdname
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     *                                          [--ttl]
     * ```
     *
     * @param {string} ptrdname PTR target domain name.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /**
     * Create an empty PTR record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_create_command_builder;
    /**
     * Delete a PTR record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_delete_command_builder;
    /**
     * List all PTR record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_list_command_builder;
    /**
     * Remove a PTR record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr remove-record --ptrdname
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} ptrdname PTR target domain name.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /**
     * Get the details of a PTR record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_show_command_builder;
    /**
     * Update a PTR record set.
     *
     * Syntax:
     * ```
     * az network dns record-set ptr update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_ptr_update_command_builder;
}
/** Manage a DNS SOA record. */
export declare class az_network_dns_record_set_soa {
    /**
     * Get the details of an SOA record.
     *
     * Syntax:
     * ```
     * az network dns record-set soa show --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(resourceGroup: string, zoneName: string): az_network_dns_record_set_soa_show_command_builder;
    /**
     * Update properties of an SOA record.
     *
     * Syntax:
     * ```
     * az network dns record-set soa update --resource-group
     *                                      --zone-name
     *                                      [--email]
     *                                      [--expire-time]
     *                                      [--host]
     *                                      [--if-none-match]
     *                                      [--minimum-ttl]
     *                                      [--refresh-time]
     *                                      [--retry-time]
     *                                      [--serial-number]
     *                                      [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(resourceGroup: string, zoneName: string): az_network_dns_record_set_soa_update_command_builder;
}
/** Manage DNS SRV records. */
export declare class az_network_dns_record_set_srv {
    /**
     * Add an SRV record.
     *
     * Syntax:
     * ```
     * az network dns record-set srv add-record --port
     *                                          --priority
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --target
     *                                          --weight
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     * ```
     *
     * @param {string} port Service port.
     * @param {string} priority Priority metric.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} target Target domain name.
     * @param {string} weight Weight metric.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string): az_network_dns_record_set_srv_add_record_command_builder;
    /**
     * Create an empty SRV record set.
     *
     * Syntax:
     * ```
     * az network dns record-set srv create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_srv_create_command_builder;
    /**
     * Delete an SRV record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set srv delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_srv_delete_command_builder;
    /**
     * List all SRV record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set srv list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_srv_list_command_builder;
    /**
     * Remove an SRV record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set srv remove-record --port
     *                                             --priority
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --target
     *                                             --weight
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} port Service port.
     * @param {string} priority Priority metric.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} target Target domain name.
     * @param {string} weight Weight metric.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /**
     * Get the details of an SRV record set.
     *
     * Syntax:
     * ```
     * az network dns record-set srv show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_srv_show_command_builder;
    /**
     * Update an SRV record set.
     *
     * Syntax:
     * ```
     * az network dns record-set srv update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_srv_update_command_builder;
}
/** Manage DNS TXT records. */
export declare class az_network_dns_record_set_txt {
    /**
     * Add a TXT record.
     *
     * Syntax:
     * ```
     * az network dns record-set txt add-record --record-set-name
     *                                          --resource-group
     *                                          --value
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     * ```
     *
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} value Space-separated list of text values which will be concatenated together.
     * @param {string} zoneName The name of the zone.
     */
    static add_record(recordSetName: string, resourceGroup: string, value: string, zoneName: string): az_network_dns_record_set_txt_add_record_command_builder;
    /**
     * Create an empty TXT record set.
     *
     * Syntax:
     * ```
     * az network dns record-set txt create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_txt_create_command_builder;
    /**
     * Delete a TXT record set and all associated records.
     *
     * Syntax:
     * ```
     * az network dns record-set txt delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_txt_delete_command_builder;
    /**
     * List all TXT record sets in a zone.
     *
     * Syntax:
     * ```
     * az network dns record-set txt list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_txt_list_command_builder;
    /**
     * Remove a TXT record from its record set.
     *
     * Syntax:
     * ```
     * az network dns record-set txt remove-record --record-set-name
     *                                             --resource-group
     *                                             --value
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} value Space-separated list of text values which will be concatenated together.
     * @param {string} zoneName The name of the zone.
     */
    static remove_record(recordSetName: string, resourceGroup: string, value: string, zoneName: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /**
     * Get the details of a TXT record set.
     *
     * Syntax:
     * ```
     * az network dns record-set txt show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_txt_show_command_builder;
    /**
     * Update a TXT record set.
     *
     * Syntax:
     * ```
     * az network dns record-set txt update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_dns_record_set_txt_update_command_builder;
}
/** Manage DNS records and record sets. */
export declare class az_network_dns_record_set {
    /**
     * List all record sets within a DNS zone.
     *
     * Syntax:
     * ```
     * az network dns record-set list --resource-group
     *                                --zone-name
     *                                [--query-examples]
     *                                [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_dns_record_set_list_command_builder;
}
/** Manage DNS zones. */
export declare class az_network_dns_zone {
    /**
     * Create a DNS zone.
     *
     * Syntax:
     * ```
     * az network dns zone create --name
     *                            --resource-group
     *                            [--if-none-match]
     *                            [--parent-name]
     *                            [--registration-vnets]
     *                            [--resolution-vnets]
     *                            [--subscription]
     *                            [--tags]
     *                            [--zone-type {Private, Public}]
     * ```
     *
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_dns_zone_create_command_builder;
    /**
     * Delete a DNS zone and all associated records.
     *
     * Syntax:
     * ```
     * az network dns zone delete --name
     *                            --resource-group
     *                            [--if-match]
     *                            [--subscription]
     *                            [--yes]
     * ```
     *
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_dns_zone_delete_command_builder;
    /**
     * Export a DNS zone as a DNS zone file.
     *
     * Syntax:
     * ```
     * az network dns zone export --name
     *                            --resource-group
     *                            [--file-name]
     *                            [--subscription]
     * ```
     *
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static export(name: string, resourceGroup: string): az_network_dns_zone_export_command_builder;
    /**
     * Create a DNS zone using a DNS zone file.
     *
     * Syntax:
     * ```
     * az network dns zone import --file-name
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     * ```
     *
     * @param {string} fileName Path to the DNS zone file to import.
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static import(fileName: string, name: string, resourceGroup: string): az_network_dns_zone_import_command_builder;
    /**
     * List DNS zones.
     *
     * Syntax:
     * ```
     * az network dns zone list [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     * ```
     */
    static list(): az_network_dns_zone_list_command_builder;
    /**
     * Get a DNS zone parameters. Does not show DNS records within the zone.
     *
     * Syntax:
     * ```
     * az network dns zone show --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     * ```
     *
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_dns_zone_show_command_builder;
    /**
     * Update a DNS zone properties. Does not modify DNS records within the zone.
     *
     * Syntax:
     * ```
     * az network dns zone update --name
     *                            --resource-group
     *                            [--add]
     *                            [--force-string]
     *                            [--if-match]
     *                            [--registration-vnets]
     *                            [--remove]
     *                            [--resolution-vnets]
     *                            [--set]
     *                            [--subscription]
     *                            [--tags]
     *                            [--zone-type {Private, Public}]
     * ```
     *
     * @param {string} name The name of the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_dns_zone_update_command_builder;
}
/** Manage DNS domains in Azure. */
export declare class az_network_dns {
    /**
     * Returns the DNS records specified by the referencing targetResourceIds.
     *
     * Syntax:
     * ```
     * az network dns list-references [--subscription]
     *                                [--target-resources]
     * ```
     */
    static list_references(): az_network_dns_list_references_command_builder;
}
/** Manage authentication of an ExpressRoute circuit. */
export declare class az_network_express_route_auth {
    /**
     * Create a new link authorization for an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route auth create --circuit-name
     *                                      --name
     *                                      --resource-group
     *                                      [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} name Authorization name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(circuitName: string, name: string, resourceGroup: string): az_network_express_route_auth_create_command_builder;
    /**
     * Delete a link authorization of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route auth delete [--circuit-name]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     * ```
     */
    static delete(): az_network_express_route_auth_delete_command_builder;
    /**
     * List link authorizations of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route auth list --circuit-name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(circuitName: string, resourceGroup: string): az_network_express_route_auth_list_command_builder;
    /**
     * Get the details of a link authorization of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route auth show [--circuit-name]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static show(): az_network_express_route_auth_show_command_builder;
}
/** Manage ExpressRoute gateway connections. */
export declare class az_network_express_route_gateway_connection {
    /**
     * Create an ExpressRoute gateway connection.
     *
     * Syntax:
     * ```
     * az network express-route gateway connection create --gateway-name
     *                                                    --name
     *                                                    --peering
     *                                                    --resource-group
     *                                                    [--associated]
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--internet-security {false, true}]
     *                                                    [--labels]
     *                                                    [--propagated]
     *                                                    [--routing-weight]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} gatewayName ExpressRoute gateway name.
     * @param {string} name ExpressRoute connection name.
     * @param {string} peering Name or ID of an ExpressRoute peering.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, peering: string, resourceGroup: string): az_network_express_route_gateway_connection_create_command_builder;
    /**
     * Delete an ExpressRoute gateway connection.
     *
     * Syntax:
     * ```
     * az network express-route gateway connection delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static delete(): az_network_express_route_gateway_connection_delete_command_builder;
    /**
     * List ExpressRoute gateway connections.
     *
     * Syntax:
     * ```
     * az network express-route gateway connection list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName ExpressRoute gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_express_route_gateway_connection_list_command_builder;
    /**
     * Get the details of an ExpressRoute gateway connection.
     *
     * Syntax:
     * ```
     * az network express-route gateway connection show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     */
    static show(): az_network_express_route_gateway_connection_show_command_builder;
    /**
     * Update an ExpressRoute gateway connection.
     *
     * Syntax:
     * ```
     * az network express-route gateway connection update [--add]
     *                                                    [--associated]
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--internet-security {false, true}]
     *                                                    [--labels]
     *                                                    [--name]
     *                                                    [--peering]
     *                                                    [--propagated]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--routing-weight]
     *                                                    [--set]
     *                                                    [--subscription]
     * ```
     */
    static update(): az_network_express_route_gateway_connection_update_command_builder;
}
/** Manage ExpressRoute gateways. */
export declare class az_network_express_route_gateway {
    /**
     * Create an ExpressRoute gateway.
     *
     * Syntax:
     * ```
     * az network express-route gateway create --name
     *                                         --resource-group
     *                                         [--location]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--subscription]
     *                                         [--tags]
     *                                         [--virtual-hub]
     * ```
     *
     * @param {string} name ExpressRoute gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_express_route_gateway_create_command_builder;
    /**
     * Delete an ExpressRoute gateway.
     *
     * Syntax:
     * ```
     * az network express-route gateway delete [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static delete(): az_network_express_route_gateway_delete_command_builder;
    /**
     * List ExpressRoute gateways.
     *
     * Syntax:
     * ```
     * az network express-route gateway list [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     * ```
     */
    static list(): az_network_express_route_gateway_list_command_builder;
    /**
     * Get the details of an ExpressRoute gateway.
     *
     * Syntax:
     * ```
     * az network express-route gateway show [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     * ```
     */
    static show(): az_network_express_route_gateway_show_command_builder;
    /**
     * Update settings of an ExpressRoute gateway.
     *
     * Syntax:
     * ```
     * az network express-route gateway update [--add]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--set]
     *                                         [--subscription]
     *                                         [--tags]
     * ```
     */
    static update(): az_network_express_route_gateway_update_command_builder;
}
/** Manage ExpressRoute circuit connections. */
export declare class az_network_express_route_peering_connection {
    /**
     * Create connections between two ExpressRoute circuits.
     *
     * Syntax:
     * ```
     * az network express-route peering connection create --address-prefix
     *                                                    --circuit-name
     *                                                    --name
     *                                                    --peer-circuit
     *                                                    --peering-name
     *                                                    --resource-group
     *                                                    [--authorization-key]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} addressPrefix /29 IP address space to carve out customer addresses for tunnels.
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} name Name of the peering connection.
     * @param {string} peerCircuit Name or ID of the peer ExpressRoute circuit.
     * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(addressPrefix: string, circuitName: string, name: string, peerCircuit: string, peeringName: string, resourceGroup: string): az_network_express_route_peering_connection_create_command_builder;
    /**
     * Delete an ExpressRoute circuit connection.
     *
     * Syntax:
     * ```
     * az network express-route peering connection delete [--circuit-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--peering-name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static delete(): az_network_express_route_peering_connection_delete_command_builder;
    /**
     * Get the details of an ExpressRoute circuit connection.
     *
     * Syntax:
     * ```
     * az network express-route peering connection show [--circuit-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--peering-name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     * ```
     */
    static show(): az_network_express_route_peering_connection_show_command_builder;
}
/** Manage ExpressRoute circuit peer connections. */
export declare class az_network_express_route_peering_peer_connection {
    /**
     * Gets all global reach peer connections associated with a private peering in an express route circuit.
     *
     * Syntax:
     * ```
     * az network express-route peering peer-connection list --circuit-name
     *                                                       --peering-name
     *                                                       --resource-group
     *                                                       [--query-examples]
     *                                                       [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(circuitName: string, peeringName: string, resourceGroup: string): az_network_express_route_peering_peer_connection_list_command_builder;
    /**
     * Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
     *
     * Syntax:
     * ```
     * az network express-route peering peer-connection show --circuit-name
     *                                                       --name
     *                                                       --peering-name
     *                                                       --resource-group
     *                                                       [--query-examples]
     *                                                       [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} name Name of the peering peer-connection.
     * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(circuitName: string, name: string, peeringName: string, resourceGroup: string): az_network_express_route_peering_peer_connection_show_command_builder;
}
/** Manage ExpressRoute peering of an ExpressRoute circuit. */
export declare class az_network_express_route_peering {
    /**
     * Create peering settings for an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route peering create --circuit-name
     *                                         --peer-asn
     *                                         --peering-type {AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering}
     *                                         --primary-peer-subnet
     *                                         --resource-group
     *                                         --secondary-peer-subnet
     *                                         --vlan-id
     *                                         [--advertised-public-prefixes]
     *                                         [--customer-asn]
     *                                         [--legacy-mode]
     *                                         [--route-filter]
     *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                         [--shared-key]
     *                                         [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} peerAsn Autonomous system number of the customer/connectivity provider.
     * @param {'AzurePrivatePeering' | 'AzurePublicPeering' | 'MicrosoftPeering'} peeringType BGP peering type for the circuit.
     * @param {string} primaryPeerSubnet /30 subnet used to configure IP addresses for primary interface.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} secondaryPeerSubnet /30 subnet used to configure IP addresses for secondary interface.
     * @param {string} vlanId Identifier used to identify the customer.
     */
    static create(circuitName: string, peerAsn: string, peeringType: 'AzurePrivatePeering' | 'AzurePublicPeering' | 'MicrosoftPeering', primaryPeerSubnet: string, resourceGroup: string, secondaryPeerSubnet: string, vlanId: string): az_network_express_route_peering_create_command_builder;
    /**
     * Delete peering settings.
     *
     * Syntax:
     * ```
     * az network express-route peering delete [--circuit-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static delete(): az_network_express_route_peering_delete_command_builder;
    /**
     * List peering settings of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route peering list --circuit-name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     * ```
     *
     * @param {string} circuitName ExpressRoute circuit name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(circuitName: string, resourceGroup: string): az_network_express_route_peering_list_command_builder;
    /**
     * Get the details of an express route peering.
     *
     * Syntax:
     * ```
     * az network express-route peering show [--circuit-name]
     *                                       [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     * ```
     */
    static show(): az_network_express_route_peering_show_command_builder;
    /**
     * Update peering settings of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route peering update [--add]
     *                                         [--advertised-public-prefixes]
     *                                         [--circuit-name]
     *                                         [--customer-asn]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--ip-version {IPv4, IPv6}]
     *                                         [--legacy-mode]
     *                                         [--name]
     *                                         [--peer-asn]
     *                                         [--primary-peer-subnet]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--route-filter]
     *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                         [--secondary-peer-subnet]
     *                                         [--set]
     *                                         [--shared-key]
     *                                         [--subscription]
     *                                         [--vlan-id]
     * ```
     */
    static update(): az_network_express_route_peering_update_command_builder;
}
/** Manage the managed service identity of an ExpressRoute Port. */
export declare class az_network_express_route_port_identity {
    /**
     * Assign a managed service identity to an ExpressRoute Port.
     *
     * Syntax:
     * ```
     * az network express-route port identity assign --identity
     *                                               [--ids]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--resource-group]
     *                                               [--subscription]
     * ```
     *
     * @param {string} identity Name or ID of the ManagedIdentity Resource.
     */
    static assign(identity: string): az_network_express_route_port_identity_assign_command_builder;
    /**
     * Remove the managed service identity of an ExpressRoute Port.
     *
     * Syntax:
     * ```
     * az network express-route port identity remove [--ids]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--resource-group]
     *                                               [--subscription]
     * ```
     */
    static remove(): az_network_express_route_port_identity_remove_command_builder;
    /**
     * Show the managed service identity of an ExpressRoute Port.
     *
     * Syntax:
     * ```
     * az network express-route port identity show [--ids]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--subscription]
     * ```
     */
    static show(): az_network_express_route_port_identity_show_command_builder;
}
/** View ExpressRoute links. */
export declare class az_network_express_route_port_link {
    /**
     * List ExpressRoute links.
     *
     * Syntax:
     * ```
     * az network express-route port link list --port-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     * ```
     *
     * @param {string} portName ExpressRoute port name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(portName: string, resourceGroup: string): az_network_express_route_port_link_list_command_builder;
    /**
     * Get the details of an ExpressRoute link.
     *
     * Syntax:
     * ```
     * az network express-route port link show [--ids]
     *                                         [--name]
     *                                         [--port-name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static show(): az_network_express_route_port_link_show_command_builder;
    /**
     * Manage MACsec configuration of an ExpressRoute Link.
     *
     * Syntax:
     * ```
     * az network express-route port link update [--add]
     *                                           [--admin-state {Disabled, Enabled}]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--macsec-cak-secret-identifier]
     *                                           [--macsec-cipher {GcmAes128, GcmAes256, GcmAesXpn128, GcmAesXpn256}]
     *                                           [--macsec-ckn-secret-identifier]
     *                                           [--name]
     *                                           [--no-wait]
     *                                           [--port-name]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--set]
     *                                           [--subscription]
     * ```
     */
    static update(): az_network_express_route_port_link_update_command_builder;
}
/** View ExpressRoute port location information. */
export declare class az_network_express_route_port_location {
    /**
     * List ExpressRoute port locations.
     *
     * Syntax:
     * ```
     * az network express-route port location list [--query-examples]
     *                                             [--subscription]
     * ```
     */
    static list(): az_network_express_route_port_location_list_command_builder;
    /**
     * Get the details of an ExpressRoute port location.
     *
     * Syntax:
     * ```
     * az network express-route port location show --location
     *                                             [--query-examples]
     *                                             [--subscription]
     * ```
     *
     * @param {string} location Name of the requested ExpressRoutePort peering location.
     */
    static show(location: string): az_network_express_route_port_location_show_command_builder;
}
/** Manage ExpressRoute ports. */
export declare class az_network_express_route_port {
    /**
     * Create an ExpressRoute port.
     *
     * Syntax:
     * ```
     * az network express-route port create --name
     *                                      --resource-group
     *                                      [--bandwidth]
     *                                      [--encapsulation {Dot1Q, QinQ}]
     *                                      [--location]
     *                                      [--peering-location]
     *                                      [--subscription]
     *                                      [--tags]
     * ```
     *
     * @param {string} name ExpressRoute port name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_express_route_port_create_command_builder;
    /**
     * Delete an ExpressRoute port.
     *
     * Syntax:
     * ```
     * az network express-route port delete [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     * ```
     */
    static delete(): az_network_express_route_port_delete_command_builder;
    /**
     * List ExpressRoute ports.
     *
     * Syntax:
     * ```
     * az network express-route port list [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static list(): az_network_express_route_port_list_command_builder;
    /**
     * Get the details of an ExpressRoute port.
     *
     * Syntax:
     * ```
     * az network express-route port show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static show(): az_network_express_route_port_show_command_builder;
    /**
     * Update settings of an ExpressRoute port.
     *
     * Syntax:
     * ```
     * az network express-route port update [--add]
     *                                      [--force-string]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--remove]
     *                                      [--resource-group]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--tags]
     * ```
     */
    static update(): az_network_express_route_port_update_command_builder;
}
/** Manage dedicated private network fiber connections to Azure. */
export declare class az_network_express_route {
    /**
     * Create an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route create --bandwidth
     *                                 --name
     *                                 --peering-location
     *                                 --provider
     *                                 --resource-group
     *                                 [--allow-classic-operations {false, true}]
     *                                 [--allow-global-reach {false, true}]
     *                                 [--express-route-port]
     *                                 [--location]
     *                                 [--no-wait]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Basic, Local, Premium, Standard}]
     *                                 [--subscription]
     *                                 [--tags]
     * ```
     *
     * @param {string} bandwidth Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps.
     * @param {string} name ExpressRoute circuit name.
     * @param {string} peeringLocation Name of the peering location.
     * @param {string} provider Name of the ExpressRoute Service Provider.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(bandwidth: string, name: string, peeringLocation: string, provider: string, resourceGroup: string): az_network_express_route_create_command_builder;
    /**
     * Delete an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route delete [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     */
    static delete(): az_network_express_route_delete_command_builder;
    /**
     * Get the statistics of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route get-stats [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static get_stats(): az_network_express_route_get_stats_command_builder;
    /**
     * List all ExpressRoute circuits for the current subscription.
     *
     * Syntax:
     * ```
     * az network express-route list [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static list(): az_network_express_route_list_command_builder;
    /**
     * Show the current Address Resolution Protocol (ARP) table of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route list-arp-tables --path {primary, secondary}
     *                                          --peering-name
     *                                          [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--subscription]
     * ```
     *
     * @param {'primary' | 'secondary'} path The path of the device.
     * @param {string} peeringName The name of the peering.
     */
    static list_arp_tables(path: 'primary' | 'secondary', peeringName: string): az_network_express_route_list_arp_tables_command_builder;
    /**
     * Show the current routing table of an ExpressRoute circuit peering.
     *
     * Syntax:
     * ```
     * az network express-route list-route-tables --path {primary, secondary}
     *                                            --peering-name
     *                                            [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--subscription]
     * ```
     *
     * @param {'primary' | 'secondary'} path The path of the device.
     * @param {string} peeringName The name of the peering.
     */
    static list_route_tables(path: 'primary' | 'secondary', peeringName: string): az_network_express_route_list_route_tables_command_builder;
    /**
     * List available ExpressRoute service providers.
     *
     * Syntax:
     * ```
     * az network express-route list-service-providers [--subscription]
     * ```
     */
    static list_service_providers(): az_network_express_route_list_service_providers_command_builder;
    /**
     * Get the details of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static show(): az_network_express_route_show_command_builder;
    /**
     * Update settings of an ExpressRoute circuit.
     *
     * Syntax:
     * ```
     * az network express-route update [--add]
     *                                 [--allow-classic-operations {false, true}]
     *                                 [--allow-global-reach {false, true}]
     *                                 [--bandwidth]
     *                                 [--express-route-port]
     *                                 [--force-string]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--peering-location]
     *                                 [--provider]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Basic, Local, Premium, Standard}]
     *                                 [--subscription]
     *                                 [--tags]
     * ```
     */
    static update(): az_network_express_route_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the ExpressRoute is met.
     *
     * Syntax:
     * ```
     * az network express-route wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     * ```
     */
    static wait(): az_network_express_route_wait_command_builder;
}
/** Manage backend addresses of the load balance backend address pool. */
export declare class az_network_lb_address_pool_address {
    /**
     * Add one backend address into the load balance backend address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool address add --ip-address
     *                                        --lb-name
     *                                        --name
     *                                        --pool-name
     *                                        --resource-group
     *                                        --vnet
     *                                        [--subscription]
     * ```
     *
     * @param {string} ipAddress Ip Address within the Virtual Network.
     * @param {string} lbName The load balancer name.
     * @param {string} name Name of the backend address.
     * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnet Name or Id of the virtual network.
     */
    static add(ipAddress: string, lbName: string, name: string, poolName: string, resourceGroup: string, vnet: string): az_network_lb_address_pool_address_add_command_builder;
    /**
     * List all backend addresses of the load balance backend address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool address list --lb-name
     *                                         --pool-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, poolName: string, resourceGroup: string): az_network_lb_address_pool_address_list_command_builder;
    /**
     * Remove one backend address from the load balance backend address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool address remove --lb-name
     *                                           --name
     *                                           --pool-name
     *                                           --resource-group
     *                                           [--subscription]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name Name of the backend address.
     * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static remove(lbName: string, name: string, poolName: string, resourceGroup: string): az_network_lb_address_pool_address_remove_command_builder;
}
/** Manage address pools of a load balancer. */
export declare class az_network_lb_address_pool {
    /**
     * Create an address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool create --lb-name
     *                                   --name
     *                                   --resource-group
     *                                   [--backend-address]
     *                                   [--backend-addresses-config-file]
     *                                   [--subscription]
     *                                   [--vnet]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(lbName: string, name: string, resourceGroup: string): az_network_lb_address_pool_create_command_builder;
    /**
     * Delete an address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool delete --lb-name
     *                                   --name
     *                                   --resource-group
     *                                   [--subscription]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_address_pool_delete_command_builder;
    /**
     * List address pools.
     *
     * Syntax:
     * ```
     * az network lb address-pool list --lb-name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--subscription]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_address_pool_list_command_builder;
    /**
     * Get the details of an address pool.
     *
     * Syntax:
     * ```
     * az network lb address-pool show --lb-name
     *                                 --name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--subscription]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_address_pool_show_command_builder;
}
/** Manage frontend IP addresses of a load balancer. */
export declare class az_network_lb_frontend_ip {
    /**
     * Create a frontend IP address.
     *
     * Syntax:
     * ```
     * az network lb frontend-ip create --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--private-ip-address]
     *                                  [--private-ip-address-version {IPv4, IPv6}]
     *                                  [--public-ip-address]
     *                                  [--public-ip-prefix]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet-name]
     *                                  [--zone {1, 2, 3}]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the frontend IP configuration.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(lbName: string, name: string, resourceGroup: string): az_network_lb_frontend_ip_create_command_builder;
    /**
     * Delete a frontend IP address.
     *
     * Syntax:
     * ```
     * az network lb frontend-ip delete --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the frontend IP configuration.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_frontend_ip_delete_command_builder;
    /**
     * List frontend IP addresses.
     *
     * Syntax:
     * ```
     * az network lb frontend-ip list --lb-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_frontend_ip_list_command_builder;
    /**
     * Get the details of a frontend IP address.
     *
     * Syntax:
     * ```
     * az network lb frontend-ip show --lb-name
     *                                --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the frontend IP configuration.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_frontend_ip_show_command_builder;
    /**
     * Update a frontend IP address.
     *
     * Syntax:
     * ```
     * az network lb frontend-ip update [--add]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--lb-name]
     *                                  [--name]
     *                                  [--private-ip-address]
     *                                  [--public-ip-address]
     *                                  [--public-ip-prefix]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--set]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet-name]
     * ```
     */
    static update(): az_network_lb_frontend_ip_update_command_builder;
}
/** Manage inbound NAT address pools of a load balancer. */
export declare class az_network_lb_inbound_nat_pool {
    /**
     * Create an inbound NAT address pool.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-pool create --backend-port
     *                                       --frontend-port-range-end
     *                                       --frontend-port-range-start
     *                                       --lb-name
     *                                       --name
     *                                       --protocol {All, Tcp, Udp}
     *                                       --resource-group
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--frontend-ip-name]
     *                                       [--idle-timeout]
     *                                       [--subscription]
     * ```
     *
     * @param {string} backendPort Port number.
     * @param {string} frontendPortRangeEnd Port number.
     * @param {string} frontendPortRangeStart Port number.
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the inbound NAT pool.
     * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(backendPort: string, frontendPortRangeEnd: string, frontendPortRangeStart: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /**
     * Delete an inbound NAT address pool.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-pool delete --lb-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the inbound NAT pool.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_inbound_nat_pool_delete_command_builder;
    /**
     * List inbound NAT address pools.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-pool list --lb-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_inbound_nat_pool_list_command_builder;
    /**
     * Get the details of an inbound NAT address pool.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-pool show --lb-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the inbound NAT pool.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_inbound_nat_pool_show_command_builder;
    /**
     * Update an inbound NAT address pool.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-pool update [--add]
     *                                       [--backend-port]
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--force-string]
     *                                       [--frontend-ip-name]
     *                                       [--frontend-port-range-end]
     *                                       [--frontend-port-range-start]
     *                                       [--idle-timeout]
     *                                       [--ids]
     *                                       [--lb-name]
     *                                       [--name]
     *                                       [--protocol {All, Tcp, Udp}]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--subscription]
     * ```
     */
    static update(): az_network_lb_inbound_nat_pool_update_command_builder;
}
/** Manage inbound NAT rules of a load balancer. */
export declare class az_network_lb_inbound_nat_rule {
    /**
     * Create an inbound NAT rule.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-rule create --backend-port
     *                                       --frontend-port
     *                                       --lb-name
     *                                       --name
     *                                       --protocol {All, Tcp, Udp}
     *                                       --resource-group
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--frontend-ip-name]
     *                                       [--idle-timeout]
     *                                       [--subscription]
     * ```
     *
     * @param {string} backendPort Port number.
     * @param {string} frontendPort Port number.
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the inbound NAT rule.
     * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(backendPort: string, frontendPort: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /**
     * Delete an inbound NAT rule.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-rule delete --lb-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the inbound NAT rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_inbound_nat_rule_delete_command_builder;
    /**
     * List inbound NAT rules.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-rule list --lb-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_inbound_nat_rule_list_command_builder;
    /**
     * Get the details of an inbound NAT rule.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-rule show --lb-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the inbound NAT rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_inbound_nat_rule_show_command_builder;
    /**
     * Update an inbound NAT rule.
     *
     * Syntax:
     * ```
     * az network lb inbound-nat-rule update [--add]
     *                                       [--backend-port]
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--force-string]
     *                                       [--frontend-ip-name]
     *                                       [--frontend-port]
     *                                       [--idle-timeout]
     *                                       [--ids]
     *                                       [--lb-name]
     *                                       [--name]
     *                                       [--protocol {All, Tcp, Udp}]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--subscription]
     * ```
     */
    static update(): az_network_lb_inbound_nat_rule_update_command_builder;
}
/** Manage outbound rules of a load balancer. */
export declare class az_network_lb_outbound_rule {
    /**
     * Create an outbound-rule.
     *
     * Syntax:
     * ```
     * az network lb outbound-rule create --address-pool
     *                                    --frontend-ip-configs
     *                                    --lb-name
     *                                    --name
     *                                    --protocol {All, Tcp, Udp}
     *                                    --resource-group
     *                                    [--enable-tcp-reset {false, true}]
     *                                    [--idle-timeout]
     *                                    [--outbound-ports]
     *                                    [--subscription]
     * ```
     *
     * @param {string} addressPool Name or ID of the backend address pool.
     * @param {string} frontendIpConfigs Space-separated list of frontend IP configuration names or IDs.
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the outbound rule.
     * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(addressPool: string, frontendIpConfigs: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string): az_network_lb_outbound_rule_create_command_builder;
    /**
     * Delete an outbound-rule.
     *
     * Syntax:
     * ```
     * az network lb outbound-rule delete --lb-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the outbound rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_outbound_rule_delete_command_builder;
    /**
     * List outbound rules.
     *
     * Syntax:
     * ```
     * az network lb outbound-rule list --lb-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_outbound_rule_list_command_builder;
    /**
     * Get the details of an outbound rule.
     *
     * Syntax:
     * ```
     * az network lb outbound-rule show --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the outbound rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_outbound_rule_show_command_builder;
    /**
     * Update an outbound-rule.
     *
     * Syntax:
     * ```
     * az network lb outbound-rule update [--add]
     *                                    [--address-pool]
     *                                    [--enable-tcp-reset {false, true}]
     *                                    [--force-string]
     *                                    [--frontend-ip-configs]
     *                                    [--idle-timeout]
     *                                    [--ids]
     *                                    [--lb-name]
     *                                    [--name]
     *                                    [--outbound-ports]
     *                                    [--protocol {All, Tcp, Udp}]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     * ```
     */
    static update(): az_network_lb_outbound_rule_update_command_builder;
}
/** Evaluate probe information and define routing rules. */
export declare class az_network_lb_probe {
    /**
     * Create a probe.
     *
     * Syntax:
     * ```
     * az network lb probe create --lb-name
     *                            --name
     *                            --port
     *                            --protocol {Http, Https, Tcp}
     *                            --resource-group
     *                            [--interval]
     *                            [--path]
     *                            [--subscription]
     *                            [--threshold]
     * ```
     *
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the probe.
     * @param {string} port The port to interrogate.
     * @param {'Http' | 'Https' | 'Tcp'} protocol The protocol to probe.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(lbName: string, name: string, port: string, protocol: 'Http' | 'Https' | 'Tcp', resourceGroup: string): az_network_lb_probe_create_command_builder;
    /**
     * Delete a probe.
     *
     * Syntax:
     * ```
     * az network lb probe delete --lb-name
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the probe.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_probe_delete_command_builder;
    /**
     * List probes.
     *
     * Syntax:
     * ```
     * az network lb probe list --lb-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_probe_list_command_builder;
    /**
     * Get the details of a probe.
     *
     * Syntax:
     * ```
     * az network lb probe show --lb-name
     *                          --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the probe.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_probe_show_command_builder;
    /**
     * Update a probe.
     *
     * Syntax:
     * ```
     * az network lb probe update [--add]
     *                            [--force-string]
     *                            [--ids]
     *                            [--interval]
     *                            [--lb-name]
     *                            [--name]
     *                            [--path]
     *                            [--port]
     *                            [--protocol {Http, Https, Tcp}]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--subscription]
     *                            [--threshold]
     * ```
     */
    static update(): az_network_lb_probe_update_command_builder;
}
/** Manage load balancing rules. */
export declare class az_network_lb_rule {
    /**
     * Create a load balancing rule.
     *
     * Syntax:
     * ```
     * az network lb rule create --backend-port
     *                           --frontend-port
     *                           --lb-name
     *                           --name
     *                           --protocol {All, Tcp, Udp}
     *                           --resource-group
     *                           [--backend-pool-name]
     *                           [--disable-outbound-snat {false, true}]
     *                           [--enable-tcp-reset {false, true}]
     *                           [--floating-ip {false, true}]
     *                           [--frontend-ip-name]
     *                           [--idle-timeout]
     *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
     *                           [--probe-name]
     *                           [--subscription]
     * ```
     *
     * @param {string} backendPort Port number.
     * @param {string} frontendPort Port number.
     * @param {string} lbName The load balancer name.
     * @param {string} name The name of the load balancing rule.
     * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(backendPort: string, frontendPort: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string): az_network_lb_rule_create_command_builder;
    /**
     * Delete a load balancing rule.
     *
     * Syntax:
     * ```
     * az network lb rule delete --lb-name
     *                           --name
     *                           --resource-group
     *                           [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the load balancing rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(lbName: string, name: string, resourceGroup: string): az_network_lb_rule_delete_command_builder;
    /**
     * List load balancing rules.
     *
     * Syntax:
     * ```
     * az network lb rule list --lb-name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(lbName: string, resourceGroup: string): az_network_lb_rule_list_command_builder;
    /**
     * Get the details of a load balancing rule.
     *
     * Syntax:
     * ```
     * az network lb rule show --lb-name
     *                         --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     * ```
     *
     * @param {string} lbName The name of the load balancer.
     * @param {string} name The name of the load balancing rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(lbName: string, name: string, resourceGroup: string): az_network_lb_rule_show_command_builder;
    /**
     * Update a load balancing rule.
     *
     * Syntax:
     * ```
     * az network lb rule update [--add]
     *                           [--backend-pool-name]
     *                           [--backend-port]
     *                           [--disable-outbound-snat {false, true}]
     *                           [--enable-tcp-reset {false, true}]
     *                           [--floating-ip {false, true}]
     *                           [--force-string]
     *                           [--frontend-ip-name]
     *                           [--frontend-port]
     *                           [--idle-timeout]
     *                           [--ids]
     *                           [--lb-name]
     *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
     *                           [--name]
     *                           [--probe-name]
     *                           [--protocol {All, Tcp, Udp}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--subscription]
     * ```
     */
    static update(): az_network_lb_rule_update_command_builder;
}
/** Manage and configure load balancers. */
export declare class az_network_lb {
    /**
     * Create a load balancer.
     *
     * Syntax:
     * ```
     * az network lb create --name
     *                      --resource-group
     *                      [--backend-pool-name]
     *                      [--frontend-ip-name]
     *                      [--frontend-ip-zone {1, 2, 3}]
     *                      [--location]
     *                      [--no-wait]
     *                      [--private-ip-address]
     *                      [--private-ip-address-version {IPv4, IPv6}]
     *                      [--public-ip-address]
     *                      [--public-ip-address-allocation {Dynamic, Static}]
     *                      [--public-ip-dns-name]
     *                      [--public-ip-zone {1, 2, 3}]
     *                      [--sku {Basic, Standard}]
     *                      [--subnet]
     *                      [--subnet-address-prefix]
     *                      [--subscription]
     *                      [--tags]
     *                      [--validate]
     *                      [--vnet-address-prefix]
     *                      [--vnet-name]
     * ```
     *
     * @param {string} name The load balancer name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_lb_create_command_builder;
    /**
     * Delete a load balancer.
     *
     * Syntax:
     * ```
     * az network lb delete [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     * ```
     */
    static delete(): az_network_lb_delete_command_builder;
    /**
     * List load balancers.
     *
     * Syntax:
     * ```
     * az network lb list [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     * ```
     */
    static list(): az_network_lb_list_command_builder;
    /**
     * Get the details of a load balancer.
     *
     * Syntax:
     * ```
     * az network lb show [--expand]
     *                    [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     * ```
     */
    static show(): az_network_lb_show_command_builder;
    /**
     * Update a load balancer.
     *
     * Syntax:
     * ```
     * az network lb update [--add]
     *                      [--force-string]
     *                      [--ids]
     *                      [--name]
     *                      [--remove]
     *                      [--resource-group]
     *                      [--set]
     *                      [--subscription]
     * ```
     */
    static update(): az_network_lb_update_command_builder;
}
/** Manage local gateways. */
export declare class az_network_local_gateway {
    /**
     * Create a local VPN gateway.
     *
     * Syntax:
     * ```
     * az network local-gateway create --gateway-ip-address
     *                                 --name
     *                                 --resource-group
     *                                 [--asn]
     *                                 [--bgp-peering-address]
     *                                 [--local-address-prefixes]
     *                                 [--location]
     *                                 [--no-wait]
     *                                 [--peer-weight]
     *                                 [--subscription]
     *                                 [--tags]
     * ```
     *
     * @param {string} gatewayIpAddress Gateway's public IP address. (e.g. 10.1.1.1).
     * @param {string} name Name of the local network gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayIpAddress: string, name: string, resourceGroup: string): az_network_local_gateway_create_command_builder;
    /**
     * Delete a local VPN gateway.
     *
     * Syntax:
     * ```
     * az network local-gateway delete [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     */
    static delete(): az_network_local_gateway_delete_command_builder;
    /**
     * List all local VPN gateways in a resource group.
     *
     * Syntax:
     * ```
     * az network local-gateway list --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(resourceGroup: string): az_network_local_gateway_list_command_builder;
    /**
     * Get the details of a local VPN gateway.
     *
     * Syntax:
     * ```
     * az network local-gateway show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static show(): az_network_local_gateway_show_command_builder;
    /**
     * Update a local VPN gateway.
     *
     * Syntax:
     * ```
     * az network local-gateway update [--add]
     *                                 [--asn]
     *                                 [--bgp-peering-address]
     *                                 [--force-string]
     *                                 [--gateway-ip-address]
     *                                 [--ids]
     *                                 [--local-address-prefixes]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--peer-weight]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--subscription]
     *                                 [--tags]
     * ```
     */
    static update(): az_network_local_gateway_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the local gateway is met.
     *
     * Syntax:
     * ```
     * az network local-gateway wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     * ```
     */
    static wait(): az_network_local_gateway_wait_command_builder;
}
/** Commands to manage NAT gateways. */
export declare class az_network_nat_gateway {
    /**
     * Create a NAT gateway.
     *
     * Syntax:
     * ```
     * az network nat gateway create --name
     *                               --resource-group
     *                               [--idle-timeout]
     *                               [--location]
     *                               [--no-wait]
     *                               [--public-ip-addresses]
     *                               [--public-ip-prefixes]
     *                               [--subscription]
     *                               [--zone {1, 2, 3}]
     * ```
     *
     * @param {string} name Name of the NAT gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_nat_gateway_create_command_builder;
    /**
     * Delete a NAT gateway.
     *
     * Syntax:
     * ```
     * az network nat gateway delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static delete(): az_network_nat_gateway_delete_command_builder;
    /**
     * List NAT gateways.
     *
     * Syntax:
     * ```
     * az network nat gateway list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     * ```
     */
    static list(): az_network_nat_gateway_list_command_builder;
    /**
     * Show details of a NAT gateway.
     *
     * Syntax:
     * ```
     * az network nat gateway show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     * ```
     */
    static show(): az_network_nat_gateway_show_command_builder;
    /**
     * Update a NAT gateway.
     *
     * Syntax:
     * ```
     * az network nat gateway update [--add]
     *                               [--force-string]
     *                               [--idle-timeout]
     *                               [--ids]
     *                               [--name]
     *                               [--public-ip-addresses]
     *                               [--public-ip-prefixes]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     * ```
     */
    static update(): az_network_nat_gateway_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the NAT gateway is met.
     *
     * Syntax:
     * ```
     * az network nat gateway wait [--created]
     *                             [--custom]
     *                             [--deleted]
     *                             [--exists]
     *                             [--ids]
     *                             [--interval]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--timeout]
     *                             [--updated]
     * ```
     */
    static wait(): az_network_nat_gateway_wait_command_builder;
}
/** Commands to manage NAT resources. */
export declare class az_network_nat {
}
/** Manage address pools in an IP configuration. */
export declare class az_network_nic_ip_config_address_pool {
    /**
     * Add an address pool to an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config address-pool add --address-pool
     *                                           --ip-config-name
     *                                           --nic-name
     *                                           --resource-group
     *                                           [--gateway-name]
     *                                           [--lb-name]
     *                                           [--subscription]
     * ```
     *
     * @param {string} addressPool The name or ID of an existing backend address pool.
     * @param {string} ipConfigName The name of the IP configuration.
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static add(addressPool: string, ipConfigName: string, nicName: string, resourceGroup: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /**
     * Remove an address pool of an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config address-pool remove --address-pool
     *                                              --ip-config-name
     *                                              --nic-name
     *                                              --resource-group
     *                                              [--gateway-name]
     *                                              [--lb-name]
     *                                              [--subscription]
     * ```
     *
     * @param {string} addressPool The name or ID of an existing backend address pool.
     * @param {string} ipConfigName The name of the IP configuration.
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static remove(addressPool: string, ipConfigName: string, nicName: string, resourceGroup: string): az_network_nic_ip_config_address_pool_remove_command_builder;
}
/** Manage inbound NAT rules of an IP configuration. */
export declare class az_network_nic_ip_config_inbound_nat_rule {
    /**
     * Add an inbound NAT rule to an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config inbound-nat-rule add --inbound-nat-rule
     *                                               --ip-config-name
     *                                               --nic-name
     *                                               --resource-group
     *                                               [--lb-name]
     *                                               [--subscription]
     * ```
     *
     * @param {string} inboundNatRule The name or ID of an existing inbound NAT rule.
     * @param {string} ipConfigName The name of the IP configuration.
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static add(inboundNatRule: string, ipConfigName: string, nicName: string, resourceGroup: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /**
     * Remove an inbound NAT rule of an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config inbound-nat-rule remove --inbound-nat-rule
     *                                                  --ip-config-name
     *                                                  --nic-name
     *                                                  --resource-group
     *                                                  [--lb-name]
     *                                                  [--subscription]
     * ```
     *
     * @param {string} inboundNatRule The name or ID of an existing inbound NAT rule.
     * @param {string} ipConfigName The name of the IP configuration.
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static remove(inboundNatRule: string, ipConfigName: string, nicName: string, resourceGroup: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
}
/** Manage IP configurations of a network interface. */
export declare class az_network_nic_ip_config {
    /**
     * Create an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config create --name
     *                                 --nic-name
     *                                 --resource-group
     *                                 [--app-gateway-address-pools]
     *                                 [--application-security-groups]
     *                                 [--gateway-name]
     *                                 [--lb-address-pools]
     *                                 [--lb-inbound-nat-rules]
     *                                 [--lb-name]
     *                                 [--make-primary]
     *                                 [--private-ip-address]
     *                                 [--private-ip-address-version {IPv4, IPv6}]
     *                                 [--public-ip-address]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--vnet-name]
     * ```
     *
     * @param {string} name The name of the IP configuration.
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, nicName: string, resourceGroup: string): az_network_nic_ip_config_create_command_builder;
    /**
     * Delete an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config delete [--ids]
     *                                 [--name]
     *                                 [--nic-name]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     */
    static delete(): az_network_nic_ip_config_delete_command_builder;
    /**
     * List the IP configurations of a NIC.
     *
     * Syntax:
     * ```
     * az network nic ip-config list --nic-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     * ```
     *
     * @param {string} nicName The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(nicName: string, resourceGroup: string): az_network_nic_ip_config_list_command_builder;
    /**
     * Show the details of an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config show [--ids]
     *                               [--name]
     *                               [--nic-name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static show(): az_network_nic_ip_config_show_command_builder;
    /**
     * Update an IP configuration.
     *
     * Syntax:
     * ```
     * az network nic ip-config update [--add]
     *                                 [--app-gateway-address-pools]
     *                                 [--application-security-groups]
     *                                 [--force-string]
     *                                 [--gateway-name]
     *                                 [--ids]
     *                                 [--lb-address-pools]
     *                                 [--lb-inbound-nat-rules]
     *                                 [--lb-name]
     *                                 [--make-primary]
     *                                 [--name]
     *                                 [--nic-name]
     *                                 [--private-ip-address]
     *                                 [--private-ip-address-version {IPv4, IPv6}]
     *                                 [--public-ip-address]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--vnet-name]
     * ```
     */
    static update(): az_network_nic_ip_config_update_command_builder;
}
/** Manage network interfaces. */
export declare class az_network_nic {
    /**
     * Create a network interface.
     *
     * Syntax:
     * ```
     * az network nic create --name
     *                       --resource-group
     *                       --subnet
     *                       [--accelerated-networking {false, true}]
     *                       [--app-gateway-address-pools]
     *                       [--application-security-groups]
     *                       [--dns-servers]
     *                       [--gateway-name]
     *                       [--internal-dns-name]
     *                       [--ip-forwarding {false, true}]
     *                       [--lb-address-pools]
     *                       [--lb-inbound-nat-rules]
     *                       [--lb-name]
     *                       [--location]
     *                       [--network-security-group]
     *                       [--no-wait]
     *                       [--private-ip-address]
     *                       [--private-ip-address-version {IPv4, IPv6}]
     *                       [--public-ip-address]
     *                       [--subscription]
     *                       [--tags]
     *                       [--vnet-name]
     * ```
     *
     * @param {string} name The network interface (NIC).
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} subnet Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group, please provide the ID instead of the name of the subnet.
     */
    static create(name: string, resourceGroup: string, subnet: string): az_network_nic_create_command_builder;
    /**
     * Delete a network interface.
     *
     * Syntax:
     * ```
     * az network nic delete [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--resource-group]
     *                       [--subscription]
     * ```
     */
    static delete(): az_network_nic_delete_command_builder;
    /**
     * List network interfaces.
     *
     * Syntax:
     * ```
     * az network nic list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     * ```
     */
    static list(): az_network_nic_list_command_builder;
    /**
     * List all effective network security groups applied to a network interface.
     *
     * Syntax:
     * ```
     * az network nic list-effective-nsg [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     * ```
     */
    static list_effective_nsg(): az_network_nic_list_effective_nsg_command_builder;
    /**
     * Get the details of a network interface.
     *
     * Syntax:
     * ```
     * az network nic show [--expand]
     *                     [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     * ```
     */
    static show(): az_network_nic_show_command_builder;
    /**
     * Show the effective route table applied to a network interface.
     *
     * Syntax:
     * ```
     * az network nic show-effective-route-table [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static show_effective_route_table(): az_network_nic_show_effective_route_table_command_builder;
    /**
     * Update a network interface.
     *
     * Syntax:
     * ```
     * az network nic update [--accelerated-networking {false, true}]
     *                       [--add]
     *                       [--dns-servers]
     *                       [--force-string]
     *                       [--ids]
     *                       [--internal-dns-name]
     *                       [--ip-forwarding {false, true}]
     *                       [--name]
     *                       [--network-security-group]
     *                       [--no-wait]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     * ```
     */
    static update(): az_network_nic_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the network interface is met.
     *
     * Syntax:
     * ```
     * az network nic wait [--created]
     *                     [--custom]
     *                     [--deleted]
     *                     [--exists]
     *                     [--expand]
     *                     [--ids]
     *                     [--interval]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--timeout]
     *                     [--updated]
     * ```
     */
    static wait(): az_network_nic_wait_command_builder;
}
/** Manage network security group rules. */
export declare class az_network_nsg_rule {
    /**
     * Create a network security group rule.
     *
     * Syntax:
     * ```
     * az network nsg rule create --name
     *                            --nsg-name
     *                            --priority
     *                            --resource-group
     *                            [--access {Allow, Deny}]
     *                            [--description]
     *                            [--destination-address-prefixes]
     *                            [--destination-asgs]
     *                            [--destination-port-ranges]
     *                            [--direction {Inbound, Outbound}]
     *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
     *                            [--source-address-prefixes]
     *                            [--source-asgs]
     *                            [--source-port-ranges]
     *                            [--subscription]
     * ```
     *
     * @param {string} name Name of the network security group rule.
     * @param {string} nsgName Name of the network security group.
     * @param {string} priority Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, nsgName: string, priority: string, resourceGroup: string): az_network_nsg_rule_create_command_builder;
    /**
     * Delete a network security group rule.
     *
     * Syntax:
     * ```
     * az network nsg rule delete [--ids]
     *                            [--name]
     *                            [--nsg-name]
     *                            [--resource-group]
     *                            [--subscription]
     * ```
     */
    static delete(): az_network_nsg_rule_delete_command_builder;
    /**
     * List all rules in a network security group.
     *
     * Syntax:
     * ```
     * az network nsg rule list --nsg-name
     *                          --resource-group
     *                          [--include-default]
     *                          [--query-examples]
     *                          [--subscription]
     * ```
     *
     * @param {string} nsgName Name of the network security group.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(nsgName: string, resourceGroup: string): az_network_nsg_rule_list_command_builder;
    /**
     * Get the details of a network security group rule.
     *
     * Syntax:
     * ```
     * az network nsg rule show [--ids]
     *                          [--name]
     *                          [--nsg-name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     * ```
     */
    static show(): az_network_nsg_rule_show_command_builder;
    /**
     * Update a network security group rule.
     *
     * Syntax:
     * ```
     * az network nsg rule update [--access {Allow, Deny}]
     *                            [--add]
     *                            [--description]
     *                            [--destination-address-prefixes]
     *                            [--destination-asgs]
     *                            [--destination-port-ranges]
     *                            [--direction {Inbound, Outbound}]
     *                            [--force-string]
     *                            [--ids]
     *                            [--name]
     *                            [--nsg-name]
     *                            [--priority]
     *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--source-address-prefixes]
     *                            [--source-asgs]
     *                            [--source-port-ranges]
     *                            [--subscription]
     * ```
     */
    static update(): az_network_nsg_rule_update_command_builder;
}
/** Manage Azure Network Security Groups (NSGs). */
export declare class az_network_nsg {
    /**
     * Create a network security group.
     *
     * Syntax:
     * ```
     * az network nsg create --name
     *                       --resource-group
     *                       [--location]
     *                       [--subscription]
     *                       [--tags]
     * ```
     *
     * @param {string} name Name of the network security group.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_nsg_create_command_builder;
    /**
     * Delete a network security group.
     *
     * Syntax:
     * ```
     * az network nsg delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     * ```
     */
    static delete(): az_network_nsg_delete_command_builder;
    /**
     * List network security groups.
     *
     * Syntax:
     * ```
     * az network nsg list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     * ```
     */
    static list(): az_network_nsg_list_command_builder;
    /**
     * Get information about a network security group.
     *
     * Syntax:
     * ```
     * az network nsg show [--expand]
     *                     [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     * ```
     */
    static show(): az_network_nsg_show_command_builder;
    /**
     * Update a network security group.
     *
     * Syntax:
     * ```
     * az network nsg update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     * ```
     */
    static update(): az_network_nsg_update_command_builder;
}
/** Manage virtual network links to the specified Private DNS zone. */
export declare class az_network_private_dns_link_vnet {
    /**
     * Create a virtual network link to the specified Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet create --name
     *                                         --registration-enabled {false, true}
     *                                         --resource-group
     *                                         --virtual-network
     *                                         --zone-name
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--tags]
     * ```
     *
     * @param {string} name The name of the virtual network link to the specified Private DNS zone.
     * @param {boolean} registrationEnabled Specify if the link is registration enabled.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} virtualNetwork Name or ID of the virtual network.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, registrationEnabled: boolean, resourceGroup: string, virtualNetwork: string, zoneName: string): az_network_private_dns_link_vnet_create_command_builder;
    /**
     * Delete a virtual network link to the specified Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet delete --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--yes]
     * ```
     *
     * @param {string} name The name of the virtual network link to the specified Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_link_vnet_delete_command_builder;
    /**
     * List the virtual network links to the specified Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet list --resource-group
     *                                       --zone-name
     *                                       [--query-examples]
     *                                       [--subscription]
     *                                       [--top]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_link_vnet_list_command_builder;
    /**
     * Get a virtual network link to the specified Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet show --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--query-examples]
     *                                       [--subscription]
     * ```
     *
     * @param {string} name The name of the virtual network link to the specified Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_link_vnet_show_command_builder;
    /**
     * Update a virtual network link's properties. Does not modify virtual network within the link.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet update --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--registration-enabled {false, true}]
     *                                         [--remove]
     *                                         [--set]
     *                                         [--subscription]
     *                                         [--tags]
     * ```
     *
     * @param {string} name The name of the virtual network link to the specified Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_link_vnet_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the virtual network link to the specified Private DNS zone is met.
     *
     * Syntax:
     * ```
     * az network private-dns link vnet wait --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--subscription]
     *                                       [--timeout]
     *                                       [--updated]
     * ```
     *
     * @param {string} name The name of the virtual network link to the specified Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static wait(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_link_vnet_wait_command_builder;
}
/** Manage Private DNS links. */
export declare class az_network_private_dns_link {
}
/** Manage Private DNS A records. */
export declare class az_network_private_dns_record_set_a {
    /**
     * Add an A record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a add-record --ipv4-address
     *                                                --record-set-name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--subscription]
     * ```
     *
     * @param {string} ipv4Address IPV4 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_add_record_command_builder;
    /**
     * Create an empty A record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a create --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--metadata]
     *                                            [--subscription]
     *                                            [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_create_command_builder;
    /**
     * Delete an A record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a delete --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--if-match]
     *                                            [--subscription]
     *                                            [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_delete_command_builder;
    /**
     * List all A record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a list --resource-group
     *                                          --zone-name
     *                                          [--query-examples]
     *                                          [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_list_command_builder;
    /**
     * Remove an A record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a remove-record --ipv4-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--keep-empty-record-set]
     *                                                   [--subscription]
     * ```
     *
     * @param {string} ipv4Address IPV4 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /**
     * Get the details of an A record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a show --name
     *                                          --resource-group
     *                                          --zone-name
     *                                          [--query-examples]
     *                                          [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_show_command_builder;
    /**
     * Update an A record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set a update --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--add]
     *                                            [--force-string]
     *                                            [--if-match]
     *                                            [--metadata]
     *                                            [--remove]
     *                                            [--set]
     *                                            [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_a_update_command_builder;
}
/** Manage Private DNS AAAA records. */
export declare class az_network_private_dns_record_set_aaaa {
    /**
     * Add an AAAA record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa add-record --ipv6-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     * ```
     *
     * @param {string} ipv6Address IPV6 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
    /**
     * Create an empty AAAA record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa create --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--metadata]
     *                                               [--subscription]
     *                                               [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /**
     * Delete an AAAA record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa delete --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--if-match]
     *                                               [--subscription]
     *                                               [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /**
     * List all AAAA record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa list --resource-group
     *                                             --zone-name
     *                                             [--query-examples]
     *                                             [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_list_command_builder;
    /**
     * Remove AAAA record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa remove-record --ipv6-address
     *                                                      --record-set-name
     *                                                      --resource-group
     *                                                      --zone-name
     *                                                      [--keep-empty-record-set]
     *                                                      [--subscription]
     * ```
     *
     * @param {string} ipv6Address IPV6 address in string notation.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /**
     * Get the details of an AAAA record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa show --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--query-examples]
     *                                             [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_show_command_builder;
    /**
     * Update an AAAA record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set aaaa update --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--add]
     *                                               [--force-string]
     *                                               [--if-match]
     *                                               [--metadata]
     *                                               [--remove]
     *                                               [--set]
     *                                               [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_aaaa_update_command_builder;
}
/** Manage Private DNS CNAME records. */
export declare class az_network_private_dns_record_set_cname {
    /**
     * Create an empty CNAME record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname create --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--metadata]
     *                                                [--subscription]
     *                                                [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_create_command_builder;
    /**
     * Delete a CNAME record set and its associated record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname delete --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--if-match]
     *                                                [--subscription]
     *                                                [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /**
     * List the CNAME record set in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname list --resource-group
     *                                              --zone-name
     *                                              [--query-examples]
     *                                              [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_list_command_builder;
    /**
     * Remove a CNAME record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname remove-record --cname
     *                                                       --record-set-name
     *                                                       --resource-group
     *                                                       --zone-name
     *                                                       [--keep-empty-record-set]
     *                                                       [--subscription]
     * ```
     *
     * @param {string} cname Canonical name.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(cname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /**
     * Set the value of a CNAME record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname set-record --cname
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     *                                                    [--subscription]
     * ```
     *
     * @param {string} cname Canonical name.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static set_record(cname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_set_record_command_builder;
    /**
     * Get the details of a CNAME record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname show --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--query-examples]
     *                                              [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_show_command_builder;
    /**
     * Update a CNAME record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set cname update --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--add]
     *                                                [--force-string]
     *                                                [--if-match]
     *                                                [--metadata]
     *                                                [--remove]
     *                                                [--set]
     *                                                [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_cname_update_command_builder;
}
/** Manage Private DNS MX records. */
export declare class az_network_private_dns_record_set_mx {
    /**
     * Add an MX record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx add-record --exchange
     *                                                 --preference
     *                                                 --record-set-name
     *                                                 --resource-group
     *                                                 --zone-name
     *                                                 [--subscription]
     * ```
     *
     * @param {string} exchange Exchange metric.
     * @param {string} preference Preference metric.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /**
     * Create an empty MX record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx create --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--metadata]
     *                                             [--subscription]
     *                                             [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_create_command_builder;
    /**
     * Delete an MX record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx delete --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--if-match]
     *                                             [--subscription]
     *                                             [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /**
     * List all MX record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx list --resource-group
     *                                           --zone-name
     *                                           [--query-examples]
     *                                           [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_list_command_builder;
    /**
     * Remove an MX record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx remove-record --exchange
     *                                                    --preference
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     *                                                    [--keep-empty-record-set]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} exchange Exchange metric.
     * @param {string} preference Preference metric.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /**
     * Get the details of an MX record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx show --name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--query-examples]
     *                                           [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_show_command_builder;
    /**
     * Update an MX record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set mx update --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--if-match]
     *                                             [--metadata]
     *                                             [--remove]
     *                                             [--set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_mx_update_command_builder;
}
/** Manage Private DNS PTR records. */
export declare class az_network_private_dns_record_set_ptr {
    /**
     * Add a PTR record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr add-record --ptrdname
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --zone-name
     *                                                  [--subscription]
     * ```
     *
     * @param {string} ptrdname PTR target domain name.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
    /**
     * Create an empty PTR record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /**
     * Delete a PTR record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /**
     * List all PTR record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_list_command_builder;
    /**
     * Remove a PTR record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr remove-record --ptrdname
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} ptrdname PTR target domain name.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /**
     * Get the details of a PTR record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_show_command_builder;
    /**
     * Update a PTR record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set ptr update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_ptr_update_command_builder;
}
/** Manage Private DNS SOA record. */
export declare class az_network_private_dns_record_set_soa {
    /**
     * Get the details of an SOA record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set soa show --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_soa_show_command_builder;
    /**
     * Update properties of an SOA record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set soa update --resource-group
     *                                              --zone-name
     *                                              [--email]
     *                                              [--expire-time]
     *                                              [--host]
     *                                              [--minimum-ttl]
     *                                              [--refresh-time]
     *                                              [--retry-time]
     *                                              [--serial-number]
     *                                              [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_soa_update_command_builder;
}
/** Manage Private DNS SRV records. */
export declare class az_network_private_dns_record_set_srv {
    /**
     * Add an SRV record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv add-record --port
     *                                                  --priority
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --target
     *                                                  --weight
     *                                                  --zone-name
     *                                                  [--subscription]
     * ```
     *
     * @param {string} port Service port.
     * @param {string} priority Priority metric.
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} target Target domain name.
     * @param {string} weight Weight metric.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /**
     * Create an empty SRV record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_srv_create_command_builder;
    /**
     * Delete an SRV record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /**
     * List all SRV record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_srv_list_command_builder;
    /**
     * Remove an SRV record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv remove-record --port
     *                                                     --priority
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --target
     *                                                     --weight
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} port Service port.
     * @param {string} priority Priority metric.
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} target Target domain name.
     * @param {string} weight Weight metric.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /**
     * Get the details of an SRV record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_srv_show_command_builder;
    /**
     * Update an SRV record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set srv update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_srv_update_command_builder;
}
/** Manage Private DNS TXT records. */
export declare class az_network_private_dns_record_set_txt {
    /**
     * Add a TXT record.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt add-record --record-set-name
     *                                                  --resource-group
     *                                                  --value
     *                                                  --zone-name
     *                                                  [--subscription]
     * ```
     *
     * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} value Space-separated list of text values which will be concatenated together.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static add_record(recordSetName: string, resourceGroup: string, value: string, zoneName: string): az_network_private_dns_record_set_txt_add_record_command_builder;
    /**
     * Create an empty TXT record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static create(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_txt_create_command_builder;
    /**
     * Delete a TXT record set and all associated records.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static delete(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /**
     * List all TXT record sets in a zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_txt_list_command_builder;
    /**
     * Remove a TXT record from its record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt remove-record --record-set-name
     *                                                     --resource-group
     *                                                     --value
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} recordSetName The name of the record set relative to the zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} value Space-separated list of text values which will be concatenated together.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static remove_record(recordSetName: string, resourceGroup: string, value: string, zoneName: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /**
     * Get the details of a TXT record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static show(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_txt_show_command_builder;
    /**
     * Update a TXT record set.
     *
     * Syntax:
     * ```
     * az network private-dns record-set txt update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     * ```
     *
     * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static update(name: string, resourceGroup: string, zoneName: string): az_network_private_dns_record_set_txt_update_command_builder;
}
/** Manage Private DNS records and record sets. */
export declare class az_network_private_dns_record_set {
    /**
     * List all record sets within a Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns record-set list --resource-group
     *                                        --zone-name
     *                                        [--query-examples]
     *                                        [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName The name of the Private DNS zone.
     */
    static list(resourceGroup: string, zoneName: string): az_network_private_dns_record_set_list_command_builder;
}
/** Manage Private DNS zones. */
export declare class az_network_private_dns_zone {
    /**
     * Create a Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns zone create --name
     *                                    --resource-group
     *                                    [--no-wait]
     *                                    [--subscription]
     *                                    [--tags]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_private_dns_zone_create_command_builder;
    /**
     * Delete a Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns zone delete --name
     *                                    --resource-group
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--subscription]
     *                                    [--yes]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_private_dns_zone_delete_command_builder;
    /**
     * Export a Private DNS zone as a DNS zone file.
     *
     * Syntax:
     * ```
     * az network private-dns zone export --name
     *                                    --resource-group
     *                                    [--file-name]
     *                                    [--subscription]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static export(name: string, resourceGroup: string): az_network_private_dns_zone_export_command_builder;
    /**
     * Create a Private DNS zone using a DNS zone file.
     *
     * Syntax:
     * ```
     * az network private-dns zone import --file-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     * ```
     *
     * @param {string} fileName Path to the Private DNS zone file to import.
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static import(fileName: string, name: string, resourceGroup: string): az_network_private_dns_zone_import_command_builder;
    /**
     * List Private DNS zones.
     *
     * Syntax:
     * ```
     * az network private-dns zone list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static list(): az_network_private_dns_zone_list_command_builder;
    /**
     * Get a Private DNS zone.
     *
     * Syntax:
     * ```
     * az network private-dns zone show --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_private_dns_zone_show_command_builder;
    /**
     * Update a Private DNS zone's properties. Does not modify Private DNS records or virtual network links within the zone.
     *
     * Syntax:
     * ```
     * az network private-dns zone update --name
     *                                    --resource-group
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--remove]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_private_dns_zone_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the Private DNS zone is met.
     *
     * Syntax:
     * ```
     * az network private-dns zone wait --name
     *                                  --resource-group
     *                                  [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--interval]
     *                                  [--subscription]
     *                                  [--timeout]
     *                                  [--updated]
     * ```
     *
     * @param {string} name The name of the Private DNS zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static wait(name: string, resourceGroup: string): az_network_private_dns_zone_wait_command_builder;
}
/** Manage Private DNS domains in Azure. */
export declare class az_network_private_dns {
}
/** Manage private endpoint dns zone group. */
export declare class az_network_private_endpoint_dns_zone_group {
    /**
     * Add a private endpoint dns zone into a dns zone group.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group add --endpoint-name
     *                                                --name
     *                                                --private-dns-zone
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} name Name of the private dns zone group.
     * @param {string} privateDnsZone Name or ID of the private dns zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName Name of the private dns zone.
     */
    static add(endpointName: string, name: string, privateDnsZone: string, resourceGroup: string, zoneName: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /**
     * Create a private endpoint dns zone group.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group create --endpoint-name
     *                                                   --name
     *                                                   --private-dns-zone
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} name Name of the private dns zone group.
     * @param {string} privateDnsZone Name or ID of the private dns zone.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName Name of the private dns zone.
     */
    static create(endpointName: string, name: string, privateDnsZone: string, resourceGroup: string, zoneName: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /**
     * Delete a private endpoint dns zone group.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group delete --endpoint-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} name Name of the private dns zone group.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(endpointName: string, name: string, resourceGroup: string): az_network_private_endpoint_dns_zone_group_delete_command_builder;
    /**
     * List all private endpoint dns zone groups.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group list --endpoint-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(endpointName: string, resourceGroup: string): az_network_private_endpoint_dns_zone_group_list_command_builder;
    /**
     * Remove a private endpoint dns zone into a dns zone group.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group remove --endpoint-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} name Name of the private dns zone group.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} zoneName Name of the private dns zone.
     */
    static remove(endpointName: string, name: string, resourceGroup: string, zoneName: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
    /**
     * Show a private endpoint dns zone group.
     *
     * Syntax:
     * ```
     * az network private-endpoint dns-zone-group show --endpoint-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} endpointName Name of the private endpoint.
     * @param {string} name Name of the private dns zone group.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(endpointName: string, name: string, resourceGroup: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
}
/** Manage private endpoint connections. */
export declare class az_network_private_endpoint_connection {
    /**
     * Approve a private endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-endpoint-connection approve [--description]
     *                                                [--id]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--resource-name]
     *                                                [--subscription]
     *                                                [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     * ```
     */
    static approve(): az_network_private_endpoint_connection_approve_command_builder;
    /**
     * Delete a private endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-endpoint-connection delete [--id]
     *                                               [--name]
     *                                               [--resource-group]
     *                                               [--resource-name]
     *                                               [--subscription]
     *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     *                                               [--yes]
     * ```
     */
    static delete(): az_network_private_endpoint_connection_delete_command_builder;
    /**
     * List all private endpoint connections.
     *
     * Syntax:
     * ```
     * az network private-endpoint-connection list [--id]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--subscription]
     *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     * ```
     */
    static list(): az_network_private_endpoint_connection_list_command_builder;
    /**
     * Reject a private endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-endpoint-connection reject [--description]
     *                                               [--id]
     *                                               [--name]
     *                                               [--resource-group]
     *                                               [--resource-name]
     *                                               [--subscription]
     *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     * ```
     */
    static reject(): az_network_private_endpoint_connection_reject_command_builder;
    /**
     * Show a private endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-endpoint-connection show [--id]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--resource-name]
     *                                             [--subscription]
     *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     * ```
     */
    static show(): az_network_private_endpoint_connection_show_command_builder;
}
/** Manage private endpoints. */
export declare class az_network_private_endpoint {
    /**
     * Create a private endpoint.
     *
     * Syntax:
     * ```
     * az network private-endpoint create --connection-name
     *                                    --name
     *                                    --private-connection-resource-id
     *                                    --resource-group
     *                                    --subnet
     *                                    [--group-id]
     *                                    [--group-ids]
     *                                    [--location]
     *                                    [--manual-request {false, true}]
     *                                    [--request-message]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--vnet-name]
     * ```
     *
     * @param {string} connectionName Name of the private link service connection.
     * @param {string} name Name of the private endpoint.
     * @param {string} privateConnectionResourceId The resource id of which private enpoint connect to.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} subnet Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group or subscription, please provide the ID instead of the name of the subnet.
     */
    static create(connectionName: string, name: string, privateConnectionResourceId: string, resourceGroup: string, subnet: string): az_network_private_endpoint_create_command_builder;
    /**
     * Delete a private endpoint.
     *
     * Syntax:
     * ```
     * az network private-endpoint delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static delete(): az_network_private_endpoint_delete_command_builder;
    /**
     * List private endpoints.
     *
     * Syntax:
     * ```
     * az network private-endpoint list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static list(): az_network_private_endpoint_list_command_builder;
    /**
     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
     *
     * Syntax:
     * ```
     * az network private-endpoint list-types --location
     *                                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list_types(location: string): az_network_private_endpoint_list_types_command_builder;
    /**
     * Get the details of a private endpoint.
     *
     * Syntax:
     * ```
     * az network private-endpoint show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static show(): az_network_private_endpoint_show_command_builder;
    /**
     * Update a private endpoint.
     *
     * Syntax:
     * ```
     * az network private-endpoint update [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--request-message]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     * ```
     */
    static update(): az_network_private_endpoint_update_command_builder;
}
/** Manage private link resources. */
export declare class az_network_private_link_resource {
    /**
     * List all private link resources.
     *
     * Syntax:
     * ```
     * az network private-link-resource list [--id]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     *                                       [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     * ```
     */
    static list(): az_network_private_link_resource_list_command_builder;
}
/** Manage private link service endpoint connections. */
export declare class az_network_private_link_service_connection {
    /**
     * Delete a private link service endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-link-service connection delete --name
     *                                                   --resource-group
     *                                                   --service-name
     *                                                   [--subscription]
     * ```
     *
     * @param {string} name Name of the private endpoint connection. List them by using "az network private-link-service show".
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} serviceName Name of the private link service.
     */
    static delete(name: string, resourceGroup: string, serviceName: string): az_network_private_link_service_connection_delete_command_builder;
    /**
     * Update a private link service endpoint connection.
     *
     * Syntax:
     * ```
     * az network private-link-service connection update --connection-status {Approved, Rejected, Removed}
     *                                                   --name
     *                                                   --resource-group
     *                                                   --service-name
     *                                                   [--action-required]
     *                                                   [--description]
     *                                                   [--subscription]
     * ```
     *
     * @param {'Approved' | 'Rejected' | 'Removed'} connectionStatus Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     * @param {string} name Name of the private endpoint connection. List them by using "az network private-link-service show".
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} serviceName Name of the private link service.
     */
    static update(connectionStatus: 'Approved' | 'Rejected' | 'Removed', name: string, resourceGroup: string, serviceName: string): az_network_private_link_service_connection_update_command_builder;
}
/** Manage private link services. */
export declare class az_network_private_link_service {
    /**
     * Create a private link service.
     *
     * Syntax:
     * ```
     * az network private-link-service create --lb-frontend-ip-configs
     *                                        --name
     *                                        --resource-group
     *                                        --subnet
     *                                        [--auto-approval]
     *                                        [--enable-proxy-protocol {false, true}]
     *                                        [--fqdns]
     *                                        [--lb-name]
     *                                        [--location]
     *                                        [--private-ip-address]
     *                                        [--private-ip-address-version {IPv4, IPv6}]
     *                                        [--private-ip-allocation-method {Dynamic, Static}]
     *                                        [--public-ip-address]
     *                                        [--subscription]
     *                                        [--tags]
     *                                        [--visibility]
     *                                        [--vnet-name]
     * ```
     *
     * @param {string} lbFrontendIpConfigs Space-separated list of names or IDs of load balancer frontend IP configurations to link to. If names are used, also supply `--lb-name`.
     * @param {string} name Name of the private link service.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} subnet Name or ID of subnet to use. If name provided, also supply `--vnet-name`.
     */
    static create(lbFrontendIpConfigs: string, name: string, resourceGroup: string, subnet: string): az_network_private_link_service_create_command_builder;
    /**
     * Delete a private link service.
     *
     * Syntax:
     * ```
     * az network private-link-service delete [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--subscription]
     * ```
     */
    static delete(): az_network_private_link_service_delete_command_builder;
    /**
     * List private link services.
     *
     * Syntax:
     * ```
     * az network private-link-service list [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     * ```
     */
    static list(): az_network_private_link_service_list_command_builder;
    /**
     * Get the details of a private link service.
     *
     * Syntax:
     * ```
     * az network private-link-service show [--expand]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     * ```
     */
    static show(): az_network_private_link_service_show_command_builder;
    /**
     * Update a private link service.
     *
     * Syntax:
     * ```
     * az network private-link-service update [--add]
     *                                        [--auto-approval]
     *                                        [--enable-proxy-protocol {false, true}]
     *                                        [--force-string]
     *                                        [--fqdns]
     *                                        [--ids]
     *                                        [--lb-frontend-ip-configs]
     *                                        [--lb-name]
     *                                        [--name]
     *                                        [--remove]
     *                                        [--resource-group]
     *                                        [--set]
     *                                        [--subscription]
     *                                        [--tags]
     *                                        [--visibility]
     * ```
     */
    static update(): az_network_private_link_service_update_command_builder;
}
/** Manage network profiles. */
export declare class az_network_profile {
    /**
     * Delete a network profile.
     *
     * Syntax:
     * ```
     * az network profile delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--yes]
     * ```
     */
    static delete(): az_network_profile_delete_command_builder;
    /**
     * List network profiles.
     *
     * Syntax:
     * ```
     * az network profile list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     * ```
     */
    static list(): az_network_profile_list_command_builder;
    /**
     * Get the details of a network profile.
     *
     * Syntax:
     * ```
     * az network profile show [--expand]
     *                         [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     * ```
     */
    static show(): az_network_profile_show_command_builder;
}
/** Manage public IP prefix resources. */
export declare class az_network_public_ip_prefix {
    /**
     * Create a public IP prefix resource.
     *
     * Syntax:
     * ```
     * az network public-ip prefix create --length
     *                                    --name
     *                                    --resource-group
     *                                    [--location]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--version {IPv4, IPv6}]
     *                                    [--zone {1, 2, 3}]
     * ```
     *
     * @param {string} length Length of the prefix (i.e. `XX.XX.XX.XX/<Length>`).
     * @param {string} name The name of the public IP prefix.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(length: string, name: string, resourceGroup: string): az_network_public_ip_prefix_create_command_builder;
    /**
     * Delete a public IP prefix resource.
     *
     * Syntax:
     * ```
     * az network public-ip prefix delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static delete(): az_network_public_ip_prefix_delete_command_builder;
    /**
     * List public IP prefix resources.
     *
     * Syntax:
     * ```
     * az network public-ip prefix list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static list(): az_network_public_ip_prefix_list_command_builder;
    /**
     * Get the details of a public IP prefix resource.
     *
     * Syntax:
     * ```
     * az network public-ip prefix show [--expand]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static show(): az_network_public_ip_prefix_show_command_builder;
    /**
     * Update a public IP prefix resource.
     *
     * Syntax:
     * ```
     * az network public-ip prefix update [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     * ```
     */
    static update(): az_network_public_ip_prefix_update_command_builder;
}
/** Manage public IP addresses. */
export declare class az_network_public_ip {
    /**
     * Create a public IP address.
     *
     * Syntax:
     * ```
     * az network public-ip create --name
     *                             --resource-group
     *                             [--allocation-method {Dynamic, Static}]
     *                             [--dns-name]
     *                             [--idle-timeout]
     *                             [--ip-tags]
     *                             [--location]
     *                             [--public-ip-prefix]
     *                             [--reverse-fqdn]
     *                             [--sku {Basic, Standard}]
     *                             [--subscription]
     *                             [--tags]
     *                             [--version {IPv4, IPv6}]
     *                             [--zone {1, 2, 3}]
     * ```
     *
     * @param {string} name The name of the public IP address.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_public_ip_create_command_builder;
    /**
     * Delete a public IP address.
     *
     * Syntax:
     * ```
     * az network public-ip delete [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     * ```
     */
    static delete(): az_network_public_ip_delete_command_builder;
    /**
     * List public IP addresses.
     *
     * Syntax:
     * ```
     * az network public-ip list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     * ```
     */
    static list(): az_network_public_ip_list_command_builder;
    /**
     * Get the details of a public IP address.
     *
     * Syntax:
     * ```
     * az network public-ip show [--expand]
     *                           [--ids]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     * ```
     */
    static show(): az_network_public_ip_show_command_builder;
    /**
     * Update a public IP address.
     *
     * Syntax:
     * ```
     * az network public-ip update [--add]
     *                             [--allocation-method {Dynamic, Static}]
     *                             [--dns-name]
     *                             [--force-string]
     *                             [--idle-timeout]
     *                             [--ids]
     *                             [--ip-tags]
     *                             [--name]
     *                             [--public-ip-prefix]
     *                             [--remove]
     *                             [--resource-group]
     *                             [--reverse-fqdn]
     *                             [--set]
     *                             [--sku {Basic, Standard}]
     *                             [--subscription]
     *                             [--tags]
     *                             [--version {IPv4, IPv6}]
     * ```
     */
    static update(): az_network_public_ip_update_command_builder;
}
/** Manage rules in a route filter. */
export declare class az_network_route_filter_rule {
    /**
     * Create a rule in a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter rule create --access {Allow, Deny}
     *                                     --communities
     *                                     --filter-name
     *                                     --name
     *                                     --resource-group
     *                                     [--location]
     *                                     [--subscription]
     * ```
     *
     * @param {'Allow' | 'Deny'} access The access type of the rule.
     * @param {string} communities Space-separated list of border gateway protocol (BGP) community values to filter on.
     * @param {string} filterName Name of the route filter.
     * @param {string} name Name of the route filter rule.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(access: 'Allow' | 'Deny', communities: string, filterName: string, name: string, resourceGroup: string): az_network_route_filter_rule_create_command_builder;
    /**
     * Delete a rule from a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter rule delete [--filter-name]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     * ```
     */
    static delete(): az_network_route_filter_rule_delete_command_builder;
    /**
     * List rules in a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter rule list --filter-name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} filterName Name of the route filter.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(filterName: string, resourceGroup: string): az_network_route_filter_rule_list_command_builder;
    /**
     * Gets all the available BGP service communities.
     *
     * Syntax:
     * ```
     * az network route-filter rule list-service-communities [--subscription]
     * ```
     */
    static list_service_communities(): az_network_route_filter_rule_list_service_communities_command_builder;
    /**
     * Get the details of a rule in a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter rule show [--filter-name]
     *                                   [--ids]
     *                                   [--name]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     * ```
     */
    static show(): az_network_route_filter_rule_show_command_builder;
    /**
     * Update a rule in a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter rule update [--add]
     *                                     [--filter-name]
     *                                     [--force-string]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--set]
     *                                     [--subscription]
     * ```
     */
    static update(): az_network_route_filter_rule_update_command_builder;
}
/** Manage route filters. */
export declare class az_network_route_filter {
    /**
     * Create a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter create --name
     *                                --resource-group
     *                                [--location]
     *                                [--subscription]
     *                                [--tags]
     * ```
     *
     * @param {string} name Name of the route filter.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_route_filter_create_command_builder;
    /**
     * Delete a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter delete --name
     *                                --resource-group
     *                                [--subscription]
     * ```
     *
     * @param {string} name Name of the route filter.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_route_filter_delete_command_builder;
    /**
     * List route filters.
     *
     * Syntax:
     * ```
     * az network route-filter list [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     * ```
     */
    static list(): az_network_route_filter_list_command_builder;
    /**
     * Get the details of a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter show --name
     *                              --resource-group
     *                              [--expand {peerings}]
     *                              [--query-examples]
     *                              [--subscription]
     * ```
     *
     * @param {string} name Name of the route filter.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_route_filter_show_command_builder;
    /**
     * Update a route filter.
     *
     * Syntax:
     * ```
     * az network route-filter update --name
     *                                --resource-group
     *                                [--add]
     *                                [--force-string]
     *                                [--remove]
     *                                [--set]
     *                                [--subscription]
     * ```
     *
     * @param {string} name Name of the route filter.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_route_filter_update_command_builder;
}
/** Manage routes in a route table. */
export declare class az_network_route_table_route {
    /**
     * Create a route in a route table.
     *
     * Syntax:
     * ```
     * az network route-table route create --address-prefix
     *                                     --name
     *                                     --next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}
     *                                     --resource-group
     *                                     --route-table-name
     *                                     [--next-hop-ip-address]
     *                                     [--subscription]
     * ```
     *
     * @param {string} addressPrefix The destination CIDR to which the route applies.
     * @param {string} name Route name.
     * @param {'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal'} nextHopType The type of Azure hop the packet should be sent to.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} routeTableName Route table name.
     */
    static create(addressPrefix: string, name: string, nextHopType: 'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal', resourceGroup: string, routeTableName: string): az_network_route_table_route_create_command_builder;
    /**
     * Delete a route from a route table.
     *
     * Syntax:
     * ```
     * az network route-table route delete [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--route-table-name]
     *                                     [--subscription]
     * ```
     */
    static delete(): az_network_route_table_route_delete_command_builder;
    /**
     * List routes in a route table.
     *
     * Syntax:
     * ```
     * az network route-table route list --resource-group
     *                                   --route-table-name
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} routeTableName Route table name.
     */
    static list(resourceGroup: string, routeTableName: string): az_network_route_table_route_list_command_builder;
    /**
     * Get the details of a route in a route table.
     *
     * Syntax:
     * ```
     * az network route-table route show [--ids]
     *                                   [--name]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--route-table-name]
     *                                   [--subscription]
     * ```
     */
    static show(): az_network_route_table_route_show_command_builder;
    /**
     * Update a route in a route table.
     *
     * Syntax:
     * ```
     * az network route-table route update [--add]
     *                                     [--address-prefix]
     *                                     [--force-string]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--next-hop-ip-address]
     *                                     [--next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--route-table-name]
     *                                     [--set]
     *                                     [--subscription]
     * ```
     */
    static update(): az_network_route_table_route_update_command_builder;
}
/** Manage route tables. */
export declare class az_network_route_table {
    /**
     * Create a route table.
     *
     * Syntax:
     * ```
     * az network route-table create --name
     *                               --resource-group
     *                               [--disable-bgp-route-propagation {false, true}]
     *                               [--location]
     *                               [--subscription]
     *                               [--tags]
     * ```
     *
     * @param {string} name Name of the route table.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_route_table_create_command_builder;
    /**
     * Delete a route table.
     *
     * Syntax:
     * ```
     * az network route-table delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static delete(): az_network_route_table_delete_command_builder;
    /**
     * List route tables.
     *
     * Syntax:
     * ```
     * az network route-table list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     * ```
     */
    static list(): az_network_route_table_list_command_builder;
    /**
     * Get the details of a route table.
     *
     * Syntax:
     * ```
     * az network route-table show [--expand]
     *                             [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     * ```
     */
    static show(): az_network_route_table_show_command_builder;
    /**
     * Update a route table.
     *
     * Syntax:
     * ```
     * az network route-table update [--add]
     *                               [--disable-bgp-route-propagation {false, true}]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     *                               [--tags]
     * ```
     */
    static update(): az_network_route_table_update_command_builder;
}
/** Manage Azure security partner provider. */
export declare class az_network_security_partner_provider {
    /**
     * Create a Azure security partner provider.
     *
     * Syntax:
     * ```
     * az network security-partner-provider create --name
     *                                             --provider {Checkpoint, IBoss, ZScaler}
     *                                             --resource-group
     *                                             --vhub
     *                                             [--location]
     *                                             [--subscription]
     *                                             [--tags]
     * ```
     *
     * @param {string} name Name of the Security Partner Provider.
     * @param {'Checkpoint' | 'IBoss' | 'ZScaler'} provider The security provider name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vhub Name or ID of the virtual hub to which the Security Partner Provider belongs.
     */
    static create(name: string, provider: 'Checkpoint' | 'IBoss' | 'ZScaler', resourceGroup: string, vhub: string): az_network_security_partner_provider_create_command_builder;
    /**
     * Delete a Azure security partner provider.
     *
     * Syntax:
     * ```
     * az network security-partner-provider delete --name
     *                                             --resource-group
     *                                             [--subscription]
     * ```
     *
     * @param {string} name Name of the Security Partner Provider.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_security_partner_provider_delete_command_builder;
    /**
     * List all Azure security partner provider.
     *
     * Syntax:
     * ```
     * az network security-partner-provider list [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static list(): az_network_security_partner_provider_list_command_builder;
    /**
     * Show a Azure security partner provider.
     *
     * Syntax:
     * ```
     * az network security-partner-provider show --name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     * ```
     *
     * @param {string} name Name of the Security Partner Provider.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_security_partner_provider_show_command_builder;
    /**
     * Update a Azure security partner provider.
     *
     * Syntax:
     * ```
     * az network security-partner-provider update --name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--provider {Checkpoint, IBoss, ZScaler}]
     *                                             [--remove]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--tags]
     *                                             [--vhub]
     * ```
     *
     * @param {string} name Name of the Security Partner Provider.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_security_partner_provider_update_command_builder;
}
/** Manage service endpoint policy definitions. */
export declare class az_network_service_endpoint_policy_definition {
    /**
     * Create a service endpoint policy definition.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy-definition create --name
     *                                                      --policy-name
     *                                                      --resource-group
     *                                                      --service
     *                                                      --service-resources
     *                                                      [--description]
     *                                                      [--subscription]
     * ```
     *
     * @param {string} name Name of the service endpoint policy definition.
     * @param {string} policyName Name of the service endpoint policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} service Service name the policy definition applies to.
     * @param {string} serviceResources Space-separated list of service resources the definition applies to.
     */
    static create(name: string, policyName: string, resourceGroup: string, service: string, serviceResources: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /**
     * Delete a service endpoint policy definition.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy-definition delete [--ids]
     *                                                      [--name]
     *                                                      [--policy-name]
     *                                                      [--resource-group]
     *                                                      [--subscription]
     * ```
     */
    static delete(): az_network_service_endpoint_policy_definition_delete_command_builder;
    /**
     * List service endpoint policy definitions.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy-definition list --policy-name
     *                                                    --resource-group
     *                                                    [--query-examples]
     *                                                    [--subscription]
     * ```
     *
     * @param {string} policyName Name of the service endpoint policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(policyName: string, resourceGroup: string): az_network_service_endpoint_policy_definition_list_command_builder;
    /**
     * Get the details of a service endpoint policy definition.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy-definition show [--ids]
     *                                                    [--name]
     *                                                    [--policy-name]
     *                                                    [--query-examples]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     * ```
     */
    static show(): az_network_service_endpoint_policy_definition_show_command_builder;
    /**
     * Update a service endpoint policy definition.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy-definition update [--add]
     *                                                      [--description]
     *                                                      [--force-string]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--policy-name]
     *                                                      [--remove]
     *                                                      [--resource-group]
     *                                                      [--service]
     *                                                      [--service-resources]
     *                                                      [--set]
     *                                                      [--subscription]
     * ```
     */
    static update(): az_network_service_endpoint_policy_definition_update_command_builder;
}
/** Manage service endpoint policies. */
export declare class az_network_service_endpoint_policy {
    /**
     * Create a service endpoint policy.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy create --name
     *                                           --resource-group
     *                                           [--location]
     *                                           [--subscription]
     *                                           [--tags]
     * ```
     *
     * @param {string} name Name of the service endpoint policy.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_service_endpoint_policy_create_command_builder;
    /**
     * Delete a service endpoint policy.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy delete [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static delete(): az_network_service_endpoint_policy_delete_command_builder;
    /**
     * List service endpoint policies.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy list [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static list(): az_network_service_endpoint_policy_list_command_builder;
    /**
     * Get the details of a service endpoint policy.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static show(): az_network_service_endpoint_policy_show_command_builder;
    /**
     * Update a service endpoint policy.
     *
     * Syntax:
     * ```
     * az network service-endpoint policy update [--add]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--set]
     *                                           [--subscription]
     *                                           [--tags]
     * ```
     */
    static update(): az_network_service_endpoint_policy_update_command_builder;
}
/** Manage policies related to service endpoints. */
export declare class az_network_service_endpoint {
    /**
     * List what values of endpoint services are available for use.
     *
     * Syntax:
     * ```
     * az network service-endpoint list --location
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(location: string): az_network_service_endpoint_list_command_builder;
}
/** Manage Azure Traffic Manager end points. */
export declare class az_network_traffic_manager_endpoint {
    /**
     * Create a traffic manager endpoint.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint create --name
     *                                            --profile-name
     *                                            --resource-group
     *                                            --type {azureEndpoints, externalEndpoints, nestedEndpoints}
     *                                            [--custom-headers]
     *                                            [--endpoint-location]
     *                                            [--endpoint-monitor-status]
     *                                            [--endpoint-status {Disabled, Enabled}]
     *                                            [--geo-mapping]
     *                                            [--min-child-endpoints]
     *                                            [--priority]
     *                                            [--subnets]
     *                                            [--subscription]
     *                                            [--target]
     *                                            [--target-resource-id]
     *                                            [--weight]
     * ```
     *
     * @param {string} name Endpoint name.
     * @param {string} profileName Name of parent profile.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'} type Endpoint type.
     */
    static create(name: string, profileName: string, resourceGroup: string, type: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_create_command_builder;
    /**
     * Delete a traffic manager endpoint.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint delete [--ids]
     *                                            [--name]
     *                                            [--profile-name]
     *                                            [--resource-group]
     *                                            [--subscription]
     *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     * ```
     */
    static delete(): az_network_traffic_manager_endpoint_delete_command_builder;
    /**
     * List traffic manager endpoints.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint list --profile-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     * ```
     *
     * @param {string} profileName Name of parent profile.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(profileName: string, resourceGroup: string): az_network_traffic_manager_endpoint_list_command_builder;
    /**
     * Get the details of a traffic manager endpoint.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint show [--ids]
     *                                          [--name]
     *                                          [--profile-name]
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     * ```
     */
    static show(): az_network_traffic_manager_endpoint_show_command_builder;
    /**
     * Get the default geographic hierarchy used by the geographic traffic routing method.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint show-geographic-hierarchy [--subscription]
     * ```
     */
    static show_geographic_hierarchy(): az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_builder;
    /**
     * Update a traffic manager endpoint.
     *
     * Syntax:
     * ```
     * az network traffic-manager endpoint update [--add]
     *                                            [--custom-headers]
     *                                            [--endpoint-location]
     *                                            [--endpoint-monitor-status]
     *                                            [--endpoint-status {Disabled, Enabled}]
     *                                            [--force-string]
     *                                            [--geo-mapping]
     *                                            [--ids]
     *                                            [--min-child-endpoints]
     *                                            [--name]
     *                                            [--priority]
     *                                            [--profile-name]
     *                                            [--remove]
     *                                            [--resource-group]
     *                                            [--set]
     *                                            [--subnets]
     *                                            [--subscription]
     *                                            [--target]
     *                                            [--target-resource-id]
     *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     *                                            [--weight]
     * ```
     */
    static update(): az_network_traffic_manager_endpoint_update_command_builder;
}
/** Manage Azure Traffic Manager profiles. */
export declare class az_network_traffic_manager_profile {
    /**
     * Check the availability of a relative DNS name.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile check-dns --name
     *                                              [--subscription]
     * ```
     *
     * @param {string} name DNS prefix to verify availability for.
     */
    static check_dns(name: string): az_network_traffic_manager_profile_check_dns_command_builder;
    /**
     * Create a traffic manager profile.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile create --name
     *                                           --resource-group
     *                                           --routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}
     *                                           --unique-dns-name
     *                                           [--custom-headers]
     *                                           [--interval]
     *                                           [--max-failures]
     *                                           [--path]
     *                                           [--port]
     *                                           [--protocol {HTTP, HTTPS, TCP}]
     *                                           [--status {Disabled, Enabled}]
     *                                           [--status-code-ranges]
     *                                           [--subscription]
     *                                           [--tags]
     *                                           [--timeout]
     *                                           [--ttl]
     * ```
     *
     * @param {string} name Traffic manager profile name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted'} routingMethod Routing method.
     * @param {string} uniqueDnsName Relative DNS name for the traffic manager profile. Resulting FQDN will be `<unique-dns-name>.trafficmanager.net` and must be globally unique.
     */
    static create(name: string, resourceGroup: string, routingMethod: 'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted', uniqueDnsName: string): az_network_traffic_manager_profile_create_command_builder;
    /**
     * Delete a traffic manager profile.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile delete [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static delete(): az_network_traffic_manager_profile_delete_command_builder;
    /**
     * List traffic manager profiles.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile list [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static list(): az_network_traffic_manager_profile_list_command_builder;
    /**
     * Get the details of a traffic manager profile.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     * ```
     */
    static show(): az_network_traffic_manager_profile_show_command_builder;
    /**
     * Update a traffic manager profile.
     *
     * Syntax:
     * ```
     * az network traffic-manager profile update [--add]
     *                                           [--custom-headers]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--interval]
     *                                           [--max-failures]
     *                                           [--name]
     *                                           [--path]
     *                                           [--port]
     *                                           [--protocol {HTTP, HTTPS, TCP}]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}]
     *                                           [--set]
     *                                           [--status {Disabled, Enabled}]
     *                                           [--status-code-ranges]
     *                                           [--subscription]
     *                                           [--tags]
     *                                           [--timeout]
     *                                           [--ttl]
     * ```
     */
    static update(): az_network_traffic_manager_profile_update_command_builder;
}
/** Manage the routing of incoming traffic. */
export declare class az_network_traffic_manager {
}
/** Manage Azure Network Virtual Appliance Site. */
export declare class az_network_virtual_appliance_site {
    /**
     * Create an Azure network virtual appliance site.
     *
     * Syntax:
     * ```
     * az network virtual-appliance site create --address-prefix
     *                                          --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--allow {false, true}]
     *                                          [--default {false, true}]
     *                                          [--optimize {false, true}]
     *                                          [--subscription]
     * ```
     *
     * @param {string} addressPrefix Address Prefix of Network Virtual Appliance Site.
     * @param {string} applianceName The name of Network Virtual Appliance.
     * @param {string} name The name of Network Virtual Appliance Site.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(addressPrefix: string, applianceName: string, name: string, resourceGroup: string): az_network_virtual_appliance_site_create_command_builder;
    /**
     * Delete an Azure network virtual appliance site.
     *
     * Syntax:
     * ```
     * az network virtual-appliance site delete --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--subscription]
     *                                          [--yes]
     * ```
     *
     * @param {string} applianceName The name of Network Virtual Appliance.
     * @param {string} name The name of Network Virtual Appliance Site.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(applianceName: string, name: string, resourceGroup: string): az_network_virtual_appliance_site_delete_command_builder;
    /**
     * List all Azure network virtual appliance site.
     *
     * Syntax:
     * ```
     * az network virtual-appliance site list --appliance-name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     * ```
     *
     * @param {string} applianceName The name of Network Virtual Appliance.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(applianceName: string, resourceGroup: string): az_network_virtual_appliance_site_list_command_builder;
    /**
     * Show the detail of an Azure network virtual appliance site.
     *
     * Syntax:
     * ```
     * az network virtual-appliance site show --appliance-name
     *                                        --name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     * ```
     *
     * @param {string} applianceName The name of Network Virtual Appliance.
     * @param {string} name The name of Network Virtual Appliance Site.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(applianceName: string, name: string, resourceGroup: string): az_network_virtual_appliance_site_show_command_builder;
    /**
     * Update an Azure network virtual appliance site.
     *
     * Syntax:
     * ```
     * az network virtual-appliance site update --address-prefix
     *                                          --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--add]
     *                                          [--allow {false, true}]
     *                                          [--default {false, true}]
     *                                          [--force-string]
     *                                          [--optimize {false, true}]
     *                                          [--remove]
     *                                          [--set]
     *                                          [--subscription]
     * ```
     *
     * @param {string} addressPrefix Address Prefix of Network Virtual Appliance Site.
     * @param {string} applianceName The name of Network Virtual Appliance.
     * @param {string} name The name of Network Virtual Appliance Site.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(addressPrefix: string, applianceName: string, name: string, resourceGroup: string): az_network_virtual_appliance_site_update_command_builder;
}
/** Manage Azure Network Virtual Appliance Sku. */
export declare class az_network_virtual_appliance_sku {
    /**
     * List all Azure network virtual appliance sku.
     *
     * Syntax:
     * ```
     * az network virtual-appliance sku list [--query-examples]
     *                                       [--subscription]
     * ```
     */
    static list(): az_network_virtual_appliance_sku_list_command_builder;
    /**
     * Show the detail of an Azure network virtual appliance sku.
     *
     * Syntax:
     * ```
     * az network virtual-appliance sku show --name
     *                                       [--query-examples]
     *                                       [--subscription]
     * ```
     *
     * @param {string} name The name of Network Virtual Appliance SKU.
     */
    static show(name: string): az_network_virtual_appliance_sku_show_command_builder;
}
/** Manage Azure Network Virtual Appliance. */
export declare class az_network_virtual_appliance {
    /**
     * Create an Azure network virtual appliance.
     *
     * Syntax:
     * ```
     * az network virtual-appliance create --name
     *                                     --resource-group
     *                                     --scale-unit
     *                                     --vendor
     *                                     --version
     *                                     --vhub
     *                                     [--asn]
     *                                     [--boot-blobs]
     *                                     [--cloud-blobs]
     *                                     [--cloud-init-config]
     *                                     [--location]
     *                                     [--subscription]
     *                                     [--tags]
     * ```
     *
     * @param {string} name The name of Network Virtual Appliance.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} scaleUnit Virtual Appliance Scale Unit.
     * @param {string} vendor Virtual Appliance Vendor.
     * @param {string} version Virtual Appliance Version.
     * @param {string} vhub Name or ID of the virtual hub to which the Security Partner Provider belongs.
     */
    static create(name: string, resourceGroup: string, scaleUnit: string, vendor: string, version: string, vhub: string): az_network_virtual_appliance_create_command_builder;
    /**
     * Delete an Azure network virtual appliance.
     *
     * Syntax:
     * ```
     * az network virtual-appliance delete --name
     *                                     --resource-group
     *                                     [--subscription]
     *                                     [--yes]
     * ```
     *
     * @param {string} name The name of Network Virtual Appliance.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_virtual_appliance_delete_command_builder;
    /**
     * List all Azure network virtual appliance.
     *
     * Syntax:
     * ```
     * az network virtual-appliance list [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     * ```
     */
    static list(): az_network_virtual_appliance_list_command_builder;
    /**
     * Show the detail of an Azure network virtual appliance.
     *
     * Syntax:
     * ```
     * az network virtual-appliance show --name
     *                                   --resource-group
     *                                   [--expand]
     *                                   [--query-examples]
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of Network Virtual Appliance.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_virtual_appliance_show_command_builder;
    /**
     * Update an Azure network virtual appliance.
     *
     * Syntax:
     * ```
     * az network virtual-appliance update --name
     *                                     --resource-group
     *                                     [--add]
     *                                     [--asn]
     *                                     [--cloud-init-config]
     *                                     [--force-string]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     * ```
     *
     * @param {string} name The name of Network Virtual Appliance.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_virtual_appliance_update_command_builder;
}
/** Manage peering connections between Azure Virtual Networks. */
export declare class az_network_vnet_peering {
    /**
     * Create a virtual network peering connection.
     *
     * Syntax:
     * ```
     * az network vnet peering create --name
     *                                --remote-vnet
     *                                --resource-group
     *                                --vnet-name
     *                                [--allow-forwarded-traffic]
     *                                [--allow-gateway-transit]
     *                                [--allow-vnet-access]
     *                                [--subscription]
     *                                [--use-remote-gateways]
     * ```
     *
     * @param {string} name The name of the VNet peering.
     * @param {string} remoteVnet Resource ID or name of the remote VNet.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetName The virtual network (VNet) name.
     */
    static create(name: string, remoteVnet: string, resourceGroup: string, vnetName: string): az_network_vnet_peering_create_command_builder;
    /**
     * Delete a peering.
     *
     * Syntax:
     * ```
     * az network vnet peering delete [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--vnet-name]
     * ```
     */
    static delete(): az_network_vnet_peering_delete_command_builder;
    /**
     * List peerings.
     *
     * Syntax:
     * ```
     * az network vnet peering list --resource-group
     *                              --vnet-name
     *                              [--query-examples]
     *                              [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetName The virtual network (VNet) name.
     */
    static list(resourceGroup: string, vnetName: string): az_network_vnet_peering_list_command_builder;
    /**
     * Show details of a peering.
     *
     * Syntax:
     * ```
     * az network vnet peering show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--vnet-name]
     * ```
     */
    static show(): az_network_vnet_peering_show_command_builder;
    /**
     * Update a peering.
     *
     * Syntax:
     * ```
     * az network vnet peering update [--add]
     *                                [--force-string]
     *                                [--ids]
     *                                [--name]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--set]
     *                                [--subscription]
     *                                [--vnet-name]
     * ```
     */
    static update(): az_network_vnet_peering_update_command_builder;
}
/** Manage subnets in an Azure Virtual Network. */
export declare class az_network_vnet_subnet {
    /**
     * Create a subnet and associate an existing NSG and route table.
     *
     * Syntax:
     * ```
     * az network vnet subnet create --address-prefixes
     *                               --name
     *                               --resource-group
     *                               --vnet-name
     *                               [--defer]
     *                               [--delegations]
     *                               [--disable-private-endpoint-network-policies {false, true}]
     *                               [--disable-private-link-service-network-policies {false, true}]
     *                               [--nat-gateway]
     *                               [--network-security-group]
     *                               [--route-table]
     *                               [--service-endpoint-policy]
     *                               [--service-endpoints]
     *                               [--subscription]
     * ```
     *
     * @param {string} addressPrefixes Space-separated list of address prefixes in CIDR format.
     * @param {string} name The subnet name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetName The virtual network (VNet) name.
     */
    static create(addressPrefixes: string, name: string, resourceGroup: string, vnetName: string): az_network_vnet_subnet_create_command_builder;
    /**
     * Delete a subnet.
     *
     * Syntax:
     * ```
     * az network vnet subnet delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--vnet-name]
     * ```
     */
    static delete(): az_network_vnet_subnet_delete_command_builder;
    /**
     * List the subnets in a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet subnet list --resource-group
     *                             --vnet-name
     *                             [--query-examples]
     *                             [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetName The virtual network (VNet) name.
     */
    static list(resourceGroup: string, vnetName: string): az_network_vnet_subnet_list_command_builder;
    /**
     * List the services available for subnet delegation.
     *
     * Syntax:
     * ```
     * az network vnet subnet list-available-delegations [--location]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     * ```
     */
    static list_available_delegations(): az_network_vnet_subnet_list_available_delegations_command_builder;
    /**
     * Show details of a subnet.
     *
     * Syntax:
     * ```
     * az network vnet subnet show [--expand]
     *                             [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--vnet-name]
     * ```
     */
    static show(): az_network_vnet_subnet_show_command_builder;
    /**
     * Update a subnet.
     *
     * Syntax:
     * ```
     * az network vnet subnet update [--add]
     *                               [--address-prefixes]
     *                               [--delegations]
     *                               [--disable-private-endpoint-network-policies {false, true}]
     *                               [--disable-private-link-service-network-policies {false, true}]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--nat-gateway]
     *                               [--network-security-group]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--route-table]
     *                               [--service-endpoint-policy]
     *                               [--service-endpoints]
     *                               [--set]
     *                               [--subscription]
     *                               [--vnet-name]
     * ```
     */
    static update(): az_network_vnet_subnet_update_command_builder;
}
/** Manage AAD(Azure Active Directory) authentication of a virtual network gateway. */
export declare class az_network_vnet_gateway_aad {
    /**
     * Assign/Update AAD(Azure Active Directory) authentication to a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway aad assign --audience
     *                                    --gateway-name
     *                                    --issuer
     *                                    --resource-group
     *                                    --tenant
     *                                    [--no-wait]
     *                                    [--subscription]
     * ```
     *
     * @param {string} audience The AADAudience ID of the VirtualNetworkGateway.
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} issuer The AADIssuer URI of the VirtualNetworkGateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} tenant The AADTenant URI of the VirtualNetworkGateway.
     */
    static assign(audience: string, gatewayName: string, issuer: string, resourceGroup: string, tenant: string): az_network_vnet_gateway_aad_assign_command_builder;
    /**
     * Remove AAD(Azure Active Directory) authentication from a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway aad remove --gateway-name
     *                                    --resource-group
     *                                    [--no-wait]
     *                                    [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static remove(gatewayName: string, resourceGroup: string): az_network_vnet_gateway_aad_remove_command_builder;
    /**
     * Show AAD(Azure Active Directory) authentication of a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway aad show --gateway-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(gatewayName: string, resourceGroup: string): az_network_vnet_gateway_aad_show_command_builder;
}
/** Manage virtual network gateway IPSec policies. */
export declare class az_network_vnet_gateway_ipsec_policy {
    /**
     * Add a virtual network gateway IPSec policy.
     *
     * Syntax:
     * ```
     * az network vnet-gateway ipsec-policy add --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                          --gateway-name
     *                                          --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                          --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                          --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                          --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                          --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                          --resource-group
     *                                          --sa-lifetime
     *                                          --sa-max-size
     *                                          [--no-wait]
     *                                          [--subscription]
     * ```
     *
     * @param {'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'} dhGroup Required. The DH Group used in IKE Phase 1 for initial SA.
     * @param {string} gatewayName Virtual network gateway name.
     * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'} ikeEncryption Required. The IKE encryption algorithm (IKE phase 2).
     * @param {'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'} ikeIntegrity Required. The IKE integrity algorithm (IKE phase 2).
     * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'} ipsecEncryption Required. The IPSec encryption algorithm (IKE phase 1).
     * @param {'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'} ipsecIntegrity Required. The IPSec integrity algorithm (IKE phase 1).
     * @param {'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'} pfsGroup Required. The Pfs Group used in IKE Phase 2 for new child SA.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} saLifetime Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
     * @param {string} saMaxSize Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
     */
    static add(dhGroup: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None', gatewayName: string, ikeEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256', ikeIntegrity: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384', ipsecEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None', ipsecIntegrity: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256', pfsGroup: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM', resourceGroup: string, saLifetime: string, saMaxSize: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /**
     * Delete all IPsec policies on a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway ipsec-policy clear --gateway-name
     *                                            --resource-group
     *                                            [--no-wait]
     *                                            [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static clear(gatewayName: string, resourceGroup: string): az_network_vnet_gateway_ipsec_policy_clear_command_builder;
    /**
     * List IPSec policies associated with a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway ipsec-policy list --gateway-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(gatewayName: string, resourceGroup: string): az_network_vnet_gateway_ipsec_policy_list_command_builder;
}
/** Manage revoked certificates in a virtual network gateway. */
export declare class az_network_vnet_gateway_revoked_cert {
    /**
     * Revoke a certificate.
     *
     * Syntax:
     * ```
     * az network vnet-gateway revoked-cert create --gateway-name
     *                                             --name
     *                                             --resource-group
     *                                             --thumbprint
     *                                             [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} name Root certificate name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} thumbprint Certificate thumbprint.
     */
    static create(gatewayName: string, name: string, resourceGroup: string, thumbprint: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
    /**
     * Delete a revoked certificate.
     *
     * Syntax:
     * ```
     * az network vnet-gateway revoked-cert delete --gateway-name
     *                                             --name
     *                                             --resource-group
     *                                             [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} name Root certificate name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(gatewayName: string, name: string, resourceGroup: string): az_network_vnet_gateway_revoked_cert_delete_command_builder;
}
/** Manage root certificates of a virtual network gateway. */
export declare class az_network_vnet_gateway_root_cert {
    /**
     * Upload a root certificate.
     *
     * Syntax:
     * ```
     * az network vnet-gateway root-cert create --gateway-name
     *                                          --name
     *                                          --public-cert-data
     *                                          --resource-group
     *                                          [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} name Root certificate name.
     * @param {string} publicCertData Base64 contents of the root certificate file or file path.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(gatewayName: string, name: string, publicCertData: string, resourceGroup: string): az_network_vnet_gateway_root_cert_create_command_builder;
    /**
     * Delete a root certificate.
     *
     * Syntax:
     * ```
     * az network vnet-gateway root-cert delete --gateway-name
     *                                          --name
     *                                          --resource-group
     *                                          [--subscription]
     * ```
     *
     * @param {string} gatewayName Virtual network gateway name.
     * @param {string} name Root certificate name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(gatewayName: string, name: string, resourceGroup: string): az_network_vnet_gateway_root_cert_delete_command_builder;
}
/** Download a VPN client configuration required to connect to Azure via point-to-site. */
export declare class az_network_vnet_gateway_vpn_client {
    /**
     * Generate VPN client configuration.
     *
     * Syntax:
     * ```
     * az network vnet-gateway vpn-client generate [--authentication-method {EAPMSCHAPv2, EAPTLS}]
     *                                             [--client-root-certificates]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--processor-architecture {Amd64, X86}]
     *                                             [--radius-server-auth-certificate]
     *                                             [--resource-group]
     *                                             [--subscription]
     *                                             [--use-legacy {false, true}]
     * ```
     */
    static generate(): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /**
     * Retrieve a pre-generated VPN client configuration.
     *
     * Syntax:
     * ```
     * az network vnet-gateway vpn-client show-url [--ids]
     *                                             [--name]
     *                                             [--resource-group]
     *                                             [--subscription]
     * ```
     */
    static show_url(): az_network_vnet_gateway_vpn_client_show_url_command_builder;
}
/** Use an Azure Virtual Network Gateway to establish secure, cross-premises connectivity. */
export declare class az_network_vnet_gateway {
    /**
     * Create a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway create --name
     *                                --public-ip-addresses
     *                                --resource-group
     *                                --vnet
     *                                [--address-prefixes]
     *                                [--asn]
     *                                [--bgp-peering-address]
     *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
     *                                [--custom-routes]
     *                                [--gateway-default-site]
     *                                [--gateway-type {ExpressRoute, Vpn}]
     *                                [--location]
     *                                [--no-wait]
     *                                [--peer-weight]
     *                                [--radius-secret]
     *                                [--radius-server]
     *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--vpn-gateway-generation {Generation1, Generation2}]
     *                                [--vpn-type {PolicyBased, RouteBased}]
     * ```
     *
     * @param {string} name Name of the VNet gateway.
     * @param {string} publicIpAddresses Specify a single public IP (name or ID) for an active-standby gateway. Specify two space-separated public IPs for an active-active gateway.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnet Name or ID of an existing virtual network which has a subnet named 'GatewaySubnet'.
     */
    static create(name: string, publicIpAddresses: string, resourceGroup: string, vnet: string): az_network_vnet_gateway_create_command_builder;
    /**
     * Delete a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway delete [--ids]
     *                                [--name]
     *                                [--no-wait]
     *                                [--resource-group]
     *                                [--subscription]
     * ```
     */
    static delete(): az_network_vnet_gateway_delete_command_builder;
    /**
     * List virtual network gateways.
     *
     * Syntax:
     * ```
     * az network vnet-gateway list --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(resourceGroup: string): az_network_vnet_gateway_list_command_builder;
    /**
     * List the routes of a virtual network gateway advertised to the specified peer.
     *
     * Syntax:
     * ```
     * az network vnet-gateway list-advertised-routes --peer
     *                                                [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     * ```
     *
     * @param {string} peer The IP address of the peer.
     */
    static list_advertised_routes(peer: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
    /**
     * Retrieve the status of BGP peers.
     *
     * Syntax:
     * ```
     * az network vnet-gateway list-bgp-peer-status [--ids]
     *                                              [--name]
     *                                              [--peer]
     *                                              [--resource-group]
     *                                              [--subscription]
     * ```
     */
    static list_bgp_peer_status(): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
    /**
     * This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.
     *
     * Syntax:
     * ```
     * az network vnet-gateway list-learned-routes [--ids]
     *                                             [--name]
     *                                             [--resource-group]
     *                                             [--subscription]
     * ```
     */
    static list_learned_routes(): az_network_vnet_gateway_list_learned_routes_command_builder;
    /**
     * Reset a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway reset [--gateway-vip]
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     * ```
     */
    static reset(): az_network_vnet_gateway_reset_command_builder;
    /**
     * Get the details of a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     * ```
     */
    static show(): az_network_vnet_gateway_show_command_builder;
    /**
     * Update a virtual network gateway.
     *
     * Syntax:
     * ```
     * az network vnet-gateway update [--add]
     *                                [--address-prefixes]
     *                                [--asn]
     *                                [--bgp-peering-address]
     *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
     *                                [--custom-routes]
     *                                [--enable-bgp {false, true}]
     *                                [--force-string]
     *                                [--gateway-default-site]
     *                                [--gateway-type {ExpressRoute, Vpn}]
     *                                [--ids]
     *                                [--name]
     *                                [--no-wait]
     *                                [--peer-weight]
     *                                [--public-ip-addresses]
     *                                [--radius-secret]
     *                                [--radius-server]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--set]
     *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--vnet]
     *                                [--vpn-type {PolicyBased, RouteBased}]
     * ```
     */
    static update(): az_network_vnet_gateway_update_command_builder;
    /**
     * Place the CLI in a waiting state until a condition of the virtual network gateway is met.
     *
     * Syntax:
     * ```
     * az network vnet-gateway wait [--created]
     *                              [--custom]
     *                              [--deleted]
     *                              [--exists]
     *                              [--ids]
     *                              [--interval]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--timeout]
     *                              [--updated]
     * ```
     */
    static wait(): az_network_vnet_gateway_wait_command_builder;
}
/** Manage Azure Virtual Networks. */
export declare class az_network_vnet {
    /**
     * Check if a private IP address is available for use within a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet check-ip-address --ip-address
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     *
     * @param {string} ipAddress The private IP address to be verified.
     */
    static check_ip_address(ipAddress: string): az_network_vnet_check_ip_address_command_builder;
    /**
     * Create a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet create --name
     *                        --resource-group
     *                        [--address-prefixes]
     *                        [--ddos-protection {false, true}]
     *                        [--ddos-protection-plan]
     *                        [--defer]
     *                        [--dns-servers]
     *                        [--location]
     *                        [--network-security-group]
     *                        [--subnet-name]
     *                        [--subnet-prefixes]
     *                        [--subscription]
     *                        [--tags]
     *                        [--vm-protection {false, true}]
     * ```
     *
     * @param {string} name The virtual network (VNet) name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_vnet_create_command_builder;
    /**
     * Delete a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet delete [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     * ```
     */
    static delete(): az_network_vnet_delete_command_builder;
    /**
     * List virtual networks.
     *
     * Syntax:
     * ```
     * az network vnet list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     * ```
     */
    static list(): az_network_vnet_list_command_builder;
    /**
     * List some available ips in the vnet.
     *
     * Syntax:
     * ```
     * az network vnet list-available-ips [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     * ```
     */
    static list_available_ips(): az_network_vnet_list_available_ips_command_builder;
    /**
     * List which services support VNET service tunneling in a given region.
     *
     * Syntax:
     * ```
     * az network vnet list-endpoint-services --location
     *                                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list_endpoint_services(location: string): az_network_vnet_list_endpoint_services_command_builder;
    /**
     * Get the details of a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet show [--expand]
     *                      [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     * ```
     */
    static show(): az_network_vnet_show_command_builder;
    /**
     * Update a virtual network.
     *
     * Syntax:
     * ```
     * az network vnet update [--add]
     *                        [--address-prefixes]
     *                        [--ddos-protection {false, true}]
     *                        [--ddos-protection-plan]
     *                        [--defer]
     *                        [--dns-servers]
     *                        [--force-string]
     *                        [--ids]
     *                        [--name]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--set]
     *                        [--subscription]
     *                        [--vm-protection {false, true}]
     * ```
     */
    static update(): az_network_vnet_update_command_builder;
}
/** Manage VPN connection IPSec policies. */
export declare class az_network_vpn_connection_ipsec_policy {
    /**
     * Add a VPN connection IPSec policy.
     *
     * Syntax:
     * ```
     * az network vpn-connection ipsec-policy add --connection-name
     *                                            --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                            --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                            --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                            --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                            --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                            --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                            --resource-group
     *                                            --sa-lifetime
     *                                            --sa-max-size
     *                                            [--no-wait]
     *                                            [--subscription]
     * ```
     *
     * @param {string} connectionName Connection name.
     * @param {'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'} dhGroup Required. The DH Group used in IKE Phase 1 for initial SA.
     * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'} ikeEncryption Required. The IKE encryption algorithm (IKE phase 2).
     * @param {'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'} ikeIntegrity Required. The IKE integrity algorithm (IKE phase 2).
     * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'} ipsecEncryption Required. The IPSec encryption algorithm (IKE phase 1).
     * @param {'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'} ipsecIntegrity Required. The IPSec integrity algorithm (IKE phase 1).
     * @param {'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'} pfsGroup Required. The Pfs Group used in IKE Phase 2 for new child SA.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} saLifetime Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
     * @param {string} saMaxSize Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
     */
    static add(connectionName: string, dhGroup: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None', ikeEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256', ikeIntegrity: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384', ipsecEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None', ipsecIntegrity: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256', pfsGroup: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM', resourceGroup: string, saLifetime: string, saMaxSize: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /**
     * Delete all IPsec policies on a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection ipsec-policy clear --connection-name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--subscription]
     * ```
     *
     * @param {string} connectionName Connection name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static clear(connectionName: string, resourceGroup: string): az_network_vpn_connection_ipsec_policy_clear_command_builder;
    /**
     * List IPSec policies associated with a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection ipsec-policy list --connection-name
     *                                             --resource-group
     *                                             [--query-examples]
     *                                             [--subscription]
     * ```
     *
     * @param {string} connectionName Connection name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(connectionName: string, resourceGroup: string): az_network_vpn_connection_ipsec_policy_list_command_builder;
}
/** Manage VPN shared keys. */
export declare class az_network_vpn_connection_shared_key {
    /**
     * Reset a VPN connection shared key.
     *
     * Syntax:
     * ```
     * az network vpn-connection shared-key reset --key-length
     *                                            [--connection-name]
     *                                            [--ids]
     *                                            [--resource-group]
     *                                            [--subscription]
     * ```
     *
     * @param {string} keyLength The virtual network connection reset shared key length, should between 1 and 128.
     */
    static reset(keyLength: string): az_network_vpn_connection_shared_key_reset_command_builder;
    /**
     * Retrieve a VPN connection shared key.
     *
     * Syntax:
     * ```
     * az network vpn-connection shared-key show [--connection-name]
     *                                           [--ids]
     *                                           [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     * ```
     */
    static show(): az_network_vpn_connection_shared_key_show_command_builder;
    /**
     * Update a VPN connection shared key.
     *
     * Syntax:
     * ```
     * az network vpn-connection shared-key update --value
     *                                             [--add]
     *                                             [--connection-name]
     *                                             [--force-string]
     *                                             [--id]
     *                                             [--ids]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     * ```
     *
     * @param {string} value The virtual network connection shared key value.
     */
    static update(value: string): az_network_vpn_connection_shared_key_update_command_builder;
}
/** Manage VPN connections. */
export declare class az_network_vpn_connection {
    /**
     * Create a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection create --name
     *                                  --resource-group
     *                                  --vnet-gateway1
     *                                  [--authorization-key]
     *                                  [--enable-bgp]
     *                                  [--express-route-circuit2]
     *                                  [--express-route-gateway-bypass {false, true}]
     *                                  [--local-gateway2]
     *                                  [--location]
     *                                  [--routing-weight]
     *                                  [--shared-key]
     *                                  [--subscription]
     *                                  [--tags]
     *                                  [--use-policy-based-traffic-selectors {false, true}]
     *                                  [--validate]
     *                                  [--vnet-gateway2]
     * ```
     *
     * @param {string} name Connection name.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vnetGateway1 Name or ID of the source virtual network gateway.
     */
    static create(name: string, resourceGroup: string, vnetGateway1: string): az_network_vpn_connection_create_command_builder;
    /**
     * Delete a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection delete [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static delete(): az_network_vpn_connection_delete_command_builder;
    /**
     * List all VPN connections in a resource group.
     *
     * Syntax:
     * ```
     * az network vpn-connection list --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static list(resourceGroup: string): az_network_vpn_connection_list_command_builder;
    /**
     * Get the details of a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection show [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     * ```
     */
    static show(): az_network_vpn_connection_show_command_builder;
    /**
     * Update a VPN connection.
     *
     * Syntax:
     * ```
     * az network vpn-connection update [--add]
     *                                  [--enable-bgp {false, true}]
     *                                  [--express-route-gateway-bypass {false, true}]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--routing-weight]
     *                                  [--set]
     *                                  [--shared-key]
     *                                  [--subscription]
     *                                  [--tags]
     *                                  [--use-policy-based-traffic-selectors {false, true}]
     * ```
     */
    static update(): az_network_vpn_connection_update_command_builder;
}
/** Manage the virtual router peering. */
export declare class az_network_vrouter_peering {
    /**
     * Create a virtual router peering.
     *
     * Syntax:
     * ```
     * az network vrouter peering create --name
     *                                   --peer-asn
     *                                   --peer-ip
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router Peering.
     * @param {string} peerAsn Peer ASN. Its range is from 1 to 4294967295.
     * @param {string} peerIp Peer IP address.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vrouterName The name of the Virtual Router.
     */
    static create(name: string, peerAsn: string, peerIp: string, resourceGroup: string, vrouterName: string): az_network_vrouter_peering_create_command_builder;
    /**
     * Delete a virtual router peering.
     *
     * Syntax:
     * ```
     * az network vrouter peering delete --name
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router Peering.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vrouterName The name of the Virtual Router.
     */
    static delete(name: string, resourceGroup: string, vrouterName: string): az_network_vrouter_peering_delete_command_builder;
    /**
     * List all virtual router peerings under a resource group.
     *
     * Syntax:
     * ```
     * az network vrouter peering list --resource-group
     *                                 --vrouter-name
     *                                 [--query-examples]
     *                                 [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vrouterName The name of the Virtual Router.
     */
    static list(resourceGroup: string, vrouterName: string): az_network_vrouter_peering_list_command_builder;
    /**
     * Show a virtual router peering.
     *
     * Syntax:
     * ```
     * az network vrouter peering show --name
     *                                 --resource-group
     *                                 --vrouter-name
     *                                 [--query-examples]
     *                                 [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router Peering.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vrouterName The name of the Virtual Router.
     */
    static show(name: string, resourceGroup: string, vrouterName: string): az_network_vrouter_peering_show_command_builder;
    /**
     * Update a virtual router peering.
     *
     * Syntax:
     * ```
     * az network vrouter peering update --name
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--peer-asn]
     *                                   [--peer-ip]
     *                                   [--remove]
     *                                   [--set]
     *                                   [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router Peering.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     * @param {string} vrouterName The name of the Virtual Router.
     */
    static update(name: string, resourceGroup: string, vrouterName: string): az_network_vrouter_peering_update_command_builder;
}
/** Manage the virtual router. This feature supports both VirtualHub and VirtualRouter. Considering VirtualRouter is depcated, we recommand to create VirtualRouter instead. */
export declare class az_network_vrouter {
    /**
     * Create a virtual router.
     *
     * Syntax:
     * ```
     * az network vrouter create --name
     *                           --resource-group
     *                           [--hosted-gateway]
     *                           [--hosted-subnet]
     *                           [--location]
     *                           [--subscription]
     *                           [--tags]
     * ```
     *
     * @param {string} name The name of the Virtual Router.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static create(name: string, resourceGroup: string): az_network_vrouter_create_command_builder;
    /**
     * Delete a virtual router under a resource group.
     *
     * Syntax:
     * ```
     * az network vrouter delete --name
     *                           --resource-group
     *                           [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static delete(name: string, resourceGroup: string): az_network_vrouter_delete_command_builder;
    /**
     * List all virtual routers under a subscription or a resource group.
     *
     * Syntax:
     * ```
     * az network vrouter list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     * ```
     */
    static list(): az_network_vrouter_list_command_builder;
    /**
     * Show a virtual router.
     *
     * Syntax:
     * ```
     * az network vrouter show --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     * ```
     *
     * @param {string} name The name of the Virtual Router.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static show(name: string, resourceGroup: string): az_network_vrouter_show_command_builder;
    /**
     * Update a virtual router.
     *
     * Syntax:
     * ```
     * az network vrouter update --name
     *                           --resource-group
     *                           [--add]
     *                           [--force-string]
     *                           [--remove]
     *                           [--set]
     *                           [--subscription]
     *                           [--tags]
     * ```
     *
     * @param {string} name The name of the Virtual Router.
     * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
     */
    static update(name: string, resourceGroup: string): az_network_vrouter_update_command_builder;
}
/** Manage endpoint of a connection monitor. */
export declare class az_network_watcher_connection_monitor_endpoint {
    /**
     * Add an endpoint to a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor endpoint add --connection-monitor
     *                                                    --location
     *                                                    --name
     *                                                    [--address]
     *                                                    [--address-exclude]
     *                                                    [--address-include]
     *                                                    [--coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                                    [--dest-test-groups]
     *                                                    [--filter-item]
     *                                                    [--filter-type {Include}]
     *                                                    [--resource-id]
     *                                                    [--source-test-groups]
     *                                                    [--subscription]
     *                                                    [--type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor endpoint.
     */
    static add(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /**
     * List all endpoints form a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor endpoint list --connection-monitor
     *                                                     --location
     *                                                     [--query-examples]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(connectionMonitor: string, location: string): az_network_watcher_connection_monitor_endpoint_list_command_builder;
    /**
     * Remove an endpoint from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor endpoint remove --connection-monitor
     *                                                       --location
     *                                                       --name
     *                                                       [--subscription]
     *                                                       [--test-groups]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor endpoint.
     */
    static remove(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
    /**
     * Show an endpoint from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor endpoint show --connection-monitor
     *                                                     --location
     *                                                     --name
     *                                                     [--query-examples]
     *                                                     [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor endpoint.
     */
    static show(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
}
/** Manage output of connection monitor. */
export declare class az_network_watcher_connection_monitor_output {
    /**
     * Add an output to a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor output add --connection-monitor
     *                                                  --location
     *                                                  --type {Workspace}
     *                                                  [--subscription]
     *                                                  [--workspace-id]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {'Workspace'} type Connection monitor output destination type. Currently, only "Workspace" is supported.
     */
    static add(connectionMonitor: string, location: string, type: 'Workspace'): az_network_watcher_connection_monitor_output_add_command_builder;
    /**
     * List all output from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor output list --connection-monitor
     *                                                   --location
     *                                                   [--query-examples]
     *                                                   [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(connectionMonitor: string, location: string): az_network_watcher_connection_monitor_output_list_command_builder;
    /**
     * Remove all outputs from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor output remove --connection-monitor
     *                                                     --location
     *                                                     [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static remove(connectionMonitor: string, location: string): az_network_watcher_connection_monitor_output_remove_command_builder;
}
/** Manage test configuration of a connection monitor. */
export declare class az_network_watcher_connection_monitor_test_configuration {
    /**
     * Add a test configuration to a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-configuration add --connection-monitor
     *                                                              --location
     *                                                              --name
     *                                                              --protocol {Http, Icmp, Tcp}
     *                                                              --test-groups
     *                                                              [--frequency]
     *                                                              [--http-method {Get, Post}]
     *                                                              [--http-path]
     *                                                              [--http-port]
     *                                                              [--http-prefer-https {false, true}]
     *                                                              [--http-request-header]
     *                                                              [--http-valid-status-codes]
     *                                                              [--icmp-disable-trace-route {false, true}]
     *                                                              [--preferred-ip-version {IPv4, IPv6}]
     *                                                              [--subscription]
     *                                                              [--tcp-disable-trace-route {false, true}]
     *                                                              [--tcp-port]
     *                                                              [--tcp-port-behavior {ListenIfAvailable, None}]
     *                                                              [--threshold-failed-percent]
     *                                                              [--threshold-round-trip-time]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test configuration.
     * @param {'Http' | 'Icmp' | 'Tcp'} protocol The protocol to use in test evaluation.
     * @param {string} testGroups Space-separated list of names of test group which only need to be affected if specified.
     */
    static add(connectionMonitor: string, location: string, name: string, protocol: 'Http' | 'Icmp' | 'Tcp', testGroups: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /**
     * List all test configurations of a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-configuration list --connection-monitor
     *                                                               --location
     *                                                               [--query-examples]
     *                                                               [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(connectionMonitor: string, location: string): az_network_watcher_connection_monitor_test_configuration_list_command_builder;
    /**
     * Remove a test configuration from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-configuration remove --connection-monitor
     *                                                                 --location
     *                                                                 --name
     *                                                                 [--subscription]
     *                                                                 [--test-groups]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test configuration.
     */
    static remove(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
    /**
     * Show a test configuration from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-configuration show --connection-monitor
     *                                                               --location
     *                                                               --name
     *                                                               [--query-examples]
     *                                                               [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test configuration.
     */
    static show(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
}
/** Manage a test group of a connection monitor. */
export declare class az_network_watcher_connection_monitor_test_group {
    /**
     * Add a test group along with new-added/existing endpoint and test configuration to a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-group add --connection-monitor
     *                                                      --endpoint-dest-name
     *                                                      --endpoint-source-name
     *                                                      --location
     *                                                      --name
     *                                                      --test-config-name
     *                                                      [--disable {false, true}]
     *                                                      [--endpoint-dest-address]
     *                                                      [--endpoint-dest-resource-id]
     *                                                      [--endpoint-source-address]
     *                                                      [--endpoint-source-resource-id]
     *                                                      [--frequency]
     *                                                      [--http-method {Get, Post}]
     *                                                      [--http-path]
     *                                                      [--http-port]
     *                                                      [--http-valid-status-codes]
     *                                                      [--https-prefer {false, true}]
     *                                                      [--icmp-disable-trace-route {false, true}]
     *                                                      [--preferred-ip-version {IPv4, IPv6}]
     *                                                      [--protocol {Http, Icmp, Tcp}]
     *                                                      [--subscription]
     *                                                      [--tcp-disable-trace-route {false, true}]
     *                                                      [--tcp-port]
     *                                                      [--threshold-failed-percent]
     *                                                      [--threshold-round-trip-time]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} endpointDestName The name of the destination of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required.
     * @param {string} endpointSourceName The name of the source of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test group.
     * @param {string} testConfigName The name of the connection monitor test configuration. If you are creating a V2 Connection Monitor, it's required.
     */
    static add(connectionMonitor: string, endpointDestName: string, endpointSourceName: string, location: string, name: string, testConfigName: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /**
     * List all test groups of a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-group list --connection-monitor
     *                                                       --location
     *                                                       [--query-examples]
     *                                                       [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(connectionMonitor: string, location: string): az_network_watcher_connection_monitor_test_group_list_command_builder;
    /**
     * Remove test group from a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-group remove --connection-monitor
     *                                                         --location
     *                                                         --name
     *                                                         [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test group.
     */
    static remove(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_test_group_remove_command_builder;
    /**
     * Show a test group of a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor test-group show --connection-monitor
     *                                                       --location
     *                                                       --name
     *                                                       [--query-examples]
     *                                                       [--subscription]
     * ```
     *
     * @param {string} connectionMonitor Connection monitor name.
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the connection monitor test group.
     */
    static show(connectionMonitor: string, location: string, name: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
}
/** Manage connection monitoring between an Azure Virtual Machine and any IP resource. */
export declare class az_network_watcher_connection_monitor {
    /**
     * Create a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor create --name
     *                                              [--dest-address]
     *                                              [--dest-port]
     *                                              [--dest-resource]
     *                                              [--do-not-start]
     *                                              [--endpoint-dest-address]
     *                                              [--endpoint-dest-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                              [--endpoint-dest-name]
     *                                              [--endpoint-dest-resource-id]
     *                                              [--endpoint-dest-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     *                                              [--endpoint-source-address]
     *                                              [--endpoint-source-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                              [--endpoint-source-name]
     *                                              [--endpoint-source-resource-id]
     *                                              [--endpoint-source-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     *                                              [--frequency]
     *                                              [--http-method {Get, Post}]
     *                                              [--http-path]
     *                                              [--http-port]
     *                                              [--http-valid-status-codes]
     *                                              [--https-prefer {false, true}]
     *                                              [--icmp-disable-trace-route {false, true}]
     *                                              [--location]
     *                                              [--monitoring-interval]
     *                                              [--notes]
     *                                              [--output-type {Workspace}]
     *                                              [--preferred-ip-version {IPv4, IPv6}]
     *                                              [--protocol {Http, Icmp, Tcp}]
     *                                              [--resource-group]
     *                                              [--source-port]
     *                                              [--source-resource]
     *                                              [--subscription]
     *                                              [--tags]
     *                                              [--tcp-disable-trace-route {false, true}]
     *                                              [--tcp-port]
     *                                              [--tcp-port-behavior {ListenIfAvailable, None}]
     *                                              [--test-config-name]
     *                                              [--test-group-disable {false, true}]
     *                                              [--test-group-name]
     *                                              [--threshold-failed-percent]
     *                                              [--threshold-round-trip-time]
     *                                              [--workspace-ids]
     * ```
     *
     * @param {string} name Connection monitor name.
     */
    static create(name: string): az_network_watcher_connection_monitor_create_command_builder;
    /**
     * Delete a connection monitor for the given region.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor delete --location
     *                                              --name
     *                                              [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name Connection monitor name.
     */
    static delete(location: string, name: string): az_network_watcher_connection_monitor_delete_command_builder;
    /**
     * List connection monitors for the given region.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor list --location
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(location: string): az_network_watcher_connection_monitor_list_command_builder;
    /**
     * Query a snapshot of the most recent connection state of a connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor query --location
     *                                             --name
     *                                             [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name Connection monitor name.
     */
    static query(location: string, name: string): az_network_watcher_connection_monitor_query_command_builder;
    /**
     * Shows a connection monitor by name.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor show --location
     *                                            --name
     *                                            [--query-examples]
     *                                            [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name Connection monitor name.
     */
    static show(location: string, name: string): az_network_watcher_connection_monitor_show_command_builder;
    /**
     * Start the specified connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor start --location
     *                                             --name
     *                                             [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name Connection monitor name.
     */
    static start(location: string, name: string): az_network_watcher_connection_monitor_start_command_builder;
    /**
     * Stop the specified connection monitor.
     *
     * Syntax:
     * ```
     * az network watcher connection-monitor stop --location
     *                                            --name
     *                                            [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name Connection monitor name.
     */
    static stop(location: string, name: string): az_network_watcher_connection_monitor_stop_command_builder;
}
/** Manage network security group flow logging. */
export declare class az_network_watcher_flow_log {
    /**
     * Configure flow logging on a network security group.
     *
     * Syntax:
     * ```
     * az network watcher flow-log configure --nsg
     *                                       [--enabled {false, true}]
     *                                       [--format {JSON}]
     *                                       [--interval]
     *                                       [--log-version]
     *                                       [--resource-group]
     *                                       [--retention]
     *                                       [--storage-account]
     *                                       [--subscription]
     *                                       [--traffic-analytics {false, true}]
     *                                       [--workspace]
     * ```
     *
     * @param {string} nsg Name or ID of the Network Security Group to target.
     */
    static configure(nsg: string): az_network_watcher_flow_log_configure_command_builder;
    /**
     * Create a flow log on a network security group.
     *
     * Syntax:
     * ```
     * az network watcher flow-log create --location
     *                                    --name
     *                                    --nsg
     *                                    [--enabled {false, true}]
     *                                    [--format {JSON}]
     *                                    [--interval]
     *                                    [--log-version]
     *                                    [--resource-group]
     *                                    [--retention]
     *                                    [--storage-account]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--traffic-analytics {false, true}]
     *                                    [--workspace]
     * ```
     *
     * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
     * @param {string} name The name of the flow logger.
     * @param {string} nsg Name or ID of the network security group.
     */
    static create(location: string, name: string, nsg: string): az_network_watcher_flow_log_create_command_builder;
    /**
     * Delete the specified flow log resource.
     *
     * Syntax:
     * ```
     * az network watcher flow-log delete --location
     *                                    --name
     *                                    [--subscription]
     * ```
     *
     * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
     * @param {string} name The name of the flow logger.
     */
    static delete(location: string, name: string): az_network_watcher_flow_log_delete_command_builder;
    /**
     * List all flow log resources for the specified Network Watcher.
     *
     * Syntax:
     * ```
     * az network watcher flow-log list --location
     *                                  [--query-examples]
     *                                  [--subscription]
     * ```
     *
     * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
     */
    static list(location: string): az_network_watcher_flow_log_list_command_builder;
    /**
     * Get the flow log configuration of a network security group.
     *
     * Syntax:
     * ```
     * az network watcher flow-log show [--location]
     *                                  [--name]
     *                                  [--nsg]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     * ```
     */
    static show(): az_network_watcher_flow_log_show_command_builder;
    /**
     * Update the flow log configuration of a network security group.
     *
     * Syntax:
     * ```
     * az network watcher flow-log update --location
     *                                    --name
     *                                    [--add]
     *                                    [--enabled {false, true}]
     *                                    [--force-string]
     *                                    [--format {JSON}]
     *                                    [--interval]
     *                                    [--log-version]
     *                                    [--nsg]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--retention]
     *                                    [--set]
     *                                    [--storage-account]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--traffic-analytics {false, true}]
     *                                    [--workspace]
     * ```
     *
     * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
     * @param {string} name The name of the flow logger.
     */
    static update(location: string, name: string): az_network_watcher_flow_log_update_command_builder;
}
/** Manage packet capture sessions on VMs. */
export declare class az_network_watcher_packet_capture {
    /**
     * Create and start a packet capture session.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture create --name
     *                                          --resource-group
     *                                          --vm
     *                                          [--capture-limit]
     *                                          [--capture-size]
     *                                          [--file-path]
     *                                          [--filters]
     *                                          [--storage-account]
     *                                          [--storage-path]
     *                                          [--subscription]
     *                                          [--time-limit]
     * ```
     *
     * @param {string} name Name of the packet capture session.
     * @param {string} resourceGroup Name of the resource group the target VM is in.
     * @param {string} vm Name or ID of the VM to target.
     */
    static create(name: string, resourceGroup: string, vm: string): az_network_watcher_packet_capture_create_command_builder;
    /**
     * Delete a packet capture session.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture delete --location
     *                                          --name
     *                                          [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the packet capture session.
     */
    static delete(location: string, name: string): az_network_watcher_packet_capture_delete_command_builder;
    /**
     * List all packet capture sessions within a resource group.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture list --location
     *                                        [--query-examples]
     *                                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list(location: string): az_network_watcher_packet_capture_list_command_builder;
    /**
     * Show details of a packet capture session.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture show --location
     *                                        --name
     *                                        [--query-examples]
     *                                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the packet capture session.
     */
    static show(location: string, name: string): az_network_watcher_packet_capture_show_command_builder;
    /**
     * Show the status of a packet capture session.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture show-status --location
     *                                               --name
     *                                               [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name given to the packet capture session.
     */
    static show_status(location: string, name: string): az_network_watcher_packet_capture_show_status_command_builder;
    /**
     * Stop a running packet capture session.
     *
     * Syntax:
     * ```
     * az network watcher packet-capture stop --location
     *                                        --name
     *                                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     * @param {string} name The name of the packet capture session.
     */
    static stop(location: string, name: string): az_network_watcher_packet_capture_stop_command_builder;
}
/** Manage Network Watcher troubleshooting sessions. */
export declare class az_network_watcher_troubleshooting {
    /**
     * Get the results of the last troubleshooting operation.
     *
     * Syntax:
     * ```
     * az network watcher troubleshooting show --resource
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--resource-type {vnetGateway, vpnConnection}]
     *                                         [--subscription]
     * ```
     *
     * @param {string} resource Name or ID of the resource to troubleshoot.
     */
    static show(resource: string): az_network_watcher_troubleshooting_show_command_builder;
    /**
     * Troubleshoot issues with VPN connections or gateway connectivity.
     *
     * Syntax:
     * ```
     * az network watcher troubleshooting start --resource
     *                                          --storage-account
     *                                          --storage-path
     *                                          [--no-wait]
     *                                          [--resource-group]
     *                                          [--resource-type {vnetGateway, vpnConnection}]
     *                                          [--subscription]
     * ```
     *
     * @param {string} resource Name or ID of the resource to troubleshoot.
     * @param {string} storageAccount Name or ID of the storage account in which to store the troubleshooting results.
     * @param {string} storagePath Fully qualified URI to the storage blob container in which to store the troubleshooting results.
     */
    static start(resource: string, storageAccount: string, storagePath: string): az_network_watcher_troubleshooting_start_command_builder;
}
/** Manage the Azure Network Watcher. */
export declare class az_network_watcher {
    /**
     * Configure the Network Watcher service for different regions.
     *
     * Syntax:
     * ```
     * az network watcher configure --locations
     *                              [--enabled {false, true}]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--tags]
     * ```
     *
     * @param {string} locations Space-separated list of locations to configure.
     */
    static configure(locations: string): az_network_watcher_configure_command_builder;
    /**
     * List Network Watchers.
     *
     * Syntax:
     * ```
     * az network watcher list [--query-examples]
     *                         [--subscription]
     * ```
     */
    static list(): az_network_watcher_list_command_builder;
    /**
     * Run a configuration diagnostic on a target resource.
     *
     * Syntax:
     * ```
     * az network watcher run-configuration-diagnostic --resource
     *                                                 [--destination]
     *                                                 [--direction {Inbound, Outbound}]
     *                                                 [--parent]
     *                                                 [--port]
     *                                                 [--protocol {Http, Https, Icmp, Tcp}]
     *                                                 [--queries]
     *                                                 [--resource-group]
     *                                                 [--resource-type {applicationGateways, networkInterfaces, virtualMachines}]
     *                                                 [--source]
     *                                                 [--subscription]
     * ```
     *
     * @param {string} resource Name or ID of the target resource to diagnose. If an ID is given, other resource arguments should not be given.
     */
    static run_configuration_diagnostic(resource: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /**
     * Get information on the 'next hop' of a VM.
     *
     * Syntax:
     * ```
     * az network watcher show-next-hop --dest-ip
     *                                  --resource-group
     *                                  --source-ip
     *                                  --vm
     *                                  [--nic]
     *                                  [--subscription]
     * ```
     *
     * @param {string} destIp Destination IPv4 address.
     * @param {string} resourceGroup Name of the resource group the target VM is in.
     * @param {string} sourceIp Source IPv4 address.
     * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
     */
    static show_next_hop(destIp: string, resourceGroup: string, sourceIp: string, vm: string): az_network_watcher_show_next_hop_command_builder;
    /**
     * Get detailed security information on a VM for the currently configured network security group.
     *
     * Syntax:
     * ```
     * az network watcher show-security-group-view --resource-group
     *                                             --vm
     *                                             [--subscription]
     * ```
     *
     * @param {string} resourceGroup Name of the resource group the target VM is in.
     * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
     */
    static show_security_group_view(resourceGroup: string, vm: string): az_network_watcher_show_security_group_view_command_builder;
    /**
     * Get the network topology of a resource group, virtual network or subnet.
     *
     * Syntax:
     * ```
     * az network watcher show-topology [--location]
     *                                  [--resource-group]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet]
     * ```
     */
    static show_topology(): az_network_watcher_show_topology_command_builder;
    /**
     * Test if a connection can be established between a Virtual Machine and a given endpoint.
     *
     * Syntax:
     * ```
     * az network watcher test-connectivity --source-resource
     *                                      [--dest-address]
     *                                      [--dest-port]
     *                                      [--dest-resource]
     *                                      [--headers]
     *                                      [--method {Get}]
     *                                      [--protocol {Http, Https, Icmp, Tcp}]
     *                                      [--resource-group]
     *                                      [--source-port]
     *                                      [--subscription]
     *                                      [--valid-status-codes]
     * ```
     *
     * @param {string} sourceResource Name or ID of the resource from which to originate traffic.
     */
    static test_connectivity(sourceResource: string): az_network_watcher_test_connectivity_command_builder;
    /**
     * Test IP flow to/from a VM given the currently configured network security group rules.
     *
     * Syntax:
     * ```
     * az network watcher test-ip-flow --direction {Inbound, Outbound}
     *                                 --local
     *                                 --protocol {Http, Https, Icmp, Tcp}
     *                                 --remote
     *                                 --vm
     *                                 [--nic]
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     *
     * @param {'Inbound' | 'Outbound'} direction Direction of the packet relative to the VM.
     * @param {string} local The private IPv4 address for the VMs NIC and the port of the packet in X.X.X.X:PORT format. `\*` can be used for port when direction is outbound.
     * @param {'Http' | 'Https' | 'Icmp' | 'Tcp'} protocol Protocol to test.
     * @param {string} remote The IPv4 address and port for the remote side of the packet X.X.X.X:PORT format. `\*` can be used for port when the direction is inbound.
     * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
     */
    static test_ip_flow(direction: 'Inbound' | 'Outbound', local: string, protocol: 'Http' | 'Https' | 'Icmp' | 'Tcp', remote: string, vm: string): az_network_watcher_test_ip_flow_command_builder;
}
/** Manage Azure Network resources. */
export declare class az_network {
    /**
     * List available service aliases in the region which can be used for Service Endpoint Policies.
     *
     * Syntax:
     * ```
     * az network list-service-aliases --location
     *                                 [--resource-group]
     *                                 [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list_service_aliases(location: string): az_network_list_service_aliases_command_builder;
    /**
     * List all service tags which are below to different resources.
     *
     * Syntax:
     * ```
     * az network list-service-tags --location
     *                              [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list_service_tags(location: string): az_network_list_service_tags_command_builder;
    /**
     * List the number of network resources in a region that are used against a subscription quota.
     *
     * Syntax:
     * ```
     * az network list-usages --location
     *                        [--subscription]
     * ```
     *
     * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
     */
    static list_usages(location: string): az_network_list_usages_command_builder;
}
/**
 * Create an address pool.
 *
 * Syntax:
 * ```
 * az network application-gateway address-pool create --gateway-name
 *                                                    --name
 *                                                    --resource-group
 *                                                    [--no-wait]
 *                                                    [--servers]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the backend address pool.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_address_pool_create_command_builder extends CommandBuilder<az_network_application_gateway_address_pool_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_address_pool_create_command_builder;
    /** The name of the backend address pool. */
    name(value: string): az_network_application_gateway_address_pool_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_address_pool_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_address_pool_create_command_builder;
    /** Space-separated list of IP addresses or DNS names corresponding to backend servers. */
    servers(value: string): az_network_application_gateway_address_pool_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_address_pool_create_command_builder;
}
/**
 * Delete an address pool.
 *
 * Syntax:
 * ```
 * az network application-gateway address-pool delete [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_address_pool_delete_command_builder extends CommandBuilder<az_network_application_gateway_address_pool_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_address_pool_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_address_pool_delete_command_builder;
    /** The name of the backend address pool. */
    name(value: string): az_network_application_gateway_address_pool_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_address_pool_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_address_pool_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_address_pool_delete_command_builder;
}
/**
 * List address pools.
 *
 * Syntax:
 * ```
 * az network application-gateway address-pool list --gateway-name
 *                                                  --resource-group
 *                                                  [--query-examples]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_address_pool_list_command_builder extends CommandBuilder<az_network_application_gateway_address_pool_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_address_pool_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_address_pool_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_address_pool_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_address_pool_list_command_builder;
}
/**
 * Get the details of an address pool.
 *
 * Syntax:
 * ```
 * az network application-gateway address-pool show [--gateway-name]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_application_gateway_address_pool_show_command_builder extends CommandBuilder<az_network_application_gateway_address_pool_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_address_pool_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_address_pool_show_command_builder;
    /** The name of the backend address pool. */
    name(value: string): az_network_application_gateway_address_pool_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_address_pool_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_address_pool_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_address_pool_show_command_builder;
}
/**
 * Update an address pool.
 *
 * Syntax:
 * ```
 * az network application-gateway address-pool update [--add]
 *                                                    [--force-string]
 *                                                    [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--remove]
 *                                                    [--resource-group]
 *                                                    [--servers]
 *                                                    [--set]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_address_pool_update_command_builder extends CommandBuilder<az_network_application_gateway_address_pool_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** The name of the backend address pool. */
    name(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Space-separated list of IP addresses or DNS names corresponding to backend servers. */
    servers(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_address_pool_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_address_pool_update_command_builder;
}
/**
 * Create an authorization certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway auth-cert create --cert-file
 *                                                 --gateway-name
 *                                                 --name
 *                                                 --resource-group
 *                                                 [--no-wait]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} certFile Certificate file path.
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the authentication certificate.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_auth_cert_create_command_builder extends CommandBuilder<az_network_application_gateway_auth_cert_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, certFile: string, gatewayName: string, name: string, resourceGroup: string);
    /** Certificate file path. */
    certFile(value: string): az_network_application_gateway_auth_cert_create_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_auth_cert_create_command_builder;
    /** The name of the authentication certificate. */
    name(value: string): az_network_application_gateway_auth_cert_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_auth_cert_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_auth_cert_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_auth_cert_create_command_builder;
}
/**
 * Delete an authorization certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway auth-cert delete [--gateway-name]
 *                                                 [--ids]
 *                                                 [--name]
 *                                                 [--no-wait]
 *                                                 [--resource-group]
 *                                                 [--subscription]
 * ```
 */
declare class az_network_application_gateway_auth_cert_delete_command_builder extends CommandBuilder<az_network_application_gateway_auth_cert_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
    /** The name of the authentication certificate. */
    name(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_auth_cert_delete_command_builder;
}
/**
 * List authorization certificates.
 *
 * Syntax:
 * ```
 * az network application-gateway auth-cert list --gateway-name
 *                                               --resource-group
 *                                               [--query-examples]
 *                                               [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_auth_cert_list_command_builder extends CommandBuilder<az_network_application_gateway_auth_cert_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_auth_cert_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_auth_cert_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_auth_cert_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_auth_cert_list_command_builder;
}
/**
 * Show an authorization certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway auth-cert show [--gateway-name]
 *                                               [--ids]
 *                                               [--name]
 *                                               [--query-examples]
 *                                               [--resource-group]
 *                                               [--subscription]
 * ```
 */
declare class az_network_application_gateway_auth_cert_show_command_builder extends CommandBuilder<az_network_application_gateway_auth_cert_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_auth_cert_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_auth_cert_show_command_builder;
    /** The name of the authentication certificate. */
    name(value: string): az_network_application_gateway_auth_cert_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_auth_cert_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_auth_cert_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_auth_cert_show_command_builder;
}
/**
 * Update an authorization certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway auth-cert update --cert-file
 *                                                 [--add]
 *                                                 [--force-string]
 *                                                 [--gateway-name]
 *                                                 [--ids]
 *                                                 [--name]
 *                                                 [--no-wait]
 *                                                 [--remove]
 *                                                 [--resource-group]
 *                                                 [--set]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} certFile Certificate file path.
 */
declare class az_network_application_gateway_auth_cert_update_command_builder extends CommandBuilder<az_network_application_gateway_auth_cert_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, certFile: string);
    /** Certificate file path. */
    certFile(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** The name of the authentication certificate. */
    name(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_auth_cert_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_auth_cert_update_command_builder;
}
/**
 * Create a frontend IP address.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-ip create --gateway-name
 *                                                   --name
 *                                                   --resource-group
 *                                                   [--no-wait]
 *                                                   [--private-ip-address]
 *                                                   [--public-ip-address]
 *                                                   [--subnet]
 *                                                   [--subscription]
 *                                                   [--vnet-name]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the frontend IP configuration.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_frontend_ip_create_command_builder extends CommandBuilder<az_network_application_gateway_frontend_ip_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** The name or ID of the public IP address. */
    publicIpAddress(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** The name or ID of the subnet. */
    subnet(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
    /** The name of the virtual network corresponding to the subnet. */
    vnetName(value: string): az_network_application_gateway_frontend_ip_create_command_builder;
}
/**
 * Delete a frontend IP address.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-ip delete [--gateway-name]
 *                                                   [--ids]
 *                                                   [--name]
 *                                                   [--no-wait]
 *                                                   [--resource-group]
 *                                                   [--subscription]
 * ```
 */
declare class az_network_application_gateway_frontend_ip_delete_command_builder extends CommandBuilder<az_network_application_gateway_frontend_ip_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_ip_delete_command_builder;
}
/**
 * List frontend IP addresses.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-ip list --gateway-name
 *                                                 --resource-group
 *                                                 [--query-examples]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_frontend_ip_list_command_builder extends CommandBuilder<az_network_application_gateway_frontend_ip_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_ip_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_ip_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_frontend_ip_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_ip_list_command_builder;
}
/**
 * Get the details of a frontend IP address.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-ip show [--gateway-name]
 *                                                 [--ids]
 *                                                 [--name]
 *                                                 [--query-examples]
 *                                                 [--resource-group]
 *                                                 [--subscription]
 * ```
 */
declare class az_network_application_gateway_frontend_ip_show_command_builder extends CommandBuilder<az_network_application_gateway_frontend_ip_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_ip_show_command_builder;
}
/**
 * Update a frontend IP address.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-ip update [--add]
 *                                                   [--force-string]
 *                                                   [--gateway-name]
 *                                                   [--ids]
 *                                                   [--name]
 *                                                   [--no-wait]
 *                                                   [--private-ip-address]
 *                                                   [--public-ip-address]
 *                                                   [--remove]
 *                                                   [--resource-group]
 *                                                   [--set]
 *                                                   [--subnet]
 *                                                   [--subscription]
 *                                                   [--vnet-name]
 * ```
 */
declare class az_network_application_gateway_frontend_ip_update_command_builder extends CommandBuilder<az_network_application_gateway_frontend_ip_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** The name or ID of the public IP address. */
    publicIpAddress(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** The name or ID of the subnet. */
    subnet(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
    /** The name of the virtual network corresponding to the subnet. */
    vnetName(value: string): az_network_application_gateway_frontend_ip_update_command_builder;
}
/**
 * Create a frontend port.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-port create --gateway-name
 *                                                     --name
 *                                                     --port
 *                                                     --resource-group
 *                                                     [--no-wait]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the frontend port.
 * @param {string} port The port number.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_frontend_port_create_command_builder extends CommandBuilder<az_network_application_gateway_frontend_port_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, port: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_port_create_command_builder;
    /** The name of the frontend port. */
    name(value: string): az_network_application_gateway_frontend_port_create_command_builder;
    /** The port number. */
    port(value: string): az_network_application_gateway_frontend_port_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_port_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_port_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_port_create_command_builder;
}
/**
 * Delete a frontend port.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-port delete [--gateway-name]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--resource-group]
 *                                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_frontend_port_delete_command_builder extends CommandBuilder<az_network_application_gateway_frontend_port_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
    /** The name of the frontend port. */
    name(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_port_delete_command_builder;
}
/**
 * List frontend ports.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-port list --gateway-name
 *                                                   --resource-group
 *                                                   [--query-examples]
 *                                                   [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_frontend_port_list_command_builder extends CommandBuilder<az_network_application_gateway_frontend_port_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_port_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_port_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_frontend_port_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_port_list_command_builder;
}
/**
 * Get the details of a frontend port.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-port show [--gateway-name]
 *                                                   [--ids]
 *                                                   [--name]
 *                                                   [--query-examples]
 *                                                   [--resource-group]
 *                                                   [--subscription]
 * ```
 */
declare class az_network_application_gateway_frontend_port_show_command_builder extends CommandBuilder<az_network_application_gateway_frontend_port_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_port_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_port_show_command_builder;
    /** The name of the frontend port. */
    name(value: string): az_network_application_gateway_frontend_port_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_frontend_port_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_port_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_port_show_command_builder;
}
/**
 * Update a frontend port.
 *
 * Syntax:
 * ```
 * az network application-gateway frontend-port update [--add]
 *                                                     [--force-string]
 *                                                     [--gateway-name]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--port]
 *                                                     [--remove]
 *                                                     [--resource-group]
 *                                                     [--set]
 *                                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_frontend_port_update_command_builder extends CommandBuilder<az_network_application_gateway_frontend_port_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** The name of the frontend port. */
    name(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** The port number. */
    port(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_frontend_port_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_frontend_port_update_command_builder;
}
/**
 * Create an HTTP listener.
 *
 * Syntax:
 * ```
 * az network application-gateway http-listener create --frontend-port
 *                                                     --gateway-name
 *                                                     --name
 *                                                     --resource-group
 *                                                     [--frontend-ip]
 *                                                     [--host-name]
 *                                                     [--host-names]
 *                                                     [--no-wait]
 *                                                     [--ssl-cert]
 *                                                     [--subscription]
 *                                                     [--waf-policy]
 * ```
 *
 * @param {string} frontendPort The name or ID of the frontend port.
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the HTTP listener.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_http_listener_create_command_builder extends CommandBuilder<az_network_application_gateway_http_listener_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, frontendPort: string, gatewayName: string, name: string, resourceGroup: string);
    /** The name or ID of the frontend port. */
    frontendPort(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** The name of the HTTP listener. */
    name(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** The name or ID of the frontend IP configuration. If only one exists, omit to use as default. */
    frontendIp(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Host name to use for multisite gateways. */
    hostName(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** List of host names that allows special wildcard characters as well. */
    hostNames(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** The name or ID of the SSL certificate to use. */
    sslCert(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_listener_create_command_builder;
    /** Name or ID of a Firewall Policy resource. */
    wafPolicy(value: string): az_network_application_gateway_http_listener_create_command_builder;
}
/**
 * Delete an HTTP listener.
 *
 * Syntax:
 * ```
 * az network application-gateway http-listener delete [--gateway-name]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--resource-group]
 *                                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_http_listener_delete_command_builder extends CommandBuilder<az_network_application_gateway_http_listener_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_listener_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_listener_delete_command_builder;
    /** The name of the HTTP listener. */
    name(value: string): az_network_application_gateway_http_listener_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_listener_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_listener_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_listener_delete_command_builder;
}
/**
 * List HTTP listeners.
 *
 * Syntax:
 * ```
 * az network application-gateway http-listener list --gateway-name
 *                                                   --resource-group
 *                                                   [--query-examples]
 *                                                   [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_http_listener_list_command_builder extends CommandBuilder<az_network_application_gateway_http_listener_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_listener_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_listener_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_http_listener_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_listener_list_command_builder;
}
/**
 * Get the details of an HTTP listener.
 *
 * Syntax:
 * ```
 * az network application-gateway http-listener show [--gateway-name]
 *                                                   [--ids]
 *                                                   [--name]
 *                                                   [--query-examples]
 *                                                   [--resource-group]
 *                                                   [--subscription]
 * ```
 */
declare class az_network_application_gateway_http_listener_show_command_builder extends CommandBuilder<az_network_application_gateway_http_listener_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_listener_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_listener_show_command_builder;
    /** The name of the HTTP listener. */
    name(value: string): az_network_application_gateway_http_listener_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_http_listener_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_listener_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_listener_show_command_builder;
}
/**
 * Update an HTTP listener.
 *
 * Syntax:
 * ```
 * az network application-gateway http-listener update [--add]
 *                                                     [--force-string]
 *                                                     [--frontend-ip]
 *                                                     [--frontend-port]
 *                                                     [--gateway-name]
 *                                                     [--host-name]
 *                                                     [--host-names]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--remove]
 *                                                     [--resource-group]
 *                                                     [--set]
 *                                                     [--ssl-cert]
 *                                                     [--subscription]
 *                                                     [--waf-policy]
 * ```
 */
declare class az_network_application_gateway_http_listener_update_command_builder extends CommandBuilder<az_network_application_gateway_http_listener_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** The name or ID of the frontend IP configuration. */
    frontendIp(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** The name or ID of the frontend port. */
    frontendPort(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Host name to use for multisite gateways. */
    hostName(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** List of host names that allows special wildcard characters as well. */
    hostNames(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** The name of the HTTP listener. */
    name(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** The name or ID of the SSL certificate to use. */
    sslCert(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_listener_update_command_builder;
    /** Name or ID of a Firewall Policy resource. */
    wafPolicy(value: string): az_network_application_gateway_http_listener_update_command_builder;
}
/**
 * Create HTTP settings.
 *
 * Syntax:
 * ```
 * az network application-gateway http-settings create --gateway-name
 *                                                     --name
 *                                                     --port
 *                                                     --resource-group
 *                                                     [--affinity-cookie-name]
 *                                                     [--auth-certs]
 *                                                     [--connection-draining-timeout]
 *                                                     [--cookie-based-affinity {Disabled, Enabled}]
 *                                                     [--enable-probe {false, true}]
 *                                                     [--host-name]
 *                                                     [--host-name-from-backend-pool {false, true}]
 *                                                     [--no-wait]
 *                                                     [--path]
 *                                                     [--probe]
 *                                                     [--protocol {Http, Https}]
 *                                                     [--root-certs]
 *                                                     [--subscription]
 *                                                     [--timeout]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the backed HTTP settings.
 * @param {string} port The port number.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_http_settings_create_command_builder extends CommandBuilder<az_network_application_gateway_http_settings_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, port: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** The name of the backed HTTP settings. */
    name(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** The port number. */
    port(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Name used for the affinity cookie. */
    affinityCookieName(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Space-separated list of authentication certificates (names or IDs) to associate with the HTTP settings. */
    authCerts(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** The time in seconds after a backend server is removed during which on open connection remains active. Range: 0 (disabled) to 3600. */
    connectionDrainingTimeout(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Enable or disable cookie-based affinity. */
    cookieBasedAffinity(value: 'Disabled' | 'Enabled'): az_network_application_gateway_http_settings_create_command_builder;
    /** Whether the probe is enabled. */
    enableProbe(value: boolean): az_network_application_gateway_http_settings_create_command_builder;
    /** Host header sent to the backend servers. */
    hostName(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Use host name of the backend server as the host header. */
    hostNameFromBackendPool(value: boolean): az_network_application_gateway_http_settings_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Path that will prefix all HTTP requests. */
    path(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Name or ID of the probe to associate with the HTTP settings. */
    probe(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** The HTTP settings protocol. */
    protocol(value: 'Http' | 'Https'): az_network_application_gateway_http_settings_create_command_builder;
    /** Space-separated list of trusted root certificates (names or IDs) to associate with the HTTP settings. --host-name or --host-name-from-backend-pool is required when this field is set. */
    rootCerts(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_settings_create_command_builder;
    /** Request timeout in seconds. */
    timeout(value: string): az_network_application_gateway_http_settings_create_command_builder;
}
/**
 * Delete HTTP settings.
 *
 * Syntax:
 * ```
 * az network application-gateway http-settings delete [--gateway-name]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--resource-group]
 *                                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_http_settings_delete_command_builder extends CommandBuilder<az_network_application_gateway_http_settings_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_settings_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_settings_delete_command_builder;
    /** The name of the backed HTTP settings. */
    name(value: string): az_network_application_gateway_http_settings_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_settings_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_settings_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_settings_delete_command_builder;
}
/**
 * List HTTP settings.
 *
 * Syntax:
 * ```
 * az network application-gateway http-settings list --gateway-name
 *                                                   --resource-group
 *                                                   [--query-examples]
 *                                                   [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_http_settings_list_command_builder extends CommandBuilder<az_network_application_gateway_http_settings_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_settings_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_settings_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_http_settings_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_settings_list_command_builder;
}
/**
 * Get the details of a gateway's HTTP settings.
 *
 * Syntax:
 * ```
 * az network application-gateway http-settings show [--gateway-name]
 *                                                   [--ids]
 *                                                   [--name]
 *                                                   [--query-examples]
 *                                                   [--resource-group]
 *                                                   [--subscription]
 * ```
 */
declare class az_network_application_gateway_http_settings_show_command_builder extends CommandBuilder<az_network_application_gateway_http_settings_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_settings_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_settings_show_command_builder;
    /** The name of the backed HTTP settings. */
    name(value: string): az_network_application_gateway_http_settings_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_http_settings_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_settings_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_settings_show_command_builder;
}
/**
 * Update HTTP settings.
 *
 * Syntax:
 * ```
 * az network application-gateway http-settings update [--add]
 *                                                     [--affinity-cookie-name]
 *                                                     [--auth-certs]
 *                                                     [--connection-draining-timeout]
 *                                                     [--cookie-based-affinity {Disabled, Enabled}]
 *                                                     [--enable-probe {false, true}]
 *                                                     [--force-string]
 *                                                     [--gateway-name]
 *                                                     [--host-name]
 *                                                     [--host-name-from-backend-pool {false, true}]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--no-wait]
 *                                                     [--path]
 *                                                     [--port]
 *                                                     [--probe]
 *                                                     [--protocol {Http, Https}]
 *                                                     [--remove]
 *                                                     [--resource-group]
 *                                                     [--root-certs]
 *                                                     [--set]
 *                                                     [--subscription]
 *                                                     [--timeout]
 * ```
 */
declare class az_network_application_gateway_http_settings_update_command_builder extends CommandBuilder<az_network_application_gateway_http_settings_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Name used for the affinity cookie. */
    affinityCookieName(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Space-separated list of authentication certificates (names or IDs) to associate with the HTTP settings. */
    authCerts(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** The time in seconds after a backend server is removed during which on open connection remains active. Range: 0 (disabled) to 3600. */
    connectionDrainingTimeout(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Enable or disable cookie-based affinity. */
    cookieBasedAffinity(value: 'Disabled' | 'Enabled'): az_network_application_gateway_http_settings_update_command_builder;
    /** Whether the probe is enabled. */
    enableProbe(value: boolean): az_network_application_gateway_http_settings_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Host header sent to the backend servers. */
    hostName(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Use host name of the backend server as the host header. */
    hostNameFromBackendPool(value: boolean): az_network_application_gateway_http_settings_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** The name of the backed HTTP settings. */
    name(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Path that will prefix all HTTP requests. */
    path(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** The port number. */
    port(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Name or ID of the probe to associate with the HTTP settings. */
    probe(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** The HTTP settings protocol. */
    protocol(value: 'Http' | 'Https'): az_network_application_gateway_http_settings_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Space-separated list of trusted root certificates (names or IDs) to associate with the HTTP settings. --host-name or --host-name-from-backend-pool is required when this field is set. */
    rootCerts(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_http_settings_update_command_builder;
    /** Request timeout in seconds. */
    timeout(value: string): az_network_application_gateway_http_settings_update_command_builder;
}
/**
 * Assign a managed service identity to an application-gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway identity assign --identity
 *                                                [--gateway-name]
 *                                                [--ids]
 *                                                [--no-wait]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 *
 * @param {string} identity Name or ID of the ManagedIdentity Resource.
 */
declare class az_network_application_gateway_identity_assign_command_builder extends CommandBuilder<az_network_application_gateway_identity_assign_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, identity: string);
    /** Name or ID of the ManagedIdentity Resource. */
    identity(value: string): az_network_application_gateway_identity_assign_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_identity_assign_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_identity_assign_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_identity_assign_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_identity_assign_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_identity_assign_command_builder;
}
/**
 * Remove the managed service identity of an application-gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway identity remove [--gateway-name]
 *                                                [--ids]
 *                                                [--no-wait]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_identity_remove_command_builder extends CommandBuilder<az_network_application_gateway_identity_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_identity_remove_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_identity_remove_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_identity_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_identity_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_identity_remove_command_builder;
}
/**
 * Show the managed service identity of an application-gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway identity show [--gateway-name]
 *                                              [--ids]
 *                                              [--query-examples]
 *                                              [--resource-group]
 *                                              [--subscription]
 * ```
 */
declare class az_network_application_gateway_identity_show_command_builder extends CommandBuilder<az_network_application_gateway_identity_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_identity_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_identity_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_identity_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_identity_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_identity_show_command_builder;
}
/**
 * Add an IP configuration to a Private Link to scale up its capability.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link ip-config add --name
 *                                                           --private-link
 *                                                           [--gateway-name]
 *                                                           [--ids]
 *                                                           [--ip-address]
 *                                                           [--no-wait]
 *                                                           [--primary {false, true}]
 *                                                           [--resource-group]
 *                                                           [--subscription]
 * ```
 *
 * @param {string} name The name of the private IP for Private Link.
 * @param {string} privateLink The name of Private Link.
 */
declare class az_network_application_gateway_private_link_ip_config_add_command_builder extends CommandBuilder<az_network_application_gateway_private_link_ip_config_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, privateLink: string);
    /** The name of the private IP for Private Link. */
    name(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** The name of Private Link. */
    privateLink(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** The static private IP address of a subnet for Private Link. If omitting, a dynamic one will be created. */
    ipAddress(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** Whether the IP configuration is primary or not. */
    primary(value: boolean): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_ip_config_add_command_builder;
}
/**
 * List all the IP configuration of a Private Link.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link ip-config list --gateway-name
 *                                                            --private-link
 *                                                            --resource-group
 *                                                            [--query-examples]
 *                                                            [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} privateLink The name of Private Link.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_private_link_ip_config_list_command_builder extends CommandBuilder<az_network_application_gateway_private_link_ip_config_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, privateLink: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
    /** The name of Private Link. */
    privateLink(value: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_ip_config_list_command_builder;
}
/**
 * Remove an IP configuration from a Private Link to scale down its capability.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link ip-config remove --name
 *                                                              --private-link
 *                                                              [--gateway-name]
 *                                                              [--ids]
 *                                                              [--no-wait]
 *                                                              [--resource-group]
 *                                                              [--subscription]
 *                                                              [--yes]
 * ```
 *
 * @param {string} name The name of the private IP for Private Link.
 * @param {string} privateLink The name of Private Link.
 */
declare class az_network_application_gateway_private_link_ip_config_remove_command_builder extends CommandBuilder<az_network_application_gateway_private_link_ip_config_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, privateLink: string);
    /** The name of the private IP for Private Link. */
    name(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** The name of Private Link. */
    privateLink(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_application_gateway_private_link_ip_config_remove_command_builder;
}
/**
 * Show an IP configuration of a Private Link.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link ip-config show --name
 *                                                            --private-link
 *                                                            [--gateway-name]
 *                                                            [--ids]
 *                                                            [--query-examples]
 *                                                            [--resource-group]
 *                                                            [--subscription]
 * ```
 *
 * @param {string} name The name of the private IP for Private Link.
 * @param {string} privateLink The name of Private Link.
 */
declare class az_network_application_gateway_private_link_ip_config_show_command_builder extends CommandBuilder<az_network_application_gateway_private_link_ip_config_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, privateLink: string);
    /** The name of the private IP for Private Link. */
    name(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** The name of Private Link. */
    privateLink(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_ip_config_show_command_builder;
}
/**
 * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link ip-config wait [--created]
 *                                                            [--custom]
 *                                                            [--deleted]
 *                                                            [--exists]
 *                                                            [--gateway-name]
 *                                                            [--ids]
 *                                                            [--interval]
 *                                                            [--resource-group]
 *                                                            [--subscription]
 *                                                            [--timeout]
 *                                                            [--updated]
 * ```
 */
declare class az_network_application_gateway_private_link_ip_config_wait_command_builder extends CommandBuilder<az_network_application_gateway_private_link_ip_config_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_application_gateway_private_link_ip_config_wait_command_builder;
}
/**
 * Add a new Private Link with a default IP Configuration and associate it with an existing Frontend IP.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link add --frontend-ip
 *                                                 --name
 *                                                 --subnet
 *                                                 [--gateway-name]
 *                                                 [--ids]
 *                                                 [--ip-address]
 *                                                 [--no-wait]
 *                                                 [--primary {false, true}]
 *                                                 [--resource-group]
 *                                                 [--subnet-prefix]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} frontendIp The frontend IP which the Private Link will associate to.
 * @param {string} name The name of Private Link.
 * @param {string} subnet The name or an existing ID of a subnet within the same vnet of an application gateway.
 */
declare class az_network_application_gateway_private_link_add_command_builder extends CommandBuilder<az_network_application_gateway_private_link_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, frontendIp: string, name: string, subnet: string);
    /** The frontend IP which the Private Link will associate to. */
    frontendIp(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** The name of Private Link. */
    name(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** The name or an existing ID of a subnet within the same vnet of an application gateway. */
    subnet(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** The static private IP address of a subnet for Private Link. If omitting, a dynamic one will be created. */
    ipAddress(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** Whether the IP configuration is primary or not. */
    primary(value: boolean): az_network_application_gateway_private_link_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** The CIDR prefix to use when creating a new subnet. */
    subnetPrefix(value: string): az_network_application_gateway_private_link_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_add_command_builder;
}
/**
 * List all the Private Link.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link list --gateway-name
 *                                                  --resource-group
 *                                                  [--query-examples]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_private_link_list_command_builder extends CommandBuilder<az_network_application_gateway_private_link_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_private_link_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_list_command_builder;
}
/**
 * Remove a Private Link and clear association with Frontend IP. The subnet associate with a Private Link might need to clear manually.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link remove --name
 *                                                    [--gateway-name]
 *                                                    [--ids]
 *                                                    [--no-wait]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 *                                                    [--yes]
 * ```
 *
 * @param {string} name The name of Private Link.
 */
declare class az_network_application_gateway_private_link_remove_command_builder extends CommandBuilder<az_network_application_gateway_private_link_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** The name of Private Link. */
    name(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_remove_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_application_gateway_private_link_remove_command_builder;
}
/**
 * Show a Private Link.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link show --name
 *                                                  [--gateway-name]
 *                                                  [--ids]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} name The name of Private Link.
 */
declare class az_network_application_gateway_private_link_show_command_builder extends CommandBuilder<az_network_application_gateway_private_link_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** The name of Private Link. */
    name(value: string): az_network_application_gateway_private_link_show_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_private_link_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_show_command_builder;
}
/**
 * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
 *
 * Syntax:
 * ```
 * az network application-gateway private-link wait [--created]
 *                                                  [--custom]
 *                                                  [--deleted]
 *                                                  [--exists]
 *                                                  [--gateway-name]
 *                                                  [--ids]
 *                                                  [--interval]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 *                                                  [--timeout]
 *                                                  [--updated]
 * ```
 */
declare class az_network_application_gateway_private_link_wait_command_builder extends CommandBuilder<az_network_application_gateway_private_link_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_application_gateway_private_link_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_application_gateway_private_link_wait_command_builder;
}
/**
 * Create a probe.
 *
 * Syntax:
 * ```
 * az network application-gateway probe create --gateway-name
 *                                             --name
 *                                             --path
 *                                             --protocol {Http, Https}
 *                                             --resource-group
 *                                             [--host]
 *                                             [--host-name-from-http-settings {false, true}]
 *                                             [--interval]
 *                                             [--match-body]
 *                                             [--match-status-codes]
 *                                             [--min-servers]
 *                                             [--no-wait]
 *                                             [--port]
 *                                             [--subscription]
 *                                             [--threshold]
 *                                             [--timeout]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the probe.
 * @param {string} path The relative path of the probe. Valid paths start from "/".
 * @param {'Http' | 'Https'} protocol The HTTP settings protocol.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_probe_create_command_builder extends CommandBuilder<az_network_application_gateway_probe_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, path: string, protocol: 'Http' | 'Https', resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The relative path of the probe. Valid paths start from "/". */
    path(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The HTTP settings protocol. */
    protocol(value: 'Http' | 'Https'): az_network_application_gateway_probe_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The name of the host to send the probe. */
    host(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Use host header from HTTP settings. */
    hostNameFromHttpSettings(value: boolean): az_network_application_gateway_probe_create_command_builder;
    /** The time interval in seconds between consecutive probes. */
    interval(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Body that must be contained in the health response. */
    matchBody(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Space-separated list of allowed ranges of healthy status codes for the health response. */
    matchStatusCodes(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Minimum number of servers that are always marked healthy. */
    minServers(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only. */
    port(value: string): az_network_application_gateway_probe_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The number of failed probes after which the back end server is marked down. */
    threshold(value: string): az_network_application_gateway_probe_create_command_builder;
    /** The probe timeout in seconds. */
    timeout(value: string): az_network_application_gateway_probe_create_command_builder;
}
/**
 * Delete a probe.
 *
 * Syntax:
 * ```
 * az network application-gateway probe delete [--gateway-name]
 *                                             [--ids]
 *                                             [--name]
 *                                             [--no-wait]
 *                                             [--resource-group]
 *                                             [--subscription]
 * ```
 */
declare class az_network_application_gateway_probe_delete_command_builder extends CommandBuilder<az_network_application_gateway_probe_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_probe_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_probe_delete_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_application_gateway_probe_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_probe_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_probe_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_probe_delete_command_builder;
}
/**
 * List probes.
 *
 * Syntax:
 * ```
 * az network application-gateway probe list --gateway-name
 *                                           --resource-group
 *                                           [--query-examples]
 *                                           [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_probe_list_command_builder extends CommandBuilder<az_network_application_gateway_probe_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_probe_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_probe_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_probe_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_probe_list_command_builder;
}
/**
 * Get the details of a probe.
 *
 * Syntax:
 * ```
 * az network application-gateway probe show [--gateway-name]
 *                                           [--ids]
 *                                           [--name]
 *                                           [--query-examples]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_application_gateway_probe_show_command_builder extends CommandBuilder<az_network_application_gateway_probe_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_probe_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_probe_show_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_application_gateway_probe_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_probe_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_probe_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_probe_show_command_builder;
}
/**
 * Update a probe.
 *
 * Syntax:
 * ```
 * az network application-gateway probe update [--add]
 *                                             [--force-string]
 *                                             [--gateway-name]
 *                                             [--host]
 *                                             [--host-name-from-http-settings {false, true}]
 *                                             [--ids]
 *                                             [--interval]
 *                                             [--match-body]
 *                                             [--match-status-codes]
 *                                             [--min-servers]
 *                                             [--name]
 *                                             [--no-wait]
 *                                             [--path]
 *                                             [--port]
 *                                             [--protocol {Http, Https}]
 *                                             [--remove]
 *                                             [--resource-group]
 *                                             [--set]
 *                                             [--subscription]
 *                                             [--threshold]
 *                                             [--timeout]
 * ```
 */
declare class az_network_application_gateway_probe_update_command_builder extends CommandBuilder<az_network_application_gateway_probe_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_probe_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The name of the host to send the probe. */
    host(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Use host header from HTTP settings. */
    hostNameFromHttpSettings(value: boolean): az_network_application_gateway_probe_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The time interval in seconds between consecutive probes. */
    interval(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Body that must be contained in the health response. */
    matchBody(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Space-separated list of allowed ranges of healthy status codes for the health response. */
    matchStatusCodes(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Minimum number of servers that are always marked healthy. */
    minServers(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The relative path of the probe. Valid paths start from "/". */
    path(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only. */
    port(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The HTTP settings protocol. */
    protocol(value: 'Http' | 'Https'): az_network_application_gateway_probe_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_probe_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The number of failed probes after which the back end server is marked down. */
    threshold(value: string): az_network_application_gateway_probe_update_command_builder;
    /** The probe timeout in seconds. */
    timeout(value: string): az_network_application_gateway_probe_update_command_builder;
}
/**
 * Create a redirect configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway redirect-config create --gateway-name
 *                                                       --name
 *                                                       --resource-group
 *                                                       --type {Found, Permanent, SeeOther, Temporary}
 *                                                       [--include-path {false, true}]
 *                                                       [--include-query-string {false, true}]
 *                                                       [--no-wait]
 *                                                       [--subscription]
 *                                                       [--target-listener]
 *                                                       [--target-url]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the redirect configuration.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Found' | 'Permanent' | 'SeeOther' | 'Temporary'} type HTTP redirection type.
 */
declare class az_network_application_gateway_redirect_config_create_command_builder extends CommandBuilder<az_network_application_gateway_redirect_config_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string, type: 'Found' | 'Permanent' | 'SeeOther' | 'Temporary');
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** The name of the redirect configuration. */
    name(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** HTTP redirection type. */
    type(value: 'Found' | 'Permanent' | 'SeeOther' | 'Temporary'): az_network_application_gateway_redirect_config_create_command_builder;
    /** Include path in the redirected url. */
    includePath(value: boolean): az_network_application_gateway_redirect_config_create_command_builder;
    /** Include query string in the redirected url. */
    includeQueryString(value: boolean): az_network_application_gateway_redirect_config_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** Name or ID of the HTTP listener to redirect the request to. */
    targetListener(value: string): az_network_application_gateway_redirect_config_create_command_builder;
    /** URL to redirect the request to. */
    targetUrl(value: string): az_network_application_gateway_redirect_config_create_command_builder;
}
/**
 * Delete a redirect configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway redirect-config delete [--gateway-name]
 *                                                       [--ids]
 *                                                       [--name]
 *                                                       [--no-wait]
 *                                                       [--resource-group]
 *                                                       [--subscription]
 * ```
 */
declare class az_network_application_gateway_redirect_config_delete_command_builder extends CommandBuilder<az_network_application_gateway_redirect_config_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
    /** The name of the redirect configuration. */
    name(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_redirect_config_delete_command_builder;
}
/**
 * List redirect configurations.
 *
 * Syntax:
 * ```
 * az network application-gateway redirect-config list --gateway-name
 *                                                     --resource-group
 *                                                     [--query-examples]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_redirect_config_list_command_builder extends CommandBuilder<az_network_application_gateway_redirect_config_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_redirect_config_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_redirect_config_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_redirect_config_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_redirect_config_list_command_builder;
}
/**
 * Get the details of a redirect configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway redirect-config show [--gateway-name]
 *                                                     [--ids]
 *                                                     [--name]
 *                                                     [--query-examples]
 *                                                     [--resource-group]
 *                                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_redirect_config_show_command_builder extends CommandBuilder<az_network_application_gateway_redirect_config_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_redirect_config_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_redirect_config_show_command_builder;
    /** The name of the redirect configuration. */
    name(value: string): az_network_application_gateway_redirect_config_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_redirect_config_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_redirect_config_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_redirect_config_show_command_builder;
}
/**
 * Update a redirect configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway redirect-config update [--add]
 *                                                       [--force-string]
 *                                                       [--gateway-name]
 *                                                       [--ids]
 *                                                       [--include-path {false, true}]
 *                                                       [--include-query-string {false, true}]
 *                                                       [--name]
 *                                                       [--no-wait]
 *                                                       [--remove]
 *                                                       [--resource-group]
 *                                                       [--set]
 *                                                       [--subscription]
 *                                                       [--target-listener]
 *                                                       [--target-url]
 *                                                       [--type {Found, Permanent, SeeOther, Temporary}]
 * ```
 */
declare class az_network_application_gateway_redirect_config_update_command_builder extends CommandBuilder<az_network_application_gateway_redirect_config_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Include path in the redirected url. */
    includePath(value: boolean): az_network_application_gateway_redirect_config_update_command_builder;
    /** Include query string in the redirected url. */
    includeQueryString(value: boolean): az_network_application_gateway_redirect_config_update_command_builder;
    /** The name of the redirect configuration. */
    name(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** Name or ID of the HTTP listener to redirect the request to. */
    targetListener(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** URL to redirect the request to. */
    targetUrl(value: string): az_network_application_gateway_redirect_config_update_command_builder;
    /** HTTP redirection type. */
    type(value: 'Found' | 'Permanent' | 'SeeOther' | 'Temporary'): az_network_application_gateway_redirect_config_update_command_builder;
}
/**
 * Create a rewrite rule condition.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition create --gateway-name
 *                                                              --resource-group
 *                                                              --rule-name
 *                                                              --rule-set-name
 *                                                              --variable
 *                                                              [--ignore-case {false, true}]
 *                                                              [--negate {false, true}]
 *                                                              [--no-wait]
 *                                                              [--pattern]
 *                                                              [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} ruleName Name of the rewrite rule.
 * @param {string} ruleSetName Name of the rewrite rule set.
 * @param {string} variable The variable whose value is being evaluated.
 */
declare class az_network_application_gateway_rewrite_rule_condition_create_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string, ruleName: string, ruleSetName: string, variable: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Name of the rewrite rule. */
    ruleName(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** The variable whose value is being evaluated. */
    variable(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Make comparison case-insensitive. */
    ignoreCase(value: boolean): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Check the negation of the condition. */
    negate(value: boolean): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition. */
    pattern(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_create_command_builder;
}
/**
 * Delete a rewrite rule condition.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition delete --variable
 *                                                              [--gateway-name]
 *                                                              [--ids]
 *                                                              [--no-wait]
 *                                                              [--resource-group]
 *                                                              [--rule-name]
 *                                                              [--rule-set-name]
 *                                                              [--subscription]
 * ```
 *
 * @param {string} variable The variable whose value is being evaluated.
 */
declare class az_network_application_gateway_rewrite_rule_condition_delete_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, variable: string);
    /** The variable whose value is being evaluated. */
    variable(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Name of the rewrite rule. */
    ruleName(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_delete_command_builder;
}
/**
 * List rewrite rule conditions.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition list --gateway-name
 *                                                            --resource-group
 *                                                            --rule-name
 *                                                            --rule-set-name
 *                                                            [--query-examples]
 *                                                            [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} ruleName Name of the rewrite rule.
 * @param {string} ruleSetName Name of the rewrite rule set.
 */
declare class az_network_application_gateway_rewrite_rule_condition_list_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string, ruleName: string, ruleSetName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /** Name of the rewrite rule. */
    ruleName(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_list_command_builder;
}
/**
 * Lists all available server variables.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition list-server-variables [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_list_server_variables_command_builder;
}
/**
 * Get the details of a rewrite rule condition.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition show --variable
 *                                                            [--gateway-name]
 *                                                            [--ids]
 *                                                            [--query-examples]
 *                                                            [--resource-group]
 *                                                            [--rule-name]
 *                                                            [--rule-set-name]
 *                                                            [--subscription]
 * ```
 *
 * @param {string} variable The variable whose value is being evaluated.
 */
declare class az_network_application_gateway_rewrite_rule_condition_show_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, variable: string);
    /** The variable whose value is being evaluated. */
    variable(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Name of the rewrite rule. */
    ruleName(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_show_command_builder;
}
/**
 * Update a rewrite rule condition.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule condition update --variable
 *                                                              [--add]
 *                                                              [--force-string]
 *                                                              [--gateway-name]
 *                                                              [--ids]
 *                                                              [--ignore-case {false, true}]
 *                                                              [--negate {false, true}]
 *                                                              [--no-wait]
 *                                                              [--pattern]
 *                                                              [--remove]
 *                                                              [--resource-group]
 *                                                              [--rule-name]
 *                                                              [--rule-set-name]
 *                                                              [--set]
 *                                                              [--subscription]
 * ```
 *
 * @param {string} variable The variable whose value is being evaluated.
 */
declare class az_network_application_gateway_rewrite_rule_condition_update_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_condition_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, variable: string);
    /** The variable whose value is being evaluated. */
    variable(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Make comparison case-insensitive. */
    ignoreCase(value: boolean): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Check the negation of the condition. */
    negate(value: boolean): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition. */
    pattern(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Name of the rewrite rule. */
    ruleName(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_condition_update_command_builder;
}
/**
 * Create a rewrite rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule set create --gateway-name
 *                                                        --name
 *                                                        --resource-group
 *                                                        [--no-wait]
 *                                                        [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the rewrite rule set.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_rewrite_rule_set_create_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_set_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
    /** The name of the rewrite rule set. */
    name(value: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_set_create_command_builder;
}
/**
 * Delete a rewrite rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule set delete [--gateway-name]
 *                                                        [--ids]
 *                                                        [--name]
 *                                                        [--no-wait]
 *                                                        [--resource-group]
 *                                                        [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_set_delete_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_set_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /** The name of the rewrite rule set. */
    name(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_set_delete_command_builder;
}
/**
 * List rewrite rule sets.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule set list --gateway-name
 *                                                      --resource-group
 *                                                      [--query-examples]
 *                                                      [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_rewrite_rule_set_list_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_set_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_set_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_set_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_set_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_set_list_command_builder;
}
/**
 * Get the details of a rewrite rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule set show [--gateway-name]
 *                                                      [--ids]
 *                                                      [--name]
 *                                                      [--query-examples]
 *                                                      [--resource-group]
 *                                                      [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_set_show_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_set_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /** The name of the rewrite rule set. */
    name(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_set_show_command_builder;
}
/**
 * Update a rewrite rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule set update [--add]
 *                                                        [--force-string]
 *                                                        [--gateway-name]
 *                                                        [--ids]
 *                                                        [--name]
 *                                                        [--no-wait]
 *                                                        [--remove]
 *                                                        [--resource-group]
 *                                                        [--set]
 *                                                        [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_set_update_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_set_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** The name of the rewrite rule set. */
    name(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_set_update_command_builder;
}
/**
 * Create a rewrite rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule create --gateway-name
 *                                                    --name
 *                                                    --resource-group
 *                                                    --rule-set-name
 *                                                    [--enable-reroute {false, true}]
 *                                                    [--modified-path]
 *                                                    [--modified-query-string]
 *                                                    [--no-wait]
 *                                                    [--request-headers]
 *                                                    [--response-headers]
 *                                                    [--sequence]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name Name of the rewrite rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} ruleSetName Name of the rewrite rule set.
 */
declare class az_network_application_gateway_rewrite_rule_create_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string, ruleSetName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Name of the rewrite rule. */
    name(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. */
    enableReroute(value: boolean): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Url path for url rewrite. */
    modifiedPath(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Query string for url rewrite. */
    modifiedQueryString(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Space-separated list of HEADER=VALUE pairs. */
    requestHeaders(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Space-separated list of HEADER=VALUE pairs. */
    responseHeaders(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Determines the execution order of the rule in the rule set. */
    sequence(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_create_command_builder;
}
/**
 * Delete a rewrite rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule delete [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--resource-group]
 *                                                    [--rule-set-name]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_delete_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** Name of the rewrite rule. */
    name(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_delete_command_builder;
}
/**
 * List rewrite rules.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule list --gateway-name
 *                                                  --resource-group
 *                                                  --rule-set-name
 *                                                  [--query-examples]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} ruleSetName Name of the rewrite rule set.
 */
declare class az_network_application_gateway_rewrite_rule_list_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string, ruleSetName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_list_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_list_command_builder;
}
/**
 * Lists all available request headers.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule list-request-headers [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_list_request_headers_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_list_request_headers_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_list_request_headers_command_builder;
}
/**
 * Lists all available response headers.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule list-response-headers [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_list_response_headers_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_list_response_headers_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_list_response_headers_command_builder;
}
/**
 * Get the details of a rewrite rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule show [--gateway-name]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--rule-set-name]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_show_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** Name of the rewrite rule. */
    name(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_show_command_builder;
}
/**
 * Update a rewrite rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rewrite-rule update [--add]
 *                                                    [--enable-reroute {false, true}]
 *                                                    [--force-string]
 *                                                    [--gateway-name]
 *                                                    [--ids]
 *                                                    [--modified-path]
 *                                                    [--modified-query-string]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--remove]
 *                                                    [--request-headers]
 *                                                    [--resource-group]
 *                                                    [--response-headers]
 *                                                    [--rule-set-name]
 *                                                    [--sequence]
 *                                                    [--set]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_rewrite_rule_update_command_builder extends CommandBuilder<az_network_application_gateway_rewrite_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. */
    enableReroute(value: boolean): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Url path for url rewrite. */
    modifiedPath(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Query string for url rewrite. */
    modifiedQueryString(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Name of the rewrite rule. */
    name(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Space-separated list of HEADER=VALUE pairs. */
    requestHeaders(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Space-separated list of HEADER=VALUE pairs. */
    responseHeaders(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Name of the rewrite rule set. */
    ruleSetName(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Determines the execution order of the rule in the rule set. */
    sequence(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rewrite_rule_update_command_builder;
}
/**
 * Upload a trusted root certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway root-cert create --gateway-name
 *                                                 --name
 *                                                 --resource-group
 *                                                 [--cert-file]
 *                                                 [--keyvault-secret]
 *                                                 [--no-wait]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the trusted root certificate.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_root_cert_create_command_builder extends CommandBuilder<az_network_application_gateway_root_cert_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** The name of the trusted root certificate. */
    name(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** Certificate file path. */
    certFile(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** KeyVault secret ID. */
    keyvaultSecret(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_root_cert_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_root_cert_create_command_builder;
}
/**
 * Delete a trusted root certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway root-cert delete [--gateway-name]
 *                                                 [--ids]
 *                                                 [--name]
 *                                                 [--no-wait]
 *                                                 [--resource-group]
 *                                                 [--subscription]
 * ```
 */
declare class az_network_application_gateway_root_cert_delete_command_builder extends CommandBuilder<az_network_application_gateway_root_cert_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_root_cert_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_root_cert_delete_command_builder;
    /** The name of the trusted root certificate. */
    name(value: string): az_network_application_gateway_root_cert_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_root_cert_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_root_cert_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_root_cert_delete_command_builder;
}
/**
 * List trusted root certificates.
 *
 * Syntax:
 * ```
 * az network application-gateway root-cert list --gateway-name
 *                                               --resource-group
 *                                               [--query-examples]
 *                                               [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_root_cert_list_command_builder extends CommandBuilder<az_network_application_gateway_root_cert_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_root_cert_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_root_cert_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_root_cert_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_root_cert_list_command_builder;
}
/**
 * Get the details of a trusted root certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway root-cert show [--gateway-name]
 *                                               [--ids]
 *                                               [--name]
 *                                               [--query-examples]
 *                                               [--resource-group]
 *                                               [--subscription]
 * ```
 */
declare class az_network_application_gateway_root_cert_show_command_builder extends CommandBuilder<az_network_application_gateway_root_cert_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_root_cert_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_root_cert_show_command_builder;
    /** The name of the trusted root certificate. */
    name(value: string): az_network_application_gateway_root_cert_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_root_cert_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_root_cert_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_root_cert_show_command_builder;
}
/**
 * Update a trusted root certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway root-cert update [--add]
 *                                                 [--cert-file]
 *                                                 [--force-string]
 *                                                 [--gateway-name]
 *                                                 [--ids]
 *                                                 [--keyvault-secret]
 *                                                 [--name]
 *                                                 [--no-wait]
 *                                                 [--remove]
 *                                                 [--resource-group]
 *                                                 [--set]
 *                                                 [--subscription]
 * ```
 */
declare class az_network_application_gateway_root_cert_update_command_builder extends CommandBuilder<az_network_application_gateway_root_cert_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Certificate file path. */
    certFile(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** KeyVault secret ID. */
    keyvaultSecret(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** The name of the trusted root certificate. */
    name(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_root_cert_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_root_cert_update_command_builder;
}
/**
 * Create a rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rule create --gateway-name
 *                                            --name
 *                                            --resource-group
 *                                            [--address-pool]
 *                                            [--http-listener]
 *                                            [--http-settings]
 *                                            [--no-wait]
 *                                            [--redirect-config]
 *                                            [--rewrite-rule-set]
 *                                            [--rule-type]
 *                                            [--subscription]
 *                                            [--url-path-map]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the request routing rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_rule_create_command_builder extends CommandBuilder<az_network_application_gateway_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name of the request routing rule. */
    name(value: string): az_network_application_gateway_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the backend address pool. If only one exists, omit to use as default. */
    addressPool(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the HTTP listener. If only one exists, omit to use as default. */
    httpListener(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the HTTP settings. If only one exists, omit to use as default. */
    httpSettings(value: string): az_network_application_gateway_rule_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the redirect configuration to use with the created rule. */
    redirectConfig(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the rewrite rule set. */
    rewriteRuleSet(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The rule type (Basic, PathBasedRouting). */
    ruleType(value: string): az_network_application_gateway_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rule_create_command_builder;
    /** The name or ID of the URL path map. */
    urlPathMap(value: string): az_network_application_gateway_rule_create_command_builder;
}
/**
 * Delete a rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rule delete [--gateway-name]
 *                                            [--ids]
 *                                            [--name]
 *                                            [--no-wait]
 *                                            [--resource-group]
 *                                            [--subscription]
 * ```
 */
declare class az_network_application_gateway_rule_delete_command_builder extends CommandBuilder<az_network_application_gateway_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rule_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rule_delete_command_builder;
    /** The name of the request routing rule. */
    name(value: string): az_network_application_gateway_rule_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rule_delete_command_builder;
}
/**
 * List rules.
 *
 * Syntax:
 * ```
 * az network application-gateway rule list --gateway-name
 *                                          --resource-group
 *                                          [--query-examples]
 *                                          [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_rule_list_command_builder extends CommandBuilder<az_network_application_gateway_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rule_list_command_builder;
}
/**
 * Get the details of a rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rule show [--gateway-name]
 *                                          [--ids]
 *                                          [--name]
 *                                          [--query-examples]
 *                                          [--resource-group]
 *                                          [--subscription]
 * ```
 */
declare class az_network_application_gateway_rule_show_command_builder extends CommandBuilder<az_network_application_gateway_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rule_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rule_show_command_builder;
    /** The name of the request routing rule. */
    name(value: string): az_network_application_gateway_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rule_show_command_builder;
}
/**
 * Update a rule.
 *
 * Syntax:
 * ```
 * az network application-gateway rule update [--add]
 *                                            [--address-pool]
 *                                            [--force-string]
 *                                            [--gateway-name]
 *                                            [--http-listener]
 *                                            [--http-settings]
 *                                            [--ids]
 *                                            [--name]
 *                                            [--no-wait]
 *                                            [--redirect-config]
 *                                            [--remove]
 *                                            [--resource-group]
 *                                            [--rewrite-rule-set]
 *                                            [--rule-type]
 *                                            [--set]
 *                                            [--subscription]
 *                                            [--url-path-map]
 * ```
 */
declare class az_network_application_gateway_rule_update_command_builder extends CommandBuilder<az_network_application_gateway_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the backend address pool. */
    addressPool(value: string): az_network_application_gateway_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the HTTP listener. */
    httpListener(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the backend HTTP settings. */
    httpSettings(value: string): az_network_application_gateway_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name of the request routing rule. */
    name(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the redirect configuration to use with the created rule. */
    redirectConfig(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the rewrite rule set. */
    rewriteRuleSet(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The rule type (Basic, PathBasedRouting). */
    ruleType(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_rule_update_command_builder;
    /** The name or ID of the URL path map. */
    urlPathMap(value: string): az_network_application_gateway_rule_update_command_builder;
}
/**
 * Upload an SSL certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-cert create --gateway-name
 *                                                --name
 *                                                --resource-group
 *                                                [--cert-file]
 *                                                [--cert-password]
 *                                                [--key-vault-secret-id]
 *                                                [--no-wait]
 *                                                [--subscription]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the SSL certificate.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_ssl_cert_create_command_builder extends CommandBuilder<az_network_application_gateway_ssl_cert_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** The name of the SSL certificate. */
    name(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** The path to the PFX certificate file. */
    certFile(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** Certificate password. */
    certPassword(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in Azure KeyVault. */
    keyVaultSecretId(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_cert_create_command_builder;
}
/**
 * Delete an SSL certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-cert delete [--gateway-name]
 *                                                [--ids]
 *                                                [--name]
 *                                                [--no-wait]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_cert_delete_command_builder extends CommandBuilder<az_network_application_gateway_ssl_cert_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
    /** The name of the SSL certificate. */
    name(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_cert_delete_command_builder;
}
/**
 * List SSL certificates.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-cert list --gateway-name
 *                                              --resource-group
 *                                              [--query-examples]
 *                                              [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_ssl_cert_list_command_builder extends CommandBuilder<az_network_application_gateway_ssl_cert_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_cert_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_cert_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_ssl_cert_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_cert_list_command_builder;
}
/**
 * Get the details of an SSL certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-cert show [--gateway-name]
 *                                              [--ids]
 *                                              [--name]
 *                                              [--query-examples]
 *                                              [--resource-group]
 *                                              [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_cert_show_command_builder extends CommandBuilder<az_network_application_gateway_ssl_cert_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
    /** The name of the SSL certificate. */
    name(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_cert_show_command_builder;
}
/**
 * Update an SSL certificate.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-cert update [--add]
 *                                                [--cert-file]
 *                                                [--cert-password]
 *                                                [--force-string]
 *                                                [--gateway-name]
 *                                                [--ids]
 *                                                [--key-vault-secret-id]
 *                                                [--name]
 *                                                [--no-wait]
 *                                                [--remove]
 *                                                [--resource-group]
 *                                                [--set]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_cert_update_command_builder extends CommandBuilder<az_network_application_gateway_ssl_cert_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** The path to the PFX certificate file. */
    certFile(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Certificate password. */
    certPassword(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in Azure KeyVault. */
    keyVaultSecretId(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** The name of the SSL certificate. */
    name(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_cert_update_command_builder;
}
/**
 * Lists all SSL predefined policies for configuring SSL policy.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-policy predefined list [--query-examples]
 *                                                           [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_policy_predefined_list_command_builder extends CommandBuilder<az_network_application_gateway_ssl_policy_predefined_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_ssl_policy_predefined_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_policy_predefined_list_command_builder;
}
/**
 * Gets SSL predefined policy with the specified policy name.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-policy predefined show --name
 *                                                           [--query-examples]
 *                                                           [--subscription]
 * ```
 *
 * @param {string} name Name of Ssl predefined policy.
 */
declare class az_network_application_gateway_ssl_policy_predefined_show_command_builder extends CommandBuilder<az_network_application_gateway_ssl_policy_predefined_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** Name of Ssl predefined policy. */
    name(value: string): az_network_application_gateway_ssl_policy_predefined_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_ssl_policy_predefined_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_policy_predefined_show_command_builder;
}
/**
 * Lists available SSL options for configuring SSL policy.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-policy list-options [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_policy_list_options_command_builder extends CommandBuilder<az_network_application_gateway_ssl_policy_list_options_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_policy_list_options_command_builder;
}
/**
 * Update or clear SSL policy settings.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-policy set [--cipher-suites]
 *                                               [--disabled-ssl-protocols]
 *                                               [--gateway-name]
 *                                               [--ids]
 *                                               [--min-protocol-version]
 *                                               [--name]
 *                                               [--no-wait]
 *                                               [--policy-type]
 *                                               [--resource-group]
 *                                               [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_policy_set_command_builder extends CommandBuilder<az_network_application_gateway_ssl_policy_set_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Ssl cipher suites to be enabled in the specified order to application gateway. */
    cipherSuites(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Space-separated list of protocols to disable. */
    disabledSslProtocols(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Minimum version of Ssl protocol to be supported on application gateway. */
    minProtocolVersion(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Name of Ssl predefined policy. */
    name(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Type of Ssl Policy. */
    policyType(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_policy_set_command_builder;
}
/**
 * Get the details of gateway's SSL policy settings.
 *
 * Syntax:
 * ```
 * az network application-gateway ssl-policy show [--gateway-name]
 *                                                [--ids]
 *                                                [--query-examples]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_ssl_policy_show_command_builder extends CommandBuilder<az_network_application_gateway_ssl_policy_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_ssl_policy_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_ssl_policy_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_ssl_policy_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_ssl_policy_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_ssl_policy_show_command_builder;
}
/**
 * Create a rule for a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map rule create --gateway-name
 *                                                         --name
 *                                                         --path-map-name
 *                                                         --paths
 *                                                         --resource-group
 *                                                         [--address-pool]
 *                                                         [--http-settings]
 *                                                         [--no-wait]
 *                                                         [--redirect-config]
 *                                                         [--rewrite-rule-set]
 *                                                         [--subscription]
 *                                                         [--waf-policy]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the url-path-map rule.
 * @param {string} pathMapName The name of the URL path map.
 * @param {string} paths Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/").
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_url_path_map_rule_create_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, pathMapName: string, paths: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name of the url-path-map rule. */
    name(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name of the URL path map. */
    pathMapName(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/"). */
    paths(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name or ID of the backend address pool to use with the created rule. */
    addressPool(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name or ID of the HTTP settings to use with the created rule. */
    httpSettings(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name or ID of the redirect configuration to use with the created rule. */
    redirectConfig(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** The name or ID of the rewrite rule set. If not specified, the default for the map will be used. */
    rewriteRuleSet(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
    /** Name or ID of a Firewall Policy resource. */
    wafPolicy(value: string): az_network_application_gateway_url_path_map_rule_create_command_builder;
}
/**
 * Delete a rule of a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map rule delete [--gateway-name]
 *                                                         [--ids]
 *                                                         [--name]
 *                                                         [--no-wait]
 *                                                         [--path-map-name]
 *                                                         [--resource-group]
 *                                                         [--subscription]
 * ```
 */
declare class az_network_application_gateway_url_path_map_rule_delete_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** The name of the url-path-map rule. */
    name(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** The name of the URL path map. */
    pathMapName(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_rule_delete_command_builder;
}
/**
 * Create a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map create --gateway-name
 *                                                    --name
 *                                                    --paths
 *                                                    --resource-group
 *                                                    [--address-pool]
 *                                                    [--default-address-pool]
 *                                                    [--default-http-settings]
 *                                                    [--default-redirect-config]
 *                                                    [--default-rewrite-rule-set]
 *                                                    [--http-settings]
 *                                                    [--no-wait]
 *                                                    [--redirect-config]
 *                                                    [--rewrite-rule-set]
 *                                                    [--rule-name]
 *                                                    [--subscription]
 *                                                    [--waf-policy]
 * ```
 *
 * @param {string} gatewayName Name of the application gateway.
 * @param {string} name The name of the URL path map.
 * @param {string} paths Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/").
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_url_path_map_create_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, paths: string, resourceGroup: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name of the URL path map. */
    name(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** Space-separated list of paths to associate with the rule. Valid paths start and end with "/" (ex: "/bar/"). */
    paths(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the backend address pool to use with the created rule. */
    addressPool(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the default backend address pool, if different from --address-pool. */
    defaultAddressPool(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the default HTTP settings, if different from --http-settings. */
    defaultHttpSettings(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the default redirect configuration. */
    defaultRedirectConfig(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the default rewrite rule set, if different from --rewrite-rule-set. */
    defaultRewriteRuleSet(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the HTTP settings to use with the created rule. */
    httpSettings(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the redirect configuration to use with the created rule. */
    redirectConfig(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name or ID of the rewrite rule set. If not specified, the default for the map will be used. */
    rewriteRuleSet(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** The name of the url-path-map rule. */
    ruleName(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_create_command_builder;
    /** Name or ID of a Firewall Policy resource. */
    wafPolicy(value: string): az_network_application_gateway_url_path_map_create_command_builder;
}
/**
 * Delete a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map delete [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_url_path_map_delete_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
    /** The name of the URL path map. */
    name(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_delete_command_builder;
}
/**
 * List URL path maps.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map list --gateway-name
 *                                                  --resource-group
 *                                                  [--query-examples]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName The name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_url_path_map_list_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_url_path_map_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_list_command_builder;
}
/**
 * Get the details of a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map show [--gateway-name]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_application_gateway_url_path_map_show_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** The name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_url_path_map_show_command_builder;
    /** The name of the URL path map. */
    name(value: string): az_network_application_gateway_url_path_map_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_url_path_map_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_show_command_builder;
}
/**
 * Update a URL path map.
 *
 * Syntax:
 * ```
 * az network application-gateway url-path-map update [--add]
 *                                                    [--default-address-pool]
 *                                                    [--default-http-settings]
 *                                                    [--default-redirect-config]
 *                                                    [--default-rewrite-rule-set]
 *                                                    [--force-string]
 *                                                    [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--no-wait]
 *                                                    [--remove]
 *                                                    [--resource-group]
 *                                                    [--set]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_url_path_map_update_command_builder extends CommandBuilder<az_network_application_gateway_url_path_map_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** The name or ID of the default backend address pool. */
    defaultAddressPool(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** The name or ID of the default HTTP settings. */
    defaultHttpSettings(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** The name or ID of the default redirect configuration. */
    defaultRedirectConfig(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** The name or ID of the default rewrite rule set. */
    defaultRewriteRuleSet(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** The name of the URL path map. */
    name(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_url_path_map_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_url_path_map_update_command_builder;
}
/**
 * Get information on available WAF rule sets, rule groups, and rule IDs.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-config list-rule-sets [--group]
 *                                                          [--subscription]
 *                                                          [--type]
 *                                                          [--version]
 * ```
 */
declare class az_network_application_gateway_waf_config_list_rule_sets_command_builder extends CommandBuilder<az_network_application_gateway_waf_config_list_rule_sets_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** List rules for the specified rule group. Use `\*` to list rules for all groups. Omit to suppress listing individual rules. */
    group(value: string): az_network_application_gateway_waf_config_list_rule_sets_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_config_list_rule_sets_command_builder;
    /** Rule set type to list. Omit to list all types. */
    type(value: string): az_network_application_gateway_waf_config_list_rule_sets_command_builder;
    /** Rule set version to list. Omit to list all versions. */
    version(value: string): az_network_application_gateway_waf_config_list_rule_sets_command_builder;
}
/**
 * Update the firewall configuration of a web application.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-config set --enabled {false, true}
 *                                               [--disabled-rule-groups]
 *                                               [--disabled-rules]
 *                                               [--exclusion]
 *                                               [--file-upload-limit]
 *                                               [--firewall-mode {Detection, Prevention}]
 *                                               [--gateway-name]
 *                                               [--ids]
 *                                               [--max-request-body-size]
 *                                               [--no-wait]
 *                                               [--request-body-check {false, true}]
 *                                               [--resource-group]
 *                                               [--rule-set-type]
 *                                               [--rule-set-version]
 *                                               [--subscription]
 * ```
 *
 * @param {boolean} enabled Specify whether the application firewall is enabled.
 */
declare class az_network_application_gateway_waf_config_set_command_builder extends CommandBuilder<az_network_application_gateway_waf_config_set_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, enabled: boolean);
    /** Specify whether the application firewall is enabled. */
    enabled(value: boolean): az_network_application_gateway_waf_config_set_command_builder;
    /** Space-separated list of rule groups to disable. To disable individual rules, use `--disabled-rules`. */
    disabledRuleGroups(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Space-separated list of rule IDs to disable. */
    disabledRules(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Add an exclusion expression to the WAF check. */
    exclusion(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** File upload size limit in MB. */
    fileUploadLimit(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Web application firewall mode. */
    firewallMode(value: 'Detection' | 'Prevention'): az_network_application_gateway_waf_config_set_command_builder;
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Max request body size in KB. */
    maxRequestBodySize(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Allow WAF to check the request body. */
    requestBodyCheck(value: boolean): az_network_application_gateway_waf_config_set_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Rule set type. */
    ruleSetType(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Rule set version. */
    ruleSetVersion(value: string): az_network_application_gateway_waf_config_set_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_config_set_command_builder;
}
/**
 * Get the firewall configuration of a web application.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-config show [--gateway-name]
 *                                                [--ids]
 *                                                [--query-examples]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_config_show_command_builder extends CommandBuilder<az_network_application_gateway_waf_config_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the application gateway. */
    gatewayName(value: string): az_network_application_gateway_waf_config_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_config_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_config_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_config_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_config_show_command_builder;
}
/**
 * A match condition to an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule match-condition add --match-variables
 *                                                                           --operator {BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual, Regex}
 *                                                                           --values
 *                                                                           [--ids]
 *                                                                           [--name]
 *                                                                           [--negate {false, true}]
 *                                                                           [--policy-name]
 *                                                                           [--resource-group]
 *                                                                           [--subscription]
 *                                                                           [--transforms {HtmlEntityDecode, Lowercase, RemoveNulls, Trim, UrlDecode, UrlEncode}]
 * ```
 *
 * @param {string} matchVariables Space-separated list of variables to use when matching. Variable values: RemoteAddr, RequestMethod, QueryString, PostArgs, RequestUri, RequestHeaders, RequestBody, RequestCookies.
 * @param {'BeginsWith' | 'Contains' | 'EndsWith' | 'Equal' | 'GeoMatch' | 'GreaterThan' | 'GreaterThanOrEqual' | 'IPMatch' | 'LessThan' | 'LessThanOrEqual' | 'Regex'} operator Operator for matching.
 * @param {string} values Space-separated list of values to match.
 */
declare class az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, matchVariables: string, operator: 'BeginsWith' | 'Contains' | 'EndsWith' | 'Equal' | 'GeoMatch' | 'GreaterThan' | 'GreaterThanOrEqual' | 'IPMatch' | 'LessThan' | 'LessThanOrEqual' | 'Regex', values: string);
    /** Space-separated list of variables to use when matching. Variable values: RemoteAddr, RequestMethod, QueryString, PostArgs, RequestUri, RequestHeaders, RequestBody, RequestCookies. */
    matchVariables(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Operator for matching. */
    operator(value: 'BeginsWith' | 'Contains' | 'EndsWith' | 'Equal' | 'GeoMatch' | 'GreaterThan' | 'GreaterThanOrEqual' | 'IPMatch' | 'LessThan' | 'LessThanOrEqual' | 'Regex'): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Space-separated list of values to match. */
    values(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Match the negative of the condition. */
    negate(value: boolean): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
    /** Space-separated list of transforms to apply when matching. */
    transforms(value: 'HtmlEntityDecode' | 'Lowercase' | 'RemoveNulls' | 'Trim' | 'UrlDecode' | 'UrlEncode'): az_network_application_gateway_waf_policy_custom_rule_match_condition_add_command_builder;
}
/**
 * List application gateway WAF policy custom rule match conditions.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule match-condition list --name
 *                                                                            --policy-name
 *                                                                            --resource-group
 *                                                                            [--query-examples]
 *                                                                            [--subscription]
 * ```
 *
 * @param {string} name Name of the WAF policy rule.
 * @param {string} policyName The name of the application gateway WAF policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, policyName: string, resourceGroup: string);
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_list_command_builder;
}
/**
 * Remove a match condition from an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule match-condition remove --index
 *                                                                              [--ids]
 *                                                                              [--name]
 *                                                                              [--policy-name]
 *                                                                              [--resource-group]
 *                                                                              [--subscription]
 * ```
 *
 * @param {string} index Index of the match condition to remove.
 */
declare class az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, index: string);
    /** Index of the match condition to remove. */
    index(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_match_condition_remove_command_builder;
}
/**
 * Create an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule create --action {Allow, Block, Log}
 *                                                              --name
 *                                                              --policy-name
 *                                                              --priority
 *                                                              --resource-group
 *                                                              --rule-type {Invalid, MatchRule}
 *                                                              [--subscription]
 * ```
 *
 * @param {'Allow' | 'Block' | 'Log'} action Action to take.
 * @param {string} name Name of the WAF policy rule.
 * @param {string} policyName The name of the application gateway WAF policy.
 * @param {string} priority Rule priority. Lower values are evaluated prior to higher values.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Invalid' | 'MatchRule'} ruleType Type of rule.
 */
declare class az_network_application_gateway_waf_policy_custom_rule_create_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, action: 'Allow' | 'Block' | 'Log', name: string, policyName: string, priority: string, resourceGroup: string, ruleType: 'Invalid' | 'MatchRule');
    /** Action to take. */
    action(value: 'Allow' | 'Block' | 'Log'): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** Rule priority. Lower values are evaluated prior to higher values. */
    priority(value: string): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** Type of rule. */
    ruleType(value: 'Invalid' | 'MatchRule'): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_create_command_builder;
}
/**
 * Delete an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule delete [--ids]
 *                                                              [--name]
 *                                                              [--policy-name]
 *                                                              [--resource-group]
 *                                                              [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_custom_rule_delete_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_delete_command_builder;
}
/**
 * List application gateway WAF policy custom rules.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule list --policy-name
 *                                                            --resource-group
 *                                                            [--query-examples]
 *                                                            [--subscription]
 * ```
 *
 * @param {string} policyName The name of the application gateway WAF policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_custom_rule_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_custom_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_list_command_builder;
}
/**
 * Get the details of an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule show [--ids]
 *                                                            [--name]
 *                                                            [--policy-name]
 *                                                            [--query-examples]
 *                                                            [--resource-group]
 *                                                            [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_custom_rule_show_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_show_command_builder;
}
/**
 * Update an application gateway WAF policy custom rule.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy custom-rule update [--action {Allow, Block, Log}]
 *                                                              [--add]
 *                                                              [--force-string]
 *                                                              [--ids]
 *                                                              [--name]
 *                                                              [--policy-name]
 *                                                              [--priority]
 *                                                              [--remove]
 *                                                              [--resource-group]
 *                                                              [--rule-type {Invalid, MatchRule}]
 *                                                              [--set]
 *                                                              [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_custom_rule_update_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_custom_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Action to take. */
    action(value: 'Allow' | 'Block' | 'Log'): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Name of the WAF policy rule. */
    name(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** The name of the application gateway WAF policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Rule priority. Lower values are evaluated prior to higher values. */
    priority(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Type of rule. */
    ruleType(value: 'Invalid' | 'MatchRule'): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_custom_rule_update_command_builder;
}
/**
 * Add an OWASP CRS exclusion rule to the WAF policy managed rules.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule exclusion add --match-variable {RequestArgNames, RequestCookieNames, RequestHeaderNames}
 *                                                                      --policy-name
 *                                                                      --resource-group
 *                                                                      --selector
 *                                                                      --selector-match-operator {Contains, EndsWith, Equals, EqualsAny, StartsWith}
 *                                                                      [--subscription]
 * ```
 *
 * @param {'RequestArgNames' | 'RequestCookieNames' | 'RequestHeaderNames'} matchVariable The variable to be excluded.
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} selector When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
 * @param {'Contains' | 'EndsWith' | 'Equals' | 'EqualsAny' | 'StartsWith'} selectorMatchOperator When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, matchVariable: 'RequestArgNames' | 'RequestCookieNames' | 'RequestHeaderNames', policyName: string, resourceGroup: string, selector: string, selectorMatchOperator: 'Contains' | 'EndsWith' | 'Equals' | 'EqualsAny' | 'StartsWith');
    /** The variable to be excluded. */
    matchVariable(value: 'RequestArgNames' | 'RequestCookieNames' | 'RequestHeaderNames'): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /** When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to. */
    selector(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /** When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to. */
    selectorMatchOperator(value: 'Contains' | 'EndsWith' | 'Equals' | 'EqualsAny' | 'StartsWith'): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_add_command_builder;
}
/**
 * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule exclusion list --policy-name
 *                                                                       --resource-group
 *                                                                       [--query-examples]
 *                                                                       [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_list_command_builder;
}
/**
 * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule exclusion remove --policy-name
 *                                                                         --resource-group
 *                                                                         [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_exclusion_remove_command_builder;
}
/**
 * Add managed rule set to the WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule rule-set add --policy-name
 *                                                                     --resource-group
 *                                                                     --type {Microsoft_BotManagerRuleSet, OWASP}
 *                                                                     --version {0.1, 2.2.9, 3.0, 3.1}
 *                                                                     [--group-name]
 *                                                                     [--rules]
 *                                                                     [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
 * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1');
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** The type of the web application firewall rule set. */
    type(value: 'Microsoft_BotManagerRuleSet' | 'OWASP'): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet. */
    version(value: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** The name of the web application firewall rule set group. */
    groupName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** List of rules that will be disabled. */
    rules(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_add_command_builder;
}
/**
 * List all managed rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule rule-set list --policy-name
 *                                                                      --resource-group
 *                                                                      [--query-examples]
 *                                                                      [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_list_command_builder;
}
/**
 * Remove a managed rule set by rule set group name if rule_group_name is specified. Otherwise, remove all rule set.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule rule-set remove --policy-name
 *                                                                        --resource-group
 *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
 *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
 *                                                                        [--group-name]
 *                                                                        [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
 * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1');
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /** The type of the web application firewall rule set. */
    type(value: 'Microsoft_BotManagerRuleSet' | 'OWASP'): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /** The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet. */
    version(value: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /** The name of the web application firewall rule set group. */
    groupName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_remove_command_builder;
}
/**
 * Update(Override) existing rule set of a WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy managed-rule rule-set update --group-name
 *                                                                        --policy-name
 *                                                                        --resource-group
 *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
 *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
 *                                                                        [--add]
 *                                                                        [--force-string]
 *                                                                        [--remove]
 *                                                                        [--rules]
 *                                                                        [--set]
 *                                                                        [--subscription]
 * ```
 *
 * @param {string} groupName The name of the web application firewall rule set group.
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Microsoft_BotManagerRuleSet' | 'OWASP'} type The type of the web application firewall rule set.
 * @param {'0.1' | '2.2.9' | '3.0' | '3.1'} version The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet.
 */
declare class az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, groupName: string, policyName: string, resourceGroup: string, type: 'Microsoft_BotManagerRuleSet' | 'OWASP', version: '0.1' | '2.2.9' | '3.0' | '3.1');
    /** The name of the web application firewall rule set group. */
    groupName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** The type of the web application firewall rule set. */
    type(value: 'Microsoft_BotManagerRuleSet' | 'OWASP'): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet. */
    version(value: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** List of rules that will be disabled. */
    rules(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_managed_rule_rule_set_update_command_builder;
}
/**
 * List properties of a web application firewall global configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy policy-setting list --policy-name
 *                                                               --resource-group
 *                                                               [--query-examples]
 *                                                               [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_policy_setting_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_policy_setting_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_policy_setting_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_policy_setting_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_policy_setting_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_policy_setting_list_command_builder;
}
/**
 * Update properties of a web application firewall global configuration.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy policy-setting update --policy-name
 *                                                                 --resource-group
 *                                                                 [--add]
 *                                                                 [--file-upload-limit-in-mb]
 *                                                                 [--force-string]
 *                                                                 [--max-request-body-size-in-kb]
 *                                                                 [--mode {Detection, Prevention}]
 *                                                                 [--remove]
 *                                                                 [--request-body-check {false, true}]
 *                                                                 [--set]
 *                                                                 [--state {Disabled, Enabled}]
 *                                                                 [--subscription]
 * ```
 *
 * @param {string} policyName The name of the web application firewall policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_policy_setting_update_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_policy_setting_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** The name of the web application firewall policy. */
    policyName(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Maximum file upload size in Mb for WAF.". */
    fileUploadLimitInMb(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Maximum request body size in Kb for WAF. */
    maxRequestBodySizeInKb(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Describes if it is in detection mode or prevention mode at policy level. */
    mode(value: 'Detection' | 'Prevention'): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Specified to require WAF to check request Body. */
    requestBodyCheck(value: boolean): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Describes if the policy is in enabled state or disabled state. */
    state(value: 'Disabled' | 'Enabled'): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_policy_setting_update_command_builder;
}
/**
 * Create an application gateway WAF policy.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy create --name
 *                                                  --resource-group
 *                                                  [--location]
 *                                                  [--subscription]
 *                                                  [--tags]
 *                                                  [--type {Microsoft_BotManagerRuleSet, OWASP}]
 *                                                  [--version {0.1, 2.2.9, 3.0, 3.1}]
 * ```
 *
 * @param {string} name The name of the application gateway WAF policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_waf_policy_create_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the application gateway WAF policy. */
    name(value: string): az_network_application_gateway_waf_policy_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_application_gateway_waf_policy_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_application_gateway_waf_policy_create_command_builder;
    /** The type of the web application firewall rule set. */
    type(value: 'Microsoft_BotManagerRuleSet' | 'OWASP'): az_network_application_gateway_waf_policy_create_command_builder;
    /** The version of the web application firewall rule set type. 0.1 is used for Microsoft_BotManagerRuleSet. */
    version(value: '0.1' | '2.2.9' | '3.0' | '3.1'): az_network_application_gateway_waf_policy_create_command_builder;
}
/**
 * Delete an application gateway WAF policy.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy delete [--ids]
 *                                                  [--name]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_delete_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_delete_command_builder;
    /** The name of the application gateway WAF policy. */
    name(value: string): az_network_application_gateway_waf_policy_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_delete_command_builder;
}
/**
 * List application gateway WAF policies.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy list [--query-examples]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_list_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_list_command_builder;
}
/**
 * Get the details of an application gateway WAF policy.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy show [--ids]
 *                                                [--name]
 *                                                [--query-examples]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 */
declare class az_network_application_gateway_waf_policy_show_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_show_command_builder;
    /** The name of the application gateway WAF policy. */
    name(value: string): az_network_application_gateway_waf_policy_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_waf_policy_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_show_command_builder;
}
/**
 * Update an application gateway WAF policy.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy update [--add]
 *                                                  [--force-string]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--remove]
 *                                                  [--resource-group]
 *                                                  [--set]
 *                                                  [--subscription]
 *                                                  [--tags]
 * ```
 */
declare class az_network_application_gateway_waf_policy_update_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** The name of the application gateway WAF policy. */
    name(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_application_gateway_waf_policy_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the application gateway WAF policy is met.
 *
 * Syntax:
 * ```
 * az network application-gateway waf-policy wait [--created]
 *                                                [--custom]
 *                                                [--deleted]
 *                                                [--exists]
 *                                                [--ids]
 *                                                [--interval]
 *                                                [--name]
 *                                                [--resource-group]
 *                                                [--subscription]
 *                                                [--timeout]
 *                                                [--updated]
 * ```
 */
declare class az_network_application_gateway_waf_policy_wait_command_builder extends CommandBuilder<az_network_application_gateway_waf_policy_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** The name of the application gateway WAF policy. */
    name(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_application_gateway_waf_policy_wait_command_builder;
}
/**
 * Create an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway create --name
 *                                       --resource-group
 *                                       [--capacity]
 *                                       [--cert-file]
 *                                       [--cert-password]
 *                                       [--connection-draining-timeout]
 *                                       [--custom-error-pages]
 *                                       [--enable-private-link]
 *                                       [--frontend-port]
 *                                       [--http-settings-cookie-based-affinity {Disabled, Enabled}]
 *                                       [--http-settings-port]
 *                                       [--http-settings-protocol {Http, Https}]
 *                                       [--http2 {Disabled, Enabled}]
 *                                       [--identity]
 *                                       [--key-vault-secret-id]
 *                                       [--location]
 *                                       [--max-capacity]
 *                                       [--min-capacity]
 *                                       [--no-wait]
 *                                       [--private-ip-address]
 *                                       [--private-link-ip-address]
 *                                       [--private-link-primary {false, true}]
 *                                       [--private-link-subnet]
 *                                       [--private-link-subnet-prefix]
 *                                       [--public-ip-address]
 *                                       [--public-ip-address-allocation]
 *                                       [--routing-rule-type {Basic, PathBasedRouting}]
 *                                       [--servers]
 *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
 *                                       [--subnet]
 *                                       [--subnet-address-prefix]
 *                                       [--subscription]
 *                                       [--tags]
 *                                       [--validate]
 *                                       [--vnet-address-prefix]
 *                                       [--vnet-name]
 *                                       [--waf-policy]
 *                                       [--zones {1, 2, 3}]
 * ```
 *
 * @param {string} name Name of the application gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_application_gateway_create_command_builder extends CommandBuilder<az_network_application_gateway_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_create_command_builder;
    /** The number of instances to use with the application gateway. */
    capacity(value: string): az_network_application_gateway_create_command_builder;
    /** The path to the PFX certificate file. */
    certFile(value: string): az_network_application_gateway_create_command_builder;
    /** The certificate password. */
    certPassword(value: string): az_network_application_gateway_create_command_builder;
    /** The time in seconds after a backend server is removed during which on open connection remains active. Range: 0 (disabled) to 3600. */
    connectionDrainingTimeout(value: string): az_network_application_gateway_create_command_builder;
    /** Space-separated list of custom error pages in `STATUS_CODE=URL` format. */
    customErrorPages(value: string): az_network_application_gateway_create_command_builder;
    /** Enable Private Link feature for this application gateway. If both public IP and private IP are enbaled, taking effect only in public frontend IP. */
    enablePrivateLink(value: string): az_network_application_gateway_create_command_builder;
    /** The front end port number. */
    frontendPort(value: string): az_network_application_gateway_create_command_builder;
    /** Enable or disable HTTP settings cookie-based affinity. */
    httpSettingsCookieBasedAffinity(value: 'Disabled' | 'Enabled'): az_network_application_gateway_create_command_builder;
    /** The HTTP settings port. */
    httpSettingsPort(value: string): az_network_application_gateway_create_command_builder;
    /** The HTTP settings protocol. */
    httpSettingsProtocol(value: 'Http' | 'Https'): az_network_application_gateway_create_command_builder;
    /** Use HTTP2 for the application gateway. */
    http2(value: 'Disabled' | 'Enabled'): az_network_application_gateway_create_command_builder;
    /** Name or ID of the ManagedIdentity Resource. */
    identity(value: string): az_network_application_gateway_create_command_builder;
    /** Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in Azure KeyVault. You need enable soft delete for keyvault to use this feature. */
    keyVaultSecretId(value: string): az_network_application_gateway_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_application_gateway_create_command_builder;
    /** Upper bound on the number of application gateway instances. */
    maxCapacity(value: string): az_network_application_gateway_create_command_builder;
    /** Lower bound on the number of application gateway instances. */
    minCapacity(value: string): az_network_application_gateway_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_create_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_application_gateway_create_command_builder;
    /** The static private IP address of a subnet for Private Link. If omitting, a dynamic one will be created. */
    privateLinkIpAddress(value: string): az_network_application_gateway_create_command_builder;
    /** Whether the IP configuration is primary or not. */
    privateLinkPrimary(value: boolean): az_network_application_gateway_create_command_builder;
    /** The name of the subnet within the same vnet of an application gateway. */
    privateLinkSubnet(value: string): az_network_application_gateway_create_command_builder;
    /** The CIDR prefix to use when creating a new subnet. */
    privateLinkSubnetPrefix(value: string): az_network_application_gateway_create_command_builder;
    /** Name or ID of a public IP address. Uses existing resource or creates new if specified, or none if omitted. */
    publicIpAddress(value: string): az_network_application_gateway_create_command_builder;
    /** The kind of IP allocation to use when creating a new public IP. */
    publicIpAddressAllocation(value: string): az_network_application_gateway_create_command_builder;
    /** The request routing rule type. */
    routingRuleType(value: 'Basic' | 'PathBasedRouting'): az_network_application_gateway_create_command_builder;
    /** Space-separated list of IP addresses or DNS names corresponding to backend servers. */
    servers(value: string): az_network_application_gateway_create_command_builder;
    /** The name of the SKU. */
    sku(value: 'Standard_Large' | 'Standard_Medium' | 'Standard_Small' | 'Standard_v2' | 'WAF_Large' | 'WAF_Medium' | 'WAF_v2'): az_network_application_gateway_create_command_builder;
    /** Name or ID of the subnet. Will create resource if it does not exist. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group or subscription, please provide the ID instead of the name of the subnet. */
    subnet(value: string): az_network_application_gateway_create_command_builder;
    /** The CIDR prefix to use when creating a new subnet. */
    subnetAddressPrefix(value: string): az_network_application_gateway_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_application_gateway_create_command_builder;
    /** Generate and validate the ARM template without creating any resources. */
    validate(value: string): az_network_application_gateway_create_command_builder;
    /** The CIDR prefix to use when creating a new VNet. */
    vnetAddressPrefix(value: string): az_network_application_gateway_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_application_gateway_create_command_builder;
    /** Name or ID of a web application firewall (WAF) policy. */
    wafPolicy(value: string): az_network_application_gateway_create_command_builder;
    /** Space-separated list of availability zones into which to provision the resource. */
    zones(value: '1' | '2' | '3'): az_network_application_gateway_create_command_builder;
}
/**
 * Delete an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway delete [--ids]
 *                                       [--name]
 *                                       [--no-wait]
 *                                       [--resource-group]
 *                                       [--subscription]
 * ```
 */
declare class az_network_application_gateway_delete_command_builder extends CommandBuilder<az_network_application_gateway_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_delete_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_delete_command_builder;
}
/**
 * List application gateways.
 *
 * Syntax:
 * ```
 * az network application-gateway list [--query-examples]
 *                                     [--resource-group]
 *                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_list_command_builder extends CommandBuilder<az_network_application_gateway_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_list_command_builder;
}
/**
 * Get the details of an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway show [--ids]
 *                                     [--name]
 *                                     [--query-examples]
 *                                     [--resource-group]
 *                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_show_command_builder extends CommandBuilder<az_network_application_gateway_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_show_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_application_gateway_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_show_command_builder;
}
/**
 * Get information on the backend health of an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway show-backend-health [--expand]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_application_gateway_show_backend_health_command_builder extends CommandBuilder<az_network_application_gateway_show_backend_health_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands BackendAddressPool and BackendHttpSettings referenced in backend health. */
    expand(value: string): az_network_application_gateway_show_backend_health_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_show_backend_health_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_show_backend_health_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_show_backend_health_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_show_backend_health_command_builder;
}
/**
 * Start an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway start [--ids]
 *                                      [--name]
 *                                      [--resource-group]
 *                                      [--subscription]
 * ```
 */
declare class az_network_application_gateway_start_command_builder extends CommandBuilder<az_network_application_gateway_start_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_start_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_start_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_start_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_start_command_builder;
}
/**
 * Stop an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway stop [--ids]
 *                                     [--name]
 *                                     [--resource-group]
 *                                     [--subscription]
 * ```
 */
declare class az_network_application_gateway_stop_command_builder extends CommandBuilder<az_network_application_gateway_stop_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_stop_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_stop_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_stop_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_stop_command_builder;
}
/**
 * Update an application gateway.
 *
 * Syntax:
 * ```
 * az network application-gateway update [--add]
 *                                       [--capacity]
 *                                       [--custom-error-pages]
 *                                       [--force-string]
 *                                       [--http2 {Disabled, Enabled}]
 *                                       [--ids]
 *                                       [--max-capacity]
 *                                       [--min-capacity]
 *                                       [--name]
 *                                       [--no-wait]
 *                                       [--remove]
 *                                       [--resource-group]
 *                                       [--set]
 *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
 *                                       [--subscription]
 *                                       [--tags]
 * ```
 */
declare class az_network_application_gateway_update_command_builder extends CommandBuilder<az_network_application_gateway_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_application_gateway_update_command_builder;
    /** The number of instances to use with the application gateway. */
    capacity(value: string): az_network_application_gateway_update_command_builder;
    /** Space-separated list of custom error pages in `STATUS_CODE=URL` format. */
    customErrorPages(value: string): az_network_application_gateway_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_application_gateway_update_command_builder;
    /** Use HTTP2 for the application gateway. */
    http2(value: 'Disabled' | 'Enabled'): az_network_application_gateway_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_update_command_builder;
    /** Upper bound on the number of application gateway instances. */
    maxCapacity(value: string): az_network_application_gateway_update_command_builder;
    /** Lower bound on the number of application gateway instances. */
    minCapacity(value: string): az_network_application_gateway_update_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_application_gateway_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_application_gateway_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_application_gateway_update_command_builder;
    /** The name of the SKU. */
    sku(value: 'Standard_Large' | 'Standard_Medium' | 'Standard_Small' | 'Standard_v2' | 'WAF_Large' | 'WAF_Medium' | 'WAF_v2'): az_network_application_gateway_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_application_gateway_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the application gateway is met.
 *
 * Syntax:
 * ```
 * az network application-gateway wait [--created]
 *                                     [--custom]
 *                                     [--deleted]
 *                                     [--exists]
 *                                     [--ids]
 *                                     [--interval]
 *                                     [--name]
 *                                     [--resource-group]
 *                                     [--subscription]
 *                                     [--timeout]
 *                                     [--updated]
 * ```
 */
declare class az_network_application_gateway_wait_command_builder extends CommandBuilder<az_network_application_gateway_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_application_gateway_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_application_gateway_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_application_gateway_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_application_gateway_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_application_gateway_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_application_gateway_wait_command_builder;
    /** Name of the application gateway. */
    name(value: string): az_network_application_gateway_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_application_gateway_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_application_gateway_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_application_gateway_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_application_gateway_wait_command_builder;
}
/**
 * Create an application security group.
 *
 * Syntax:
 * ```
 * az network asg create --name
 *                       --resource-group
 *                       [--location]
 *                       [--subscription]
 *                       [--tags]
 * ```
 *
 * @param {string} name Name of the new application security group resource.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_asg_create_command_builder extends CommandBuilder<az_network_asg_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the new application security group resource. */
    name(value: string): az_network_asg_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_asg_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_asg_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_asg_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_asg_create_command_builder;
}
/**
 * Delete an application security group.
 *
 * Syntax:
 * ```
 * az network asg delete [--ids]
 *                       [--name]
 *                       [--resource-group]
 *                       [--subscription]
 * ```
 */
declare class az_network_asg_delete_command_builder extends CommandBuilder<az_network_asg_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_asg_delete_command_builder;
    /** The name of the application security group. */
    name(value: string): az_network_asg_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_asg_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_asg_delete_command_builder;
}
/**
 * List all application security groups in a subscription.
 *
 * Syntax:
 * ```
 * az network asg list [--query-examples]
 *                     [--subscription]
 * ```
 */
declare class az_network_asg_list_command_builder extends CommandBuilder<az_network_asg_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_asg_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_asg_list_command_builder;
}
/**
 * Get details of an application security group.
 *
 * Syntax:
 * ```
 * az network asg show [--ids]
 *                     [--name]
 *                     [--query-examples]
 *                     [--resource-group]
 *                     [--subscription]
 * ```
 */
declare class az_network_asg_show_command_builder extends CommandBuilder<az_network_asg_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_asg_show_command_builder;
    /** The name of the application security group. */
    name(value: string): az_network_asg_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_asg_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_asg_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_asg_show_command_builder;
}
/**
 * Update an application security group.
 *
 * Syntax:
 * ```
 * az network asg update [--add]
 *                       [--force-string]
 *                       [--ids]
 *                       [--name]
 *                       [--remove]
 *                       [--resource-group]
 *                       [--set]
 *                       [--subscription]
 *                       [--tags]
 * ```
 */
declare class az_network_asg_update_command_builder extends CommandBuilder<az_network_asg_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_asg_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_asg_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_asg_update_command_builder;
    /** The name of the application security group. */
    name(value: string): az_network_asg_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_asg_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_asg_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_asg_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_asg_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_asg_update_command_builder;
}
/**
 * Create a Azure bastion host machine.
 *
 * Syntax:
 * ```
 * az network bastion create --name
 *                           --public-ip-address
 *                           --resource-group
 *                           --vnet-name
 *                           [--location]
 *                           [--subscription]
 * ```
 *
 * @param {string} name Name of the Bastion Host.
 * @param {string} publicIpAddress Name or ID of the Azure public IP. The SKU of the public IP must be Standard.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetName Name of the virtual network. It must have a subnet called AzureBastionSubnet.
 */
declare class az_network_bastion_create_command_builder extends CommandBuilder<az_network_bastion_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, publicIpAddress: string, resourceGroup: string, vnetName: string);
    /** Name of the Bastion Host. */
    name(value: string): az_network_bastion_create_command_builder;
    /** Name or ID of the Azure public IP. The SKU of the public IP must be Standard. */
    publicIpAddress(value: string): az_network_bastion_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_bastion_create_command_builder;
    /** Name of the virtual network. It must have a subnet called AzureBastionSubnet. */
    vnetName(value: string): az_network_bastion_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_bastion_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_bastion_create_command_builder;
}
/**
 * Delete a Azure bastion host machine.
 *
 * Syntax:
 * ```
 * az network bastion delete --name
 *                           --resource-group
 *                           [--subscription]
 * ```
 *
 * @param {string} name Name of the Bastion Host.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_bastion_delete_command_builder extends CommandBuilder<az_network_bastion_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the Bastion Host. */
    name(value: string): az_network_bastion_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_bastion_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_bastion_delete_command_builder;
}
/**
 * List all Azure bastion host machines.
 *
 * Syntax:
 * ```
 * az network bastion list [--query-examples]
 *                         [--resource-group]
 *                         [--subscription]
 * ```
 */
declare class az_network_bastion_list_command_builder extends CommandBuilder<az_network_bastion_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_bastion_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_bastion_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_bastion_list_command_builder;
}
/**
 * Show a Azure bastion host machine.
 *
 * Syntax:
 * ```
 * az network bastion show --name
 *                         --resource-group
 *                         [--query-examples]
 *                         [--subscription]
 * ```
 *
 * @param {string} name Name of the Bastion Host.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_bastion_show_command_builder extends CommandBuilder<az_network_bastion_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the Bastion Host. */
    name(value: string): az_network_bastion_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_bastion_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_bastion_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_bastion_show_command_builder;
}
/**
 * Create a DDoS protection plan.
 *
 * Syntax:
 * ```
 * az network ddos-protection create --name
 *                                   --resource-group
 *                                   [--location]
 *                                   [--subscription]
 *                                   [--tags]
 *                                   [--vnets]
 * ```
 *
 * @param {string} name Name of the DDoS protection plan.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_ddos_protection_create_command_builder extends CommandBuilder<az_network_ddos_protection_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the DDoS protection plan. */
    name(value: string): az_network_ddos_protection_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_ddos_protection_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_ddos_protection_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_ddos_protection_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_ddos_protection_create_command_builder;
    /** Space-separated list of VNets (name or IDs) to associate with the plan. */
    vnets(value: string): az_network_ddos_protection_create_command_builder;
}
/**
 * Delete a DDoS protection plan.
 *
 * Syntax:
 * ```
 * az network ddos-protection delete [--ids]
 *                                   [--name]
 *                                   [--resource-group]
 *                                   [--subscription]
 * ```
 */
declare class az_network_ddos_protection_delete_command_builder extends CommandBuilder<az_network_ddos_protection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_ddos_protection_delete_command_builder;
    /** Name of the DDoS protection plan. */
    name(value: string): az_network_ddos_protection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_ddos_protection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_ddos_protection_delete_command_builder;
}
/**
 * List DDoS protection plans.
 *
 * Syntax:
 * ```
 * az network ddos-protection list [--query-examples]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 */
declare class az_network_ddos_protection_list_command_builder extends CommandBuilder<az_network_ddos_protection_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_ddos_protection_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_ddos_protection_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_ddos_protection_list_command_builder;
}
/**
 * Show details of a DDoS protection plan.
 *
 * Syntax:
 * ```
 * az network ddos-protection show [--ids]
 *                                 [--name]
 *                                 [--query-examples]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 */
declare class az_network_ddos_protection_show_command_builder extends CommandBuilder<az_network_ddos_protection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_ddos_protection_show_command_builder;
    /** Name of the DDoS protection plan. */
    name(value: string): az_network_ddos_protection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_ddos_protection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_ddos_protection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_ddos_protection_show_command_builder;
}
/**
 * Update a DDoS protection plan.
 *
 * Syntax:
 * ```
 * az network ddos-protection update [--add]
 *                                   [--force-string]
 *                                   [--ids]
 *                                   [--location]
 *                                   [--name]
 *                                   [--remove]
 *                                   [--resource-group]
 *                                   [--set]
 *                                   [--subscription]
 *                                   [--tags]
 *                                   [--vnets]
 * ```
 */
declare class az_network_ddos_protection_update_command_builder extends CommandBuilder<az_network_ddos_protection_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_ddos_protection_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_ddos_protection_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_ddos_protection_update_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_ddos_protection_update_command_builder;
    /** Name of the DDoS protection plan. */
    name(value: string): az_network_ddos_protection_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_ddos_protection_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_ddos_protection_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_ddos_protection_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_ddos_protection_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_ddos_protection_update_command_builder;
    /** Space-separated list of VNets (name or IDs) to associate with the plan. */
    vnets(value: string): az_network_ddos_protection_update_command_builder;
}
/**
 * Add an A record.
 *
 * Syntax:
 * ```
 * az network dns record-set a add-record --ipv4-address
 *                                        --record-set-name
 *                                        --resource-group
 *                                        --zone-name
 *                                        [--if-none-match]
 *                                        [--subscription]
 *                                        [--ttl]
 * ```
 *
 * @param {string} ipv4Address IPv4 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_a_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPv4 address in string notation. */
    ipv4Address(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_a_add_record_command_builder;
}
/**
 * Create an empty A record set.
 *
 * Syntax:
 * ```
 * az network dns record-set a create --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--if-match]
 *                                    [--if-none-match]
 *                                    [--metadata]
 *                                    [--subscription]
 *                                    [--target-resource]
 *                                    [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_create_command_builder extends CommandBuilder<az_network_dns_record_set_a_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_a_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_a_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_a_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_a_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_a_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_a_create_command_builder;
}
/**
 * Delete an A record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set a delete --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--if-match]
 *                                    [--subscription]
 *                                    [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_delete_command_builder extends CommandBuilder<az_network_dns_record_set_a_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_a_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_a_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_a_delete_command_builder;
}
/**
 * List all A record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set a list --resource-group
 *                                  --zone-name
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_list_command_builder extends CommandBuilder<az_network_dns_record_set_a_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_a_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_list_command_builder;
}
/**
 * Remove an A record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set a remove-record --ipv4-address
 *                                           --record-set-name
 *                                           --resource-group
 *                                           --zone-name
 *                                           [--keep-empty-record-set]
 *                                           [--subscription]
 * ```
 *
 * @param {string} ipv4Address IPv4 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_a_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPv4 address in string notation. */
    ipv4Address(value: string): az_network_dns_record_set_a_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_a_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_a_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_remove_record_command_builder;
}
/**
 * Get the details of an A record set.
 *
 * Syntax:
 * ```
 * az network dns record-set a show --name
 *                                  --resource-group
 *                                  --zone-name
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_show_command_builder extends CommandBuilder<az_network_dns_record_set_a_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_a_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_a_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_show_command_builder;
}
/**
 * Update an A record set.
 *
 * Syntax:
 * ```
 * az network dns record-set a update --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--add]
 *                                    [--force-string]
 *                                    [--if-match]
 *                                    [--if-none-match]
 *                                    [--metadata]
 *                                    [--remove]
 *                                    [--set]
 *                                    [--subscription]
 *                                    [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_a_update_command_builder extends CommandBuilder<az_network_dns_record_set_a_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_a_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_a_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_a_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_a_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_a_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_a_update_command_builder;
}
/**
 * Add an AAAA record.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa add-record --ipv6-address
 *                                           --record-set-name
 *                                           --resource-group
 *                                           --zone-name
 *                                           [--if-none-match]
 *                                           [--subscription]
 *                                           [--ttl]
 * ```
 *
 * @param {string} ipv6Address IPv6 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPv6 address in string notation. */
    ipv6Address(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_aaaa_add_record_command_builder;
}
/**
 * Create an empty AAAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa create --name
 *                                       --resource-group
 *                                       --zone-name
 *                                       [--if-match]
 *                                       [--if-none-match]
 *                                       [--metadata]
 *                                       [--subscription]
 *                                       [--target-resource]
 *                                       [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_create_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_aaaa_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_aaaa_create_command_builder;
}
/**
 * Delete an AAAA record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa delete --name
 *                                       --resource-group
 *                                       --zone-name
 *                                       [--if-match]
 *                                       [--subscription]
 *                                       [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_delete_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_aaaa_delete_command_builder;
}
/**
 * List all AAAA record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa list --resource-group
 *                                     --zone-name
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_list_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_aaaa_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_list_command_builder;
}
/**
 * Remove AAAA record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa remove-record --ipv6-address
 *                                              --record-set-name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--keep-empty-record-set]
 *                                              [--subscription]
 * ```
 *
 * @param {string} ipv6Address IPv6 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPv6 address in string notation. */
    ipv6Address(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_remove_record_command_builder;
}
/**
 * Get the details of an AAAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa show --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_show_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_aaaa_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_aaaa_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_show_command_builder;
}
/**
 * Update an AAAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set aaaa update --name
 *                                       --resource-group
 *                                       --zone-name
 *                                       [--add]
 *                                       [--force-string]
 *                                       [--if-match]
 *                                       [--if-none-match]
 *                                       [--metadata]
 *                                       [--remove]
 *                                       [--set]
 *                                       [--subscription]
 *                                       [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_aaaa_update_command_builder extends CommandBuilder<az_network_dns_record_set_aaaa_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_aaaa_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_aaaa_update_command_builder;
}
/**
 * Add a CAA record.
 *
 * Syntax:
 * ```
 * az network dns record-set caa add-record --flags
 *                                          --record-set-name
 *                                          --resource-group
 *                                          --tag
 *                                          --value
 *                                          --zone-name
 *                                          [--if-none-match]
 *                                          [--subscription]
 *                                          [--ttl]
 * ```
 *
 * @param {string} flags Integer flags for the record.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} tag Record tag.
 * @param {string} value Value of the CAA record.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_caa_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, flags: string, recordSetName: string, resourceGroup: string, tag: string, value: string, zoneName: string);
    /** Integer flags for the record. */
    flags(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Record tag. */
    tag(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Value of the CAA record. */
    value(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_caa_add_record_command_builder;
}
/**
 * Create an empty CAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set caa create --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--subscription]
 *                                      [--target-resource]
 *                                      [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_create_command_builder extends CommandBuilder<az_network_dns_record_set_caa_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_caa_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_caa_create_command_builder;
}
/**
 * Delete a CAA record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set caa delete --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--subscription]
 *                                      [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_delete_command_builder extends CommandBuilder<az_network_dns_record_set_caa_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_caa_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_caa_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_caa_delete_command_builder;
}
/**
 * List all CAA record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set caa list --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_list_command_builder extends CommandBuilder<az_network_dns_record_set_caa_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_caa_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_list_command_builder;
}
/**
 * Remove a CAA record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set caa remove-record --flags
 *                                             --record-set-name
 *                                             --resource-group
 *                                             --tag
 *                                             --value
 *                                             --zone-name
 *                                             [--keep-empty-record-set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} flags Integer flags for the record.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} tag Record tag.
 * @param {string} value Value of the CAA record.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_caa_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, flags: string, recordSetName: string, resourceGroup: string, tag: string, value: string, zoneName: string);
    /** Integer flags for the record. */
    flags(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** Record tag. */
    tag(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** Value of the CAA record. */
    value(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_remove_record_command_builder;
}
/**
 * Get the details of a CAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set caa show --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_show_command_builder extends CommandBuilder<az_network_dns_record_set_caa_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_caa_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_caa_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_show_command_builder;
}
/**
 * Update a CAA record set.
 *
 * Syntax:
 * ```
 * az network dns record-set caa update --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--add]
 *                                      [--force-string]
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--remove]
 *                                      [--set]
 *                                      [--subscription]
 *                                      [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_caa_update_command_builder extends CommandBuilder<az_network_dns_record_set_caa_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_caa_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_caa_update_command_builder;
}
/**
 * Create an empty CNAME record set.
 *
 * Syntax:
 * ```
 * az network dns record-set cname create --name
 *                                        --resource-group
 *                                        --zone-name
 *                                        [--if-match]
 *                                        [--if-none-match]
 *                                        [--metadata]
 *                                        [--subscription]
 *                                        [--target-resource]
 *                                        [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_create_command_builder extends CommandBuilder<az_network_dns_record_set_cname_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_cname_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_cname_create_command_builder;
}
/**
 * Delete a CNAME record set and its associated record.
 *
 * Syntax:
 * ```
 * az network dns record-set cname delete --name
 *                                        --resource-group
 *                                        --zone-name
 *                                        [--if-match]
 *                                        [--subscription]
 *                                        [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_delete_command_builder extends CommandBuilder<az_network_dns_record_set_cname_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_cname_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_cname_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_cname_delete_command_builder;
}
/**
 * List the CNAME record set in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set cname list --resource-group
 *                                      --zone-name
 *                                      [--query-examples]
 *                                      [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_list_command_builder extends CommandBuilder<az_network_dns_record_set_cname_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_cname_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_list_command_builder;
}
/**
 * Remove a CNAME record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set cname remove-record --cname
 *                                               --record-set-name
 *                                               --resource-group
 *                                               --zone-name
 *                                               [--keep-empty-record-set]
 *                                               [--subscription]
 * ```
 *
 * @param {string} cname Value of the cname record-set. It should be Canonical name.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_cname_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, cname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Value of the cname record-set. It should be Canonical name. */
    cname(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_remove_record_command_builder;
}
/**
 * Set the value of a CNAME record.
 *
 * Syntax:
 * ```
 * az network dns record-set cname set-record --cname
 *                                            --record-set-name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--if-none-match]
 *                                            [--subscription]
 *                                            [--ttl]
 * ```
 *
 * @param {string} cname Value of the cname record-set. It should be Canonical name.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_set_record_command_builder extends CommandBuilder<az_network_dns_record_set_cname_set_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, cname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Value of the cname record-set. It should be Canonical name. */
    cname(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_set_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_cname_set_record_command_builder;
}
/**
 * Get the details of a CNAME record set.
 *
 * Syntax:
 * ```
 * az network dns record-set cname show --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--query-examples]
 *                                      [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_cname_show_command_builder extends CommandBuilder<az_network_dns_record_set_cname_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_cname_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_cname_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_cname_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_cname_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_cname_show_command_builder;
}
/**
 * Add an MX record.
 *
 * Syntax:
 * ```
 * az network dns record-set mx add-record --exchange
 *                                         --preference
 *                                         --record-set-name
 *                                         --resource-group
 *                                         --zone-name
 *                                         [--if-none-match]
 *                                         [--subscription]
 *                                         [--ttl]
 * ```
 *
 * @param {string} exchange Exchange metric.
 * @param {string} preference Preference metric.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_mx_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Exchange metric. */
    exchange(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** Preference metric. */
    preference(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_mx_add_record_command_builder;
}
/**
 * Create an empty MX record set.
 *
 * Syntax:
 * ```
 * az network dns record-set mx create --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--if-match]
 *                                     [--if-none-match]
 *                                     [--metadata]
 *                                     [--subscription]
 *                                     [--target-resource]
 *                                     [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_create_command_builder extends CommandBuilder<az_network_dns_record_set_mx_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_mx_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_mx_create_command_builder;
}
/**
 * Delete an MX record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set mx delete --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--if-match]
 *                                     [--subscription]
 *                                     [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_delete_command_builder extends CommandBuilder<az_network_dns_record_set_mx_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_mx_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_mx_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_mx_delete_command_builder;
}
/**
 * List all MX record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set mx list --resource-group
 *                                   --zone-name
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_list_command_builder extends CommandBuilder<az_network_dns_record_set_mx_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_mx_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_list_command_builder;
}
/**
 * Remove an MX record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set mx remove-record --exchange
 *                                            --preference
 *                                            --record-set-name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--keep-empty-record-set]
 *                                            [--subscription]
 * ```
 *
 * @param {string} exchange Exchange metric.
 * @param {string} preference Preference metric.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_mx_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Exchange metric. */
    exchange(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** Preference metric. */
    preference(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_remove_record_command_builder;
}
/**
 * Get the details of an MX record set.
 *
 * Syntax:
 * ```
 * az network dns record-set mx show --name
 *                                   --resource-group
 *                                   --zone-name
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_show_command_builder extends CommandBuilder<az_network_dns_record_set_mx_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_mx_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_mx_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_show_command_builder;
}
/**
 * Update an MX record set.
 *
 * Syntax:
 * ```
 * az network dns record-set mx update --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--add]
 *                                     [--force-string]
 *                                     [--if-match]
 *                                     [--if-none-match]
 *                                     [--metadata]
 *                                     [--remove]
 *                                     [--set]
 *                                     [--subscription]
 *                                     [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_mx_update_command_builder extends CommandBuilder<az_network_dns_record_set_mx_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_mx_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_mx_update_command_builder;
}
/**
 * Add an NS record.
 *
 * Syntax:
 * ```
 * az network dns record-set ns add-record --nsdname
 *                                         --record-set-name
 *                                         --resource-group
 *                                         --zone-name
 *                                         [--if-none-match]
 *                                         [--subscriptionid]
 *                                         [--ttl]
 * ```
 *
 * @param {string} nsdname Name server domain name.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_ns_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, nsdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Name server domain name. */
    nsdname(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** Subscription id to add name server record. */
    subscriptionid(value: string): az_network_dns_record_set_ns_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_ns_add_record_command_builder;
}
/**
 * Create an empty NS record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ns create --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--if-match]
 *                                     [--if-none-match]
 *                                     [--metadata]
 *                                     [--subscription]
 *                                     [--target-resource]
 *                                     [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_create_command_builder extends CommandBuilder<az_network_dns_record_set_ns_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_ns_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_ns_create_command_builder;
}
/**
 * Delete an NS record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set ns delete --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--if-match]
 *                                     [--subscription]
 *                                     [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_delete_command_builder extends CommandBuilder<az_network_dns_record_set_ns_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ns_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ns_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_ns_delete_command_builder;
}
/**
 * List all NS record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set ns list --resource-group
 *                                   --zone-name
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_list_command_builder extends CommandBuilder<az_network_dns_record_set_ns_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_ns_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_list_command_builder;
}
/**
 * Remove an NS record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ns remove-record --nsdname
 *                                            --record-set-name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--keep-empty-record-set]
 *                                            [--subscription]
 * ```
 *
 * @param {string} nsdname Name server domain name.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_ns_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, nsdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Name server domain name. */
    nsdname(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_remove_record_command_builder;
}
/**
 * Get the details of an NS record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ns show --name
 *                                   --resource-group
 *                                   --zone-name
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_show_command_builder extends CommandBuilder<az_network_dns_record_set_ns_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ns_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_ns_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_show_command_builder;
}
/**
 * Update an NS record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ns update --name
 *                                     --resource-group
 *                                     --zone-name
 *                                     [--add]
 *                                     [--force-string]
 *                                     [--if-match]
 *                                     [--if-none-match]
 *                                     [--metadata]
 *                                     [--remove]
 *                                     [--set]
 *                                     [--subscription]
 *                                     [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ns_update_command_builder extends CommandBuilder<az_network_dns_record_set_ns_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ns_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_ns_update_command_builder;
}
/**
 * Add a PTR record.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr add-record --ptrdname
 *                                          --record-set-name
 *                                          --resource-group
 *                                          --zone-name
 *                                          [--if-none-match]
 *                                          [--subscription]
 *                                          [--ttl]
 * ```
 *
 * @param {string} ptrdname PTR target domain name.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** PTR target domain name. */
    ptrdname(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_ptr_add_record_command_builder;
}
/**
 * Create an empty PTR record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr create --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--subscription]
 *                                      [--target-resource]
 *                                      [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_create_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_ptr_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_ptr_create_command_builder;
}
/**
 * Delete a PTR record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr delete --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--subscription]
 *                                      [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_delete_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ptr_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ptr_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_ptr_delete_command_builder;
}
/**
 * List all PTR record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr list --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_list_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_ptr_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_list_command_builder;
}
/**
 * Remove a PTR record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr remove-record --ptrdname
 *                                             --record-set-name
 *                                             --resource-group
 *                                             --zone-name
 *                                             [--keep-empty-record-set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} ptrdname PTR target domain name.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** PTR target domain name. */
    ptrdname(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_remove_record_command_builder;
}
/**
 * Get the details of a PTR record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr show --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_show_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ptr_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_ptr_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_show_command_builder;
}
/**
 * Update a PTR record set.
 *
 * Syntax:
 * ```
 * az network dns record-set ptr update --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--add]
 *                                      [--force-string]
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--remove]
 *                                      [--set]
 *                                      [--subscription]
 *                                      [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_ptr_update_command_builder extends CommandBuilder<az_network_dns_record_set_ptr_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_ptr_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_ptr_update_command_builder;
}
/**
 * Get the details of an SOA record.
 *
 * Syntax:
 * ```
 * az network dns record-set soa show --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_soa_show_command_builder extends CommandBuilder<az_network_dns_record_set_soa_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_soa_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_soa_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_soa_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_soa_show_command_builder;
}
/**
 * Update properties of an SOA record.
 *
 * Syntax:
 * ```
 * az network dns record-set soa update --resource-group
 *                                      --zone-name
 *                                      [--email]
 *                                      [--expire-time]
 *                                      [--host]
 *                                      [--if-none-match]
 *                                      [--minimum-ttl]
 *                                      [--refresh-time]
 *                                      [--retry-time]
 *                                      [--serial-number]
 *                                      [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_soa_update_command_builder extends CommandBuilder<az_network_dns_record_set_soa_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Email address. */
    email(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Expire time (seconds). */
    expireTime(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Host name. */
    host(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Minimum TTL (time-to-live, seconds). */
    minimumTtl(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Refresh value (seconds). */
    refreshTime(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Retry time (seconds). */
    retryTime(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Serial number. */
    serialNumber(value: string): az_network_dns_record_set_soa_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_soa_update_command_builder;
}
/**
 * Add an SRV record.
 *
 * Syntax:
 * ```
 * az network dns record-set srv add-record --port
 *                                          --priority
 *                                          --record-set-name
 *                                          --resource-group
 *                                          --target
 *                                          --weight
 *                                          --zone-name
 *                                          [--if-none-match]
 *                                          [--subscription]
 * ```
 *
 * @param {string} port Service port.
 * @param {string} priority Priority metric.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} target Target domain name.
 * @param {string} weight Weight metric.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_srv_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string);
    /** Service port. */
    port(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Priority metric. */
    priority(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Target domain name. */
    target(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Weight metric. */
    weight(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_srv_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_add_record_command_builder;
}
/**
 * Create an empty SRV record set.
 *
 * Syntax:
 * ```
 * az network dns record-set srv create --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--subscription]
 *                                      [--target-resource]
 *                                      [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_create_command_builder extends CommandBuilder<az_network_dns_record_set_srv_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_srv_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_srv_create_command_builder;
}
/**
 * Delete an SRV record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set srv delete --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--subscription]
 *                                      [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_delete_command_builder extends CommandBuilder<az_network_dns_record_set_srv_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_srv_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_srv_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_srv_delete_command_builder;
}
/**
 * List all SRV record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set srv list --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_list_command_builder extends CommandBuilder<az_network_dns_record_set_srv_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_srv_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_list_command_builder;
}
/**
 * Remove an SRV record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set srv remove-record --port
 *                                             --priority
 *                                             --record-set-name
 *                                             --resource-group
 *                                             --target
 *                                             --weight
 *                                             --zone-name
 *                                             [--keep-empty-record-set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} port Service port.
 * @param {string} priority Priority metric.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} target Target domain name.
 * @param {string} weight Weight metric.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_srv_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string);
    /** Service port. */
    port(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Priority metric. */
    priority(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Target domain name. */
    target(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Weight metric. */
    weight(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_remove_record_command_builder;
}
/**
 * Get the details of an SRV record set.
 *
 * Syntax:
 * ```
 * az network dns record-set srv show --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_show_command_builder extends CommandBuilder<az_network_dns_record_set_srv_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_srv_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_srv_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_show_command_builder;
}
/**
 * Update an SRV record set.
 *
 * Syntax:
 * ```
 * az network dns record-set srv update --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--add]
 *                                      [--force-string]
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--remove]
 *                                      [--set]
 *                                      [--subscription]
 *                                      [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_srv_update_command_builder extends CommandBuilder<az_network_dns_record_set_srv_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_srv_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_srv_update_command_builder;
}
/**
 * Add a TXT record.
 *
 * Syntax:
 * ```
 * az network dns record-set txt add-record --record-set-name
 *                                          --resource-group
 *                                          --value
 *                                          --zone-name
 *                                          [--if-none-match]
 *                                          [--subscription]
 * ```
 *
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} value Space-separated list of text values which will be concatenated together.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_add_record_command_builder extends CommandBuilder<az_network_dns_record_set_txt_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, recordSetName: string, resourceGroup: string, value: string, zoneName: string);
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_dns_record_set_txt_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_add_record_command_builder;
    /** Space-separated list of text values which will be concatenated together. */
    value(value: string): az_network_dns_record_set_txt_add_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_add_record_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_txt_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_add_record_command_builder;
}
/**
 * Create an empty TXT record set.
 *
 * Syntax:
 * ```
 * az network dns record-set txt create --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--subscription]
 *                                      [--target-resource]
 *                                      [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_create_command_builder extends CommandBuilder<az_network_dns_record_set_txt_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** Create the record set only if it does not already exist. */
    ifNoneMatch(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_txt_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_dns_record_set_txt_create_command_builder;
}
/**
 * Delete a TXT record set and all associated records.
 *
 * Syntax:
 * ```
 * az network dns record-set txt delete --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--if-match]
 *                                      [--subscription]
 *                                      [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_delete_command_builder extends CommandBuilder<az_network_dns_record_set_txt_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_txt_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_delete_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_delete_command_builder;
    /** The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_txt_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_record_set_txt_delete_command_builder;
}
/**
 * List all TXT record sets in a zone.
 *
 * Syntax:
 * ```
 * az network dns record-set txt list --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_list_command_builder extends CommandBuilder<az_network_dns_record_set_txt_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_txt_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_list_command_builder;
}
/**
 * Remove a TXT record from its record set.
 *
 * Syntax:
 * ```
 * az network dns record-set txt remove-record --record-set-name
 *                                             --resource-group
 *                                             --value
 *                                             --zone-name
 *                                             [--keep-empty-record-set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} value Space-separated list of text values which will be concatenated together.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_remove_record_command_builder extends CommandBuilder<az_network_dns_record_set_txt_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, recordSetName: string, resourceGroup: string, value: string, zoneName: string);
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /** Space-separated list of text values which will be concatenated together. */
    value(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_remove_record_command_builder;
}
/**
 * Get the details of a TXT record set.
 *
 * Syntax:
 * ```
 * az network dns record-set txt show --name
 *                                    --resource-group
 *                                    --zone-name
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_show_command_builder extends CommandBuilder<az_network_dns_record_set_txt_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_txt_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_show_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_txt_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_show_command_builder;
}
/**
 * Update a TXT record set.
 *
 * Syntax:
 * ```
 * az network dns record-set txt update --name
 *                                      --resource-group
 *                                      --zone-name
 *                                      [--add]
 *                                      [--force-string]
 *                                      [--if-match]
 *                                      [--if-none-match]
 *                                      [--metadata]
 *                                      [--remove]
 *                                      [--set]
 *                                      [--subscription]
 *                                      [--target-resource]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_txt_update_command_builder extends CommandBuilder<az_network_dns_record_set_txt_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the zone. */
    name(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes. */
    ifMatch(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Set to '\*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored. */
    ifNoneMatch(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_txt_update_command_builder;
    /** ID of an Azure resource from which the DNS resource value is taken. */
    targetResource(value: string): az_network_dns_record_set_txt_update_command_builder;
}
/**
 * List all record sets within a DNS zone.
 *
 * Syntax:
 * ```
 * az network dns record-set list --resource-group
 *                                --zone-name
 *                                [--query-examples]
 *                                [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the zone.
 */
declare class az_network_dns_record_set_list_command_builder extends CommandBuilder<az_network_dns_record_set_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_record_set_list_command_builder;
    /** The name of the zone. */
    zoneName(value: string): az_network_dns_record_set_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_record_set_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_record_set_list_command_builder;
}
/**
 * Create a DNS zone.
 *
 * Syntax:
 * ```
 * az network dns zone create --name
 *                            --resource-group
 *                            [--if-none-match]
 *                            [--parent-name]
 *                            [--registration-vnets]
 *                            [--resolution-vnets]
 *                            [--subscription]
 *                            [--tags]
 *                            [--zone-type {Private, Public}]
 * ```
 *
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_create_command_builder extends CommandBuilder<az_network_dns_zone_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_create_command_builder;
    /** Only create a DNS zone if one doesn't exist that matches the given name. */
    ifNoneMatch(value: string): az_network_dns_zone_create_command_builder;
    /** Specify if parent zone exists for this zone and delegation for the child zone in the parent is to be added. */
    parentName(value: string): az_network_dns_zone_create_command_builder;
    /** Space-separated names or IDs of virtual networks that register hostnames in this DNS zone. Number of private DNS zones with virtual network auto-registration enabled is 1. If you need to increase this limit, please contact Azure Support: <a href="https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits">https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits</a>. */
    registrationVnets(value: string): az_network_dns_zone_create_command_builder;
    /** Space-separated names or IDs of virtual networks that resolve records in this DNS zone. */
    resolutionVnets(value: string): az_network_dns_zone_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_dns_zone_create_command_builder;
    /** Type of DNS zone to create. */
    zoneType(value: 'Private' | 'Public'): az_network_dns_zone_create_command_builder;
}
/**
 * Delete a DNS zone and all associated records.
 *
 * Syntax:
 * ```
 * az network dns zone delete --name
 *                            --resource-group
 *                            [--if-match]
 *                            [--subscription]
 *                            [--yes]
 * ```
 *
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_delete_command_builder extends CommandBuilder<az_network_dns_zone_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_delete_command_builder;
    /** The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_dns_zone_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_dns_zone_delete_command_builder;
}
/**
 * Export a DNS zone as a DNS zone file.
 *
 * Syntax:
 * ```
 * az network dns zone export --name
 *                            --resource-group
 *                            [--file-name]
 *                            [--subscription]
 * ```
 *
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_export_command_builder extends CommandBuilder<az_network_dns_zone_export_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_export_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_export_command_builder;
    /** Path to the DNS zone file to save. */
    fileName(value: string): az_network_dns_zone_export_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_export_command_builder;
}
/**
 * Create a DNS zone using a DNS zone file.
 *
 * Syntax:
 * ```
 * az network dns zone import --file-name
 *                            --name
 *                            --resource-group
 *                            [--subscription]
 * ```
 *
 * @param {string} fileName Path to the DNS zone file to import.
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_import_command_builder extends CommandBuilder<az_network_dns_zone_import_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, fileName: string, name: string, resourceGroup: string);
    /** Path to the DNS zone file to import. */
    fileName(value: string): az_network_dns_zone_import_command_builder;
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_import_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_import_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_import_command_builder;
}
/**
 * List DNS zones.
 *
 * Syntax:
 * ```
 * az network dns zone list [--query-examples]
 *                          [--resource-group]
 *                          [--subscription]
 * ```
 */
declare class az_network_dns_zone_list_command_builder extends CommandBuilder<az_network_dns_zone_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_zone_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_list_command_builder;
}
/**
 * Get a DNS zone parameters. Does not show DNS records within the zone.
 *
 * Syntax:
 * ```
 * az network dns zone show --name
 *                          --resource-group
 *                          [--query-examples]
 *                          [--subscription]
 * ```
 *
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_show_command_builder extends CommandBuilder<az_network_dns_zone_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_dns_zone_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_show_command_builder;
}
/**
 * Update a DNS zone properties. Does not modify DNS records within the zone.
 *
 * Syntax:
 * ```
 * az network dns zone update --name
 *                            --resource-group
 *                            [--add]
 *                            [--force-string]
 *                            [--if-match]
 *                            [--registration-vnets]
 *                            [--remove]
 *                            [--resolution-vnets]
 *                            [--set]
 *                            [--subscription]
 *                            [--tags]
 *                            [--zone-type {Private, Public}]
 * ```
 *
 * @param {string} name The name of the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_dns_zone_update_command_builder extends CommandBuilder<az_network_dns_zone_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the zone. */
    name(value: string): az_network_dns_zone_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_dns_zone_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_dns_zone_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_dns_zone_update_command_builder;
    /** Update only if the resource with the same ETAG exists. */
    ifMatch(value: string): az_network_dns_zone_update_command_builder;
    /** Space-separated names or IDs of virtual networks that register hostnames in this DNS zone. Number of private DNS zones with virtual network auto-registration enabled is 1. If you need to increase this limit, please contact Azure Support: <a href="https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits">https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits</a>. */
    registrationVnets(value: string): az_network_dns_zone_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_dns_zone_update_command_builder;
    /** Space-separated names or IDs of virtual networks that resolve records in this DNS zone. */
    resolutionVnets(value: string): az_network_dns_zone_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_dns_zone_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_zone_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_dns_zone_update_command_builder;
    /** Type of DNS zone to create. */
    zoneType(value: 'Private' | 'Public'): az_network_dns_zone_update_command_builder;
}
/**
 * Returns the DNS records specified by the referencing targetResourceIds.
 *
 * Syntax:
 * ```
 * az network dns list-references [--subscription]
 *                                [--target-resources]
 * ```
 */
declare class az_network_dns_list_references_command_builder extends CommandBuilder<az_network_dns_list_references_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_dns_list_references_command_builder;
    /** Space-separated list of resource IDs you wish to query. */
    targetResources(value: string): az_network_dns_list_references_command_builder;
}
/**
 * Create a new link authorization for an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route auth create --circuit-name
 *                                      --name
 *                                      --resource-group
 *                                      [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} name Authorization name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_auth_create_command_builder extends CommandBuilder<az_network_express_route_auth_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, name: string, resourceGroup: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_auth_create_command_builder;
    /** Authorization name. */
    name(value: string): az_network_express_route_auth_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_auth_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_auth_create_command_builder;
}
/**
 * Delete a link authorization of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route auth delete [--circuit-name]
 *                                      [--ids]
 *                                      [--name]
 *                                      [--resource-group]
 *                                      [--subscription]
 * ```
 */
declare class az_network_express_route_auth_delete_command_builder extends CommandBuilder<az_network_express_route_auth_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_auth_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_auth_delete_command_builder;
    /** Authorization name. */
    name(value: string): az_network_express_route_auth_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_auth_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_auth_delete_command_builder;
}
/**
 * List link authorizations of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route auth list --circuit-name
 *                                    --resource-group
 *                                    [--query-examples]
 *                                    [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_auth_list_command_builder extends CommandBuilder<az_network_express_route_auth_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, resourceGroup: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_auth_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_auth_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_auth_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_auth_list_command_builder;
}
/**
 * Get the details of a link authorization of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route auth show [--circuit-name]
 *                                    [--ids]
 *                                    [--name]
 *                                    [--query-examples]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_express_route_auth_show_command_builder extends CommandBuilder<az_network_express_route_auth_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_auth_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_auth_show_command_builder;
    /** Authorization name. */
    name(value: string): az_network_express_route_auth_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_auth_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_auth_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_auth_show_command_builder;
}
/**
 * Create an ExpressRoute gateway connection.
 *
 * Syntax:
 * ```
 * az network express-route gateway connection create --gateway-name
 *                                                    --name
 *                                                    --peering
 *                                                    --resource-group
 *                                                    [--associated]
 *                                                    [--authorization-key]
 *                                                    [--circuit-name]
 *                                                    [--internet-security {false, true}]
 *                                                    [--labels]
 *                                                    [--propagated]
 *                                                    [--routing-weight]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} gatewayName ExpressRoute gateway name.
 * @param {string} name ExpressRoute connection name.
 * @param {string} peering Name or ID of an ExpressRoute peering.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_gateway_connection_create_command_builder extends CommandBuilder<az_network_express_route_gateway_connection_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, peering: string, resourceGroup: string);
    /** ExpressRoute gateway name. */
    gatewayName(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** ExpressRoute connection name. */
    name(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Name or ID of an ExpressRoute peering. */
    peering(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** The resource id of route table associated with this routing configuration. */
    associatedRouteTable(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Authorization key to establish the connection. */
    authorizationKey(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Enable internet security. A virtual hub can have the ability to propagate a learned default route to this ExpressRoute connection. This ref <a href="https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute">https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute</a> might be helpful. */
    internetSecurity(value: boolean): az_network_express_route_gateway_connection_create_command_builder;
    /** Space-separated list of labels for propagated route tables. */
    labels(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Space-separated list of resource id of propagated route tables. */
    propagatedRouteTables(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Routing weight associated with the connection. */
    routingWeight(value: string): az_network_express_route_gateway_connection_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_connection_create_command_builder;
}
/**
 * Delete an ExpressRoute gateway connection.
 *
 * Syntax:
 * ```
 * az network express-route gateway connection delete [--gateway-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_connection_delete_command_builder extends CommandBuilder<az_network_express_route_gateway_connection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute gateway name. */
    gatewayName(value: string): az_network_express_route_gateway_connection_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_connection_delete_command_builder;
    /** ExpressRoute connection name. */
    name(value: string): az_network_express_route_gateway_connection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_connection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_connection_delete_command_builder;
}
/**
 * List ExpressRoute gateway connections.
 *
 * Syntax:
 * ```
 * az network express-route gateway connection list --gateway-name
 *                                                  --resource-group
 *                                                  [--query-examples]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName ExpressRoute gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_gateway_connection_list_command_builder extends CommandBuilder<az_network_express_route_gateway_connection_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** ExpressRoute gateway name. */
    gatewayName(value: string): az_network_express_route_gateway_connection_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_connection_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_gateway_connection_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_connection_list_command_builder;
}
/**
 * Get the details of an ExpressRoute gateway connection.
 *
 * Syntax:
 * ```
 * az network express-route gateway connection show [--gateway-name]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_connection_show_command_builder extends CommandBuilder<az_network_express_route_gateway_connection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute gateway name. */
    gatewayName(value: string): az_network_express_route_gateway_connection_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_connection_show_command_builder;
    /** ExpressRoute connection name. */
    name(value: string): az_network_express_route_gateway_connection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_gateway_connection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_connection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_connection_show_command_builder;
}
/**
 * Update an ExpressRoute gateway connection.
 *
 * Syntax:
 * ```
 * az network express-route gateway connection update [--add]
 *                                                    [--associated]
 *                                                    [--authorization-key]
 *                                                    [--circuit-name]
 *                                                    [--force-string]
 *                                                    [--gateway-name]
 *                                                    [--ids]
 *                                                    [--internet-security {false, true}]
 *                                                    [--labels]
 *                                                    [--name]
 *                                                    [--peering]
 *                                                    [--propagated]
 *                                                    [--remove]
 *                                                    [--resource-group]
 *                                                    [--routing-weight]
 *                                                    [--set]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_connection_update_command_builder extends CommandBuilder<az_network_express_route_gateway_connection_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** The resource id of route table associated with this routing configuration. */
    associatedRouteTable(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Authorization key to establish the connection. */
    authorizationKey(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** ExpressRoute gateway name. */
    gatewayName(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Enable internet security. A virtual hub can have the ability to propagate a learned default route to this ExpressRoute connection. This ref <a href="https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute">https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute</a> might be helpful. */
    internetSecurity(value: boolean): az_network_express_route_gateway_connection_update_command_builder;
    /** Space-separated list of labels for propagated route tables. */
    labels(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** ExpressRoute connection name. */
    name(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Name or ID of an ExpressRoute peering. */
    peering(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Space-separated list of resource id of propagated route tables. */
    propagatedRouteTables(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Routing weight associated with the connection. */
    routingWeight(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_gateway_connection_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_connection_update_command_builder;
}
/**
 * Create an ExpressRoute gateway.
 *
 * Syntax:
 * ```
 * az network express-route gateway create --name
 *                                         --resource-group
 *                                         [--location]
 *                                         [--max-val]
 *                                         [--min-val]
 *                                         [--subscription]
 *                                         [--tags]
 *                                         [--virtual-hub]
 * ```
 *
 * @param {string} name ExpressRoute gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_gateway_create_command_builder extends CommandBuilder<az_network_express_route_gateway_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** ExpressRoute gateway name. */
    name(value: string): az_network_express_route_gateway_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_express_route_gateway_create_command_builder;
    /** Maximum number of scale units deployed for gateway. */
    maxVal(value: string): az_network_express_route_gateway_create_command_builder;
    /** Minimum number of scale units deployed for gateway. */
    minVal(value: string): az_network_express_route_gateway_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_gateway_create_command_builder;
    /** Name or ID of the virtual hub to associate with the gateway. */
    virtualHub(value: string): az_network_express_route_gateway_create_command_builder;
}
/**
 * Delete an ExpressRoute gateway.
 *
 * Syntax:
 * ```
 * az network express-route gateway delete [--ids]
 *                                         [--name]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_delete_command_builder extends CommandBuilder<az_network_express_route_gateway_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_delete_command_builder;
    /** ExpressRoute gateway name. */
    name(value: string): az_network_express_route_gateway_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_delete_command_builder;
}
/**
 * List ExpressRoute gateways.
 *
 * Syntax:
 * ```
 * az network express-route gateway list [--query-examples]
 *                                       [--resource-group]
 *                                       [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_list_command_builder extends CommandBuilder<az_network_express_route_gateway_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_gateway_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_list_command_builder;
}
/**
 * Get the details of an ExpressRoute gateway.
 *
 * Syntax:
 * ```
 * az network express-route gateway show [--ids]
 *                                       [--name]
 *                                       [--query-examples]
 *                                       [--resource-group]
 *                                       [--subscription]
 * ```
 */
declare class az_network_express_route_gateway_show_command_builder extends CommandBuilder<az_network_express_route_gateway_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_show_command_builder;
    /** ExpressRoute gateway name. */
    name(value: string): az_network_express_route_gateway_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_gateway_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_show_command_builder;
}
/**
 * Update settings of an ExpressRoute gateway.
 *
 * Syntax:
 * ```
 * az network express-route gateway update [--add]
 *                                         [--force-string]
 *                                         [--ids]
 *                                         [--max-val]
 *                                         [--min-val]
 *                                         [--name]
 *                                         [--remove]
 *                                         [--resource-group]
 *                                         [--set]
 *                                         [--subscription]
 *                                         [--tags]
 * ```
 */
declare class az_network_express_route_gateway_update_command_builder extends CommandBuilder<az_network_express_route_gateway_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_gateway_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_gateway_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_gateway_update_command_builder;
    /** Maximum number of scale units deployed for gateway. */
    maxVal(value: string): az_network_express_route_gateway_update_command_builder;
    /** Minimum number of scale units deployed for gateway. */
    minVal(value: string): az_network_express_route_gateway_update_command_builder;
    /** ExpressRoute gateway name. */
    name(value: string): az_network_express_route_gateway_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_gateway_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_gateway_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_gateway_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_gateway_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_gateway_update_command_builder;
}
/**
 * Create connections between two ExpressRoute circuits.
 *
 * Syntax:
 * ```
 * az network express-route peering connection create --address-prefix
 *                                                    --circuit-name
 *                                                    --name
 *                                                    --peer-circuit
 *                                                    --peering-name
 *                                                    --resource-group
 *                                                    [--authorization-key]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} addressPrefix /29 IP address space to carve out customer addresses for tunnels.
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} name Name of the peering connection.
 * @param {string} peerCircuit Name or ID of the peer ExpressRoute circuit.
 * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_peering_connection_create_command_builder extends CommandBuilder<az_network_express_route_peering_connection_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPrefix: string, circuitName: string, name: string, peerCircuit: string, peeringName: string, resourceGroup: string);
    /** /29 IP address space to carve out customer addresses for tunnels. */
    addressPrefix(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** Name of the peering connection. */
    name(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** Name or ID of the peer ExpressRoute circuit. */
    peerCircuit(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** Name of BGP peering (i.e. AzurePrivatePeering). */
    peeringName(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** The authorization key used when the peer circuit is in another subscription. */
    authorizationKey(value: string): az_network_express_route_peering_connection_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_connection_create_command_builder;
}
/**
 * Delete an ExpressRoute circuit connection.
 *
 * Syntax:
 * ```
 * az network express-route peering connection delete [--circuit-name]
 *                                                    [--ids]
 *                                                    [--name]
 *                                                    [--peering-name]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_express_route_peering_connection_delete_command_builder extends CommandBuilder<az_network_express_route_peering_connection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_connection_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_peering_connection_delete_command_builder;
    /** Name of the peering connection. */
    name(value: string): az_network_express_route_peering_connection_delete_command_builder;
    /** Name of BGP peering (i.e. AzurePrivatePeering). */
    peeringName(value: string): az_network_express_route_peering_connection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_connection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_connection_delete_command_builder;
}
/**
 * Get the details of an ExpressRoute circuit connection.
 *
 * Syntax:
 * ```
 * az network express-route peering connection show [--circuit-name]
 *                                                  [--ids]
 *                                                  [--name]
 *                                                  [--peering-name]
 *                                                  [--query-examples]
 *                                                  [--resource-group]
 *                                                  [--subscription]
 * ```
 */
declare class az_network_express_route_peering_connection_show_command_builder extends CommandBuilder<az_network_express_route_peering_connection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** Name of the peering connection. */
    name(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** Name of BGP peering (i.e. AzurePrivatePeering). */
    peeringName(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_connection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_connection_show_command_builder;
}
/**
 * Gets all global reach peer connections associated with a private peering in an express route circuit.
 *
 * Syntax:
 * ```
 * az network express-route peering peer-connection list --circuit-name
 *                                                       --peering-name
 *                                                       --resource-group
 *                                                       [--query-examples]
 *                                                       [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_peering_peer_connection_list_command_builder extends CommandBuilder<az_network_express_route_peering_peer_connection_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, peeringName: string, resourceGroup: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_peer_connection_list_command_builder;
    /** Name of BGP peering (i.e. AzurePrivatePeering). */
    peeringName(value: string): az_network_express_route_peering_peer_connection_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_peer_connection_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_peering_peer_connection_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_peer_connection_list_command_builder;
}
/**
 * Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
 *
 * Syntax:
 * ```
 * az network express-route peering peer-connection show --circuit-name
 *                                                       --name
 *                                                       --peering-name
 *                                                       --resource-group
 *                                                       [--query-examples]
 *                                                       [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} name Name of the peering peer-connection.
 * @param {string} peeringName Name of BGP peering (i.e. AzurePrivatePeering).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_peering_peer_connection_show_command_builder extends CommandBuilder<az_network_express_route_peering_peer_connection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, name: string, peeringName: string, resourceGroup: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
    /** Name of the peering peer-connection. */
    name(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
    /** Name of BGP peering (i.e. AzurePrivatePeering). */
    peeringName(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_peer_connection_show_command_builder;
}
/**
 * Create peering settings for an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route peering create --circuit-name
 *                                         --peer-asn
 *                                         --peering-type {AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering}
 *                                         --primary-peer-subnet
 *                                         --resource-group
 *                                         --secondary-peer-subnet
 *                                         --vlan-id
 *                                         [--advertised-public-prefixes]
 *                                         [--customer-asn]
 *                                         [--legacy-mode]
 *                                         [--route-filter]
 *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
 *                                         [--shared-key]
 *                                         [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} peerAsn Autonomous system number of the customer/connectivity provider.
 * @param {'AzurePrivatePeering' | 'AzurePublicPeering' | 'MicrosoftPeering'} peeringType BGP peering type for the circuit.
 * @param {string} primaryPeerSubnet /30 subnet used to configure IP addresses for primary interface.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} secondaryPeerSubnet /30 subnet used to configure IP addresses for secondary interface.
 * @param {string} vlanId Identifier used to identify the customer.
 */
declare class az_network_express_route_peering_create_command_builder extends CommandBuilder<az_network_express_route_peering_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, peerAsn: string, peeringType: 'AzurePrivatePeering' | 'AzurePublicPeering' | 'MicrosoftPeering', primaryPeerSubnet: string, resourceGroup: string, secondaryPeerSubnet: string, vlanId: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_create_command_builder;
    /** Autonomous system number of the customer/connectivity provider. */
    peerAsn(value: string): az_network_express_route_peering_create_command_builder;
    /** BGP peering type for the circuit. */
    peeringType(value: 'AzurePrivatePeering' | 'AzurePublicPeering' | 'MicrosoftPeering'): az_network_express_route_peering_create_command_builder;
    /** /30 subnet used to configure IP addresses for primary interface. */
    primaryPeerSubnet(value: string): az_network_express_route_peering_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_create_command_builder;
    /** /30 subnet used to configure IP addresses for secondary interface. */
    secondaryPeerSubnet(value: string): az_network_express_route_peering_create_command_builder;
    /** Identifier used to identify the customer. */
    vlanId(value: string): az_network_express_route_peering_create_command_builder;
    /** Space-separated list of prefixes to be advertised through the BGP peering. */
    advertisedPublicPrefixes(value: string): az_network_express_route_peering_create_command_builder;
    /** Autonomous system number of the customer. */
    customerAsn(value: string): az_network_express_route_peering_create_command_builder;
    /** Integer representing the legacy mode of the peering. */
    legacyMode(value: string): az_network_express_route_peering_create_command_builder;
    /** Name or ID of a route filter to apply to the peering settings. */
    routeFilter(value: string): az_network_express_route_peering_create_command_builder;
    /** Internet Routing Registry / Regional Internet Registry. */
    routingRegistryName(value: 'AFRINIC' | 'ALTDB' | 'APNIC' | 'ARIN' | 'LACNIC' | 'LEVEL3' | 'RADB' | 'RIPENCC'): az_network_express_route_peering_create_command_builder;
    /** Key for generating an MD5 for the BGP session. */
    sharedKey(value: string): az_network_express_route_peering_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_create_command_builder;
}
/**
 * Delete peering settings.
 *
 * Syntax:
 * ```
 * az network express-route peering delete [--circuit-name]
 *                                         [--ids]
 *                                         [--name]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_express_route_peering_delete_command_builder extends CommandBuilder<az_network_express_route_peering_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_peering_delete_command_builder;
    /** The name of the peering. */
    name(value: string): az_network_express_route_peering_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_delete_command_builder;
}
/**
 * List peering settings of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route peering list --circuit-name
 *                                       --resource-group
 *                                       [--query-examples]
 *                                       [--subscription]
 * ```
 *
 * @param {string} circuitName ExpressRoute circuit name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_peering_list_command_builder extends CommandBuilder<az_network_express_route_peering_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, circuitName: string, resourceGroup: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_peering_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_list_command_builder;
}
/**
 * Get the details of an express route peering.
 *
 * Syntax:
 * ```
 * az network express-route peering show [--circuit-name]
 *                                       [--ids]
 *                                       [--name]
 *                                       [--query-examples]
 *                                       [--resource-group]
 *                                       [--subscription]
 * ```
 */
declare class az_network_express_route_peering_show_command_builder extends CommandBuilder<az_network_express_route_peering_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_peering_show_command_builder;
    /** The name of the peering. */
    name(value: string): az_network_express_route_peering_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_peering_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_show_command_builder;
}
/**
 * Update peering settings of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route peering update [--add]
 *                                         [--advertised-public-prefixes]
 *                                         [--circuit-name]
 *                                         [--customer-asn]
 *                                         [--force-string]
 *                                         [--ids]
 *                                         [--ip-version {IPv4, IPv6}]
 *                                         [--legacy-mode]
 *                                         [--name]
 *                                         [--peer-asn]
 *                                         [--primary-peer-subnet]
 *                                         [--remove]
 *                                         [--resource-group]
 *                                         [--route-filter]
 *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
 *                                         [--secondary-peer-subnet]
 *                                         [--set]
 *                                         [--shared-key]
 *                                         [--subscription]
 *                                         [--vlan-id]
 * ```
 */
declare class az_network_express_route_peering_update_command_builder extends CommandBuilder<az_network_express_route_peering_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_peering_update_command_builder;
    /** Space-separated list of prefixes to be advertised through the BGP peering. */
    advertisedPublicPrefixes(value: string): az_network_express_route_peering_update_command_builder;
    /** ExpressRoute circuit name. */
    circuitName(value: string): az_network_express_route_peering_update_command_builder;
    /** Autonomous system number of the customer. */
    customerAsn(value: string): az_network_express_route_peering_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_peering_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_peering_update_command_builder;
    /** The IP version to update Microsoft Peering settings for. */
    ipVersion(value: 'IPv4' | 'IPv6'): az_network_express_route_peering_update_command_builder;
    /** Integer representing the legacy mode of the peering. */
    legacyMode(value: string): az_network_express_route_peering_update_command_builder;
    /** The name of the peering. */
    name(value: string): az_network_express_route_peering_update_command_builder;
    /** Autonomous system number of the customer/connectivity provider. */
    peerAsn(value: string): az_network_express_route_peering_update_command_builder;
    /** /30 subnet used to configure IP addresses for primary interface. */
    primaryPeerSubnet(value: string): az_network_express_route_peering_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_peering_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_peering_update_command_builder;
    /** Name or ID of a route filter to apply to the peering settings. */
    routeFilter(value: string): az_network_express_route_peering_update_command_builder;
    /** Internet Routing Registry / Regional Internet Registry. */
    routingRegistryName(value: 'AFRINIC' | 'ALTDB' | 'APNIC' | 'ARIN' | 'LACNIC' | 'LEVEL3' | 'RADB' | 'RIPENCC'): az_network_express_route_peering_update_command_builder;
    /** /30 subnet used to configure IP addresses for secondary interface. */
    secondaryPeerSubnet(value: string): az_network_express_route_peering_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_peering_update_command_builder;
    /** Key for generating an MD5 for the BGP session. */
    sharedKey(value: string): az_network_express_route_peering_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_peering_update_command_builder;
    /** Identifier used to identify the customer. */
    vlanId(value: string): az_network_express_route_peering_update_command_builder;
}
/**
 * Assign a managed service identity to an ExpressRoute Port.
 *
 * Syntax:
 * ```
 * az network express-route port identity assign --identity
 *                                               [--ids]
 *                                               [--name]
 *                                               [--no-wait]
 *                                               [--resource-group]
 *                                               [--subscription]
 * ```
 *
 * @param {string} identity Name or ID of the ManagedIdentity Resource.
 */
declare class az_network_express_route_port_identity_assign_command_builder extends CommandBuilder<az_network_express_route_port_identity_assign_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, identity: string);
    /** Name or ID of the ManagedIdentity Resource. */
    identity(value: string): az_network_express_route_port_identity_assign_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_identity_assign_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_identity_assign_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_port_identity_assign_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_identity_assign_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_identity_assign_command_builder;
}
/**
 * Remove the managed service identity of an ExpressRoute Port.
 *
 * Syntax:
 * ```
 * az network express-route port identity remove [--ids]
 *                                               [--name]
 *                                               [--no-wait]
 *                                               [--resource-group]
 *                                               [--subscription]
 * ```
 */
declare class az_network_express_route_port_identity_remove_command_builder extends CommandBuilder<az_network_express_route_port_identity_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_identity_remove_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_identity_remove_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_port_identity_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_identity_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_identity_remove_command_builder;
}
/**
 * Show the managed service identity of an ExpressRoute Port.
 *
 * Syntax:
 * ```
 * az network express-route port identity show [--ids]
 *                                             [--name]
 *                                             [--query-examples]
 *                                             [--resource-group]
 *                                             [--subscription]
 * ```
 */
declare class az_network_express_route_port_identity_show_command_builder extends CommandBuilder<az_network_express_route_port_identity_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_identity_show_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_identity_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_identity_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_identity_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_identity_show_command_builder;
}
/**
 * List ExpressRoute links.
 *
 * Syntax:
 * ```
 * az network express-route port link list --port-name
 *                                         --resource-group
 *                                         [--query-examples]
 *                                         [--subscription]
 * ```
 *
 * @param {string} portName ExpressRoute port name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_port_link_list_command_builder extends CommandBuilder<az_network_express_route_port_link_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, portName: string, resourceGroup: string);
    /** ExpressRoute port name. */
    portName(value: string): az_network_express_route_port_link_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_link_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_link_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_link_list_command_builder;
}
/**
 * Get the details of an ExpressRoute link.
 *
 * Syntax:
 * ```
 * az network express-route port link show [--ids]
 *                                         [--name]
 *                                         [--port-name]
 *                                         [--query-examples]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_express_route_port_link_show_command_builder extends CommandBuilder<az_network_express_route_port_link_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_link_show_command_builder;
    /** The link name of the ExpressRoute Port. */
    name(value: string): az_network_express_route_port_link_show_command_builder;
    /** ExpressRoute port name. */
    portName(value: string): az_network_express_route_port_link_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_link_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_link_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_link_show_command_builder;
}
/**
 * Manage MACsec configuration of an ExpressRoute Link.
 *
 * Syntax:
 * ```
 * az network express-route port link update [--add]
 *                                           [--admin-state {Disabled, Enabled}]
 *                                           [--force-string]
 *                                           [--ids]
 *                                           [--macsec-cak-secret-identifier]
 *                                           [--macsec-cipher {GcmAes128, GcmAes256, GcmAesXpn128, GcmAesXpn256}]
 *                                           [--macsec-ckn-secret-identifier]
 *                                           [--name]
 *                                           [--no-wait]
 *                                           [--port-name]
 *                                           [--remove]
 *                                           [--resource-group]
 *                                           [--set]
 *                                           [--subscription]
 * ```
 */
declare class az_network_express_route_port_link_update_command_builder extends CommandBuilder<az_network_express_route_port_link_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_port_link_update_command_builder;
    /** Enable/Disable administrative state of an ExpressRoute Link. */
    adminState(value: 'Disabled' | 'Enabled'): az_network_express_route_port_link_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_port_link_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_link_update_command_builder;
    /** The connectivity association key (CAK) ID that stored in the KeyVault. */
    macsecCakSecretIdentifier(value: string): az_network_express_route_port_link_update_command_builder;
    /** Cipher Method. */
    macsecCipher(value: 'GcmAes128' | 'GcmAes256' | 'GcmAesXpn128' | 'GcmAesXpn256'): az_network_express_route_port_link_update_command_builder;
    /** The connectivity key name (CKN) that stored in the KeyVault. */
    macsecCknSecretIdentifier(value: string): az_network_express_route_port_link_update_command_builder;
    /** The link name of the ExpressRoute Port. */
    name(value: string): az_network_express_route_port_link_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_port_link_update_command_builder;
    /** ExpressRoute port name. */
    portName(value: string): az_network_express_route_port_link_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_port_link_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_link_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_port_link_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_link_update_command_builder;
}
/**
 * List ExpressRoute port locations.
 *
 * Syntax:
 * ```
 * az network express-route port location list [--query-examples]
 *                                             [--subscription]
 * ```
 */
declare class az_network_express_route_port_location_list_command_builder extends CommandBuilder<az_network_express_route_port_location_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_location_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_location_list_command_builder;
}
/**
 * Get the details of an ExpressRoute port location.
 *
 * Syntax:
 * ```
 * az network express-route port location show --location
 *                                             [--query-examples]
 *                                             [--subscription]
 * ```
 *
 * @param {string} location Name of the requested ExpressRoutePort peering location.
 */
declare class az_network_express_route_port_location_show_command_builder extends CommandBuilder<az_network_express_route_port_location_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Name of the requested ExpressRoutePort peering location. */
    location(value: string): az_network_express_route_port_location_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_location_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_location_show_command_builder;
}
/**
 * Create an ExpressRoute port.
 *
 * Syntax:
 * ```
 * az network express-route port create --name
 *                                      --resource-group
 *                                      [--bandwidth]
 *                                      [--encapsulation {Dot1Q, QinQ}]
 *                                      [--location]
 *                                      [--peering-location]
 *                                      [--subscription]
 *                                      [--tags]
 * ```
 *
 * @param {string} name ExpressRoute port name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_port_create_command_builder extends CommandBuilder<az_network_express_route_port_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_create_command_builder;
    /** Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Gbps. */
    bandwidth(value: string): az_network_express_route_port_create_command_builder;
    /** Encapsulation method on physical ports. */
    encapsulation(value: 'Dot1Q' | 'QinQ'): az_network_express_route_port_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_express_route_port_create_command_builder;
    /** The name of the peering location that the port is mapped to physically. */
    peeringLocation(value: string): az_network_express_route_port_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_port_create_command_builder;
}
/**
 * Delete an ExpressRoute port.
 *
 * Syntax:
 * ```
 * az network express-route port delete [--ids]
 *                                      [--name]
 *                                      [--resource-group]
 *                                      [--subscription]
 * ```
 */
declare class az_network_express_route_port_delete_command_builder extends CommandBuilder<az_network_express_route_port_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_delete_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_delete_command_builder;
}
/**
 * List ExpressRoute ports.
 *
 * Syntax:
 * ```
 * az network express-route port list [--query-examples]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_express_route_port_list_command_builder extends CommandBuilder<az_network_express_route_port_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_list_command_builder;
}
/**
 * Get the details of an ExpressRoute port.
 *
 * Syntax:
 * ```
 * az network express-route port show [--ids]
 *                                    [--name]
 *                                    [--query-examples]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_express_route_port_show_command_builder extends CommandBuilder<az_network_express_route_port_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_show_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_port_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_show_command_builder;
}
/**
 * Update settings of an ExpressRoute port.
 *
 * Syntax:
 * ```
 * az network express-route port update [--add]
 *                                      [--force-string]
 *                                      [--ids]
 *                                      [--name]
 *                                      [--remove]
 *                                      [--resource-group]
 *                                      [--set]
 *                                      [--subscription]
 *                                      [--tags]
 * ```
 */
declare class az_network_express_route_port_update_command_builder extends CommandBuilder<az_network_express_route_port_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_port_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_port_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_port_update_command_builder;
    /** ExpressRoute port name. */
    name(value: string): az_network_express_route_port_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_port_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_port_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_port_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_port_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_port_update_command_builder;
}
/**
 * Create an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route create --bandwidth
 *                                 --name
 *                                 --peering-location
 *                                 --provider
 *                                 --resource-group
 *                                 [--allow-classic-operations {false, true}]
 *                                 [--allow-global-reach {false, true}]
 *                                 [--express-route-port]
 *                                 [--location]
 *                                 [--no-wait]
 *                                 [--sku-family {MeteredData, UnlimitedData}]
 *                                 [--sku-tier {Basic, Local, Premium, Standard}]
 *                                 [--subscription]
 *                                 [--tags]
 * ```
 *
 * @param {string} bandwidth Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps.
 * @param {string} name ExpressRoute circuit name.
 * @param {string} peeringLocation Name of the peering location.
 * @param {string} provider Name of the ExpressRoute Service Provider.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_express_route_create_command_builder extends CommandBuilder<az_network_express_route_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, bandwidth: string, name: string, peeringLocation: string, provider: string, resourceGroup: string);
    /** Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps. */
    bandwidth(value: string): az_network_express_route_create_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_create_command_builder;
    /** Name of the peering location. */
    peeringLocation(value: string): az_network_express_route_create_command_builder;
    /** Name of the ExpressRoute Service Provider. */
    provider(value: string): az_network_express_route_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_create_command_builder;
    /** Allow classic operations. */
    allowClassicOperations(value: boolean): az_network_express_route_create_command_builder;
    /** Enable global reach on the circuit. */
    allowGlobalReach(value: boolean): az_network_express_route_create_command_builder;
    /** Name or ID of an ExpressRoute port. */
    expressRoutePort(value: string): az_network_express_route_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_express_route_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_create_command_builder;
    /** Chosen SKU family of ExpressRoute circuit. */
    skuFamily(value: 'MeteredData' | 'UnlimitedData'): az_network_express_route_create_command_builder;
    /** SKU Tier of ExpressRoute circuit. */
    skuTier(value: 'Basic' | 'Local' | 'Premium' | 'Standard'): az_network_express_route_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_create_command_builder;
}
/**
 * Delete an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route delete [--ids]
 *                                 [--name]
 *                                 [--no-wait]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 */
declare class az_network_express_route_delete_command_builder extends CommandBuilder<az_network_express_route_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_delete_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_delete_command_builder;
}
/**
 * Get the statistics of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route get-stats [--ids]
 *                                    [--name]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_express_route_get_stats_command_builder extends CommandBuilder<az_network_express_route_get_stats_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_get_stats_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_get_stats_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_get_stats_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_get_stats_command_builder;
}
/**
 * List all ExpressRoute circuits for the current subscription.
 *
 * Syntax:
 * ```
 * az network express-route list [--query-examples]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_express_route_list_command_builder extends CommandBuilder<az_network_express_route_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_list_command_builder;
}
/**
 * Show the current Address Resolution Protocol (ARP) table of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route list-arp-tables --path {primary, secondary}
 *                                          --peering-name
 *                                          [--ids]
 *                                          [--name]
 *                                          [--resource-group]
 *                                          [--subscription]
 * ```
 *
 * @param {'primary' | 'secondary'} path The path of the device.
 * @param {string} peeringName The name of the peering.
 */
declare class az_network_express_route_list_arp_tables_command_builder extends CommandBuilder<az_network_express_route_list_arp_tables_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, path: 'primary' | 'secondary', peeringName: string);
    /** The path of the device. */
    path(value: 'primary' | 'secondary'): az_network_express_route_list_arp_tables_command_builder;
    /** The name of the peering. */
    peeringName(value: string): az_network_express_route_list_arp_tables_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_list_arp_tables_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_list_arp_tables_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_list_arp_tables_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_list_arp_tables_command_builder;
}
/**
 * Show the current routing table of an ExpressRoute circuit peering.
 *
 * Syntax:
 * ```
 * az network express-route list-route-tables --path {primary, secondary}
 *                                            --peering-name
 *                                            [--ids]
 *                                            [--name]
 *                                            [--resource-group]
 *                                            [--subscription]
 * ```
 *
 * @param {'primary' | 'secondary'} path The path of the device.
 * @param {string} peeringName The name of the peering.
 */
declare class az_network_express_route_list_route_tables_command_builder extends CommandBuilder<az_network_express_route_list_route_tables_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, path: 'primary' | 'secondary', peeringName: string);
    /** The path of the device. */
    path(value: 'primary' | 'secondary'): az_network_express_route_list_route_tables_command_builder;
    /** The name of the peering. */
    peeringName(value: string): az_network_express_route_list_route_tables_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_list_route_tables_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_list_route_tables_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_list_route_tables_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_list_route_tables_command_builder;
}
/**
 * List available ExpressRoute service providers.
 *
 * Syntax:
 * ```
 * az network express-route list-service-providers [--subscription]
 * ```
 */
declare class az_network_express_route_list_service_providers_command_builder extends CommandBuilder<az_network_express_route_list_service_providers_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_list_service_providers_command_builder;
}
/**
 * Get the details of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route show [--ids]
 *                               [--name]
 *                               [--query-examples]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_express_route_show_command_builder extends CommandBuilder<az_network_express_route_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_show_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_express_route_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_show_command_builder;
}
/**
 * Update settings of an ExpressRoute circuit.
 *
 * Syntax:
 * ```
 * az network express-route update [--add]
 *                                 [--allow-classic-operations {false, true}]
 *                                 [--allow-global-reach {false, true}]
 *                                 [--bandwidth]
 *                                 [--express-route-port]
 *                                 [--force-string]
 *                                 [--ids]
 *                                 [--name]
 *                                 [--no-wait]
 *                                 [--peering-location]
 *                                 [--provider]
 *                                 [--remove]
 *                                 [--resource-group]
 *                                 [--set]
 *                                 [--sku-family {MeteredData, UnlimitedData}]
 *                                 [--sku-tier {Basic, Local, Premium, Standard}]
 *                                 [--subscription]
 *                                 [--tags]
 * ```
 */
declare class az_network_express_route_update_command_builder extends CommandBuilder<az_network_express_route_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_express_route_update_command_builder;
    /** Allow classic operations. */
    allowClassicOperations(value: boolean): az_network_express_route_update_command_builder;
    /** Enable global reach on the circuit. */
    allowGlobalReach(value: boolean): az_network_express_route_update_command_builder;
    /** Bandwidth of the circuit. Usage: INT {Mbps,Gbps}. Defaults to Mbps. */
    bandwidth(value: string): az_network_express_route_update_command_builder;
    /** Name or ID of an ExpressRoute port. */
    expressRoutePort(value: string): az_network_express_route_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_express_route_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_update_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_express_route_update_command_builder;
    /** Name of the peering location. */
    peeringLocation(value: string): az_network_express_route_update_command_builder;
    /** Name of the ExpressRoute Service Provider. */
    provider(value: string): az_network_express_route_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_express_route_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_express_route_update_command_builder;
    /** Chosen SKU family of ExpressRoute circuit. */
    skuFamily(value: 'MeteredData' | 'UnlimitedData'): az_network_express_route_update_command_builder;
    /** SKU Tier of ExpressRoute circuit. */
    skuTier(value: 'Basic' | 'Local' | 'Premium' | 'Standard'): az_network_express_route_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_express_route_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the ExpressRoute is met.
 *
 * Syntax:
 * ```
 * az network express-route wait [--created]
 *                               [--custom]
 *                               [--deleted]
 *                               [--exists]
 *                               [--ids]
 *                               [--interval]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 *                               [--timeout]
 *                               [--updated]
 * ```
 */
declare class az_network_express_route_wait_command_builder extends CommandBuilder<az_network_express_route_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_express_route_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_express_route_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_express_route_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_express_route_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_express_route_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_express_route_wait_command_builder;
    /** ExpressRoute circuit name. */
    name(value: string): az_network_express_route_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_express_route_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_express_route_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_express_route_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_express_route_wait_command_builder;
}
/**
 * Add one backend address into the load balance backend address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool address add --ip-address
 *                                        --lb-name
 *                                        --name
 *                                        --pool-name
 *                                        --resource-group
 *                                        --vnet
 *                                        [--subscription]
 * ```
 *
 * @param {string} ipAddress Ip Address within the Virtual Network.
 * @param {string} lbName The load balancer name.
 * @param {string} name Name of the backend address.
 * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnet Name or Id of the virtual network.
 */
declare class az_network_lb_address_pool_address_add_command_builder extends CommandBuilder<az_network_lb_address_pool_address_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipAddress: string, lbName: string, name: string, poolName: string, resourceGroup: string, vnet: string);
    /** Ip Address within the Virtual Network. */
    ipAddress(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** Name of the backend address. */
    name(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    poolName(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** Name or Id of the virtual network. */
    vnet(value: string): az_network_lb_address_pool_address_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_address_add_command_builder;
}
/**
 * List all backend addresses of the load balance backend address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool address list --lb-name
 *                                         --pool-name
 *                                         --resource-group
 *                                         [--query-examples]
 *                                         [--subscription]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_address_list_command_builder extends CommandBuilder<az_network_lb_address_pool_address_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, poolName: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_address_list_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    poolName(value: string): az_network_lb_address_pool_address_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_address_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_address_pool_address_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_address_list_command_builder;
}
/**
 * Remove one backend address from the load balance backend address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool address remove --lb-name
 *                                           --name
 *                                           --pool-name
 *                                           --resource-group
 *                                           [--subscription]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name Name of the backend address.
 * @param {string} poolName The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_address_remove_command_builder extends CommandBuilder<az_network_lb_address_pool_address_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, poolName: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_address_remove_command_builder;
    /** Name of the backend address. */
    name(value: string): az_network_lb_address_pool_address_remove_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    poolName(value: string): az_network_lb_address_pool_address_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_address_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_address_remove_command_builder;
}
/**
 * Create an address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool create --lb-name
 *                                   --name
 *                                   --resource-group
 *                                   [--backend-address]
 *                                   [--backend-addresses-config-file]
 *                                   [--subscription]
 *                                   [--vnet]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_create_command_builder extends CommandBuilder<az_network_lb_address_pool_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_create_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    name(value: string): az_network_lb_address_pool_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_create_command_builder;
    /** Backend addresses information for backend address pool. If it's used, --vnet is also required. */
    backendAddress(value: string): az_network_lb_address_pool_create_command_builder;
    /** A config file used to set backend addresses. This argument is for experienced users. You may encounter parse errors if the json file is invalid. */
    backendAddressesConfigFile(value: string): az_network_lb_address_pool_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_create_command_builder;
    /** Name or Id of the virtual network applied to all backend addresses. */
    vnet(value: string): az_network_lb_address_pool_create_command_builder;
}
/**
 * Delete an address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool delete --lb-name
 *                                   --name
 *                                   --resource-group
 *                                   [--subscription]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_delete_command_builder extends CommandBuilder<az_network_lb_address_pool_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_delete_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    name(value: string): az_network_lb_address_pool_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_delete_command_builder;
}
/**
 * List address pools.
 *
 * Syntax:
 * ```
 * az network lb address-pool list --lb-name
 *                                 --resource-group
 *                                 [--query-examples]
 *                                 [--subscription]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_list_command_builder extends CommandBuilder<az_network_lb_address_pool_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_address_pool_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_list_command_builder;
}
/**
 * Get the details of an address pool.
 *
 * Syntax:
 * ```
 * az network lb address-pool show --lb-name
 *                                 --name
 *                                 --resource-group
 *                                 [--query-examples]
 *                                 [--subscription]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the backend address pool. If only one exists, omit to use as default.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_address_pool_show_command_builder extends CommandBuilder<az_network_lb_address_pool_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_address_pool_show_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    name(value: string): az_network_lb_address_pool_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_address_pool_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_address_pool_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_address_pool_show_command_builder;
}
/**
 * Create a frontend IP address.
 *
 * Syntax:
 * ```
 * az network lb frontend-ip create --lb-name
 *                                  --name
 *                                  --resource-group
 *                                  [--private-ip-address]
 *                                  [--private-ip-address-version {IPv4, IPv6}]
 *                                  [--public-ip-address]
 *                                  [--public-ip-prefix]
 *                                  [--subnet]
 *                                  [--subscription]
 *                                  [--vnet-name]
 *                                  [--zone {1, 2, 3}]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the frontend IP configuration.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_frontend_ip_create_command_builder extends CommandBuilder<az_network_lb_frontend_ip_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Static private IP address to associate with the configuration. */
    privateIpAddress(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** The private IP address version to use. */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_lb_frontend_ip_create_command_builder;
    /** Name or ID of the existing public IP to associate with the configuration. */
    publicIpAddress(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Name or ID of a public IP prefix. */
    publicIpPrefix(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Name or ID of an existing subnet. If name is specified, also specify --vnet-name. */
    subnet(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** The virtual network (VNet) associated with the subnet (Omit if supplying a subnet id). */
    vnetName(value: string): az_network_lb_frontend_ip_create_command_builder;
    /** Availability zone into which to provision the resource. */
    zone(value: '1' | '2' | '3'): az_network_lb_frontend_ip_create_command_builder;
}
/**
 * Delete a frontend IP address.
 *
 * Syntax:
 * ```
 * az network lb frontend-ip delete --lb-name
 *                                  --name
 *                                  --resource-group
 *                                  [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the frontend IP configuration.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_frontend_ip_delete_command_builder extends CommandBuilder<az_network_lb_frontend_ip_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_frontend_ip_delete_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_lb_frontend_ip_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_frontend_ip_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_frontend_ip_delete_command_builder;
}
/**
 * List frontend IP addresses.
 *
 * Syntax:
 * ```
 * az network lb frontend-ip list --lb-name
 *                                --resource-group
 *                                [--query-examples]
 *                                [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_frontend_ip_list_command_builder extends CommandBuilder<az_network_lb_frontend_ip_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_frontend_ip_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_frontend_ip_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_frontend_ip_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_frontend_ip_list_command_builder;
}
/**
 * Get the details of a frontend IP address.
 *
 * Syntax:
 * ```
 * az network lb frontend-ip show --lb-name
 *                                --name
 *                                --resource-group
 *                                [--query-examples]
 *                                [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the frontend IP configuration.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_frontend_ip_show_command_builder extends CommandBuilder<az_network_lb_frontend_ip_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_frontend_ip_show_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_lb_frontend_ip_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_frontend_ip_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_frontend_ip_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_frontend_ip_show_command_builder;
}
/**
 * Update a frontend IP address.
 *
 * Syntax:
 * ```
 * az network lb frontend-ip update [--add]
 *                                  [--force-string]
 *                                  [--ids]
 *                                  [--lb-name]
 *                                  [--name]
 *                                  [--private-ip-address]
 *                                  [--public-ip-address]
 *                                  [--public-ip-prefix]
 *                                  [--remove]
 *                                  [--resource-group]
 *                                  [--set]
 *                                  [--subnet]
 *                                  [--subscription]
 *                                  [--vnet-name]
 * ```
 */
declare class az_network_lb_frontend_ip_update_command_builder extends CommandBuilder<az_network_lb_frontend_ip_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** The name of the frontend IP configuration. */
    name(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Static private IP address to associate with the configuration. Use ""('""' in PowerShell) to remove the static address and use a dynamic address instead. */
    privateIpAddress(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Name or ID of the existing public IP to associate with the configuration. */
    publicIpAddress(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Name or ID of a public IP prefix. */
    publicIpPrefix(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Name or ID of an existing subnet. If name is specified, also specify --vnet-name. */
    subnet(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_frontend_ip_update_command_builder;
    /** The virtual network (VNet) associated with the subnet (Omit if supplying a subnet id). */
    vnetName(value: string): az_network_lb_frontend_ip_update_command_builder;
}
/**
 * Create an inbound NAT address pool.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-pool create --backend-port
 *                                       --frontend-port-range-end
 *                                       --frontend-port-range-start
 *                                       --lb-name
 *                                       --name
 *                                       --protocol {All, Tcp, Udp}
 *                                       --resource-group
 *                                       [--enable-tcp-reset {false, true}]
 *                                       [--floating-ip {false, true}]
 *                                       [--frontend-ip-name]
 *                                       [--idle-timeout]
 *                                       [--subscription]
 * ```
 *
 * @param {string} backendPort Port number.
 * @param {string} frontendPortRangeEnd Port number.
 * @param {string} frontendPortRangeStart Port number.
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the inbound NAT pool.
 * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_pool_create_command_builder extends CommandBuilder<az_network_lb_inbound_nat_pool_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, backendPort: string, frontendPortRangeEnd: string, frontendPortRangeStart: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string);
    /** Port number. */
    backendPort(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Port number. */
    frontendPortRangeEnd(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Port number. */
    frontendPortRangeStart(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** The name of the inbound NAT pool. */
    name(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_inbound_nat_pool_create_command_builder;
    /** The name of the frontend IP configuration. If only one exists, omit to use as default. */
    frontendIpName(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_pool_create_command_builder;
}
/**
 * Delete an inbound NAT address pool.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-pool delete --lb-name
 *                                       --name
 *                                       --resource-group
 *                                       [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the inbound NAT pool.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_pool_delete_command_builder extends CommandBuilder<az_network_lb_inbound_nat_pool_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_pool_delete_command_builder;
    /** The name of the inbound NAT pool. */
    name(value: string): az_network_lb_inbound_nat_pool_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_pool_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_pool_delete_command_builder;
}
/**
 * List inbound NAT address pools.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-pool list --lb-name
 *                                     --resource-group
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_pool_list_command_builder extends CommandBuilder<az_network_lb_inbound_nat_pool_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_pool_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_pool_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_inbound_nat_pool_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_pool_list_command_builder;
}
/**
 * Get the details of an inbound NAT address pool.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-pool show --lb-name
 *                                     --name
 *                                     --resource-group
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the inbound NAT pool.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_pool_show_command_builder extends CommandBuilder<az_network_lb_inbound_nat_pool_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_pool_show_command_builder;
    /** The name of the inbound NAT pool. */
    name(value: string): az_network_lb_inbound_nat_pool_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_pool_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_inbound_nat_pool_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_pool_show_command_builder;
}
/**
 * Update an inbound NAT address pool.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-pool update [--add]
 *                                       [--backend-port]
 *                                       [--enable-tcp-reset {false, true}]
 *                                       [--floating-ip {false, true}]
 *                                       [--force-string]
 *                                       [--frontend-ip-name]
 *                                       [--frontend-port-range-end]
 *                                       [--frontend-port-range-start]
 *                                       [--idle-timeout]
 *                                       [--ids]
 *                                       [--lb-name]
 *                                       [--name]
 *                                       [--protocol {All, Tcp, Udp}]
 *                                       [--remove]
 *                                       [--resource-group]
 *                                       [--set]
 *                                       [--subscription]
 * ```
 */
declare class az_network_lb_inbound_nat_pool_update_command_builder extends CommandBuilder<az_network_lb_inbound_nat_pool_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Port number. */
    backendPort(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_inbound_nat_pool_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** The name of the frontend IP configuration. */
    frontendIpName(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Port number. */
    frontendPortRangeEnd(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Port number. */
    frontendPortRangeStart(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** The name of the inbound NAT pool. */
    name(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_pool_update_command_builder;
}
/**
 * Create an inbound NAT rule.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-rule create --backend-port
 *                                       --frontend-port
 *                                       --lb-name
 *                                       --name
 *                                       --protocol {All, Tcp, Udp}
 *                                       --resource-group
 *                                       [--enable-tcp-reset {false, true}]
 *                                       [--floating-ip {false, true}]
 *                                       [--frontend-ip-name]
 *                                       [--idle-timeout]
 *                                       [--subscription]
 * ```
 *
 * @param {string} backendPort Port number.
 * @param {string} frontendPort Port number.
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the inbound NAT rule.
 * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_rule_create_command_builder extends CommandBuilder<az_network_lb_inbound_nat_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, backendPort: string, frontendPort: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string);
    /** Port number. */
    backendPort(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Port number. */
    frontendPort(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** The name of the inbound NAT rule. */
    name(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_inbound_nat_rule_create_command_builder;
    /** The name of the frontend IP configuration. If only one exists, omit to use as default. */
    frontendIpName(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_rule_create_command_builder;
}
/**
 * Delete an inbound NAT rule.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-rule delete --lb-name
 *                                       --name
 *                                       --resource-group
 *                                       [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the inbound NAT rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_rule_delete_command_builder extends CommandBuilder<az_network_lb_inbound_nat_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_rule_delete_command_builder;
    /** The name of the inbound NAT rule. */
    name(value: string): az_network_lb_inbound_nat_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_rule_delete_command_builder;
}
/**
 * List inbound NAT rules.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-rule list --lb-name
 *                                     --resource-group
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_rule_list_command_builder extends CommandBuilder<az_network_lb_inbound_nat_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_inbound_nat_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_rule_list_command_builder;
}
/**
 * Get the details of an inbound NAT rule.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-rule show --lb-name
 *                                     --name
 *                                     --resource-group
 *                                     [--query-examples]
 *                                     [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the inbound NAT rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_inbound_nat_rule_show_command_builder extends CommandBuilder<az_network_lb_inbound_nat_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_inbound_nat_rule_show_command_builder;
    /** The name of the inbound NAT rule. */
    name(value: string): az_network_lb_inbound_nat_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_inbound_nat_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_rule_show_command_builder;
}
/**
 * Update an inbound NAT rule.
 *
 * Syntax:
 * ```
 * az network lb inbound-nat-rule update [--add]
 *                                       [--backend-port]
 *                                       [--enable-tcp-reset {false, true}]
 *                                       [--floating-ip {false, true}]
 *                                       [--force-string]
 *                                       [--frontend-ip-name]
 *                                       [--frontend-port]
 *                                       [--idle-timeout]
 *                                       [--ids]
 *                                       [--lb-name]
 *                                       [--name]
 *                                       [--protocol {All, Tcp, Udp}]
 *                                       [--remove]
 *                                       [--resource-group]
 *                                       [--set]
 *                                       [--subscription]
 * ```
 */
declare class az_network_lb_inbound_nat_rule_update_command_builder extends CommandBuilder<az_network_lb_inbound_nat_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Port number. */
    backendPort(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_inbound_nat_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** The name of the frontend IP configuration. */
    frontendIpName(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Port number. */
    frontendPort(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** The name of the inbound NAT rule. */
    name(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_inbound_nat_rule_update_command_builder;
}
/**
 * Create an outbound-rule.
 *
 * Syntax:
 * ```
 * az network lb outbound-rule create --address-pool
 *                                    --frontend-ip-configs
 *                                    --lb-name
 *                                    --name
 *                                    --protocol {All, Tcp, Udp}
 *                                    --resource-group
 *                                    [--enable-tcp-reset {false, true}]
 *                                    [--idle-timeout]
 *                                    [--outbound-ports]
 *                                    [--subscription]
 * ```
 *
 * @param {string} addressPool Name or ID of the backend address pool.
 * @param {string} frontendIpConfigs Space-separated list of frontend IP configuration names or IDs.
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the outbound rule.
 * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_outbound_rule_create_command_builder extends CommandBuilder<az_network_lb_outbound_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPool: string, frontendIpConfigs: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string);
    /** Name or ID of the backend address pool. */
    addressPool(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** Space-separated list of frontend IP configuration names or IDs. */
    frontendIpConfigs(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** The name of the outbound rule. */
    name(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_outbound_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_outbound_rule_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** The number of outbound ports to be used for NAT. */
    outboundPorts(value: string): az_network_lb_outbound_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_outbound_rule_create_command_builder;
}
/**
 * Delete an outbound-rule.
 *
 * Syntax:
 * ```
 * az network lb outbound-rule delete --lb-name
 *                                    --name
 *                                    --resource-group
 *                                    [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the outbound rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_outbound_rule_delete_command_builder extends CommandBuilder<az_network_lb_outbound_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_outbound_rule_delete_command_builder;
    /** The name of the outbound rule. */
    name(value: string): az_network_lb_outbound_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_outbound_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_outbound_rule_delete_command_builder;
}
/**
 * List outbound rules.
 *
 * Syntax:
 * ```
 * az network lb outbound-rule list --lb-name
 *                                  --resource-group
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_outbound_rule_list_command_builder extends CommandBuilder<az_network_lb_outbound_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_outbound_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_outbound_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_outbound_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_outbound_rule_list_command_builder;
}
/**
 * Get the details of an outbound rule.
 *
 * Syntax:
 * ```
 * az network lb outbound-rule show --lb-name
 *                                  --name
 *                                  --resource-group
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the outbound rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_outbound_rule_show_command_builder extends CommandBuilder<az_network_lb_outbound_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_outbound_rule_show_command_builder;
    /** The name of the outbound rule. */
    name(value: string): az_network_lb_outbound_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_outbound_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_outbound_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_outbound_rule_show_command_builder;
}
/**
 * Update an outbound-rule.
 *
 * Syntax:
 * ```
 * az network lb outbound-rule update [--add]
 *                                    [--address-pool]
 *                                    [--enable-tcp-reset {false, true}]
 *                                    [--force-string]
 *                                    [--frontend-ip-configs]
 *                                    [--idle-timeout]
 *                                    [--ids]
 *                                    [--lb-name]
 *                                    [--name]
 *                                    [--outbound-ports]
 *                                    [--protocol {All, Tcp, Udp}]
 *                                    [--remove]
 *                                    [--resource-group]
 *                                    [--set]
 *                                    [--subscription]
 * ```
 */
declare class az_network_lb_outbound_rule_update_command_builder extends CommandBuilder<az_network_lb_outbound_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Name or ID of the backend address pool. */
    addressPool(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_outbound_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Space-separated list of frontend IP configuration names or IDs. */
    frontendIpConfigs(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** The name of the outbound rule. */
    name(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** The number of outbound ports to be used for NAT. */
    outboundPorts(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_outbound_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_outbound_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_outbound_rule_update_command_builder;
}
/**
 * Create a probe.
 *
 * Syntax:
 * ```
 * az network lb probe create --lb-name
 *                            --name
 *                            --port
 *                            --protocol {Http, Https, Tcp}
 *                            --resource-group
 *                            [--interval]
 *                            [--path]
 *                            [--subscription]
 *                            [--threshold]
 * ```
 *
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the probe.
 * @param {string} port The port to interrogate.
 * @param {'Http' | 'Https' | 'Tcp'} protocol The protocol to probe.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_probe_create_command_builder extends CommandBuilder<az_network_lb_probe_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, port: string, protocol: 'Http' | 'Https' | 'Tcp', resourceGroup: string);
    /** The load balancer name. */
    lbName(value: string): az_network_lb_probe_create_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_lb_probe_create_command_builder;
    /** The port to interrogate. */
    port(value: string): az_network_lb_probe_create_command_builder;
    /** The protocol to probe. */
    protocol(value: 'Http' | 'Https' | 'Tcp'): az_network_lb_probe_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_probe_create_command_builder;
    /** Probing time interval in seconds. */
    interval(value: string): az_network_lb_probe_create_command_builder;
    /** The endpoint to interrogate (http only). */
    path(value: string): az_network_lb_probe_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_probe_create_command_builder;
    /** The number of consecutive probe failures before an instance is deemed unhealthy. */
    threshold(value: string): az_network_lb_probe_create_command_builder;
}
/**
 * Delete a probe.
 *
 * Syntax:
 * ```
 * az network lb probe delete --lb-name
 *                            --name
 *                            --resource-group
 *                            [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the probe.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_probe_delete_command_builder extends CommandBuilder<az_network_lb_probe_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_probe_delete_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_lb_probe_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_probe_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_probe_delete_command_builder;
}
/**
 * List probes.
 *
 * Syntax:
 * ```
 * az network lb probe list --lb-name
 *                          --resource-group
 *                          [--query-examples]
 *                          [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_probe_list_command_builder extends CommandBuilder<az_network_lb_probe_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_probe_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_probe_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_probe_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_probe_list_command_builder;
}
/**
 * Get the details of a probe.
 *
 * Syntax:
 * ```
 * az network lb probe show --lb-name
 *                          --name
 *                          --resource-group
 *                          [--query-examples]
 *                          [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the probe.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_probe_show_command_builder extends CommandBuilder<az_network_lb_probe_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_probe_show_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_lb_probe_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_probe_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_probe_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_probe_show_command_builder;
}
/**
 * Update a probe.
 *
 * Syntax:
 * ```
 * az network lb probe update [--add]
 *                            [--force-string]
 *                            [--ids]
 *                            [--interval]
 *                            [--lb-name]
 *                            [--name]
 *                            [--path]
 *                            [--port]
 *                            [--protocol {Http, Https, Tcp}]
 *                            [--remove]
 *                            [--resource-group]
 *                            [--set]
 *                            [--subscription]
 *                            [--threshold]
 * ```
 */
declare class az_network_lb_probe_update_command_builder extends CommandBuilder<az_network_lb_probe_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_probe_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_probe_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_probe_update_command_builder;
    /** Probing time interval in seconds. */
    interval(value: string): az_network_lb_probe_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_probe_update_command_builder;
    /** The name of the probe. */
    name(value: string): az_network_lb_probe_update_command_builder;
    /** The endpoint to interrogate (http only). */
    path(value: string): az_network_lb_probe_update_command_builder;
    /** The port to interrogate. */
    port(value: string): az_network_lb_probe_update_command_builder;
    /** The protocol to probe. */
    protocol(value: 'Http' | 'Https' | 'Tcp'): az_network_lb_probe_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_probe_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_probe_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_probe_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_probe_update_command_builder;
    /** The number of consecutive probe failures before an instance is deemed unhealthy. */
    threshold(value: string): az_network_lb_probe_update_command_builder;
}
/**
 * Create a load balancing rule.
 *
 * Syntax:
 * ```
 * az network lb rule create --backend-port
 *                           --frontend-port
 *                           --lb-name
 *                           --name
 *                           --protocol {All, Tcp, Udp}
 *                           --resource-group
 *                           [--backend-pool-name]
 *                           [--disable-outbound-snat {false, true}]
 *                           [--enable-tcp-reset {false, true}]
 *                           [--floating-ip {false, true}]
 *                           [--frontend-ip-name]
 *                           [--idle-timeout]
 *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
 *                           [--probe-name]
 *                           [--subscription]
 * ```
 *
 * @param {string} backendPort Port number.
 * @param {string} frontendPort Port number.
 * @param {string} lbName The load balancer name.
 * @param {string} name The name of the load balancing rule.
 * @param {'All' | 'Tcp' | 'Udp'} protocol Network transport protocol.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_rule_create_command_builder extends CommandBuilder<az_network_lb_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, backendPort: string, frontendPort: string, lbName: string, name: string, protocol: 'All' | 'Tcp' | 'Udp', resourceGroup: string);
    /** Port number. */
    backendPort(value: string): az_network_lb_rule_create_command_builder;
    /** Port number. */
    frontendPort(value: string): az_network_lb_rule_create_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_rule_create_command_builder;
    /** The name of the load balancing rule. */
    name(value: string): az_network_lb_rule_create_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_rule_create_command_builder;
    /** The name of the backend address pool. If only one exists, omit to use as default. */
    backendPoolName(value: string): az_network_lb_rule_create_command_builder;
    /** Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule. */
    disableOutboundSnat(value: boolean): az_network_lb_rule_create_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_rule_create_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_rule_create_command_builder;
    /** The name of the frontend IP configuration. If only one exists, omit to use as default. */
    frontendIpName(value: string): az_network_lb_rule_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_rule_create_command_builder;
    /** Affinity rule settings. */
    loadDistribution(value: 'Default' | 'SourceIP' | 'SourceIPProtocol'): az_network_lb_rule_create_command_builder;
    /** Name of an existing probe to associate with this rule. */
    probeName(value: string): az_network_lb_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_rule_create_command_builder;
}
/**
 * Delete a load balancing rule.
 *
 * Syntax:
 * ```
 * az network lb rule delete --lb-name
 *                           --name
 *                           --resource-group
 *                           [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the load balancing rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_rule_delete_command_builder extends CommandBuilder<az_network_lb_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_rule_delete_command_builder;
    /** The name of the load balancing rule. */
    name(value: string): az_network_lb_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_rule_delete_command_builder;
}
/**
 * List load balancing rules.
 *
 * Syntax:
 * ```
 * az network lb rule list --lb-name
 *                         --resource-group
 *                         [--query-examples]
 *                         [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_rule_list_command_builder extends CommandBuilder<az_network_lb_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_rule_list_command_builder;
}
/**
 * Get the details of a load balancing rule.
 *
 * Syntax:
 * ```
 * az network lb rule show --lb-name
 *                         --name
 *                         --resource-group
 *                         [--query-examples]
 *                         [--subscription]
 * ```
 *
 * @param {string} lbName The name of the load balancer.
 * @param {string} name The name of the load balancing rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_rule_show_command_builder extends CommandBuilder<az_network_lb_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbName: string, name: string, resourceGroup: string);
    /** The name of the load balancer. */
    lbName(value: string): az_network_lb_rule_show_command_builder;
    /** The name of the load balancing rule. */
    name(value: string): az_network_lb_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_rule_show_command_builder;
}
/**
 * Update a load balancing rule.
 *
 * Syntax:
 * ```
 * az network lb rule update [--add]
 *                           [--backend-pool-name]
 *                           [--backend-port]
 *                           [--disable-outbound-snat {false, true}]
 *                           [--enable-tcp-reset {false, true}]
 *                           [--floating-ip {false, true}]
 *                           [--force-string]
 *                           [--frontend-ip-name]
 *                           [--frontend-port]
 *                           [--idle-timeout]
 *                           [--ids]
 *                           [--lb-name]
 *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
 *                           [--name]
 *                           [--probe-name]
 *                           [--protocol {All, Tcp, Udp}]
 *                           [--remove]
 *                           [--resource-group]
 *                           [--set]
 *                           [--subscription]
 * ```
 */
declare class az_network_lb_rule_update_command_builder extends CommandBuilder<az_network_lb_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_rule_update_command_builder;
    /** The name of the backend address pool. */
    backendPoolName(value: string): az_network_lb_rule_update_command_builder;
    /** Port number. */
    backendPort(value: string): az_network_lb_rule_update_command_builder;
    /** Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule. */
    disableOutboundSnat(value: boolean): az_network_lb_rule_update_command_builder;
    /** Receive bidirectional TCP reset on TCP flow idle timeout or unexpected connection termination. Only used when protocol is set to TCP. */
    enableTcpReset(value: boolean): az_network_lb_rule_update_command_builder;
    /** Enable floating IP. */
    floatingIp(value: boolean): az_network_lb_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_rule_update_command_builder;
    /** The name of the frontend IP configuration. */
    frontendIpName(value: string): az_network_lb_rule_update_command_builder;
    /** Port number. */
    frontendPort(value: string): az_network_lb_rule_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_lb_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_rule_update_command_builder;
    /** The load balancer name. */
    lbName(value: string): az_network_lb_rule_update_command_builder;
    /** Affinity rule settings. */
    loadDistribution(value: 'Default' | 'SourceIP' | 'SourceIPProtocol'): az_network_lb_rule_update_command_builder;
    /** The name of the load balancing rule. */
    name(value: string): az_network_lb_rule_update_command_builder;
    /** Name of an existing probe to associate with this rule. */
    probeName(value: string): az_network_lb_rule_update_command_builder;
    /** Network transport protocol. */
    protocol(value: 'All' | 'Tcp' | 'Udp'): az_network_lb_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_rule_update_command_builder;
}
/**
 * Create a load balancer.
 *
 * Syntax:
 * ```
 * az network lb create --name
 *                      --resource-group
 *                      [--backend-pool-name]
 *                      [--frontend-ip-name]
 *                      [--frontend-ip-zone {1, 2, 3}]
 *                      [--location]
 *                      [--no-wait]
 *                      [--private-ip-address]
 *                      [--private-ip-address-version {IPv4, IPv6}]
 *                      [--public-ip-address]
 *                      [--public-ip-address-allocation {Dynamic, Static}]
 *                      [--public-ip-dns-name]
 *                      [--public-ip-zone {1, 2, 3}]
 *                      [--sku {Basic, Standard}]
 *                      [--subnet]
 *                      [--subnet-address-prefix]
 *                      [--subscription]
 *                      [--tags]
 *                      [--validate]
 *                      [--vnet-address-prefix]
 *                      [--vnet-name]
 * ```
 *
 * @param {string} name The load balancer name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_lb_create_command_builder extends CommandBuilder<az_network_lb_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The load balancer name. */
    name(value: string): az_network_lb_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_create_command_builder;
    /** The name of the backend address pool. */
    backendPoolName(value: string): az_network_lb_create_command_builder;
    /** The name of the frontend IP configuration. */
    frontendIpName(value: string): az_network_lb_create_command_builder;
    /** Used to create internal facing Load balancer. */
    frontendIpZone(value: '1' | '2' | '3'): az_network_lb_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_lb_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_lb_create_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_lb_create_command_builder;
    /** The private IP address version to use. */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_lb_create_command_builder;
    /** Name or ID of the public IP address, or "" for none. Uses existing resource if available or will create a new resource with defaults if omitted. */
    publicIpAddress(value: string): az_network_lb_create_command_builder;
    /** IP allocation method. */
    publicIpAddressAllocation(value: 'Dynamic' | 'Static'): az_network_lb_create_command_builder;
    /** Globally unique DNS name for a new public IP. */
    publicIpDnsName(value: string): az_network_lb_create_command_builder;
    /** Used to created a new public ip for the load balancer, a.k.a public facing Load balancer. */
    publicIpZone(value: '1' | '2' | '3'): az_network_lb_create_command_builder;
    /** Load balancer SKU. */
    sku(value: 'Basic' | 'Standard'): az_network_lb_create_command_builder;
    /** Name or ID of a subnet. Uses existing resource or creates new if specified, or none if omitted. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group or subscription, please provide the ID instead of the name of the subnet. */
    subnet(value: string): az_network_lb_create_command_builder;
    /** The CIDR address prefix to use when creating a new subnet. */
    subnetAddressPrefix(value: string): az_network_lb_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_lb_create_command_builder;
    /** Generate and validate the ARM template without creating any resources. */
    validate(value: string): az_network_lb_create_command_builder;
    /** The CIDR address prefix to use when creating a new VNet. */
    vnetAddressPrefix(value: string): az_network_lb_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_lb_create_command_builder;
}
/**
 * Delete a load balancer.
 *
 * Syntax:
 * ```
 * az network lb delete [--ids]
 *                      [--name]
 *                      [--resource-group]
 *                      [--subscription]
 * ```
 */
declare class az_network_lb_delete_command_builder extends CommandBuilder<az_network_lb_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_delete_command_builder;
    /** The load balancer name. */
    name(value: string): az_network_lb_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_delete_command_builder;
}
/**
 * List load balancers.
 *
 * Syntax:
 * ```
 * az network lb list [--query-examples]
 *                    [--resource-group]
 *                    [--subscription]
 * ```
 */
declare class az_network_lb_list_command_builder extends CommandBuilder<az_network_lb_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_list_command_builder;
}
/**
 * Get the details of a load balancer.
 *
 * Syntax:
 * ```
 * az network lb show [--expand]
 *                    [--ids]
 *                    [--name]
 *                    [--query-examples]
 *                    [--resource-group]
 *                    [--subscription]
 * ```
 */
declare class az_network_lb_show_command_builder extends CommandBuilder<az_network_lb_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_lb_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_show_command_builder;
    /** The load balancer name. */
    name(value: string): az_network_lb_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_lb_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_show_command_builder;
}
/**
 * Update a load balancer.
 *
 * Syntax:
 * ```
 * az network lb update [--add]
 *                      [--force-string]
 *                      [--ids]
 *                      [--name]
 *                      [--remove]
 *                      [--resource-group]
 *                      [--set]
 *                      [--subscription]
 * ```
 */
declare class az_network_lb_update_command_builder extends CommandBuilder<az_network_lb_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_lb_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_lb_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_lb_update_command_builder;
    /** The load balancer name. */
    name(value: string): az_network_lb_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_lb_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_lb_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_lb_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_lb_update_command_builder;
}
/**
 * Create a local VPN gateway.
 *
 * Syntax:
 * ```
 * az network local-gateway create --gateway-ip-address
 *                                 --name
 *                                 --resource-group
 *                                 [--asn]
 *                                 [--bgp-peering-address]
 *                                 [--local-address-prefixes]
 *                                 [--location]
 *                                 [--no-wait]
 *                                 [--peer-weight]
 *                                 [--subscription]
 *                                 [--tags]
 * ```
 *
 * @param {string} gatewayIpAddress Gateway's public IP address. (e.g. 10.1.1.1).
 * @param {string} name Name of the local network gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_local_gateway_create_command_builder extends CommandBuilder<az_network_local_gateway_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayIpAddress: string, name: string, resourceGroup: string);
    /** Gateway's public IP address. (e.g. 10.1.1.1). */
    gatewayIpAddress(value: string): az_network_local_gateway_create_command_builder;
    /** Name of the local network gateway. */
    name(value: string): az_network_local_gateway_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_create_command_builder;
    /** Autonomous System Number to use for the BGP settings. */
    asn(value: string): az_network_local_gateway_create_command_builder;
    /** IP address from the OnPremise VPN's subnet to use for BGP peering. */
    bgpPeeringAddress(value: string): az_network_local_gateway_create_command_builder;
    /** List of CIDR block prefixes representing the address space of the OnPremise VPN's subnet. */
    localAddressPrefixes(value: string): az_network_local_gateway_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_local_gateway_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_local_gateway_create_command_builder;
    /** Weight (0-100) added to routes learned through BGP peering. */
    peerWeight(value: string): az_network_local_gateway_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_local_gateway_create_command_builder;
}
/**
 * Delete a local VPN gateway.
 *
 * Syntax:
 * ```
 * az network local-gateway delete [--ids]
 *                                 [--name]
 *                                 [--no-wait]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 */
declare class az_network_local_gateway_delete_command_builder extends CommandBuilder<az_network_local_gateway_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_local_gateway_delete_command_builder;
    /** Name of the local network gateway. */
    name(value: string): az_network_local_gateway_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_local_gateway_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_delete_command_builder;
}
/**
 * List all local VPN gateways in a resource group.
 *
 * Syntax:
 * ```
 * az network local-gateway list --resource-group
 *                               [--query-examples]
 *                               [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_local_gateway_list_command_builder extends CommandBuilder<az_network_local_gateway_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_local_gateway_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_list_command_builder;
}
/**
 * Get the details of a local VPN gateway.
 *
 * Syntax:
 * ```
 * az network local-gateway show [--ids]
 *                               [--name]
 *                               [--query-examples]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_local_gateway_show_command_builder extends CommandBuilder<az_network_local_gateway_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_local_gateway_show_command_builder;
    /** Name of the local network gateway. */
    name(value: string): az_network_local_gateway_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_local_gateway_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_show_command_builder;
}
/**
 * Update a local VPN gateway.
 *
 * Syntax:
 * ```
 * az network local-gateway update [--add]
 *                                 [--asn]
 *                                 [--bgp-peering-address]
 *                                 [--force-string]
 *                                 [--gateway-ip-address]
 *                                 [--ids]
 *                                 [--local-address-prefixes]
 *                                 [--name]
 *                                 [--no-wait]
 *                                 [--peer-weight]
 *                                 [--remove]
 *                                 [--resource-group]
 *                                 [--set]
 *                                 [--subscription]
 *                                 [--tags]
 * ```
 */
declare class az_network_local_gateway_update_command_builder extends CommandBuilder<az_network_local_gateway_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_local_gateway_update_command_builder;
    /** Autonomous System Number to use for the BGP settings. */
    asn(value: string): az_network_local_gateway_update_command_builder;
    /** IP address from the OnPremise VPN's subnet to use for BGP peering. */
    bgpPeeringAddress(value: string): az_network_local_gateway_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_local_gateway_update_command_builder;
    /** Gateway's public IP address. (e.g. 10.1.1.1). */
    gatewayIpAddress(value: string): az_network_local_gateway_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_local_gateway_update_command_builder;
    /** List of CIDR block prefixes representing the address space of the OnPremise VPN's subnet. */
    localAddressPrefixes(value: string): az_network_local_gateway_update_command_builder;
    /** Name of the local network gateway. */
    name(value: string): az_network_local_gateway_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_local_gateway_update_command_builder;
    /** Weight (0-100) added to routes learned through BGP peering. */
    peerWeight(value: string): az_network_local_gateway_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_local_gateway_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_local_gateway_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_local_gateway_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the local gateway is met.
 *
 * Syntax:
 * ```
 * az network local-gateway wait [--created]
 *                               [--custom]
 *                               [--deleted]
 *                               [--exists]
 *                               [--ids]
 *                               [--interval]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 *                               [--timeout]
 *                               [--updated]
 * ```
 */
declare class az_network_local_gateway_wait_command_builder extends CommandBuilder<az_network_local_gateway_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_local_gateway_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_local_gateway_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_local_gateway_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_local_gateway_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_local_gateway_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_local_gateway_wait_command_builder;
    /** Name of the local network gateway. */
    name(value: string): az_network_local_gateway_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_local_gateway_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_local_gateway_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_local_gateway_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_local_gateway_wait_command_builder;
}
/**
 * Create a NAT gateway.
 *
 * Syntax:
 * ```
 * az network nat gateway create --name
 *                               --resource-group
 *                               [--idle-timeout]
 *                               [--location]
 *                               [--no-wait]
 *                               [--public-ip-addresses]
 *                               [--public-ip-prefixes]
 *                               [--subscription]
 *                               [--zone {1, 2, 3}]
 * ```
 *
 * @param {string} name Name of the NAT gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nat_gateway_create_command_builder extends CommandBuilder<az_network_nat_gateway_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the NAT gateway. */
    name(value: string): az_network_nat_gateway_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_nat_gateway_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_nat_gateway_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_nat_gateway_create_command_builder;
    /** Space-separated list of public IP addresses (names or IDs). */
    publicIpAddresses(value: string): az_network_nat_gateway_create_command_builder;
    /** Space-separated list of public IP prefixes (names or IDs). */
    publicIpPrefixes(value: string): az_network_nat_gateway_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_create_command_builder;
    /** Availability zone into which to provision the resource. */
    zone(value: '1' | '2' | '3'): az_network_nat_gateway_create_command_builder;
}
/**
 * Delete a NAT gateway.
 *
 * Syntax:
 * ```
 * az network nat gateway delete [--ids]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_nat_gateway_delete_command_builder extends CommandBuilder<az_network_nat_gateway_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nat_gateway_delete_command_builder;
    /** Name of the NAT gateway. */
    name(value: string): az_network_nat_gateway_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_delete_command_builder;
}
/**
 * List NAT gateways.
 *
 * Syntax:
 * ```
 * az network nat gateway list [--query-examples]
 *                             [--resource-group]
 *                             [--subscription]
 * ```
 */
declare class az_network_nat_gateway_list_command_builder extends CommandBuilder<az_network_nat_gateway_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nat_gateway_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_list_command_builder;
}
/**
 * Show details of a NAT gateway.
 *
 * Syntax:
 * ```
 * az network nat gateway show [--ids]
 *                             [--name]
 *                             [--query-examples]
 *                             [--resource-group]
 *                             [--subscription]
 * ```
 */
declare class az_network_nat_gateway_show_command_builder extends CommandBuilder<az_network_nat_gateway_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nat_gateway_show_command_builder;
    /** Name of the NAT gateway. */
    name(value: string): az_network_nat_gateway_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nat_gateway_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_show_command_builder;
}
/**
 * Update a NAT gateway.
 *
 * Syntax:
 * ```
 * az network nat gateway update [--add]
 *                               [--force-string]
 *                               [--idle-timeout]
 *                               [--ids]
 *                               [--name]
 *                               [--public-ip-addresses]
 *                               [--public-ip-prefixes]
 *                               [--remove]
 *                               [--resource-group]
 *                               [--set]
 *                               [--subscription]
 * ```
 */
declare class az_network_nat_gateway_update_command_builder extends CommandBuilder<az_network_nat_gateway_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_nat_gateway_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_nat_gateway_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_nat_gateway_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nat_gateway_update_command_builder;
    /** Name of the NAT gateway. */
    name(value: string): az_network_nat_gateway_update_command_builder;
    /** Space-separated list of public IP addresses (names or IDs). */
    publicIpAddresses(value: string): az_network_nat_gateway_update_command_builder;
    /** Space-separated list of public IP prefixes (names or IDs). */
    publicIpPrefixes(value: string): az_network_nat_gateway_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_nat_gateway_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_nat_gateway_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the NAT gateway is met.
 *
 * Syntax:
 * ```
 * az network nat gateway wait [--created]
 *                             [--custom]
 *                             [--deleted]
 *                             [--exists]
 *                             [--ids]
 *                             [--interval]
 *                             [--name]
 *                             [--resource-group]
 *                             [--subscription]
 *                             [--timeout]
 *                             [--updated]
 * ```
 */
declare class az_network_nat_gateway_wait_command_builder extends CommandBuilder<az_network_nat_gateway_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_nat_gateway_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_nat_gateway_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_nat_gateway_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_nat_gateway_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nat_gateway_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_nat_gateway_wait_command_builder;
    /** Name of the NAT gateway. */
    name(value: string): az_network_nat_gateway_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nat_gateway_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nat_gateway_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_nat_gateway_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_nat_gateway_wait_command_builder;
}
/**
 * Add an address pool to an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config address-pool add --address-pool
 *                                           --ip-config-name
 *                                           --nic-name
 *                                           --resource-group
 *                                           [--gateway-name]
 *                                           [--lb-name]
 *                                           [--subscription]
 * ```
 *
 * @param {string} addressPool The name or ID of an existing backend address pool.
 * @param {string} ipConfigName The name of the IP configuration.
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_address_pool_add_command_builder extends CommandBuilder<az_network_nic_ip_config_address_pool_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPool: string, ipConfigName: string, nicName: string, resourceGroup: string);
    /** The name or ID of an existing backend address pool. */
    addressPool(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** The name of the IP configuration. */
    ipConfigName(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** The name of an application gateway containing the address pool (Omit if suppying an address pool ID). */
    gatewayName(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** The name of the load balancer containing the address pool (Omit if suppying an address pool ID). */
    lbName(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_address_pool_add_command_builder;
}
/**
 * Remove an address pool of an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config address-pool remove --address-pool
 *                                              --ip-config-name
 *                                              --nic-name
 *                                              --resource-group
 *                                              [--gateway-name]
 *                                              [--lb-name]
 *                                              [--subscription]
 * ```
 *
 * @param {string} addressPool The name or ID of an existing backend address pool.
 * @param {string} ipConfigName The name of the IP configuration.
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_address_pool_remove_command_builder extends CommandBuilder<az_network_nic_ip_config_address_pool_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPool: string, ipConfigName: string, nicName: string, resourceGroup: string);
    /** The name or ID of an existing backend address pool. */
    addressPool(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** The name of the IP configuration. */
    ipConfigName(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** The name of an application gateway containing the address pool (Omit if suppying an address pool ID). */
    gatewayName(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** The name of the load balancer containing the address pool (Omit if suppying an address pool ID). */
    lbName(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_address_pool_remove_command_builder;
}
/**
 * Add an inbound NAT rule to an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config inbound-nat-rule add --inbound-nat-rule
 *                                               --ip-config-name
 *                                               --nic-name
 *                                               --resource-group
 *                                               [--lb-name]
 *                                               [--subscription]
 * ```
 *
 * @param {string} inboundNatRule The name or ID of an existing inbound NAT rule.
 * @param {string} ipConfigName The name of the IP configuration.
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_inbound_nat_rule_add_command_builder extends CommandBuilder<az_network_nic_ip_config_inbound_nat_rule_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, inboundNatRule: string, ipConfigName: string, nicName: string, resourceGroup: string);
    /** The name or ID of an existing inbound NAT rule. */
    inboundNatRule(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /** The name of the IP configuration. */
    ipConfigName(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /** The name of the load balancer associated with the NAT rule (Omit if suppying a NAT rule ID). */
    lbName(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_inbound_nat_rule_add_command_builder;
}
/**
 * Remove an inbound NAT rule of an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config inbound-nat-rule remove --inbound-nat-rule
 *                                                  --ip-config-name
 *                                                  --nic-name
 *                                                  --resource-group
 *                                                  [--lb-name]
 *                                                  [--subscription]
 * ```
 *
 * @param {string} inboundNatRule The name or ID of an existing inbound NAT rule.
 * @param {string} ipConfigName The name of the IP configuration.
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_inbound_nat_rule_remove_command_builder extends CommandBuilder<az_network_nic_ip_config_inbound_nat_rule_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, inboundNatRule: string, ipConfigName: string, nicName: string, resourceGroup: string);
    /** The name or ID of an existing inbound NAT rule. */
    inboundNatRule(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
    /** The name of the IP configuration. */
    ipConfigName(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
    /** The name of the load balancer associated with the NAT rule (Omit if suppying a NAT rule ID). */
    lbName(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_inbound_nat_rule_remove_command_builder;
}
/**
 * Create an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config create --name
 *                                 --nic-name
 *                                 --resource-group
 *                                 [--app-gateway-address-pools]
 *                                 [--application-security-groups]
 *                                 [--gateway-name]
 *                                 [--lb-address-pools]
 *                                 [--lb-inbound-nat-rules]
 *                                 [--lb-name]
 *                                 [--make-primary]
 *                                 [--private-ip-address]
 *                                 [--private-ip-address-version {IPv4, IPv6}]
 *                                 [--public-ip-address]
 *                                 [--subnet]
 *                                 [--subscription]
 *                                 [--vnet-name]
 * ```
 *
 * @param {string} name The name of the IP configuration.
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_create_command_builder extends CommandBuilder<az_network_nic_ip_config_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, nicName: string, resourceGroup: string);
    /** The name of the IP configuration. */
    name(value: string): az_network_nic_ip_config_create_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_create_command_builder;
    /** Space-separated list of names or IDs of application gateway backend address pools to associate with the NIC. If names are used, --gateway-name must be specified. */
    appGatewayAddressPools(value: string): az_network_nic_ip_config_create_command_builder;
    /** Space-separated list of application security groups. */
    applicationSecurityGroups(value: string): az_network_nic_ip_config_create_command_builder;
    /** The name of the application gateway to use when adding address pools by name (ignored when IDs are specified). */
    gatewayName(value: string): az_network_nic_ip_config_create_command_builder;
    /** Space-separated list of names or IDs of load balancer address pools to associate with the NIC. If names are used, --lb-name must be specified. */
    lbAddressPools(value: string): az_network_nic_ip_config_create_command_builder;
    /** Space-separated list of names or IDs of load balancer inbound NAT rules to associate with the NIC. If names are used, --lb-name must be specified. */
    lbInboundNatRules(value: string): az_network_nic_ip_config_create_command_builder;
    /** The name of the load balancer to use when adding NAT rules or address pools by name (ignored when IDs are specified). */
    lbName(value: string): az_network_nic_ip_config_create_command_builder;
    /** Set to make this configuration the primary one for the NIC. */
    makePrimary(value: string): az_network_nic_ip_config_create_command_builder;
    /** Static IP address to use or ""('""' in PowerShell) to use a dynamic address. */
    privateIpAddress(value: string): az_network_nic_ip_config_create_command_builder;
    /** */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_nic_ip_config_create_command_builder;
    /** Name or ID of the public IP to use. */
    publicIpAddress(value: string): az_network_nic_ip_config_create_command_builder;
    /** Name or ID of an existing subnet. If name is specified, also specify --vnet-name. */
    subnet(value: string): az_network_nic_ip_config_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_create_command_builder;
    /** The virtual network (VNet) associated with the subnet (Omit if supplying a subnet id). */
    vnetName(value: string): az_network_nic_ip_config_create_command_builder;
}
/**
 * Delete an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config delete [--ids]
 *                                 [--name]
 *                                 [--nic-name]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 */
declare class az_network_nic_ip_config_delete_command_builder extends CommandBuilder<az_network_nic_ip_config_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_ip_config_delete_command_builder;
    /** The name of the IP configuration. */
    name(value: string): az_network_nic_ip_config_delete_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_delete_command_builder;
}
/**
 * List the IP configurations of a NIC.
 *
 * Syntax:
 * ```
 * az network nic ip-config list --nic-name
 *                               --resource-group
 *                               [--query-examples]
 *                               [--subscription]
 * ```
 *
 * @param {string} nicName The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nic_ip_config_list_command_builder extends CommandBuilder<az_network_nic_ip_config_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, nicName: string, resourceGroup: string);
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nic_ip_config_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_list_command_builder;
}
/**
 * Show the details of an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config show [--ids]
 *                               [--name]
 *                               [--nic-name]
 *                               [--query-examples]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_nic_ip_config_show_command_builder extends CommandBuilder<az_network_nic_ip_config_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_ip_config_show_command_builder;
    /** The name of the IP configuration. */
    name(value: string): az_network_nic_ip_config_show_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nic_ip_config_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_show_command_builder;
}
/**
 * Update an IP configuration.
 *
 * Syntax:
 * ```
 * az network nic ip-config update [--add]
 *                                 [--app-gateway-address-pools]
 *                                 [--application-security-groups]
 *                                 [--force-string]
 *                                 [--gateway-name]
 *                                 [--ids]
 *                                 [--lb-address-pools]
 *                                 [--lb-inbound-nat-rules]
 *                                 [--lb-name]
 *                                 [--make-primary]
 *                                 [--name]
 *                                 [--nic-name]
 *                                 [--private-ip-address]
 *                                 [--private-ip-address-version {IPv4, IPv6}]
 *                                 [--public-ip-address]
 *                                 [--remove]
 *                                 [--resource-group]
 *                                 [--set]
 *                                 [--subnet]
 *                                 [--subscription]
 *                                 [--vnet-name]
 * ```
 */
declare class az_network_nic_ip_config_update_command_builder extends CommandBuilder<az_network_nic_ip_config_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_nic_ip_config_update_command_builder;
    /** Space-separated list of names or IDs of application gateway backend address pools to associate with the NIC. If names are used, --gateway-name must be specified. */
    appGatewayAddressPools(value: string): az_network_nic_ip_config_update_command_builder;
    /** Space-separated list of application security groups. */
    applicationSecurityGroups(value: string): az_network_nic_ip_config_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_nic_ip_config_update_command_builder;
    /** The name of the application gateway to use when adding address pools by name (ignored when IDs are specified). */
    gatewayName(value: string): az_network_nic_ip_config_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_ip_config_update_command_builder;
    /** Space-separated list of names or IDs of load balancer address pools to associate with the NIC. If names are used, --lb-name must be specified. */
    lbAddressPools(value: string): az_network_nic_ip_config_update_command_builder;
    /** Space-separated list of names or IDs of load balancer inbound NAT rules to associate with the NIC. If names are used, --lb-name must be specified. */
    lbInboundNatRules(value: string): az_network_nic_ip_config_update_command_builder;
    /** The name of the load balancer to use when adding NAT rules or address pools by name (ignored when IDs are specified). */
    lbName(value: string): az_network_nic_ip_config_update_command_builder;
    /** Set to make this configuration the primary one for the NIC. */
    makePrimary(value: string): az_network_nic_ip_config_update_command_builder;
    /** The name of the IP configuration. */
    name(value: string): az_network_nic_ip_config_update_command_builder;
    /** The network interface (NIC). */
    nicName(value: string): az_network_nic_ip_config_update_command_builder;
    /** Static IP address to use or ""('""' in PowerShell) to use a dynamic address. */
    privateIpAddress(value: string): az_network_nic_ip_config_update_command_builder;
    /** */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_nic_ip_config_update_command_builder;
    /** Name or ID of the public IP to use. */
    publicIpAddress(value: string): az_network_nic_ip_config_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_nic_ip_config_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_ip_config_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_nic_ip_config_update_command_builder;
    /** Name or ID of an existing subnet. If name is specified, also specify --vnet-name. */
    subnet(value: string): az_network_nic_ip_config_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_ip_config_update_command_builder;
    /** The virtual network (VNet) associated with the subnet (Omit if supplying a subnet id). */
    vnetName(value: string): az_network_nic_ip_config_update_command_builder;
}
/**
 * Create a network interface.
 *
 * Syntax:
 * ```
 * az network nic create --name
 *                       --resource-group
 *                       --subnet
 *                       [--accelerated-networking {false, true}]
 *                       [--app-gateway-address-pools]
 *                       [--application-security-groups]
 *                       [--dns-servers]
 *                       [--gateway-name]
 *                       [--internal-dns-name]
 *                       [--ip-forwarding {false, true}]
 *                       [--lb-address-pools]
 *                       [--lb-inbound-nat-rules]
 *                       [--lb-name]
 *                       [--location]
 *                       [--network-security-group]
 *                       [--no-wait]
 *                       [--private-ip-address]
 *                       [--private-ip-address-version {IPv4, IPv6}]
 *                       [--public-ip-address]
 *                       [--subscription]
 *                       [--tags]
 *                       [--vnet-name]
 * ```
 *
 * @param {string} name The network interface (NIC).
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} subnet Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group, please provide the ID instead of the name of the subnet.
 */
declare class az_network_nic_create_command_builder extends CommandBuilder<az_network_nic_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, subnet: string);
    /** The network interface (NIC). */
    name(value: string): az_network_nic_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_create_command_builder;
    /** Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group, please provide the ID instead of the name of the subnet. */
    subnet(value: string): az_network_nic_create_command_builder;
    /** Enable accelerated networking. */
    acceleratedNetworking(value: boolean): az_network_nic_create_command_builder;
    /** Space-separated list of names or IDs of application gateway backend address pools to associate with the NIC. If names are used, --gateway-name must be specified. */
    appGatewayAddressPools(value: string): az_network_nic_create_command_builder;
    /** Space-separated list of application security groups. */
    applicationSecurityGroups(value: string): az_network_nic_create_command_builder;
    /** Space-separated list of DNS server IP addresses. */
    dnsServers(value: string): az_network_nic_create_command_builder;
    /** The name of the application gateway to use when adding address pools by name (ignored when IDs are specified). */
    gatewayName(value: string): az_network_nic_create_command_builder;
    /** The internal DNS name label. */
    internalDnsName(value: string): az_network_nic_create_command_builder;
    /** Enable IP forwarding. */
    ipForwarding(value: boolean): az_network_nic_create_command_builder;
    /** Space-separated list of names or IDs of load balancer address pools to associate with the NIC. If names are used, --lb-name must be specified. */
    lbAddressPools(value: string): az_network_nic_create_command_builder;
    /** Space-separated list of names or IDs of load balancer inbound NAT rules to associate with the NIC. If names are used, --lb-name must be specified. */
    lbInboundNatRules(value: string): az_network_nic_create_command_builder;
    /** The name of the load balancer to use when adding NAT rules or address pools by name (ignored when IDs are specified). */
    lbName(value: string): az_network_nic_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_nic_create_command_builder;
    /** Name or ID of an existing network security group, or none by default. */
    networkSecurityGroup(value: string): az_network_nic_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_nic_create_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_nic_create_command_builder;
    /** The private IP address version to use. */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_nic_create_command_builder;
    /** Name or ID of an existing public IP address, or none by default. */
    publicIpAddress(value: string): az_network_nic_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_nic_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_nic_create_command_builder;
}
/**
 * Delete a network interface.
 *
 * Syntax:
 * ```
 * az network nic delete [--ids]
 *                       [--name]
 *                       [--no-wait]
 *                       [--resource-group]
 *                       [--subscription]
 * ```
 */
declare class az_network_nic_delete_command_builder extends CommandBuilder<az_network_nic_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_delete_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_nic_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_delete_command_builder;
}
/**
 * List network interfaces.
 *
 * Syntax:
 * ```
 * az network nic list [--query-examples]
 *                     [--resource-group]
 *                     [--subscription]
 * ```
 */
declare class az_network_nic_list_command_builder extends CommandBuilder<az_network_nic_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nic_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_list_command_builder;
}
/**
 * List all effective network security groups applied to a network interface.
 *
 * Syntax:
 * ```
 * az network nic list-effective-nsg [--ids]
 *                                   [--name]
 *                                   [--resource-group]
 *                                   [--subscription]
 * ```
 */
declare class az_network_nic_list_effective_nsg_command_builder extends CommandBuilder<az_network_nic_list_effective_nsg_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_list_effective_nsg_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_list_effective_nsg_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_list_effective_nsg_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_list_effective_nsg_command_builder;
}
/**
 * Get the details of a network interface.
 *
 * Syntax:
 * ```
 * az network nic show [--expand]
 *                     [--ids]
 *                     [--name]
 *                     [--query-examples]
 *                     [--resource-group]
 *                     [--subscription]
 * ```
 */
declare class az_network_nic_show_command_builder extends CommandBuilder<az_network_nic_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_nic_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_show_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nic_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_show_command_builder;
}
/**
 * Show the effective route table applied to a network interface.
 *
 * Syntax:
 * ```
 * az network nic show-effective-route-table [--ids]
 *                                           [--name]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_nic_show_effective_route_table_command_builder extends CommandBuilder<az_network_nic_show_effective_route_table_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_show_effective_route_table_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_show_effective_route_table_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_show_effective_route_table_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_show_effective_route_table_command_builder;
}
/**
 * Update a network interface.
 *
 * Syntax:
 * ```
 * az network nic update [--accelerated-networking {false, true}]
 *                       [--add]
 *                       [--dns-servers]
 *                       [--force-string]
 *                       [--ids]
 *                       [--internal-dns-name]
 *                       [--ip-forwarding {false, true}]
 *                       [--name]
 *                       [--network-security-group]
 *                       [--no-wait]
 *                       [--remove]
 *                       [--resource-group]
 *                       [--set]
 *                       [--subscription]
 * ```
 */
declare class az_network_nic_update_command_builder extends CommandBuilder<az_network_nic_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Enable accelerated networking. */
    acceleratedNetworking(value: boolean): az_network_nic_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_nic_update_command_builder;
    /** Space-separated list of DNS server IP addresses. Use ""('""' in PowerShell) to revert to default Azure servers. */
    dnsServers(value: string): az_network_nic_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_nic_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_update_command_builder;
    /** The internal DNS name label. */
    internalDnsName(value: string): az_network_nic_update_command_builder;
    /** Enable IP forwarding. */
    ipForwarding(value: boolean): az_network_nic_update_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_update_command_builder;
    /** Name or ID of the associated network security group. */
    networkSecurityGroup(value: string): az_network_nic_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_nic_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_nic_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_nic_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the network interface is met.
 *
 * Syntax:
 * ```
 * az network nic wait [--created]
 *                     [--custom]
 *                     [--deleted]
 *                     [--exists]
 *                     [--expand]
 *                     [--ids]
 *                     [--interval]
 *                     [--name]
 *                     [--resource-group]
 *                     [--subscription]
 *                     [--timeout]
 *                     [--updated]
 * ```
 */
declare class az_network_nic_wait_command_builder extends CommandBuilder<az_network_nic_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_nic_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_nic_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_nic_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_nic_wait_command_builder;
    /** Expands referenced resources. */
    expand(value: string): az_network_nic_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nic_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_nic_wait_command_builder;
    /** The network interface (NIC). */
    name(value: string): az_network_nic_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nic_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nic_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_nic_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_nic_wait_command_builder;
}
/**
 * Create a network security group rule.
 *
 * Syntax:
 * ```
 * az network nsg rule create --name
 *                            --nsg-name
 *                            --priority
 *                            --resource-group
 *                            [--access {Allow, Deny}]
 *                            [--description]
 *                            [--destination-address-prefixes]
 *                            [--destination-asgs]
 *                            [--destination-port-ranges]
 *                            [--direction {Inbound, Outbound}]
 *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
 *                            [--source-address-prefixes]
 *                            [--source-asgs]
 *                            [--source-port-ranges]
 *                            [--subscription]
 * ```
 *
 * @param {string} name Name of the network security group rule.
 * @param {string} nsgName Name of the network security group.
 * @param {string} priority Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nsg_rule_create_command_builder extends CommandBuilder<az_network_nsg_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, nsgName: string, priority: string, resourceGroup: string);
    /** Name of the network security group rule. */
    name(value: string): az_network_nsg_rule_create_command_builder;
    /** Name of the network security group. */
    nsgName(value: string): az_network_nsg_rule_create_command_builder;
    /** Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection. */
    priority(value: string): az_network_nsg_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_rule_create_command_builder;
    /** */
    access(value: 'Allow' | 'Deny'): az_network_nsg_rule_create_command_builder;
    /** Rule description. */
    description(value: string): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '\*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. */
    destinationAddressPrefixes(value: string): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID. */
    destinationAsgs(value: string): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of ports or port ranges between 0-65535. Use '\*' to match all ports. */
    destinationPortRanges(value: string): az_network_nsg_rule_create_command_builder;
    /** */
    direction(value: 'Inbound' | 'Outbound'): az_network_nsg_rule_create_command_builder;
    /** Network protocol this rule applies to. */
    protocol(value: '*' | 'Ah' | 'Esp' | 'Icmp' | 'Tcp' | 'Udp'): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '\*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. */
    sourceAddressPrefixes(value: string): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID. */
    sourceAsgs(value: string): az_network_nsg_rule_create_command_builder;
    /** Space-separated list of ports or port ranges between 0-65535. Use '\*' to match all ports. */
    sourcePortRanges(value: string): az_network_nsg_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_rule_create_command_builder;
}
/**
 * Delete a network security group rule.
 *
 * Syntax:
 * ```
 * az network nsg rule delete [--ids]
 *                            [--name]
 *                            [--nsg-name]
 *                            [--resource-group]
 *                            [--subscription]
 * ```
 */
declare class az_network_nsg_rule_delete_command_builder extends CommandBuilder<az_network_nsg_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_rule_delete_command_builder;
    /** Name of the network security group rule. */
    name(value: string): az_network_nsg_rule_delete_command_builder;
    /** Name of the network security group. */
    nsgName(value: string): az_network_nsg_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_rule_delete_command_builder;
}
/**
 * List all rules in a network security group.
 *
 * Syntax:
 * ```
 * az network nsg rule list --nsg-name
 *                          --resource-group
 *                          [--include-default]
 *                          [--query-examples]
 *                          [--subscription]
 * ```
 *
 * @param {string} nsgName Name of the network security group.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nsg_rule_list_command_builder extends CommandBuilder<az_network_nsg_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, nsgName: string, resourceGroup: string);
    /** Name of the network security group. */
    nsgName(value: string): az_network_nsg_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_rule_list_command_builder;
    /** Include default security rules in the output. */
    includeDefault(value: string): az_network_nsg_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nsg_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_rule_list_command_builder;
}
/**
 * Get the details of a network security group rule.
 *
 * Syntax:
 * ```
 * az network nsg rule show [--ids]
 *                          [--name]
 *                          [--nsg-name]
 *                          [--query-examples]
 *                          [--resource-group]
 *                          [--subscription]
 * ```
 */
declare class az_network_nsg_rule_show_command_builder extends CommandBuilder<az_network_nsg_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_rule_show_command_builder;
    /** Name of the network security group rule. */
    name(value: string): az_network_nsg_rule_show_command_builder;
    /** Name of the network security group. */
    nsgName(value: string): az_network_nsg_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nsg_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_rule_show_command_builder;
}
/**
 * Update a network security group rule.
 *
 * Syntax:
 * ```
 * az network nsg rule update [--access {Allow, Deny}]
 *                            [--add]
 *                            [--description]
 *                            [--destination-address-prefixes]
 *                            [--destination-asgs]
 *                            [--destination-port-ranges]
 *                            [--direction {Inbound, Outbound}]
 *                            [--force-string]
 *                            [--ids]
 *                            [--name]
 *                            [--nsg-name]
 *                            [--priority]
 *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
 *                            [--remove]
 *                            [--resource-group]
 *                            [--set]
 *                            [--source-address-prefixes]
 *                            [--source-asgs]
 *                            [--source-port-ranges]
 *                            [--subscription]
 * ```
 */
declare class az_network_nsg_rule_update_command_builder extends CommandBuilder<az_network_nsg_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** */
    access(value: 'Allow' | 'Deny'): az_network_nsg_rule_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_nsg_rule_update_command_builder;
    /** Rule description. */
    description(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '\*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. */
    destinationAddressPrefixes(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID. */
    destinationAsgs(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of ports or port ranges between 0-65535. Use '\*' to match all ports. */
    destinationPortRanges(value: string): az_network_nsg_rule_update_command_builder;
    /** */
    direction(value: 'Inbound' | 'Outbound'): az_network_nsg_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_nsg_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_rule_update_command_builder;
    /** Name of the network security group rule. */
    name(value: string): az_network_nsg_rule_update_command_builder;
    /** Name of the network security group. */
    nsgName(value: string): az_network_nsg_rule_update_command_builder;
    /** Rule priority, between 100 (highest priority) and 4096 (lowest priority). Must be unique for each rule in the collection. */
    priority(value: string): az_network_nsg_rule_update_command_builder;
    /** Network protocol this rule applies to. */
    protocol(value: '*' | 'Ah' | 'Esp' | 'Icmp' | 'Tcp' | 'Udp'): az_network_nsg_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_nsg_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of CIDR prefixes or IP ranges. Alternatively, specify ONE of 'VirtualNetwork', 'AzureLoadBalancer', 'Internet' or '\*' to match all IPs. Besides, it also supports all available Service Tags like 'ApiManagement', 'SqlManagement', 'AzureMonitor', etc. */
    sourceAddressPrefixes(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of application security group names or IDs. Limited by backend server, temporarily this argument only supports one application security group name or ID. */
    sourceAsgs(value: string): az_network_nsg_rule_update_command_builder;
    /** Space-separated list of ports or port ranges between 0-65535. Use '\*' to match all ports. */
    sourcePortRanges(value: string): az_network_nsg_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_rule_update_command_builder;
}
/**
 * Create a network security group.
 *
 * Syntax:
 * ```
 * az network nsg create --name
 *                       --resource-group
 *                       [--location]
 *                       [--subscription]
 *                       [--tags]
 * ```
 *
 * @param {string} name Name of the network security group.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_nsg_create_command_builder extends CommandBuilder<az_network_nsg_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the network security group. */
    name(value: string): az_network_nsg_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_nsg_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_nsg_create_command_builder;
}
/**
 * Delete a network security group.
 *
 * Syntax:
 * ```
 * az network nsg delete [--ids]
 *                       [--name]
 *                       [--resource-group]
 *                       [--subscription]
 * ```
 */
declare class az_network_nsg_delete_command_builder extends CommandBuilder<az_network_nsg_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_delete_command_builder;
    /** Name of the network security group. */
    name(value: string): az_network_nsg_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_delete_command_builder;
}
/**
 * List network security groups.
 *
 * Syntax:
 * ```
 * az network nsg list [--query-examples]
 *                     [--resource-group]
 *                     [--subscription]
 * ```
 */
declare class az_network_nsg_list_command_builder extends CommandBuilder<az_network_nsg_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nsg_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_list_command_builder;
}
/**
 * Get information about a network security group.
 *
 * Syntax:
 * ```
 * az network nsg show [--expand]
 *                     [--ids]
 *                     [--name]
 *                     [--query-examples]
 *                     [--resource-group]
 *                     [--subscription]
 * ```
 */
declare class az_network_nsg_show_command_builder extends CommandBuilder<az_network_nsg_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_nsg_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_show_command_builder;
    /** Name of the network security group. */
    name(value: string): az_network_nsg_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_nsg_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_show_command_builder;
}
/**
 * Update a network security group.
 *
 * Syntax:
 * ```
 * az network nsg update [--add]
 *                       [--force-string]
 *                       [--ids]
 *                       [--name]
 *                       [--remove]
 *                       [--resource-group]
 *                       [--set]
 *                       [--subscription]
 * ```
 */
declare class az_network_nsg_update_command_builder extends CommandBuilder<az_network_nsg_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_nsg_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_nsg_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_nsg_update_command_builder;
    /** Name of the network security group. */
    name(value: string): az_network_nsg_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_nsg_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_nsg_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_nsg_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_nsg_update_command_builder;
}
/**
 * Create a virtual network link to the specified Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet create --name
 *                                         --registration-enabled {false, true}
 *                                         --resource-group
 *                                         --virtual-network
 *                                         --zone-name
 *                                         [--no-wait]
 *                                         [--subscription]
 *                                         [--tags]
 * ```
 *
 * @param {string} name The name of the virtual network link to the specified Private DNS zone.
 * @param {boolean} registrationEnabled Specify if the link is registration enabled.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} virtualNetwork Name or ID of the virtual network.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_create_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, registrationEnabled: boolean, resourceGroup: string, virtualNetwork: string, zoneName: string);
    /** The name of the virtual network link to the specified Private DNS zone. */
    name(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** Specify if the link is registration enabled. */
    registrationEnabled(value: boolean): az_network_private_dns_link_vnet_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** Name or ID of the virtual network. */
    virtualNetwork(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_create_command_builder;
    /** Resource tags for the virtual network link. */
    tags(value: string): az_network_private_dns_link_vnet_create_command_builder;
}
/**
 * Delete a virtual network link to the specified Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet delete --name
 *                                         --resource-group
 *                                         --zone-name
 *                                         [--if-match]
 *                                         [--no-wait]
 *                                         [--subscription]
 *                                         [--yes]
 * ```
 *
 * @param {string} name The name of the virtual network link to the specified Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_delete_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the virtual network link to the specified Private DNS zone. */
    name(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** The ETag of the virtual network link to the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_link_vnet_delete_command_builder;
}
/**
 * List the virtual network links to the specified Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet list --resource-group
 *                                       --zone-name
 *                                       [--query-examples]
 *                                       [--subscription]
 *                                       [--top]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_list_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_link_vnet_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_list_command_builder;
    /** The maximum number of virtual network links to return. If not specified, returns up to 100 virtual network links. */
    top(value: string): az_network_private_dns_link_vnet_list_command_builder;
}
/**
 * Get a virtual network link to the specified Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet show --name
 *                                       --resource-group
 *                                       --zone-name
 *                                       [--query-examples]
 *                                       [--subscription]
 * ```
 *
 * @param {string} name The name of the virtual network link to the specified Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_show_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the virtual network link to the specified Private DNS zone. */
    name(value: string): az_network_private_dns_link_vnet_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_link_vnet_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_show_command_builder;
}
/**
 * Update a virtual network link's properties. Does not modify virtual network within the link.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet update --name
 *                                         --resource-group
 *                                         --zone-name
 *                                         [--add]
 *                                         [--force-string]
 *                                         [--if-match]
 *                                         [--no-wait]
 *                                         [--registration-enabled {false, true}]
 *                                         [--remove]
 *                                         [--set]
 *                                         [--subscription]
 *                                         [--tags]
 * ```
 *
 * @param {string} name The name of the virtual network link to the specified Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_update_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the virtual network link to the specified Private DNS zone. */
    name(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** The ETag of the virtual network link to the Private DNS zone. */
    ifMatch(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Specify if the link is registration enabled. */
    registrationEnabled(value: boolean): az_network_private_dns_link_vnet_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_update_command_builder;
    /** Resource tags for the virtual network link. */
    tags(value: string): az_network_private_dns_link_vnet_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the virtual network link to the specified Private DNS zone is met.
 *
 * Syntax:
 * ```
 * az network private-dns link vnet wait --name
 *                                       --resource-group
 *                                       --zone-name
 *                                       [--created]
 *                                       [--custom]
 *                                       [--deleted]
 *                                       [--exists]
 *                                       [--interval]
 *                                       [--subscription]
 *                                       [--timeout]
 *                                       [--updated]
 * ```
 *
 * @param {string} name The name of the virtual network link to the specified Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_link_vnet_wait_command_builder extends CommandBuilder<az_network_private_dns_link_vnet_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the virtual network link to the specified Private DNS zone. */
    name(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_private_dns_link_vnet_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_private_dns_link_vnet_wait_command_builder;
}
/**
 * Add an A record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a add-record --ipv4-address
 *                                                --record-set-name
 *                                                --resource-group
 *                                                --zone-name
 *                                                [--subscription]
 * ```
 *
 * @param {string} ipv4Address IPV4 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPV4 address in string notation. */
    ipv4Address(value: string): az_network_private_dns_record_set_a_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_a_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_add_record_command_builder;
}
/**
 * Create an empty A record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a create --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--metadata]
 *                                            [--subscription]
 *                                            [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_a_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_a_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_a_create_command_builder;
}
/**
 * Delete an A record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a delete --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--if-match]
 *                                            [--subscription]
 *                                            [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_a_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_a_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_a_delete_command_builder;
}
/**
 * List all A record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a list --resource-group
 *                                          --zone-name
 *                                          [--query-examples]
 *                                          [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_a_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_list_command_builder;
}
/**
 * Remove an A record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a remove-record --ipv4-address
 *                                                   --record-set-name
 *                                                   --resource-group
 *                                                   --zone-name
 *                                                   [--keep-empty-record-set]
 *                                                   [--subscription]
 * ```
 *
 * @param {string} ipv4Address IPV4 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv4Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPV4 address in string notation. */
    ipv4Address(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_remove_record_command_builder;
}
/**
 * Get the details of an A record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a show --name
 *                                          --resource-group
 *                                          --zone-name
 *                                          [--query-examples]
 *                                          [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_a_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_a_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_show_command_builder;
}
/**
 * Update an A record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set a update --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--add]
 *                                            [--force-string]
 *                                            [--if-match]
 *                                            [--metadata]
 *                                            [--remove]
 *                                            [--set]
 *                                            [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_a_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_a_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_a_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_a_update_command_builder;
}
/**
 * Add an AAAA record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa add-record --ipv6-address
 *                                                   --record-set-name
 *                                                   --resource-group
 *                                                   --zone-name
 *                                                   [--subscription]
 * ```
 *
 * @param {string} ipv6Address IPV6 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPV6 address in string notation. */
    ipv6Address(value: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_add_record_command_builder;
}
/**
 * Create an empty AAAA record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa create --name
 *                                               --resource-group
 *                                               --zone-name
 *                                               [--metadata]
 *                                               [--subscription]
 *                                               [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_aaaa_create_command_builder;
}
/**
 * Delete an AAAA record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa delete --name
 *                                               --resource-group
 *                                               --zone-name
 *                                               [--if-match]
 *                                               [--subscription]
 *                                               [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_aaaa_delete_command_builder;
}
/**
 * List all AAAA record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa list --resource-group
 *                                             --zone-name
 *                                             [--query-examples]
 *                                             [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_aaaa_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_list_command_builder;
}
/**
 * Remove AAAA record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa remove-record --ipv6-address
 *                                                      --record-set-name
 *                                                      --resource-group
 *                                                      --zone-name
 *                                                      [--keep-empty-record-set]
 *                                                      [--subscription]
 * ```
 *
 * @param {string} ipv6Address IPV6 address in string notation.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipv6Address: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** IPV6 address in string notation. */
    ipv6Address(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_remove_record_command_builder;
}
/**
 * Get the details of an AAAA record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa show --name
 *                                             --resource-group
 *                                             --zone-name
 *                                             [--query-examples]
 *                                             [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_aaaa_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_aaaa_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_show_command_builder;
}
/**
 * Update an AAAA record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set aaaa update --name
 *                                               --resource-group
 *                                               --zone-name
 *                                               [--add]
 *                                               [--force-string]
 *                                               [--if-match]
 *                                               [--metadata]
 *                                               [--remove]
 *                                               [--set]
 *                                               [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_aaaa_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_aaaa_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_aaaa_update_command_builder;
}
/**
 * Create an empty CNAME record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname create --name
 *                                                --resource-group
 *                                                --zone-name
 *                                                [--metadata]
 *                                                [--subscription]
 *                                                [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_cname_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_cname_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_cname_create_command_builder;
}
/**
 * Delete a CNAME record set and its associated record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname delete --name
 *                                                --resource-group
 *                                                --zone-name
 *                                                [--if-match]
 *                                                [--subscription]
 *                                                [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_cname_delete_command_builder;
}
/**
 * List the CNAME record set in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname list --resource-group
 *                                              --zone-name
 *                                              [--query-examples]
 *                                              [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_cname_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_list_command_builder;
}
/**
 * Remove a CNAME record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname remove-record --cname
 *                                                       --record-set-name
 *                                                       --resource-group
 *                                                       --zone-name
 *                                                       [--keep-empty-record-set]
 *                                                       [--subscription]
 * ```
 *
 * @param {string} cname Canonical name.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, cname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Canonical name. */
    cname(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_remove_record_command_builder;
}
/**
 * Set the value of a CNAME record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname set-record --cname
 *                                                    --record-set-name
 *                                                    --resource-group
 *                                                    --zone-name
 *                                                    [--subscription]
 * ```
 *
 * @param {string} cname Canonical name.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_set_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_set_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, cname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Canonical name. */
    cname(value: string): az_network_private_dns_record_set_cname_set_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_cname_set_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_set_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_set_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_set_record_command_builder;
}
/**
 * Get the details of a CNAME record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname show --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--query-examples]
 *                                              [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_cname_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_cname_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_show_command_builder;
}
/**
 * Update a CNAME record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set cname update --name
 *                                                --resource-group
 *                                                --zone-name
 *                                                [--add]
 *                                                [--force-string]
 *                                                [--if-match]
 *                                                [--metadata]
 *                                                [--remove]
 *                                                [--set]
 *                                                [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_cname_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_cname_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_cname_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_cname_update_command_builder;
}
/**
 * Add an MX record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx add-record --exchange
 *                                                 --preference
 *                                                 --record-set-name
 *                                                 --resource-group
 *                                                 --zone-name
 *                                                 [--subscription]
 * ```
 *
 * @param {string} exchange Exchange metric.
 * @param {string} preference Preference metric.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Exchange metric. */
    exchange(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /** Preference metric. */
    preference(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_add_record_command_builder;
}
/**
 * Create an empty MX record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx create --name
 *                                             --resource-group
 *                                             --zone-name
 *                                             [--metadata]
 *                                             [--subscription]
 *                                             [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_mx_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_mx_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_mx_create_command_builder;
}
/**
 * Delete an MX record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx delete --name
 *                                             --resource-group
 *                                             --zone-name
 *                                             [--if-match]
 *                                             [--subscription]
 *                                             [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_mx_delete_command_builder;
}
/**
 * List all MX record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx list --resource-group
 *                                           --zone-name
 *                                           [--query-examples]
 *                                           [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_mx_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_list_command_builder;
}
/**
 * Remove an MX record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx remove-record --exchange
 *                                                    --preference
 *                                                    --record-set-name
 *                                                    --resource-group
 *                                                    --zone-name
 *                                                    [--keep-empty-record-set]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} exchange Exchange metric.
 * @param {string} preference Preference metric.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, exchange: string, preference: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** Exchange metric. */
    exchange(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** Preference metric. */
    preference(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_remove_record_command_builder;
}
/**
 * Get the details of an MX record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx show --name
 *                                           --resource-group
 *                                           --zone-name
 *                                           [--query-examples]
 *                                           [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_mx_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_mx_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_show_command_builder;
}
/**
 * Update an MX record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set mx update --name
 *                                             --resource-group
 *                                             --zone-name
 *                                             [--add]
 *                                             [--force-string]
 *                                             [--if-match]
 *                                             [--metadata]
 *                                             [--remove]
 *                                             [--set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_mx_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_mx_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_mx_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_mx_update_command_builder;
}
/**
 * Add a PTR record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr add-record --ptrdname
 *                                                  --record-set-name
 *                                                  --resource-group
 *                                                  --zone-name
 *                                                  [--subscription]
 * ```
 *
 * @param {string} ptrdname PTR target domain name.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** PTR target domain name. */
    ptrdname(value: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_add_record_command_builder;
}
/**
 * Create an empty PTR record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr create --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--metadata]
 *                                              [--subscription]
 *                                              [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_ptr_create_command_builder;
}
/**
 * Delete a PTR record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr delete --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--if-match]
 *                                              [--subscription]
 *                                              [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_ptr_delete_command_builder;
}
/**
 * List all PTR record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr list --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_ptr_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_list_command_builder;
}
/**
 * Remove a PTR record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr remove-record --ptrdname
 *                                                     --record-set-name
 *                                                     --resource-group
 *                                                     --zone-name
 *                                                     [--keep-empty-record-set]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} ptrdname PTR target domain name.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ptrdname: string, recordSetName: string, resourceGroup: string, zoneName: string);
    /** PTR target domain name. */
    ptrdname(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_remove_record_command_builder;
}
/**
 * Get the details of a PTR record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr show --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_ptr_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_ptr_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_show_command_builder;
}
/**
 * Update a PTR record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set ptr update --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--add]
 *                                              [--force-string]
 *                                              [--if-match]
 *                                              [--metadata]
 *                                              [--remove]
 *                                              [--set]
 *                                              [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_ptr_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_ptr_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_ptr_update_command_builder;
}
/**
 * Get the details of an SOA record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set soa show --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_soa_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_soa_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_soa_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_soa_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_soa_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_soa_show_command_builder;
}
/**
 * Update properties of an SOA record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set soa update --resource-group
 *                                              --zone-name
 *                                              [--email]
 *                                              [--expire-time]
 *                                              [--host]
 *                                              [--minimum-ttl]
 *                                              [--refresh-time]
 *                                              [--retry-time]
 *                                              [--serial-number]
 *                                              [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_soa_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_soa_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Email address. */
    email(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Expire time (seconds). */
    expireTime(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Host name. */
    host(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Minimum TTL (time-to-live, seconds). */
    minimumTtl(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Refresh value (seconds). */
    refreshTime(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Retry time (seconds). */
    retryTime(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Serial number. */
    serialNumber(value: string): az_network_private_dns_record_set_soa_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_soa_update_command_builder;
}
/**
 * Add an SRV record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv add-record --port
 *                                                  --priority
 *                                                  --record-set-name
 *                                                  --resource-group
 *                                                  --target
 *                                                  --weight
 *                                                  --zone-name
 *                                                  [--subscription]
 * ```
 *
 * @param {string} port Service port.
 * @param {string} priority Priority metric.
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} target Target domain name.
 * @param {string} weight Weight metric.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string);
    /** Service port. */
    port(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** Priority metric. */
    priority(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** Target domain name. */
    target(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** Weight metric. */
    weight(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_add_record_command_builder;
}
/**
 * Create an empty SRV record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv create --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--metadata]
 *                                              [--subscription]
 *                                              [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_srv_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_srv_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_srv_create_command_builder;
}
/**
 * Delete an SRV record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv delete --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--if-match]
 *                                              [--subscription]
 *                                              [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_srv_delete_command_builder;
}
/**
 * List all SRV record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv list --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_srv_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_list_command_builder;
}
/**
 * Remove an SRV record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv remove-record --port
 *                                                     --priority
 *                                                     --record-set-name
 *                                                     --resource-group
 *                                                     --target
 *                                                     --weight
 *                                                     --zone-name
 *                                                     [--keep-empty-record-set]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} port Service port.
 * @param {string} priority Priority metric.
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} target Target domain name.
 * @param {string} weight Weight metric.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, port: string, priority: string, recordSetName: string, resourceGroup: string, target: string, weight: string, zoneName: string);
    /** Service port. */
    port(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Priority metric. */
    priority(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Target domain name. */
    target(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Weight metric. */
    weight(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_remove_record_command_builder;
}
/**
 * Get the details of an SRV record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv show --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_srv_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_srv_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_show_command_builder;
}
/**
 * Update an SRV record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set srv update --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--add]
 *                                              [--force-string]
 *                                              [--if-match]
 *                                              [--metadata]
 *                                              [--remove]
 *                                              [--set]
 *                                              [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_srv_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_srv_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_srv_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_srv_update_command_builder;
}
/**
 * Add a TXT record.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt add-record --record-set-name
 *                                                  --resource-group
 *                                                  --value
 *                                                  --zone-name
 *                                                  [--subscription]
 * ```
 *
 * @param {string} recordSetName The name of the record set relative to the zone. Creates a new record set if one does not exist.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} value Space-separated list of text values which will be concatenated together.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_add_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_add_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, recordSetName: string, resourceGroup: string, value: string, zoneName: string);
    /** The name of the record set relative to the zone. Creates a new record set if one does not exist. */
    recordSetName(value: string): az_network_private_dns_record_set_txt_add_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_add_record_command_builder;
    /** Space-separated list of text values which will be concatenated together. */
    value(value: string): az_network_private_dns_record_set_txt_add_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_add_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_add_record_command_builder;
}
/**
 * Create an empty TXT record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt create --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--metadata]
 *                                              [--subscription]
 *                                              [--ttl]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_create_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_txt_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_create_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_create_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_txt_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_create_command_builder;
    /** Record set TTL (time-to-live). */
    ttl(value: string): az_network_private_dns_record_set_txt_create_command_builder;
}
/**
 * Delete a TXT record set and all associated records.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt delete --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--if-match]
 *                                              [--subscription]
 *                                              [--yes]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_delete_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /** The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_record_set_txt_delete_command_builder;
}
/**
 * List all TXT record sets in a zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt list --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_txt_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_list_command_builder;
}
/**
 * Remove a TXT record from its record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt remove-record --record-set-name
 *                                                     --resource-group
 *                                                     --value
 *                                                     --zone-name
 *                                                     [--keep-empty-record-set]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} recordSetName The name of the record set relative to the zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} value Space-separated list of text values which will be concatenated together.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_remove_record_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_remove_record_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, recordSetName: string, resourceGroup: string, value: string, zoneName: string);
    /** The name of the record set relative to the zone. */
    recordSetName(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /** Space-separated list of text values which will be concatenated together. */
    value(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /** Keep the empty record set if the last record is removed. */
    keepEmptyRecordSet(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_remove_record_command_builder;
}
/**
 * Get the details of a TXT record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt show --name
 *                                            --resource-group
 *                                            --zone-name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_show_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_txt_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_show_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_txt_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_show_command_builder;
}
/**
 * Update a TXT record set.
 *
 * Syntax:
 * ```
 * az network private-dns record-set txt update --name
 *                                              --resource-group
 *                                              --zone-name
 *                                              [--add]
 *                                              [--force-string]
 *                                              [--if-match]
 *                                              [--metadata]
 *                                              [--remove]
 *                                              [--set]
 *                                              [--subscription]
 * ```
 *
 * @param {string} name The name of the record set, relative to the name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_txt_update_command_builder extends CommandBuilder<az_network_private_dns_record_set_txt_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, zoneName: string);
    /** The name of the record set, relative to the name of the Private DNS zone. */
    name(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
    ifMatch(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Metadata in space-separated key=value pairs. This overwrites any existing metadata. */
    metadata(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_record_set_txt_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_txt_update_command_builder;
}
/**
 * List all record sets within a Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns record-set list --resource-group
 *                                        --zone-name
 *                                        [--query-examples]
 *                                        [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName The name of the Private DNS zone.
 */
declare class az_network_private_dns_record_set_list_command_builder extends CommandBuilder<az_network_private_dns_record_set_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, zoneName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_record_set_list_command_builder;
    /** The name of the Private DNS zone. */
    zoneName(value: string): az_network_private_dns_record_set_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_record_set_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_record_set_list_command_builder;
}
/**
 * Create a Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns zone create --name
 *                                    --resource-group
 *                                    [--no-wait]
 *                                    [--subscription]
 *                                    [--tags]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_create_command_builder extends CommandBuilder<az_network_private_dns_zone_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_zone_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_create_command_builder;
    /** Resource tags for the Private DNS zone. */
    tags(value: string): az_network_private_dns_zone_create_command_builder;
}
/**
 * Delete a Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns zone delete --name
 *                                    --resource-group
 *                                    [--if-match]
 *                                    [--no-wait]
 *                                    [--subscription]
 *                                    [--yes]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_delete_command_builder extends CommandBuilder<az_network_private_dns_zone_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_delete_command_builder;
    /** The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_zone_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_zone_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_dns_zone_delete_command_builder;
}
/**
 * Export a Private DNS zone as a DNS zone file.
 *
 * Syntax:
 * ```
 * az network private-dns zone export --name
 *                                    --resource-group
 *                                    [--file-name]
 *                                    [--subscription]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_export_command_builder extends CommandBuilder<az_network_private_dns_zone_export_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_export_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_export_command_builder;
    /** Path to the Private DNS zone file to save. */
    fileName(value: string): az_network_private_dns_zone_export_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_export_command_builder;
}
/**
 * Create a Private DNS zone using a DNS zone file.
 *
 * Syntax:
 * ```
 * az network private-dns zone import --file-name
 *                                    --name
 *                                    --resource-group
 *                                    [--subscription]
 * ```
 *
 * @param {string} fileName Path to the Private DNS zone file to import.
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_import_command_builder extends CommandBuilder<az_network_private_dns_zone_import_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, fileName: string, name: string, resourceGroup: string);
    /** Path to the Private DNS zone file to import. */
    fileName(value: string): az_network_private_dns_zone_import_command_builder;
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_import_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_import_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_import_command_builder;
}
/**
 * List Private DNS zones.
 *
 * Syntax:
 * ```
 * az network private-dns zone list [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_private_dns_zone_list_command_builder extends CommandBuilder<az_network_private_dns_zone_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_zone_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_list_command_builder;
}
/**
 * Get a Private DNS zone.
 *
 * Syntax:
 * ```
 * az network private-dns zone show --name
 *                                  --resource-group
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_show_command_builder extends CommandBuilder<az_network_private_dns_zone_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_dns_zone_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_show_command_builder;
}
/**
 * Update a Private DNS zone's properties. Does not modify Private DNS records or virtual network links within the zone.
 *
 * Syntax:
 * ```
 * az network private-dns zone update --name
 *                                    --resource-group
 *                                    [--add]
 *                                    [--force-string]
 *                                    [--if-match]
 *                                    [--no-wait]
 *                                    [--remove]
 *                                    [--set]
 *                                    [--subscription]
 *                                    [--tags]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_update_command_builder extends CommandBuilder<az_network_private_dns_zone_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_dns_zone_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_dns_zone_update_command_builder;
    /** The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes. */
    ifMatch(value: string): az_network_private_dns_zone_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_private_dns_zone_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_dns_zone_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_dns_zone_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_update_command_builder;
    /** Resource tags for the Private DNS zone. */
    tags(value: string): az_network_private_dns_zone_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the Private DNS zone is met.
 *
 * Syntax:
 * ```
 * az network private-dns zone wait --name
 *                                  --resource-group
 *                                  [--created]
 *                                  [--custom]
 *                                  [--deleted]
 *                                  [--exists]
 *                                  [--interval]
 *                                  [--subscription]
 *                                  [--timeout]
 *                                  [--updated]
 * ```
 *
 * @param {string} name The name of the Private DNS zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_dns_zone_wait_command_builder extends CommandBuilder<az_network_private_dns_zone_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Private DNS zone. */
    name(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_private_dns_zone_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_private_dns_zone_wait_command_builder;
}
/**
 * Add a private endpoint dns zone into a dns zone group.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group add --endpoint-name
 *                                                --name
 *                                                --private-dns-zone
 *                                                --resource-group
 *                                                --zone-name
 *                                                [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} name Name of the private dns zone group.
 * @param {string} privateDnsZone Name or ID of the private dns zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName Name of the private dns zone.
 */
declare class az_network_private_endpoint_dns_zone_group_add_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, name: string, privateDnsZone: string, resourceGroup: string, zoneName: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /** Name of the private dns zone group. */
    name(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /** Name or ID of the private dns zone. */
    privateDnsZone(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /** Name of the private dns zone. */
    zoneName(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_add_command_builder;
}
/**
 * Create a private endpoint dns zone group.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group create --endpoint-name
 *                                                   --name
 *                                                   --private-dns-zone
 *                                                   --resource-group
 *                                                   --zone-name
 *                                                   [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} name Name of the private dns zone group.
 * @param {string} privateDnsZone Name or ID of the private dns zone.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName Name of the private dns zone.
 */
declare class az_network_private_endpoint_dns_zone_group_create_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, name: string, privateDnsZone: string, resourceGroup: string, zoneName: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /** Name of the private dns zone group. */
    name(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /** Name or ID of the private dns zone. */
    privateDnsZone(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /** Name of the private dns zone. */
    zoneName(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_create_command_builder;
}
/**
 * Delete a private endpoint dns zone group.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group delete --endpoint-name
 *                                                   --name
 *                                                   --resource-group
 *                                                   [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} name Name of the private dns zone group.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_endpoint_dns_zone_group_delete_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, name: string, resourceGroup: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_delete_command_builder;
    /** Name of the private dns zone group. */
    name(value: string): az_network_private_endpoint_dns_zone_group_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_delete_command_builder;
}
/**
 * List all private endpoint dns zone groups.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group list --endpoint-name
 *                                                 --resource-group
 *                                                 [--query-examples]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_endpoint_dns_zone_group_list_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, resourceGroup: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_dns_zone_group_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_list_command_builder;
}
/**
 * Remove a private endpoint dns zone into a dns zone group.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group remove --endpoint-name
 *                                                   --name
 *                                                   --resource-group
 *                                                   --zone-name
 *                                                   [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} name Name of the private dns zone group.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} zoneName Name of the private dns zone.
 */
declare class az_network_private_endpoint_dns_zone_group_remove_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, name: string, resourceGroup: string, zoneName: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
    /** Name of the private dns zone group. */
    name(value: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
    /** Name of the private dns zone. */
    zoneName(value: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_remove_command_builder;
}
/**
 * Show a private endpoint dns zone group.
 *
 * Syntax:
 * ```
 * az network private-endpoint dns-zone-group show --endpoint-name
 *                                                 --name
 *                                                 --resource-group
 *                                                 [--query-examples]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} endpointName Name of the private endpoint.
 * @param {string} name Name of the private dns zone group.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_private_endpoint_dns_zone_group_show_command_builder extends CommandBuilder<az_network_private_endpoint_dns_zone_group_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, endpointName: string, name: string, resourceGroup: string);
    /** Name of the private endpoint. */
    endpointName(value: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
    /** Name of the private dns zone group. */
    name(value: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_dns_zone_group_show_command_builder;
}
/**
 * Approve a private endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-endpoint-connection approve [--description]
 *                                                [--id]
 *                                                [--name]
 *                                                [--resource-group]
 *                                                [--resource-name]
 *                                                [--subscription]
 *                                                [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 * ```
 */
declare class az_network_private_endpoint_connection_approve_command_builder extends CommandBuilder<az_network_private_endpoint_connection_approve_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Comments for the approval. */
    description(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** ID of the private endpoint connection. */
    id(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** Name of the private endpoint connection. */
    name(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** Name of the resource. */
    resourceName(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_connection_approve_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_endpoint_connection_approve_command_builder;
}
/**
 * Delete a private endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-endpoint-connection delete [--id]
 *                                               [--name]
 *                                               [--resource-group]
 *                                               [--resource-name]
 *                                               [--subscription]
 *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 *                                               [--yes]
 * ```
 */
declare class az_network_private_endpoint_connection_delete_command_builder extends CommandBuilder<az_network_private_endpoint_connection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ID of the private endpoint connection. */
    id(value: string): az_network_private_endpoint_connection_delete_command_builder;
    /** Name of the private endpoint connection. */
    name(value: string): az_network_private_endpoint_connection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_connection_delete_command_builder;
    /** Name of the resource. */
    resourceName(value: string): az_network_private_endpoint_connection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_connection_delete_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_endpoint_connection_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_private_endpoint_connection_delete_command_builder;
}
/**
 * List all private endpoint connections.
 *
 * Syntax:
 * ```
 * az network private-endpoint-connection list [--id]
 *                                             [--name]
 *                                             [--query-examples]
 *                                             [--resource-group]
 *                                             [--subscription]
 *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 * ```
 */
declare class az_network_private_endpoint_connection_list_command_builder extends CommandBuilder<az_network_private_endpoint_connection_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ID of the resource. */
    id(value: string): az_network_private_endpoint_connection_list_command_builder;
    /** Name of the resource. */
    name(value: string): az_network_private_endpoint_connection_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_connection_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_connection_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_connection_list_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_endpoint_connection_list_command_builder;
}
/**
 * Reject a private endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-endpoint-connection reject [--description]
 *                                               [--id]
 *                                               [--name]
 *                                               [--resource-group]
 *                                               [--resource-name]
 *                                               [--subscription]
 *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 * ```
 */
declare class az_network_private_endpoint_connection_reject_command_builder extends CommandBuilder<az_network_private_endpoint_connection_reject_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Comments for the rejection. */
    description(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** ID of the private endpoint connection. */
    id(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** Name of the private endpoint connection. */
    name(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** Name of the resource. */
    resourceName(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_connection_reject_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_endpoint_connection_reject_command_builder;
}
/**
 * Show a private endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-endpoint-connection show [--id]
 *                                             [--name]
 *                                             [--query-examples]
 *                                             [--resource-group]
 *                                             [--resource-name]
 *                                             [--subscription]
 *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 * ```
 */
declare class az_network_private_endpoint_connection_show_command_builder extends CommandBuilder<az_network_private_endpoint_connection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ID of the private endpoint connection. */
    id(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Name of the private endpoint connection. */
    name(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Name of the resource. */
    resourceName(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_connection_show_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_endpoint_connection_show_command_builder;
}
/**
 * Create a private endpoint.
 *
 * Syntax:
 * ```
 * az network private-endpoint create --connection-name
 *                                    --name
 *                                    --private-connection-resource-id
 *                                    --resource-group
 *                                    --subnet
 *                                    [--group-id]
 *                                    [--group-ids]
 *                                    [--location]
 *                                    [--manual-request {false, true}]
 *                                    [--request-message]
 *                                    [--subscription]
 *                                    [--tags]
 *                                    [--vnet-name]
 * ```
 *
 * @param {string} connectionName Name of the private link service connection.
 * @param {string} name Name of the private endpoint.
 * @param {string} privateConnectionResourceId The resource id of which private enpoint connect to.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} subnet Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group or subscription, please provide the ID instead of the name of the subnet.
 */
declare class az_network_private_endpoint_create_command_builder extends CommandBuilder<az_network_private_endpoint_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionName: string, name: string, privateConnectionResourceId: string, resourceGroup: string, subnet: string);
    /** Name of the private link service connection. */
    connectionName(value: string): az_network_private_endpoint_create_command_builder;
    /** Name of the private endpoint. */
    name(value: string): az_network_private_endpoint_create_command_builder;
    /** The resource id of which private enpoint connect to. */
    privateConnectionResourceId(value: string): az_network_private_endpoint_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_create_command_builder;
    /** Name or ID of an existing subnet. If name specified, also specify --vnet-name. If you want to use an existing subnet in other resource group or subscription, please provide the ID instead of the name of the subnet. */
    subnet(value: string): az_network_private_endpoint_create_command_builder;
    /** The ID of the group obtained from the remote resource that this private endpoint should connect to. You can use "az network private-link-resource list" to obtain the supported group ids. */
    groupId(value: string): az_network_private_endpoint_create_command_builder;
    /** The ID of the group obtained from the remote resource that this private endpoint should connect to. You can use "az network private-link-resource list" to obtain the supported group ids. */
    groupIds(value: string): az_network_private_endpoint_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_private_endpoint_create_command_builder;
    /** Use manual request to establish the connection. Configure it as 'true' when you don't have access to the subscription of private link service. */
    manualRequest(value: boolean): az_network_private_endpoint_create_command_builder;
    /** A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars. */
    requestMessage(value: string): az_network_private_endpoint_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_private_endpoint_create_command_builder;
    /** The virtual network (VNet) associated with the subnet (Omit if supplying a subnet id). */
    vnetName(value: string): az_network_private_endpoint_create_command_builder;
}
/**
 * Delete a private endpoint.
 *
 * Syntax:
 * ```
 * az network private-endpoint delete [--ids]
 *                                    [--name]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_private_endpoint_delete_command_builder extends CommandBuilder<az_network_private_endpoint_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_endpoint_delete_command_builder;
    /** Name of the private endpoint. */
    name(value: string): az_network_private_endpoint_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_delete_command_builder;
}
/**
 * List private endpoints.
 *
 * Syntax:
 * ```
 * az network private-endpoint list [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_private_endpoint_list_command_builder extends CommandBuilder<az_network_private_endpoint_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_list_command_builder;
}
/**
 * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
 *
 * Syntax:
 * ```
 * az network private-endpoint list-types --location
 *                                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_private_endpoint_list_types_command_builder extends CommandBuilder<az_network_private_endpoint_list_types_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_private_endpoint_list_types_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_list_types_command_builder;
}
/**
 * Get the details of a private endpoint.
 *
 * Syntax:
 * ```
 * az network private-endpoint show [--ids]
 *                                  [--name]
 *                                  [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_private_endpoint_show_command_builder extends CommandBuilder<az_network_private_endpoint_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_endpoint_show_command_builder;
    /** Name of the private endpoint. */
    name(value: string): az_network_private_endpoint_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_endpoint_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_show_command_builder;
}
/**
 * Update a private endpoint.
 *
 * Syntax:
 * ```
 * az network private-endpoint update [--add]
 *                                    [--force-string]
 *                                    [--ids]
 *                                    [--name]
 *                                    [--remove]
 *                                    [--request-message]
 *                                    [--resource-group]
 *                                    [--set]
 *                                    [--subscription]
 *                                    [--tags]
 * ```
 */
declare class az_network_private_endpoint_update_command_builder extends CommandBuilder<az_network_private_endpoint_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_endpoint_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_endpoint_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_endpoint_update_command_builder;
    /** Name of the private endpoint. */
    name(value: string): az_network_private_endpoint_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_endpoint_update_command_builder;
    /** A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars. */
    requestMessage(value: string): az_network_private_endpoint_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_endpoint_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_endpoint_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_endpoint_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_private_endpoint_update_command_builder;
}
/**
 * List all private link resources.
 *
 * Syntax:
 * ```
 * az network private-link-resource list [--id]
 *                                       [--name]
 *                                       [--query-examples]
 *                                       [--resource-group]
 *                                       [--subscription]
 *                                       [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
 * ```
 */
declare class az_network_private_link_resource_list_command_builder extends CommandBuilder<az_network_private_link_resource_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** ID of the resource. */
    id(value: string): az_network_private_link_resource_list_command_builder;
    /** Name of the resource. */
    name(value: string): az_network_private_link_resource_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_link_resource_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_resource_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_resource_list_command_builder;
    /** Type of the resource. */
    type(value: 'Microsoft.AppConfiguration/configurationStores' | 'Microsoft.Batch/batchAccounts' | 'Microsoft.CognitiveServices/accounts' | 'Microsoft.Compute/diskAccesses' | 'Microsoft.ContainerRegistry/registries' | 'Microsoft.DBforMariaDB/servers' | 'Microsoft.DBforMySQL/servers' | 'Microsoft.DBforPostgreSQL/servers' | 'Microsoft.Devices/IotHubs' | 'Microsoft.DocumentDB/databaseAccounts' | 'Microsoft.EventGrid/domains' | 'Microsoft.EventGrid/topics' | 'Microsoft.Keyvault/vaults' | 'Microsoft.Network/applicationGateways' | 'Microsoft.SignalRService/signalr' | 'Microsoft.Storage/storageAccounts' | 'Microsoft.Web/sites' | 'microsoft.insights/privateLinkScopes'): az_network_private_link_resource_list_command_builder;
}
/**
 * Delete a private link service endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-link-service connection delete --name
 *                                                   --resource-group
 *                                                   --service-name
 *                                                   [--subscription]
 * ```
 *
 * @param {string} name Name of the private endpoint connection. List them by using "az network private-link-service show".
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} serviceName Name of the private link service.
 */
declare class az_network_private_link_service_connection_delete_command_builder extends CommandBuilder<az_network_private_link_service_connection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, serviceName: string);
    /** Name of the private endpoint connection. List them by using "az network private-link-service show". */
    name(value: string): az_network_private_link_service_connection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_connection_delete_command_builder;
    /** Name of the private link service. */
    serviceName(value: string): az_network_private_link_service_connection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_connection_delete_command_builder;
}
/**
 * Update a private link service endpoint connection.
 *
 * Syntax:
 * ```
 * az network private-link-service connection update --connection-status {Approved, Rejected, Removed}
 *                                                   --name
 *                                                   --resource-group
 *                                                   --service-name
 *                                                   [--action-required]
 *                                                   [--description]
 *                                                   [--subscription]
 * ```
 *
 * @param {'Approved' | 'Rejected' | 'Removed'} connectionStatus Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 * @param {string} name Name of the private endpoint connection. List them by using "az network private-link-service show".
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} serviceName Name of the private link service.
 */
declare class az_network_private_link_service_connection_update_command_builder extends CommandBuilder<az_network_private_link_service_connection_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionStatus: 'Approved' | 'Rejected' | 'Removed', name: string, resourceGroup: string, serviceName: string);
    /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
    connectionStatus(value: 'Approved' | 'Rejected' | 'Removed'): az_network_private_link_service_connection_update_command_builder;
    /** Name of the private endpoint connection. List them by using "az network private-link-service show". */
    name(value: string): az_network_private_link_service_connection_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_connection_update_command_builder;
    /** Name of the private link service. */
    serviceName(value: string): az_network_private_link_service_connection_update_command_builder;
    /** A message indicating if changes on the service provider require any updates on the consumer. */
    actionRequired(value: string): az_network_private_link_service_connection_update_command_builder;
    /** The reason for approval/rejection of the connection. */
    description(value: string): az_network_private_link_service_connection_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_connection_update_command_builder;
}
/**
 * Create a private link service.
 *
 * Syntax:
 * ```
 * az network private-link-service create --lb-frontend-ip-configs
 *                                        --name
 *                                        --resource-group
 *                                        --subnet
 *                                        [--auto-approval]
 *                                        [--enable-proxy-protocol {false, true}]
 *                                        [--fqdns]
 *                                        [--lb-name]
 *                                        [--location]
 *                                        [--private-ip-address]
 *                                        [--private-ip-address-version {IPv4, IPv6}]
 *                                        [--private-ip-allocation-method {Dynamic, Static}]
 *                                        [--public-ip-address]
 *                                        [--subscription]
 *                                        [--tags]
 *                                        [--visibility]
 *                                        [--vnet-name]
 * ```
 *
 * @param {string} lbFrontendIpConfigs Space-separated list of names or IDs of load balancer frontend IP configurations to link to. If names are used, also supply `--lb-name`.
 * @param {string} name Name of the private link service.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} subnet Name or ID of subnet to use. If name provided, also supply `--vnet-name`.
 */
declare class az_network_private_link_service_create_command_builder extends CommandBuilder<az_network_private_link_service_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, lbFrontendIpConfigs: string, name: string, resourceGroup: string, subnet: string);
    /** Space-separated list of names or IDs of load balancer frontend IP configurations to link to. If names are used, also supply `--lb-name`. */
    lbFrontendIpConfigs(value: string): az_network_private_link_service_create_command_builder;
    /** Name of the private link service. */
    name(value: string): az_network_private_link_service_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_create_command_builder;
    /** Name or ID of subnet to use. If name provided, also supply `--vnet-name`. */
    subnet(value: string): az_network_private_link_service_create_command_builder;
    /** Space-separated list of subscription IDs to auto-approve. */
    autoApproval(value: string): az_network_private_link_service_create_command_builder;
    /** Enable proxy protocol for private link service. */
    enableProxyProtocol(value: boolean): az_network_private_link_service_create_command_builder;
    /** Space-separated list of FQDNs. */
    fqdns(value: string): az_network_private_link_service_create_command_builder;
    /** Name of the load balancer to retrieve frontend IP configs from. Ignored if a frontend IP configuration ID is supplied. */
    lbName(value: string): az_network_private_link_service_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_private_link_service_create_command_builder;
    /** Static private IP address to use. */
    privateIpAddress(value: string): az_network_private_link_service_create_command_builder;
    /** IP version of the private IP address. */
    privateIpAddressVersion(value: 'IPv4' | 'IPv6'): az_network_private_link_service_create_command_builder;
    /** Private IP address allocation method. */
    privateIpAllocationMethod(value: 'Dynamic' | 'Static'): az_network_private_link_service_create_command_builder;
    /** Name or ID of the a public IP address to use. */
    publicIpAddress(value: string): az_network_private_link_service_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_private_link_service_create_command_builder;
    /** Space-separated list of subscription IDs for which the private link service is visible. */
    visibility(value: string): az_network_private_link_service_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_private_link_service_create_command_builder;
}
/**
 * Delete a private link service.
 *
 * Syntax:
 * ```
 * az network private-link-service delete [--ids]
 *                                        [--name]
 *                                        [--resource-group]
 *                                        [--subscription]
 * ```
 */
declare class az_network_private_link_service_delete_command_builder extends CommandBuilder<az_network_private_link_service_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_link_service_delete_command_builder;
    /** Name of the private link service. */
    name(value: string): az_network_private_link_service_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_delete_command_builder;
}
/**
 * List private link services.
 *
 * Syntax:
 * ```
 * az network private-link-service list [--query-examples]
 *                                      [--resource-group]
 *                                      [--subscription]
 * ```
 */
declare class az_network_private_link_service_list_command_builder extends CommandBuilder<az_network_private_link_service_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_link_service_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_list_command_builder;
}
/**
 * Get the details of a private link service.
 *
 * Syntax:
 * ```
 * az network private-link-service show [--expand]
 *                                      [--ids]
 *                                      [--name]
 *                                      [--query-examples]
 *                                      [--resource-group]
 *                                      [--subscription]
 * ```
 */
declare class az_network_private_link_service_show_command_builder extends CommandBuilder<az_network_private_link_service_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_private_link_service_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_link_service_show_command_builder;
    /** Name of the private link service. */
    name(value: string): az_network_private_link_service_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_private_link_service_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_show_command_builder;
}
/**
 * Update a private link service.
 *
 * Syntax:
 * ```
 * az network private-link-service update [--add]
 *                                        [--auto-approval]
 *                                        [--enable-proxy-protocol {false, true}]
 *                                        [--force-string]
 *                                        [--fqdns]
 *                                        [--ids]
 *                                        [--lb-frontend-ip-configs]
 *                                        [--lb-name]
 *                                        [--name]
 *                                        [--remove]
 *                                        [--resource-group]
 *                                        [--set]
 *                                        [--subscription]
 *                                        [--tags]
 *                                        [--visibility]
 * ```
 */
declare class az_network_private_link_service_update_command_builder extends CommandBuilder<az_network_private_link_service_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_private_link_service_update_command_builder;
    /** Space-separated list of subscription IDs to auto-approve. */
    autoApproval(value: string): az_network_private_link_service_update_command_builder;
    /** Enable proxy protocol for private link service. */
    enableProxyProtocol(value: boolean): az_network_private_link_service_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_private_link_service_update_command_builder;
    /** Space-separated list of FQDNs. */
    fqdns(value: string): az_network_private_link_service_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_private_link_service_update_command_builder;
    /** Space-separated list of names or IDs of load balancer frontend IP configurations to link to. If names are used, also supply `--lb-name`. */
    lbFrontendIpConfigs(value: string): az_network_private_link_service_update_command_builder;
    /** Name of the load balancer to retrieve frontend IP configs from. Ignored if a frontend IP configuration ID is supplied. */
    lbName(value: string): az_network_private_link_service_update_command_builder;
    /** Name of the private link service. */
    name(value: string): az_network_private_link_service_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_private_link_service_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_private_link_service_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_private_link_service_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_private_link_service_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_private_link_service_update_command_builder;
    /** Space-separated list of subscription IDs for which the private link service is visible. */
    visibility(value: string): az_network_private_link_service_update_command_builder;
}
/**
 * Delete a network profile.
 *
 * Syntax:
 * ```
 * az network profile delete [--ids]
 *                           [--name]
 *                           [--resource-group]
 *                           [--subscription]
 *                           [--yes]
 * ```
 */
declare class az_network_profile_delete_command_builder extends CommandBuilder<az_network_profile_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_profile_delete_command_builder;
    /** The network profile name. */
    name(value: string): az_network_profile_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_profile_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_profile_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_profile_delete_command_builder;
}
/**
 * List network profiles.
 *
 * Syntax:
 * ```
 * az network profile list [--query-examples]
 *                         [--resource-group]
 *                         [--subscription]
 * ```
 */
declare class az_network_profile_list_command_builder extends CommandBuilder<az_network_profile_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_profile_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_profile_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_profile_list_command_builder;
}
/**
 * Get the details of a network profile.
 *
 * Syntax:
 * ```
 * az network profile show [--expand]
 *                         [--ids]
 *                         [--name]
 *                         [--query-examples]
 *                         [--resource-group]
 *                         [--subscription]
 * ```
 */
declare class az_network_profile_show_command_builder extends CommandBuilder<az_network_profile_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_profile_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_profile_show_command_builder;
    /** The network profile name. */
    name(value: string): az_network_profile_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_profile_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_profile_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_profile_show_command_builder;
}
/**
 * Create a public IP prefix resource.
 *
 * Syntax:
 * ```
 * az network public-ip prefix create --length
 *                                    --name
 *                                    --resource-group
 *                                    [--location]
 *                                    [--subscription]
 *                                    [--tags]
 *                                    [--version {IPv4, IPv6}]
 *                                    [--zone {1, 2, 3}]
 * ```
 *
 * @param {string} length Length of the prefix (i.e. `XX.XX.XX.XX/<Length>`).
 * @param {string} name The name of the public IP prefix.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_public_ip_prefix_create_command_builder extends CommandBuilder<az_network_public_ip_prefix_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, length: string, name: string, resourceGroup: string);
    /** Length of the prefix (i.e. `XX.XX.XX.XX/<Length>`). */
    length(value: string): az_network_public_ip_prefix_create_command_builder;
    /** The name of the public IP prefix. */
    name(value: string): az_network_public_ip_prefix_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_prefix_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_public_ip_prefix_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_prefix_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_public_ip_prefix_create_command_builder;
    /** IP address type. */
    version(value: 'IPv4' | 'IPv6'): az_network_public_ip_prefix_create_command_builder;
    /** Availability zone into which to provision the resource. */
    zone(value: '1' | '2' | '3'): az_network_public_ip_prefix_create_command_builder;
}
/**
 * Delete a public IP prefix resource.
 *
 * Syntax:
 * ```
 * az network public-ip prefix delete [--ids]
 *                                    [--name]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_public_ip_prefix_delete_command_builder extends CommandBuilder<az_network_public_ip_prefix_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_prefix_delete_command_builder;
    /** The name of the public IP prefix. */
    name(value: string): az_network_public_ip_prefix_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_prefix_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_prefix_delete_command_builder;
}
/**
 * List public IP prefix resources.
 *
 * Syntax:
 * ```
 * az network public-ip prefix list [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_public_ip_prefix_list_command_builder extends CommandBuilder<az_network_public_ip_prefix_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_public_ip_prefix_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_prefix_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_prefix_list_command_builder;
}
/**
 * Get the details of a public IP prefix resource.
 *
 * Syntax:
 * ```
 * az network public-ip prefix show [--expand]
 *                                  [--ids]
 *                                  [--name]
 *                                  [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_public_ip_prefix_show_command_builder extends CommandBuilder<az_network_public_ip_prefix_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_public_ip_prefix_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_prefix_show_command_builder;
    /** The name of the public IP prefix. */
    name(value: string): az_network_public_ip_prefix_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_public_ip_prefix_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_prefix_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_prefix_show_command_builder;
}
/**
 * Update a public IP prefix resource.
 *
 * Syntax:
 * ```
 * az network public-ip prefix update [--add]
 *                                    [--force-string]
 *                                    [--ids]
 *                                    [--name]
 *                                    [--remove]
 *                                    [--resource-group]
 *                                    [--set]
 *                                    [--subscription]
 *                                    [--tags]
 * ```
 */
declare class az_network_public_ip_prefix_update_command_builder extends CommandBuilder<az_network_public_ip_prefix_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_public_ip_prefix_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_public_ip_prefix_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_prefix_update_command_builder;
    /** The name of the public IP prefix. */
    name(value: string): az_network_public_ip_prefix_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_public_ip_prefix_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_prefix_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_public_ip_prefix_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_prefix_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_public_ip_prefix_update_command_builder;
}
/**
 * Create a public IP address.
 *
 * Syntax:
 * ```
 * az network public-ip create --name
 *                             --resource-group
 *                             [--allocation-method {Dynamic, Static}]
 *                             [--dns-name]
 *                             [--idle-timeout]
 *                             [--ip-tags]
 *                             [--location]
 *                             [--public-ip-prefix]
 *                             [--reverse-fqdn]
 *                             [--sku {Basic, Standard}]
 *                             [--subscription]
 *                             [--tags]
 *                             [--version {IPv4, IPv6}]
 *                             [--zone {1, 2, 3}]
 * ```
 *
 * @param {string} name The name of the public IP address.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_public_ip_create_command_builder extends CommandBuilder<az_network_public_ip_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the public IP address. */
    name(value: string): az_network_public_ip_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_create_command_builder;
    /** IP address allocation method. */
    allocationMethod(value: 'Dynamic' | 'Static'): az_network_public_ip_create_command_builder;
    /** Globally unique DNS entry. */
    dnsName(value: string): az_network_public_ip_create_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_public_ip_create_command_builder;
    /** Space-separated list of IP tags in 'TYPE=VAL' format. */
    ipTags(value: string): az_network_public_ip_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_public_ip_create_command_builder;
    /** Name or ID of a public IP prefix. */
    publicIpPrefix(value: string): az_network_public_ip_create_command_builder;
    /** Reverse FQDN (fully qualified domain name). */
    reverseFqdn(value: string): az_network_public_ip_create_command_builder;
    /** Public IP SKU. */
    sku(value: 'Basic' | 'Standard'): az_network_public_ip_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_public_ip_create_command_builder;
    /** IP address type. */
    version(value: 'IPv4' | 'IPv6'): az_network_public_ip_create_command_builder;
    /** Availability zone into which to provision the resource. */
    zone(value: '1' | '2' | '3'): az_network_public_ip_create_command_builder;
}
/**
 * Delete a public IP address.
 *
 * Syntax:
 * ```
 * az network public-ip delete [--ids]
 *                             [--name]
 *                             [--resource-group]
 *                             [--subscription]
 * ```
 */
declare class az_network_public_ip_delete_command_builder extends CommandBuilder<az_network_public_ip_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_delete_command_builder;
    /** The name of the public IP address. */
    name(value: string): az_network_public_ip_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_delete_command_builder;
}
/**
 * List public IP addresses.
 *
 * Syntax:
 * ```
 * az network public-ip list [--query-examples]
 *                           [--resource-group]
 *                           [--subscription]
 * ```
 */
declare class az_network_public_ip_list_command_builder extends CommandBuilder<az_network_public_ip_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_public_ip_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_list_command_builder;
}
/**
 * Get the details of a public IP address.
 *
 * Syntax:
 * ```
 * az network public-ip show [--expand]
 *                           [--ids]
 *                           [--name]
 *                           [--query-examples]
 *                           [--resource-group]
 *                           [--subscription]
 * ```
 */
declare class az_network_public_ip_show_command_builder extends CommandBuilder<az_network_public_ip_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_public_ip_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_show_command_builder;
    /** The name of the public IP address. */
    name(value: string): az_network_public_ip_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_public_ip_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_show_command_builder;
}
/**
 * Update a public IP address.
 *
 * Syntax:
 * ```
 * az network public-ip update [--add]
 *                             [--allocation-method {Dynamic, Static}]
 *                             [--dns-name]
 *                             [--force-string]
 *                             [--idle-timeout]
 *                             [--ids]
 *                             [--ip-tags]
 *                             [--name]
 *                             [--public-ip-prefix]
 *                             [--remove]
 *                             [--resource-group]
 *                             [--reverse-fqdn]
 *                             [--set]
 *                             [--sku {Basic, Standard}]
 *                             [--subscription]
 *                             [--tags]
 *                             [--version {IPv4, IPv6}]
 * ```
 */
declare class az_network_public_ip_update_command_builder extends CommandBuilder<az_network_public_ip_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_public_ip_update_command_builder;
    /** IP address allocation method. */
    allocationMethod(value: 'Dynamic' | 'Static'): az_network_public_ip_update_command_builder;
    /** Globally unique DNS entry. */
    dnsName(value: string): az_network_public_ip_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_public_ip_update_command_builder;
    /** Idle timeout in minutes. */
    idleTimeout(value: string): az_network_public_ip_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_public_ip_update_command_builder;
    /** Space-separated list of IP tags in 'TYPE=VAL' format. */
    ipTags(value: string): az_network_public_ip_update_command_builder;
    /** The name of the public IP address. */
    name(value: string): az_network_public_ip_update_command_builder;
    /** Name or ID of a public IP prefix. */
    publicIpPrefix(value: string): az_network_public_ip_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_public_ip_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_public_ip_update_command_builder;
    /** Reverse FQDN (fully qualified domain name). */
    reverseFqdn(value: string): az_network_public_ip_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_public_ip_update_command_builder;
    /** Public IP SKU. */
    sku(value: 'Basic' | 'Standard'): az_network_public_ip_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_public_ip_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_public_ip_update_command_builder;
    /** IP address type. */
    version(value: 'IPv4' | 'IPv6'): az_network_public_ip_update_command_builder;
}
/**
 * Create a rule in a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter rule create --access {Allow, Deny}
 *                                     --communities
 *                                     --filter-name
 *                                     --name
 *                                     --resource-group
 *                                     [--location]
 *                                     [--subscription]
 * ```
 *
 * @param {'Allow' | 'Deny'} access The access type of the rule.
 * @param {string} communities Space-separated list of border gateway protocol (BGP) community values to filter on.
 * @param {string} filterName Name of the route filter.
 * @param {string} name Name of the route filter rule.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_rule_create_command_builder extends CommandBuilder<az_network_route_filter_rule_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, access: 'Allow' | 'Deny', communities: string, filterName: string, name: string, resourceGroup: string);
    /** The access type of the rule. */
    access(value: 'Allow' | 'Deny'): az_network_route_filter_rule_create_command_builder;
    /** Space-separated list of border gateway protocol (BGP) community values to filter on. */
    communities(value: string): az_network_route_filter_rule_create_command_builder;
    /** Name of the route filter. */
    filterName(value: string): az_network_route_filter_rule_create_command_builder;
    /** Name of the route filter rule. */
    name(value: string): az_network_route_filter_rule_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_rule_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_route_filter_rule_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_create_command_builder;
}
/**
 * Delete a rule from a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter rule delete [--filter-name]
 *                                     [--ids]
 *                                     [--name]
 *                                     [--resource-group]
 *                                     [--subscription]
 * ```
 */
declare class az_network_route_filter_rule_delete_command_builder extends CommandBuilder<az_network_route_filter_rule_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the route filter. */
    filterName(value: string): az_network_route_filter_rule_delete_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_filter_rule_delete_command_builder;
    /** Name of the route filter rule. */
    name(value: string): az_network_route_filter_rule_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_rule_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_delete_command_builder;
}
/**
 * List rules in a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter rule list --filter-name
 *                                   --resource-group
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} filterName Name of the route filter.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_rule_list_command_builder extends CommandBuilder<az_network_route_filter_rule_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, filterName: string, resourceGroup: string);
    /** Name of the route filter. */
    filterName(value: string): az_network_route_filter_rule_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_rule_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_filter_rule_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_list_command_builder;
}
/**
 * Gets all the available BGP service communities.
 *
 * Syntax:
 * ```
 * az network route-filter rule list-service-communities [--subscription]
 * ```
 */
declare class az_network_route_filter_rule_list_service_communities_command_builder extends CommandBuilder<az_network_route_filter_rule_list_service_communities_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_list_service_communities_command_builder;
}
/**
 * Get the details of a rule in a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter rule show [--filter-name]
 *                                   [--ids]
 *                                   [--name]
 *                                   [--query-examples]
 *                                   [--resource-group]
 *                                   [--subscription]
 * ```
 */
declare class az_network_route_filter_rule_show_command_builder extends CommandBuilder<az_network_route_filter_rule_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name of the route filter. */
    filterName(value: string): az_network_route_filter_rule_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_filter_rule_show_command_builder;
    /** Name of the route filter rule. */
    name(value: string): az_network_route_filter_rule_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_filter_rule_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_rule_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_show_command_builder;
}
/**
 * Update a rule in a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter rule update [--add]
 *                                     [--filter-name]
 *                                     [--force-string]
 *                                     [--ids]
 *                                     [--name]
 *                                     [--remove]
 *                                     [--resource-group]
 *                                     [--set]
 *                                     [--subscription]
 * ```
 */
declare class az_network_route_filter_rule_update_command_builder extends CommandBuilder<az_network_route_filter_rule_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_route_filter_rule_update_command_builder;
    /** Name of the route filter. */
    filterName(value: string): az_network_route_filter_rule_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_route_filter_rule_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_filter_rule_update_command_builder;
    /** Name of the route filter rule. */
    name(value: string): az_network_route_filter_rule_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_route_filter_rule_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_rule_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_route_filter_rule_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_rule_update_command_builder;
}
/**
 * Create a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter create --name
 *                                --resource-group
 *                                [--location]
 *                                [--subscription]
 *                                [--tags]
 * ```
 *
 * @param {string} name Name of the route filter.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_create_command_builder extends CommandBuilder<az_network_route_filter_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the route filter. */
    name(value: string): az_network_route_filter_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_route_filter_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_route_filter_create_command_builder;
}
/**
 * Delete a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter delete --name
 *                                --resource-group
 *                                [--subscription]
 * ```
 *
 * @param {string} name Name of the route filter.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_delete_command_builder extends CommandBuilder<az_network_route_filter_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the route filter. */
    name(value: string): az_network_route_filter_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_delete_command_builder;
}
/**
 * List route filters.
 *
 * Syntax:
 * ```
 * az network route-filter list [--query-examples]
 *                              [--resource-group]
 *                              [--subscription]
 * ```
 */
declare class az_network_route_filter_list_command_builder extends CommandBuilder<az_network_route_filter_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_filter_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_list_command_builder;
}
/**
 * Get the details of a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter show --name
 *                              --resource-group
 *                              [--expand {peerings}]
 *                              [--query-examples]
 *                              [--subscription]
 * ```
 *
 * @param {string} name Name of the route filter.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_show_command_builder extends CommandBuilder<az_network_route_filter_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the route filter. */
    name(value: string): az_network_route_filter_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_show_command_builder;
    /** Expands referenced express route bgp peering resources. */
    expand(value: 'peerings'): az_network_route_filter_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_filter_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_show_command_builder;
}
/**
 * Update a route filter.
 *
 * Syntax:
 * ```
 * az network route-filter update --name
 *                                --resource-group
 *                                [--add]
 *                                [--force-string]
 *                                [--remove]
 *                                [--set]
 *                                [--subscription]
 * ```
 *
 * @param {string} name Name of the route filter.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_filter_update_command_builder extends CommandBuilder<az_network_route_filter_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the route filter. */
    name(value: string): az_network_route_filter_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_filter_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_route_filter_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_route_filter_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_route_filter_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_route_filter_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_filter_update_command_builder;
}
/**
 * Create a route in a route table.
 *
 * Syntax:
 * ```
 * az network route-table route create --address-prefix
 *                                     --name
 *                                     --next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}
 *                                     --resource-group
 *                                     --route-table-name
 *                                     [--next-hop-ip-address]
 *                                     [--subscription]
 * ```
 *
 * @param {string} addressPrefix The destination CIDR to which the route applies.
 * @param {string} name Route name.
 * @param {'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal'} nextHopType The type of Azure hop the packet should be sent to.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} routeTableName Route table name.
 */
declare class az_network_route_table_route_create_command_builder extends CommandBuilder<az_network_route_table_route_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPrefix: string, name: string, nextHopType: 'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal', resourceGroup: string, routeTableName: string);
    /** The destination CIDR to which the route applies. */
    addressPrefix(value: string): az_network_route_table_route_create_command_builder;
    /** Route name. */
    name(value: string): az_network_route_table_route_create_command_builder;
    /** The type of Azure hop the packet should be sent to. */
    nextHopType(value: 'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal'): az_network_route_table_route_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_route_create_command_builder;
    /** Route table name. */
    routeTableName(value: string): az_network_route_table_route_create_command_builder;
    /** The IP address packets should be forwarded to when using the VirtualAppliance hop type. */
    nextHopIpAddress(value: string): az_network_route_table_route_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_route_create_command_builder;
}
/**
 * Delete a route from a route table.
 *
 * Syntax:
 * ```
 * az network route-table route delete [--ids]
 *                                     [--name]
 *                                     [--resource-group]
 *                                     [--route-table-name]
 *                                     [--subscription]
 * ```
 */
declare class az_network_route_table_route_delete_command_builder extends CommandBuilder<az_network_route_table_route_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_route_delete_command_builder;
    /** Route name. */
    name(value: string): az_network_route_table_route_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_route_delete_command_builder;
    /** Route table name. */
    routeTableName(value: string): az_network_route_table_route_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_route_delete_command_builder;
}
/**
 * List routes in a route table.
 *
 * Syntax:
 * ```
 * az network route-table route list --resource-group
 *                                   --route-table-name
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} routeTableName Route table name.
 */
declare class az_network_route_table_route_list_command_builder extends CommandBuilder<az_network_route_table_route_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, routeTableName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_route_list_command_builder;
    /** Route table name. */
    routeTableName(value: string): az_network_route_table_route_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_table_route_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_route_list_command_builder;
}
/**
 * Get the details of a route in a route table.
 *
 * Syntax:
 * ```
 * az network route-table route show [--ids]
 *                                   [--name]
 *                                   [--query-examples]
 *                                   [--resource-group]
 *                                   [--route-table-name]
 *                                   [--subscription]
 * ```
 */
declare class az_network_route_table_route_show_command_builder extends CommandBuilder<az_network_route_table_route_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_route_show_command_builder;
    /** Route name. */
    name(value: string): az_network_route_table_route_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_table_route_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_route_show_command_builder;
    /** Route table name. */
    routeTableName(value: string): az_network_route_table_route_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_route_show_command_builder;
}
/**
 * Update a route in a route table.
 *
 * Syntax:
 * ```
 * az network route-table route update [--add]
 *                                     [--address-prefix]
 *                                     [--force-string]
 *                                     [--ids]
 *                                     [--name]
 *                                     [--next-hop-ip-address]
 *                                     [--next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}]
 *                                     [--remove]
 *                                     [--resource-group]
 *                                     [--route-table-name]
 *                                     [--set]
 *                                     [--subscription]
 * ```
 */
declare class az_network_route_table_route_update_command_builder extends CommandBuilder<az_network_route_table_route_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_route_table_route_update_command_builder;
    /** The destination CIDR to which the route applies. */
    addressPrefix(value: string): az_network_route_table_route_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_route_table_route_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_route_update_command_builder;
    /** Route name. */
    name(value: string): az_network_route_table_route_update_command_builder;
    /** The IP address packets should be forwarded to when using the VirtualAppliance hop type. */
    nextHopIpAddress(value: string): az_network_route_table_route_update_command_builder;
    /** The type of Azure hop the packet should be sent to. */
    nextHopType(value: 'Internet' | 'None' | 'VirtualAppliance' | 'VirtualNetworkGateway' | 'VnetLocal'): az_network_route_table_route_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_route_table_route_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_route_update_command_builder;
    /** Route table name. */
    routeTableName(value: string): az_network_route_table_route_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_route_table_route_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_route_update_command_builder;
}
/**
 * Create a route table.
 *
 * Syntax:
 * ```
 * az network route-table create --name
 *                               --resource-group
 *                               [--disable-bgp-route-propagation {false, true}]
 *                               [--location]
 *                               [--subscription]
 *                               [--tags]
 * ```
 *
 * @param {string} name Name of the route table.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_route_table_create_command_builder extends CommandBuilder<az_network_route_table_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the route table. */
    name(value: string): az_network_route_table_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_create_command_builder;
    /** Disable routes learned by BGP. */
    disableBgpRoutePropagation(value: boolean): az_network_route_table_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_route_table_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_route_table_create_command_builder;
}
/**
 * Delete a route table.
 *
 * Syntax:
 * ```
 * az network route-table delete [--ids]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_route_table_delete_command_builder extends CommandBuilder<az_network_route_table_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_delete_command_builder;
    /** Name of the route table. */
    name(value: string): az_network_route_table_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_delete_command_builder;
}
/**
 * List route tables.
 *
 * Syntax:
 * ```
 * az network route-table list [--query-examples]
 *                             [--resource-group]
 *                             [--subscription]
 * ```
 */
declare class az_network_route_table_list_command_builder extends CommandBuilder<az_network_route_table_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_table_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_list_command_builder;
}
/**
 * Get the details of a route table.
 *
 * Syntax:
 * ```
 * az network route-table show [--expand]
 *                             [--ids]
 *                             [--name]
 *                             [--query-examples]
 *                             [--resource-group]
 *                             [--subscription]
 * ```
 */
declare class az_network_route_table_show_command_builder extends CommandBuilder<az_network_route_table_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_route_table_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_show_command_builder;
    /** Name of the route table. */
    name(value: string): az_network_route_table_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_route_table_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_show_command_builder;
}
/**
 * Update a route table.
 *
 * Syntax:
 * ```
 * az network route-table update [--add]
 *                               [--disable-bgp-route-propagation {false, true}]
 *                               [--force-string]
 *                               [--ids]
 *                               [--name]
 *                               [--remove]
 *                               [--resource-group]
 *                               [--set]
 *                               [--subscription]
 *                               [--tags]
 * ```
 */
declare class az_network_route_table_update_command_builder extends CommandBuilder<az_network_route_table_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_route_table_update_command_builder;
    /** Disable routes learned by BGP. */
    disableBgpRoutePropagation(value: boolean): az_network_route_table_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_route_table_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_route_table_update_command_builder;
    /** Name of the route table. */
    name(value: string): az_network_route_table_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_route_table_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_route_table_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_route_table_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_route_table_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_route_table_update_command_builder;
}
/**
 * Create a Azure security partner provider.
 *
 * Syntax:
 * ```
 * az network security-partner-provider create --name
 *                                             --provider {Checkpoint, IBoss, ZScaler}
 *                                             --resource-group
 *                                             --vhub
 *                                             [--location]
 *                                             [--subscription]
 *                                             [--tags]
 * ```
 *
 * @param {string} name Name of the Security Partner Provider.
 * @param {'Checkpoint' | 'IBoss' | 'ZScaler'} provider The security provider name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vhub Name or ID of the virtual hub to which the Security Partner Provider belongs.
 */
declare class az_network_security_partner_provider_create_command_builder extends CommandBuilder<az_network_security_partner_provider_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, provider: 'Checkpoint' | 'IBoss' | 'ZScaler', resourceGroup: string, vhub: string);
    /** Name of the Security Partner Provider. */
    name(value: string): az_network_security_partner_provider_create_command_builder;
    /** The security provider name. */
    provider(value: 'Checkpoint' | 'IBoss' | 'ZScaler'): az_network_security_partner_provider_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_security_partner_provider_create_command_builder;
    /** Name or ID of the virtual hub to which the Security Partner Provider belongs. */
    vhub(value: string): az_network_security_partner_provider_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_security_partner_provider_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_security_partner_provider_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_security_partner_provider_create_command_builder;
}
/**
 * Delete a Azure security partner provider.
 *
 * Syntax:
 * ```
 * az network security-partner-provider delete --name
 *                                             --resource-group
 *                                             [--subscription]
 * ```
 *
 * @param {string} name Name of the Security Partner Provider.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_security_partner_provider_delete_command_builder extends CommandBuilder<az_network_security_partner_provider_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the Security Partner Provider. */
    name(value: string): az_network_security_partner_provider_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_security_partner_provider_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_security_partner_provider_delete_command_builder;
}
/**
 * List all Azure security partner provider.
 *
 * Syntax:
 * ```
 * az network security-partner-provider list [--query-examples]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_security_partner_provider_list_command_builder extends CommandBuilder<az_network_security_partner_provider_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_security_partner_provider_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_security_partner_provider_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_security_partner_provider_list_command_builder;
}
/**
 * Show a Azure security partner provider.
 *
 * Syntax:
 * ```
 * az network security-partner-provider show --name
 *                                           --resource-group
 *                                           [--query-examples]
 *                                           [--subscription]
 * ```
 *
 * @param {string} name Name of the Security Partner Provider.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_security_partner_provider_show_command_builder extends CommandBuilder<az_network_security_partner_provider_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the Security Partner Provider. */
    name(value: string): az_network_security_partner_provider_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_security_partner_provider_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_security_partner_provider_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_security_partner_provider_show_command_builder;
}
/**
 * Update a Azure security partner provider.
 *
 * Syntax:
 * ```
 * az network security-partner-provider update --name
 *                                             --resource-group
 *                                             [--add]
 *                                             [--force-string]
 *                                             [--provider {Checkpoint, IBoss, ZScaler}]
 *                                             [--remove]
 *                                             [--set]
 *                                             [--subscription]
 *                                             [--tags]
 *                                             [--vhub]
 * ```
 *
 * @param {string} name Name of the Security Partner Provider.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_security_partner_provider_update_command_builder extends CommandBuilder<az_network_security_partner_provider_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the Security Partner Provider. */
    name(value: string): az_network_security_partner_provider_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_security_partner_provider_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_security_partner_provider_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_security_partner_provider_update_command_builder;
    /** The security provider name. */
    provider(value: 'Checkpoint' | 'IBoss' | 'ZScaler'): az_network_security_partner_provider_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_security_partner_provider_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_security_partner_provider_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_security_partner_provider_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_security_partner_provider_update_command_builder;
    /** Name or ID of the virtual hub to which the Security Partner Provider belongs. */
    vhub(value: string): az_network_security_partner_provider_update_command_builder;
}
/**
 * Create a service endpoint policy definition.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy-definition create --name
 *                                                      --policy-name
 *                                                      --resource-group
 *                                                      --service
 *                                                      --service-resources
 *                                                      [--description]
 *                                                      [--subscription]
 * ```
 *
 * @param {string} name Name of the service endpoint policy definition.
 * @param {string} policyName Name of the service endpoint policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} service Service name the policy definition applies to.
 * @param {string} serviceResources Space-separated list of service resources the definition applies to.
 */
declare class az_network_service_endpoint_policy_definition_create_command_builder extends CommandBuilder<az_network_service_endpoint_policy_definition_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, policyName: string, resourceGroup: string, service: string, serviceResources: string);
    /** Name of the service endpoint policy definition. */
    name(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Name of the service endpoint policy. */
    policyName(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Service name the policy definition applies to. */
    service(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Space-separated list of service resources the definition applies to. */
    serviceResources(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Description of the policy definition. */
    description(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_definition_create_command_builder;
}
/**
 * Delete a service endpoint policy definition.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy-definition delete [--ids]
 *                                                      [--name]
 *                                                      [--policy-name]
 *                                                      [--resource-group]
 *                                                      [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_definition_delete_command_builder extends CommandBuilder<az_network_service_endpoint_policy_definition_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_definition_delete_command_builder;
    /** Name of the service endpoint policy definition. */
    name(value: string): az_network_service_endpoint_policy_definition_delete_command_builder;
    /** Name of the service endpoint policy. */
    policyName(value: string): az_network_service_endpoint_policy_definition_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_definition_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_definition_delete_command_builder;
}
/**
 * List service endpoint policy definitions.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy-definition list --policy-name
 *                                                    --resource-group
 *                                                    [--query-examples]
 *                                                    [--subscription]
 * ```
 *
 * @param {string} policyName Name of the service endpoint policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_service_endpoint_policy_definition_list_command_builder extends CommandBuilder<az_network_service_endpoint_policy_definition_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, policyName: string, resourceGroup: string);
    /** Name of the service endpoint policy. */
    policyName(value: string): az_network_service_endpoint_policy_definition_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_definition_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_service_endpoint_policy_definition_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_definition_list_command_builder;
}
/**
 * Get the details of a service endpoint policy definition.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy-definition show [--ids]
 *                                                    [--name]
 *                                                    [--policy-name]
 *                                                    [--query-examples]
 *                                                    [--resource-group]
 *                                                    [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_definition_show_command_builder extends CommandBuilder<az_network_service_endpoint_policy_definition_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
    /** Name of the service endpoint policy definition. */
    name(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
    /** Name of the service endpoint policy. */
    policyName(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_definition_show_command_builder;
}
/**
 * Update a service endpoint policy definition.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy-definition update [--add]
 *                                                      [--description]
 *                                                      [--force-string]
 *                                                      [--ids]
 *                                                      [--name]
 *                                                      [--policy-name]
 *                                                      [--remove]
 *                                                      [--resource-group]
 *                                                      [--service]
 *                                                      [--service-resources]
 *                                                      [--set]
 *                                                      [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_definition_update_command_builder extends CommandBuilder<az_network_service_endpoint_policy_definition_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Description of the policy definition. */
    description(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Name of the service endpoint policy definition. */
    name(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Name of the service endpoint policy. */
    policyName(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Service name the policy definition applies to. */
    service(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Space-separated list of service resources the definition applies to. */
    serviceResources(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_definition_update_command_builder;
}
/**
 * Create a service endpoint policy.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy create --name
 *                                           --resource-group
 *                                           [--location]
 *                                           [--subscription]
 *                                           [--tags]
 * ```
 *
 * @param {string} name Name of the service endpoint policy.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_service_endpoint_policy_create_command_builder extends CommandBuilder<az_network_service_endpoint_policy_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** Name of the service endpoint policy. */
    name(value: string): az_network_service_endpoint_policy_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_service_endpoint_policy_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_service_endpoint_policy_create_command_builder;
}
/**
 * Delete a service endpoint policy.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy delete [--ids]
 *                                           [--name]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_delete_command_builder extends CommandBuilder<az_network_service_endpoint_policy_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_delete_command_builder;
    /** Name of the service endpoint policy. */
    name(value: string): az_network_service_endpoint_policy_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_delete_command_builder;
}
/**
 * List service endpoint policies.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy list [--query-examples]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_list_command_builder extends CommandBuilder<az_network_service_endpoint_policy_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_service_endpoint_policy_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_list_command_builder;
}
/**
 * Get the details of a service endpoint policy.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy show [--ids]
 *                                         [--name]
 *                                         [--query-examples]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_service_endpoint_policy_show_command_builder extends CommandBuilder<az_network_service_endpoint_policy_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_show_command_builder;
    /** Name of the service endpoint policy. */
    name(value: string): az_network_service_endpoint_policy_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_service_endpoint_policy_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_show_command_builder;
}
/**
 * Update a service endpoint policy.
 *
 * Syntax:
 * ```
 * az network service-endpoint policy update [--add]
 *                                           [--force-string]
 *                                           [--ids]
 *                                           [--name]
 *                                           [--remove]
 *                                           [--resource-group]
 *                                           [--set]
 *                                           [--subscription]
 *                                           [--tags]
 * ```
 */
declare class az_network_service_endpoint_policy_update_command_builder extends CommandBuilder<az_network_service_endpoint_policy_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Name of the service endpoint policy. */
    name(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_policy_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_service_endpoint_policy_update_command_builder;
}
/**
 * List what values of endpoint services are available for use.
 *
 * Syntax:
 * ```
 * az network service-endpoint list --location
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_service_endpoint_list_command_builder extends CommandBuilder<az_network_service_endpoint_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_service_endpoint_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_service_endpoint_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_service_endpoint_list_command_builder;
}
/**
 * Create a traffic manager endpoint.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint create --name
 *                                            --profile-name
 *                                            --resource-group
 *                                            --type {azureEndpoints, externalEndpoints, nestedEndpoints}
 *                                            [--custom-headers]
 *                                            [--endpoint-location]
 *                                            [--endpoint-monitor-status]
 *                                            [--endpoint-status {Disabled, Enabled}]
 *                                            [--geo-mapping]
 *                                            [--min-child-endpoints]
 *                                            [--priority]
 *                                            [--subnets]
 *                                            [--subscription]
 *                                            [--target]
 *                                            [--target-resource-id]
 *                                            [--weight]
 * ```
 *
 * @param {string} name Endpoint name.
 * @param {string} profileName Name of parent profile.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'} type Endpoint type.
 */
declare class az_network_traffic_manager_endpoint_create_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, profileName: string, resourceGroup: string, type: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints');
    /** Endpoint name. */
    name(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Name of parent profile. */
    profileName(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Endpoint type. */
    type(value: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_create_command_builder;
    /** Space-separated list of custom headers in KEY=VALUE format. */
    customHeaders(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Location of the external or nested endpoints when using the 'Performance' routing method. */
    endpointLocation(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** The monitoring status of the endpoint. */
    endpointMonitorStatus(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** The status of the endpoint. If enabled the endpoint is probed for endpoint health and included in the traffic routing method. */
    endpointStatus(value: 'Disabled' | 'Enabled'): az_network_traffic_manager_endpoint_create_command_builder;
    /** Space-separated list of country/region codes mapped to this endpoint when using the 'Geographic' routing method. */
    geoMapping(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** The minimum number of endpoints that must be available in the child profile for the parent profile to be considered available. Only applicable to an endpoint of type 'NestedEndpoints'. */
    minChildEndpoints(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Priority of the endpoint when using the 'Priority' traffic routing method. Values range from 1 to 1000, with lower values representing higher priority. */
    priority(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Space-separated list of subnet CIDR prefixes (10.0.0.0/24) or subnet ranges (10.0.0.0-11.0.0.0). */
    subnets(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Fully-qualified DNS name of the endpoint. */
    target(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** The Azure Resource URI of the endpoint. Not applicable for endpoints of type 'ExternalEndpoints'. */
    targetResourceId(value: string): az_network_traffic_manager_endpoint_create_command_builder;
    /** Weight of the endpoint when using the 'Weighted' traffic routing method. Values range from 1 to 1000. */
    weight(value: string): az_network_traffic_manager_endpoint_create_command_builder;
}
/**
 * Delete a traffic manager endpoint.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint delete [--ids]
 *                                            [--name]
 *                                            [--profile-name]
 *                                            [--resource-group]
 *                                            [--subscription]
 *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
 * ```
 */
declare class az_network_traffic_manager_endpoint_delete_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_endpoint_delete_command_builder;
    /** Endpoint name. */
    name(value: string): az_network_traffic_manager_endpoint_delete_command_builder;
    /** Name of parent profile. */
    profileName(value: string): az_network_traffic_manager_endpoint_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_endpoint_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_delete_command_builder;
    /** Endpoint type. */
    type(value: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_delete_command_builder;
}
/**
 * List traffic manager endpoints.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint list --profile-name
 *                                          --resource-group
 *                                          [--query-examples]
 *                                          [--subscription]
 *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
 * ```
 *
 * @param {string} profileName Name of parent profile.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_traffic_manager_endpoint_list_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, profileName: string, resourceGroup: string);
    /** Name of parent profile. */
    profileName(value: string): az_network_traffic_manager_endpoint_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_endpoint_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_traffic_manager_endpoint_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_list_command_builder;
    /** Endpoint type. */
    type(value: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_list_command_builder;
}
/**
 * Get the details of a traffic manager endpoint.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint show [--ids]
 *                                          [--name]
 *                                          [--profile-name]
 *                                          [--query-examples]
 *                                          [--resource-group]
 *                                          [--subscription]
 *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
 * ```
 */
declare class az_network_traffic_manager_endpoint_show_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Endpoint name. */
    name(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Name of parent profile. */
    profileName(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_show_command_builder;
    /** Endpoint type. */
    type(value: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_show_command_builder;
}
/**
 * Get the default geographic hierarchy used by the geographic traffic routing method.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint show-geographic-hierarchy [--subscription]
 * ```
 */
declare class az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_show_geographic_hierarchy_command_builder;
}
/**
 * Update a traffic manager endpoint.
 *
 * Syntax:
 * ```
 * az network traffic-manager endpoint update [--add]
 *                                            [--custom-headers]
 *                                            [--endpoint-location]
 *                                            [--endpoint-monitor-status]
 *                                            [--endpoint-status {Disabled, Enabled}]
 *                                            [--force-string]
 *                                            [--geo-mapping]
 *                                            [--ids]
 *                                            [--min-child-endpoints]
 *                                            [--name]
 *                                            [--priority]
 *                                            [--profile-name]
 *                                            [--remove]
 *                                            [--resource-group]
 *                                            [--set]
 *                                            [--subnets]
 *                                            [--subscription]
 *                                            [--target]
 *                                            [--target-resource-id]
 *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
 *                                            [--weight]
 * ```
 */
declare class az_network_traffic_manager_endpoint_update_command_builder extends CommandBuilder<az_network_traffic_manager_endpoint_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Space-separated list of custom headers in KEY=VALUE format. */
    customHeaders(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Location of the external or nested endpoints when using the 'Performance' routing method. */
    endpointLocation(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** The monitoring status of the endpoint. */
    endpointMonitorStatus(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** The status of the endpoint. If enabled the endpoint is probed for endpoint health and included in the traffic routing method. */
    endpointStatus(value: 'Disabled' | 'Enabled'): az_network_traffic_manager_endpoint_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Space-separated list of country/region codes mapped to this endpoint when using the 'Geographic' routing method. */
    geoMapping(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** The minimum number of endpoints that must be available in the child profile for the parent profile to be considered available. Only applicable to an endpoint of type 'NestedEndpoints'. */
    minChildEndpoints(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Endpoint name. */
    name(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Priority of the endpoint when using the 'Priority' traffic routing method. Values range from 1 to 1000, with lower values representing higher priority. */
    priority(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Name of parent profile. */
    profileName(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Space-separated list of subnet CIDR prefixes (10.0.0.0/24) or subnet ranges (10.0.0.0-11.0.0.0). */
    subnets(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Fully-qualified DNS name of the endpoint. */
    target(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** The Azure Resource URI of the endpoint. Not applicable for endpoints of type 'ExternalEndpoints'. */
    targetResourceId(value: string): az_network_traffic_manager_endpoint_update_command_builder;
    /** Endpoint type. */
    type(value: 'azureEndpoints' | 'externalEndpoints' | 'nestedEndpoints'): az_network_traffic_manager_endpoint_update_command_builder;
    /** Weight of the endpoint when using the 'Weighted' traffic routing method. Values range from 1 to 1000. */
    weight(value: string): az_network_traffic_manager_endpoint_update_command_builder;
}
/**
 * Check the availability of a relative DNS name.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile check-dns --name
 *                                              [--subscription]
 * ```
 *
 * @param {string} name DNS prefix to verify availability for.
 */
declare class az_network_traffic_manager_profile_check_dns_command_builder extends CommandBuilder<az_network_traffic_manager_profile_check_dns_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** DNS prefix to verify availability for. */
    name(value: string): az_network_traffic_manager_profile_check_dns_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_check_dns_command_builder;
}
/**
 * Create a traffic manager profile.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile create --name
 *                                           --resource-group
 *                                           --routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}
 *                                           --unique-dns-name
 *                                           [--custom-headers]
 *                                           [--interval]
 *                                           [--max-failures]
 *                                           [--path]
 *                                           [--port]
 *                                           [--protocol {HTTP, HTTPS, TCP}]
 *                                           [--status {Disabled, Enabled}]
 *                                           [--status-code-ranges]
 *                                           [--subscription]
 *                                           [--tags]
 *                                           [--timeout]
 *                                           [--ttl]
 * ```
 *
 * @param {string} name Traffic manager profile name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted'} routingMethod Routing method.
 * @param {string} uniqueDnsName Relative DNS name for the traffic manager profile. Resulting FQDN will be `<unique-dns-name>.trafficmanager.net` and must be globally unique.
 */
declare class az_network_traffic_manager_profile_create_command_builder extends CommandBuilder<az_network_traffic_manager_profile_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, routingMethod: 'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted', uniqueDnsName: string);
    /** Traffic manager profile name. */
    name(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Routing method. */
    routingMethod(value: 'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted'): az_network_traffic_manager_profile_create_command_builder;
    /** Relative DNS name for the traffic manager profile. Resulting FQDN will be `<unique-dns-name>.trafficmanager.net` and must be globally unique. */
    uniqueDnsName(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Space-separated list of NAME=VALUE pairs. */
    customHeaders(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** The interval in seconds at which health checks are conducted. */
    interval(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** The number of consecutive failed health checks tolerated before an endpoint is considered degraded. */
    maxFailures(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Path to monitor. Use ""('""' in PowerShell) for none. */
    path(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Port to monitor. */
    port(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Monitor protocol. */
    protocol(value: 'HTTP' | 'HTTPS' | 'TCP'): az_network_traffic_manager_profile_create_command_builder;
    /** Status of the Traffic Manager profile. */
    status(value: 'Disabled' | 'Enabled'): az_network_traffic_manager_profile_create_command_builder;
    /** Space-separated list of status codes in MIN-MAX or VAL format. */
    statusCodeRanges(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** The time in seconds allowed for endpoints to respond to a health check. */
    timeout(value: string): az_network_traffic_manager_profile_create_command_builder;
    /** DNS config time-to-live in seconds. */
    ttl(value: string): az_network_traffic_manager_profile_create_command_builder;
}
/**
 * Delete a traffic manager profile.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile delete [--ids]
 *                                           [--name]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_traffic_manager_profile_delete_command_builder extends CommandBuilder<az_network_traffic_manager_profile_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_profile_delete_command_builder;
    /** The name of the Traffic Manager profile to be deleted. */
    name(value: string): az_network_traffic_manager_profile_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_profile_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_delete_command_builder;
}
/**
 * List traffic manager profiles.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile list [--query-examples]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_traffic_manager_profile_list_command_builder extends CommandBuilder<az_network_traffic_manager_profile_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_traffic_manager_profile_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_profile_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_list_command_builder;
}
/**
 * Get the details of a traffic manager profile.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile show [--ids]
 *                                         [--name]
 *                                         [--query-examples]
 *                                         [--resource-group]
 *                                         [--subscription]
 * ```
 */
declare class az_network_traffic_manager_profile_show_command_builder extends CommandBuilder<az_network_traffic_manager_profile_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_profile_show_command_builder;
    /** The name of the Traffic Manager profile. */
    name(value: string): az_network_traffic_manager_profile_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_traffic_manager_profile_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_profile_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_show_command_builder;
}
/**
 * Update a traffic manager profile.
 *
 * Syntax:
 * ```
 * az network traffic-manager profile update [--add]
 *                                           [--custom-headers]
 *                                           [--force-string]
 *                                           [--ids]
 *                                           [--interval]
 *                                           [--max-failures]
 *                                           [--name]
 *                                           [--path]
 *                                           [--port]
 *                                           [--protocol {HTTP, HTTPS, TCP}]
 *                                           [--remove]
 *                                           [--resource-group]
 *                                           [--routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}]
 *                                           [--set]
 *                                           [--status {Disabled, Enabled}]
 *                                           [--status-code-ranges]
 *                                           [--subscription]
 *                                           [--tags]
 *                                           [--timeout]
 *                                           [--ttl]
 * ```
 */
declare class az_network_traffic_manager_profile_update_command_builder extends CommandBuilder<az_network_traffic_manager_profile_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Space-separated list of NAME=VALUE pairs. */
    customHeaders(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** The interval in seconds at which health checks are conducted. */
    interval(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** The number of consecutive failed health checks tolerated before an endpoint is considered degraded. */
    maxFailures(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** The name of the Traffic Manager profile. */
    name(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Path to monitor. Use ""('""' in PowerShell) for none. */
    path(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Port to monitor. */
    port(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Monitor protocol. */
    protocol(value: 'HTTP' | 'HTTPS' | 'TCP'): az_network_traffic_manager_profile_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Routing method. */
    routingMethod(value: 'Geographic' | 'Multivalue' | 'Performance' | 'Priority' | 'Subnet' | 'Weighted'): az_network_traffic_manager_profile_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Status of the Traffic Manager profile. */
    status(value: 'Disabled' | 'Enabled'): az_network_traffic_manager_profile_update_command_builder;
    /** Space-separated list of status codes in MIN-MAX or VAL format. */
    statusCodeRanges(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** The time in seconds allowed for endpoints to respond to a health check. */
    timeout(value: string): az_network_traffic_manager_profile_update_command_builder;
    /** DNS config time-to-live in seconds. */
    ttl(value: string): az_network_traffic_manager_profile_update_command_builder;
}
/**
 * Create an Azure network virtual appliance site.
 *
 * Syntax:
 * ```
 * az network virtual-appliance site create --address-prefix
 *                                          --appliance-name
 *                                          --name
 *                                          --resource-group
 *                                          [--allow {false, true}]
 *                                          [--default {false, true}]
 *                                          [--optimize {false, true}]
 *                                          [--subscription]
 * ```
 *
 * @param {string} addressPrefix Address Prefix of Network Virtual Appliance Site.
 * @param {string} applianceName The name of Network Virtual Appliance.
 * @param {string} name The name of Network Virtual Appliance Site.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_site_create_command_builder extends CommandBuilder<az_network_virtual_appliance_site_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPrefix: string, applianceName: string, name: string, resourceGroup: string);
    /** Address Prefix of Network Virtual Appliance Site. */
    addressPrefix(value: string): az_network_virtual_appliance_site_create_command_builder;
    /** The name of Network Virtual Appliance. */
    applianceName(value: string): az_network_virtual_appliance_site_create_command_builder;
    /** The name of Network Virtual Appliance Site. */
    name(value: string): az_network_virtual_appliance_site_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_site_create_command_builder;
    /** Flag to control breakout of o365 allow category. */
    allow(value: boolean): az_network_virtual_appliance_site_create_command_builder;
    /** Flag to control breakout of o365 default category. */
    default(value: boolean): az_network_virtual_appliance_site_create_command_builder;
    /** Flag to control breakout of o365 optimize category. */
    optimize(value: boolean): az_network_virtual_appliance_site_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_site_create_command_builder;
}
/**
 * Delete an Azure network virtual appliance site.
 *
 * Syntax:
 * ```
 * az network virtual-appliance site delete --appliance-name
 *                                          --name
 *                                          --resource-group
 *                                          [--subscription]
 *                                          [--yes]
 * ```
 *
 * @param {string} applianceName The name of Network Virtual Appliance.
 * @param {string} name The name of Network Virtual Appliance Site.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_site_delete_command_builder extends CommandBuilder<az_network_virtual_appliance_site_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, applianceName: string, name: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    applianceName(value: string): az_network_virtual_appliance_site_delete_command_builder;
    /** The name of Network Virtual Appliance Site. */
    name(value: string): az_network_virtual_appliance_site_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_site_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_site_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_virtual_appliance_site_delete_command_builder;
}
/**
 * List all Azure network virtual appliance site.
 *
 * Syntax:
 * ```
 * az network virtual-appliance site list --appliance-name
 *                                        --resource-group
 *                                        [--query-examples]
 *                                        [--subscription]
 * ```
 *
 * @param {string} applianceName The name of Network Virtual Appliance.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_site_list_command_builder extends CommandBuilder<az_network_virtual_appliance_site_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, applianceName: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    applianceName(value: string): az_network_virtual_appliance_site_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_site_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_site_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_site_list_command_builder;
}
/**
 * Show the detail of an Azure network virtual appliance site.
 *
 * Syntax:
 * ```
 * az network virtual-appliance site show --appliance-name
 *                                        --name
 *                                        --resource-group
 *                                        [--query-examples]
 *                                        [--subscription]
 * ```
 *
 * @param {string} applianceName The name of Network Virtual Appliance.
 * @param {string} name The name of Network Virtual Appliance Site.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_site_show_command_builder extends CommandBuilder<az_network_virtual_appliance_site_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, applianceName: string, name: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    applianceName(value: string): az_network_virtual_appliance_site_show_command_builder;
    /** The name of Network Virtual Appliance Site. */
    name(value: string): az_network_virtual_appliance_site_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_site_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_site_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_site_show_command_builder;
}
/**
 * Update an Azure network virtual appliance site.
 *
 * Syntax:
 * ```
 * az network virtual-appliance site update --address-prefix
 *                                          --appliance-name
 *                                          --name
 *                                          --resource-group
 *                                          [--add]
 *                                          [--allow {false, true}]
 *                                          [--default {false, true}]
 *                                          [--force-string]
 *                                          [--optimize {false, true}]
 *                                          [--remove]
 *                                          [--set]
 *                                          [--subscription]
 * ```
 *
 * @param {string} addressPrefix Address Prefix of Network Virtual Appliance Site.
 * @param {string} applianceName The name of Network Virtual Appliance.
 * @param {string} name The name of Network Virtual Appliance Site.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_site_update_command_builder extends CommandBuilder<az_network_virtual_appliance_site_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPrefix: string, applianceName: string, name: string, resourceGroup: string);
    /** Address Prefix of Network Virtual Appliance Site. */
    addressPrefix(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** The name of Network Virtual Appliance. */
    applianceName(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** The name of Network Virtual Appliance Site. */
    name(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Flag to control breakout of o365 allow category. */
    allow(value: boolean): az_network_virtual_appliance_site_update_command_builder;
    /** Flag to control breakout of o365 default category. */
    default(value: boolean): az_network_virtual_appliance_site_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Flag to control breakout of o365 optimize category. */
    optimize(value: boolean): az_network_virtual_appliance_site_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_virtual_appliance_site_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_site_update_command_builder;
}
/**
 * List all Azure network virtual appliance sku.
 *
 * Syntax:
 * ```
 * az network virtual-appliance sku list [--query-examples]
 *                                       [--subscription]
 * ```
 */
declare class az_network_virtual_appliance_sku_list_command_builder extends CommandBuilder<az_network_virtual_appliance_sku_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_sku_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_sku_list_command_builder;
}
/**
 * Show the detail of an Azure network virtual appliance sku.
 *
 * Syntax:
 * ```
 * az network virtual-appliance sku show --name
 *                                       [--query-examples]
 *                                       [--subscription]
 * ```
 *
 * @param {string} name The name of Network Virtual Appliance SKU.
 */
declare class az_network_virtual_appliance_sku_show_command_builder extends CommandBuilder<az_network_virtual_appliance_sku_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** The name of Network Virtual Appliance SKU. */
    name(value: string): az_network_virtual_appliance_sku_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_sku_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_sku_show_command_builder;
}
/**
 * Create an Azure network virtual appliance.
 *
 * Syntax:
 * ```
 * az network virtual-appliance create --name
 *                                     --resource-group
 *                                     --scale-unit
 *                                     --vendor
 *                                     --version
 *                                     --vhub
 *                                     [--asn]
 *                                     [--boot-blobs]
 *                                     [--cloud-blobs]
 *                                     [--cloud-init-config]
 *                                     [--location]
 *                                     [--subscription]
 *                                     [--tags]
 * ```
 *
 * @param {string} name The name of Network Virtual Appliance.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} scaleUnit Virtual Appliance Scale Unit.
 * @param {string} vendor Virtual Appliance Vendor.
 * @param {string} version Virtual Appliance Version.
 * @param {string} vhub Name or ID of the virtual hub to which the Security Partner Provider belongs.
 */
declare class az_network_virtual_appliance_create_command_builder extends CommandBuilder<az_network_virtual_appliance_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, scaleUnit: string, vendor: string, version: string, vhub: string);
    /** The name of Network Virtual Appliance. */
    name(value: string): az_network_virtual_appliance_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_create_command_builder;
    /** Virtual Appliance Scale Unit. */
    scaleUnit(value: string): az_network_virtual_appliance_create_command_builder;
    /** Virtual Appliance Vendor. */
    vendor(value: string): az_network_virtual_appliance_create_command_builder;
    /** Virtual Appliance Version. */
    version(value: string): az_network_virtual_appliance_create_command_builder;
    /** Name or ID of the virtual hub to which the Security Partner Provider belongs. */
    vhub(value: string): az_network_virtual_appliance_create_command_builder;
    /** VirtualAppliance ASN. The valid value ranges from 1 to 4294967295. */
    asn(value: string): az_network_virtual_appliance_create_command_builder;
    /** Space-separated list of BootStrapConfigurationBlobs storage URLs. */
    bootStrapConfigBlobs(value: string): az_network_virtual_appliance_create_command_builder;
    /** Space-separated list of CloudInitConfigurationBlob storage URLs. */
    cloudInitConfigBlobs(value: string): az_network_virtual_appliance_create_command_builder;
    /** CloudInitConfiguration scripts that will be run during cloud initialization. */
    cloudInitConfig(value: string): az_network_virtual_appliance_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_virtual_appliance_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_virtual_appliance_create_command_builder;
}
/**
 * Delete an Azure network virtual appliance.
 *
 * Syntax:
 * ```
 * az network virtual-appliance delete --name
 *                                     --resource-group
 *                                     [--subscription]
 *                                     [--yes]
 * ```
 *
 * @param {string} name The name of Network Virtual Appliance.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_delete_command_builder extends CommandBuilder<az_network_virtual_appliance_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    name(value: string): az_network_virtual_appliance_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_delete_command_builder;
    /** Do not prompt for confirmation. */
    yes(value: string): az_network_virtual_appliance_delete_command_builder;
}
/**
 * List all Azure network virtual appliance.
 *
 * Syntax:
 * ```
 * az network virtual-appliance list [--query-examples]
 *                                   [--resource-group]
 *                                   [--subscription]
 * ```
 */
declare class az_network_virtual_appliance_list_command_builder extends CommandBuilder<az_network_virtual_appliance_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_list_command_builder;
}
/**
 * Show the detail of an Azure network virtual appliance.
 *
 * Syntax:
 * ```
 * az network virtual-appliance show --name
 *                                   --resource-group
 *                                   [--expand]
 *                                   [--query-examples]
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of Network Virtual Appliance.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_show_command_builder extends CommandBuilder<az_network_virtual_appliance_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    name(value: string): az_network_virtual_appliance_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_show_command_builder;
    /** Expands referenced resources. */
    expand(value: string): az_network_virtual_appliance_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_virtual_appliance_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_show_command_builder;
}
/**
 * Update an Azure network virtual appliance.
 *
 * Syntax:
 * ```
 * az network virtual-appliance update --name
 *                                     --resource-group
 *                                     [--add]
 *                                     [--asn]
 *                                     [--cloud-init-config]
 *                                     [--force-string]
 *                                     [--remove]
 *                                     [--set]
 *                                     [--subscription]
 * ```
 *
 * @param {string} name The name of Network Virtual Appliance.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_virtual_appliance_update_command_builder extends CommandBuilder<az_network_virtual_appliance_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of Network Virtual Appliance. */
    name(value: string): az_network_virtual_appliance_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_virtual_appliance_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_virtual_appliance_update_command_builder;
    /** VirtualAppliance ASN. The valid value ranges from 1 to 4294967295. */
    asn(value: string): az_network_virtual_appliance_update_command_builder;
    /** CloudInitConfiguration scripts that will be run during cloud initialization. */
    cloudInitConfig(value: string): az_network_virtual_appliance_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_virtual_appliance_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_virtual_appliance_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_virtual_appliance_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_virtual_appliance_update_command_builder;
}
/**
 * Create a virtual network peering connection.
 *
 * Syntax:
 * ```
 * az network vnet peering create --name
 *                                --remote-vnet
 *                                --resource-group
 *                                --vnet-name
 *                                [--allow-forwarded-traffic]
 *                                [--allow-gateway-transit]
 *                                [--allow-vnet-access]
 *                                [--subscription]
 *                                [--use-remote-gateways]
 * ```
 *
 * @param {string} name The name of the VNet peering.
 * @param {string} remoteVnet Resource ID or name of the remote VNet.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetName The virtual network (VNet) name.
 */
declare class az_network_vnet_peering_create_command_builder extends CommandBuilder<az_network_vnet_peering_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, remoteVnet: string, resourceGroup: string, vnetName: string);
    /** The name of the VNet peering. */
    name(value: string): az_network_vnet_peering_create_command_builder;
    /** Resource ID or name of the remote VNet. */
    remoteVnet(value: string): az_network_vnet_peering_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_peering_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_peering_create_command_builder;
    /** Allows forwarded traffic from the local VNet to the remote VNet. */
    allowForwardedTraffic(value: string): az_network_vnet_peering_create_command_builder;
    /** Allows gateway link to be used in the remote VNet. */
    allowGatewayTransit(value: string): az_network_vnet_peering_create_command_builder;
    /** Allows access from the local VNet to the remote VNet. */
    allowVnetAccess(value: string): az_network_vnet_peering_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_peering_create_command_builder;
    /** Allows VNet to use the remote VNet's gateway. Remote VNet gateway must have --allow-gateway-transit enabled for remote peering. Only 1 peering can have this flag enabled. Cannot be set if the VNet already has a gateway. */
    useRemoteGateways(value: string): az_network_vnet_peering_create_command_builder;
}
/**
 * Delete a peering.
 *
 * Syntax:
 * ```
 * az network vnet peering delete [--ids]
 *                                [--name]
 *                                [--resource-group]
 *                                [--subscription]
 *                                [--vnet-name]
 * ```
 */
declare class az_network_vnet_peering_delete_command_builder extends CommandBuilder<az_network_vnet_peering_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_peering_delete_command_builder;
    /** The name of the VNet peering. */
    name(value: string): az_network_vnet_peering_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_peering_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_peering_delete_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_peering_delete_command_builder;
}
/**
 * List peerings.
 *
 * Syntax:
 * ```
 * az network vnet peering list --resource-group
 *                              --vnet-name
 *                              [--query-examples]
 *                              [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetName The virtual network (VNet) name.
 */
declare class az_network_vnet_peering_list_command_builder extends CommandBuilder<az_network_vnet_peering_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, vnetName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_peering_list_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_peering_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_peering_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_peering_list_command_builder;
}
/**
 * Show details of a peering.
 *
 * Syntax:
 * ```
 * az network vnet peering show [--ids]
 *                              [--name]
 *                              [--query-examples]
 *                              [--resource-group]
 *                              [--subscription]
 *                              [--vnet-name]
 * ```
 */
declare class az_network_vnet_peering_show_command_builder extends CommandBuilder<az_network_vnet_peering_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_peering_show_command_builder;
    /** The name of the VNet peering. */
    name(value: string): az_network_vnet_peering_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_peering_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_peering_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_peering_show_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_peering_show_command_builder;
}
/**
 * Update a peering.
 *
 * Syntax:
 * ```
 * az network vnet peering update [--add]
 *                                [--force-string]
 *                                [--ids]
 *                                [--name]
 *                                [--remove]
 *                                [--resource-group]
 *                                [--set]
 *                                [--subscription]
 *                                [--vnet-name]
 * ```
 */
declare class az_network_vnet_peering_update_command_builder extends CommandBuilder<az_network_vnet_peering_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vnet_peering_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vnet_peering_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_peering_update_command_builder;
    /** The name of the VNet peering. */
    name(value: string): az_network_vnet_peering_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vnet_peering_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_peering_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vnet_peering_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_peering_update_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_peering_update_command_builder;
}
/**
 * Create a subnet and associate an existing NSG and route table.
 *
 * Syntax:
 * ```
 * az network vnet subnet create --address-prefixes
 *                               --name
 *                               --resource-group
 *                               --vnet-name
 *                               [--defer]
 *                               [--delegations]
 *                               [--disable-private-endpoint-network-policies {false, true}]
 *                               [--disable-private-link-service-network-policies {false, true}]
 *                               [--nat-gateway]
 *                               [--network-security-group]
 *                               [--route-table]
 *                               [--service-endpoint-policy]
 *                               [--service-endpoints]
 *                               [--subscription]
 * ```
 *
 * @param {string} addressPrefixes Space-separated list of address prefixes in CIDR format.
 * @param {string} name The subnet name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetName The virtual network (VNet) name.
 */
declare class az_network_vnet_subnet_create_command_builder extends CommandBuilder<az_network_vnet_subnet_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, addressPrefixes: string, name: string, resourceGroup: string, vnetName: string);
    /** Space-separated list of address prefixes in CIDR format. */
    addressPrefixes(value: string): az_network_vnet_subnet_create_command_builder;
    /** The subnet name. */
    name(value: string): az_network_vnet_subnet_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_create_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_subnet_create_command_builder;
    /** Temporarily store the object in the local cache instead of sending to Azure. Use `az cache` commands to view/clear. */
    defer(value: string): az_network_vnet_subnet_create_command_builder;
    /** Space-separated list of services to whom the subnet should be delegated. (e.g. Microsoft.Sql/servers). */
    delegations(value: string): az_network_vnet_subnet_create_command_builder;
    /** Disable private endpoint network policies on the subnet. */
    disablePrivateEndpointNetworkPolicies(value: boolean): az_network_vnet_subnet_create_command_builder;
    /** Disable private link service network policies on the subnet. */
    disablePrivateLinkServiceNetworkPolicies(value: boolean): az_network_vnet_subnet_create_command_builder;
    /** Attach Nat Gateway to subnet. */
    natGateway(value: string): az_network_vnet_subnet_create_command_builder;
    /** Name or ID of a network security group (NSG). */
    networkSecurityGroup(value: string): az_network_vnet_subnet_create_command_builder;
    /** Name or ID of a route table to associate with the subnet. */
    routeTable(value: string): az_network_vnet_subnet_create_command_builder;
    /** Space-separated list of names or IDs of service endpoint policies to apply. */
    serviceEndpointPolicy(value: string): az_network_vnet_subnet_create_command_builder;
    /** Space-separated list of services allowed private access to this subnet. */
    serviceEndpoints(value: string): az_network_vnet_subnet_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_create_command_builder;
}
/**
 * Delete a subnet.
 *
 * Syntax:
 * ```
 * az network vnet subnet delete [--ids]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 *                               [--vnet-name]
 * ```
 */
declare class az_network_vnet_subnet_delete_command_builder extends CommandBuilder<az_network_vnet_subnet_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_subnet_delete_command_builder;
    /** The subnet name. */
    name(value: string): az_network_vnet_subnet_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_delete_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_subnet_delete_command_builder;
}
/**
 * List the subnets in a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet subnet list --resource-group
 *                             --vnet-name
 *                             [--query-examples]
 *                             [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetName The virtual network (VNet) name.
 */
declare class az_network_vnet_subnet_list_command_builder extends CommandBuilder<az_network_vnet_subnet_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, vnetName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_list_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_subnet_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_subnet_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_list_command_builder;
}
/**
 * List the services available for subnet delegation.
 *
 * Syntax:
 * ```
 * az network vnet subnet list-available-delegations [--location]
 *                                                   [--resource-group]
 *                                                   [--subscription]
 * ```
 */
declare class az_network_vnet_subnet_list_available_delegations_command_builder extends CommandBuilder<az_network_vnet_subnet_list_available_delegations_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vnet_subnet_list_available_delegations_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_list_available_delegations_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_list_available_delegations_command_builder;
}
/**
 * Show details of a subnet.
 *
 * Syntax:
 * ```
 * az network vnet subnet show [--expand]
 *                             [--ids]
 *                             [--name]
 *                             [--query-examples]
 *                             [--resource-group]
 *                             [--subscription]
 *                             [--vnet-name]
 * ```
 */
declare class az_network_vnet_subnet_show_command_builder extends CommandBuilder<az_network_vnet_subnet_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_vnet_subnet_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_subnet_show_command_builder;
    /** The subnet name. */
    name(value: string): az_network_vnet_subnet_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_subnet_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_show_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_subnet_show_command_builder;
}
/**
 * Update a subnet.
 *
 * Syntax:
 * ```
 * az network vnet subnet update [--add]
 *                               [--address-prefixes]
 *                               [--delegations]
 *                               [--disable-private-endpoint-network-policies {false, true}]
 *                               [--disable-private-link-service-network-policies {false, true}]
 *                               [--force-string]
 *                               [--ids]
 *                               [--name]
 *                               [--nat-gateway]
 *                               [--network-security-group]
 *                               [--remove]
 *                               [--resource-group]
 *                               [--route-table]
 *                               [--service-endpoint-policy]
 *                               [--service-endpoints]
 *                               [--set]
 *                               [--subscription]
 *                               [--vnet-name]
 * ```
 */
declare class az_network_vnet_subnet_update_command_builder extends CommandBuilder<az_network_vnet_subnet_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vnet_subnet_update_command_builder;
    /** Space-separated list of address prefixes in CIDR format. */
    addressPrefixes(value: string): az_network_vnet_subnet_update_command_builder;
    /** Space-separated list of services to whom the subnet should be delegated. (e.g. Microsoft.Sql/servers). */
    delegations(value: string): az_network_vnet_subnet_update_command_builder;
    /** Disable private endpoint network policies on the subnet. */
    disablePrivateEndpointNetworkPolicies(value: boolean): az_network_vnet_subnet_update_command_builder;
    /** Disable private link service network policies on the subnet. */
    disablePrivateLinkServiceNetworkPolicies(value: boolean): az_network_vnet_subnet_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vnet_subnet_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_subnet_update_command_builder;
    /** The subnet name. */
    name(value: string): az_network_vnet_subnet_update_command_builder;
    /** Attach Nat Gateway to subnet. */
    natGateway(value: string): az_network_vnet_subnet_update_command_builder;
    /** Name or ID of a network security group (NSG). Use empty string ""('""' in PowerShell) to detach it. */
    networkSecurityGroup(value: string): az_network_vnet_subnet_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vnet_subnet_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_subnet_update_command_builder;
    /** Name or ID of a route table to associate with the subnet. Use empty string ""('""' in PowerShell) to detach it. You can also append "--remove routeTable" in "az network vnet subnet update" to detach it. */
    routeTable(value: string): az_network_vnet_subnet_update_command_builder;
    /** Space-separated list of names or IDs of service endpoint policies to apply. */
    serviceEndpointPolicy(value: string): az_network_vnet_subnet_update_command_builder;
    /** Space-separated list of services allowed private access to this subnet. */
    serviceEndpoints(value: string): az_network_vnet_subnet_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vnet_subnet_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_subnet_update_command_builder;
    /** The virtual network (VNet) name. */
    vnetName(value: string): az_network_vnet_subnet_update_command_builder;
}
/**
 * Assign/Update AAD(Azure Active Directory) authentication to a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway aad assign --audience
 *                                    --gateway-name
 *                                    --issuer
 *                                    --resource-group
 *                                    --tenant
 *                                    [--no-wait]
 *                                    [--subscription]
 * ```
 *
 * @param {string} audience The AADAudience ID of the VirtualNetworkGateway.
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} issuer The AADIssuer URI of the VirtualNetworkGateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} tenant The AADTenant URI of the VirtualNetworkGateway.
 */
declare class az_network_vnet_gateway_aad_assign_command_builder extends CommandBuilder<az_network_vnet_gateway_aad_assign_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, audience: string, gatewayName: string, issuer: string, resourceGroup: string, tenant: string);
    /** The AADAudience ID of the VirtualNetworkGateway. */
    audience(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** The AADIssuer URI of the VirtualNetworkGateway. */
    issuer(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** The AADTenant URI of the VirtualNetworkGateway. */
    tenant(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_aad_assign_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_aad_assign_command_builder;
}
/**
 * Remove AAD(Azure Active Directory) authentication from a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway aad remove --gateway-name
 *                                    --resource-group
 *                                    [--no-wait]
 *                                    [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_aad_remove_command_builder extends CommandBuilder<az_network_vnet_gateway_aad_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_aad_remove_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_aad_remove_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_aad_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_aad_remove_command_builder;
}
/**
 * Show AAD(Azure Active Directory) authentication of a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway aad show --gateway-name
 *                                  --resource-group
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_aad_show_command_builder extends CommandBuilder<az_network_vnet_gateway_aad_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_aad_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_aad_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_gateway_aad_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_aad_show_command_builder;
}
/**
 * Add a virtual network gateway IPSec policy.
 *
 * Syntax:
 * ```
 * az network vnet-gateway ipsec-policy add --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
 *                                          --gateway-name
 *                                          --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
 *                                          --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
 *                                          --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
 *                                          --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
 *                                          --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
 *                                          --resource-group
 *                                          --sa-lifetime
 *                                          --sa-max-size
 *                                          [--no-wait]
 *                                          [--subscription]
 * ```
 *
 * @param {'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'} dhGroup Required. The DH Group used in IKE Phase 1 for initial SA.
 * @param {string} gatewayName Virtual network gateway name.
 * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'} ikeEncryption Required. The IKE encryption algorithm (IKE phase 2).
 * @param {'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'} ikeIntegrity Required. The IKE integrity algorithm (IKE phase 2).
 * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'} ipsecEncryption Required. The IPSec encryption algorithm (IKE phase 1).
 * @param {'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'} ipsecIntegrity Required. The IPSec integrity algorithm (IKE phase 1).
 * @param {'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'} pfsGroup Required. The Pfs Group used in IKE Phase 2 for new child SA.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} saLifetime Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
 * @param {string} saMaxSize Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
 */
declare class az_network_vnet_gateway_ipsec_policy_add_command_builder extends CommandBuilder<az_network_vnet_gateway_ipsec_policy_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, dhGroup: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None', gatewayName: string, ikeEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256', ikeIntegrity: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384', ipsecEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None', ipsecIntegrity: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256', pfsGroup: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM', resourceGroup: string, saLifetime: string, saMaxSize: string);
    /** Required. The DH Group used in IKE Phase 1 for initial SA. */
    dhGroup(value: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IKE encryption algorithm (IKE phase 2). */
    ikeEncryption(value: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IKE integrity algorithm (IKE phase 2). */
    ikeIntegrity(value: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IPSec encryption algorithm (IKE phase 1). */
    ipsecEncryption(value: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IPSec integrity algorithm (IKE phase 1). */
    ipsecIntegrity(value: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The Pfs Group used in IKE Phase 2 for new child SA. */
    pfsGroup(value: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel. */
    saLifetime(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel. */
    saMaxSize(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_ipsec_policy_add_command_builder;
}
/**
 * Delete all IPsec policies on a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway ipsec-policy clear --gateway-name
 *                                            --resource-group
 *                                            [--no-wait]
 *                                            [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_ipsec_policy_clear_command_builder extends CommandBuilder<az_network_vnet_gateway_ipsec_policy_clear_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_ipsec_policy_clear_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_ipsec_policy_clear_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_ipsec_policy_clear_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_ipsec_policy_clear_command_builder;
}
/**
 * List IPSec policies associated with a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway ipsec-policy list --gateway-name
 *                                           --resource-group
 *                                           [--query-examples]
 *                                           [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_ipsec_policy_list_command_builder extends CommandBuilder<az_network_vnet_gateway_ipsec_policy_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_ipsec_policy_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_ipsec_policy_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_gateway_ipsec_policy_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_ipsec_policy_list_command_builder;
}
/**
 * Revoke a certificate.
 *
 * Syntax:
 * ```
 * az network vnet-gateway revoked-cert create --gateway-name
 *                                             --name
 *                                             --resource-group
 *                                             --thumbprint
 *                                             [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} name Root certificate name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} thumbprint Certificate thumbprint.
 */
declare class az_network_vnet_gateway_revoked_cert_create_command_builder extends CommandBuilder<az_network_vnet_gateway_revoked_cert_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string, thumbprint: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
    /** Root certificate name. */
    name(value: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
    /** Certificate thumbprint. */
    thumbprint(value: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_revoked_cert_create_command_builder;
}
/**
 * Delete a revoked certificate.
 *
 * Syntax:
 * ```
 * az network vnet-gateway revoked-cert delete --gateway-name
 *                                             --name
 *                                             --resource-group
 *                                             [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} name Root certificate name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_revoked_cert_delete_command_builder extends CommandBuilder<az_network_vnet_gateway_revoked_cert_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_revoked_cert_delete_command_builder;
    /** Root certificate name. */
    name(value: string): az_network_vnet_gateway_revoked_cert_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_revoked_cert_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_revoked_cert_delete_command_builder;
}
/**
 * Upload a root certificate.
 *
 * Syntax:
 * ```
 * az network vnet-gateway root-cert create --gateway-name
 *                                          --name
 *                                          --public-cert-data
 *                                          --resource-group
 *                                          [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} name Root certificate name.
 * @param {string} publicCertData Base64 contents of the root certificate file or file path.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_root_cert_create_command_builder extends CommandBuilder<az_network_vnet_gateway_root_cert_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, publicCertData: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_root_cert_create_command_builder;
    /** Root certificate name. */
    name(value: string): az_network_vnet_gateway_root_cert_create_command_builder;
    /** Base64 contents of the root certificate file or file path. */
    publicCertData(value: string): az_network_vnet_gateway_root_cert_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_root_cert_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_root_cert_create_command_builder;
}
/**
 * Delete a root certificate.
 *
 * Syntax:
 * ```
 * az network vnet-gateway root-cert delete --gateway-name
 *                                          --name
 *                                          --resource-group
 *                                          [--subscription]
 * ```
 *
 * @param {string} gatewayName Virtual network gateway name.
 * @param {string} name Root certificate name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_root_cert_delete_command_builder extends CommandBuilder<az_network_vnet_gateway_root_cert_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, gatewayName: string, name: string, resourceGroup: string);
    /** Virtual network gateway name. */
    gatewayName(value: string): az_network_vnet_gateway_root_cert_delete_command_builder;
    /** Root certificate name. */
    name(value: string): az_network_vnet_gateway_root_cert_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_root_cert_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_root_cert_delete_command_builder;
}
/**
 * Generate VPN client configuration.
 *
 * Syntax:
 * ```
 * az network vnet-gateway vpn-client generate [--authentication-method {EAPMSCHAPv2, EAPTLS}]
 *                                             [--client-root-certificates]
 *                                             [--ids]
 *                                             [--name]
 *                                             [--processor-architecture {Amd64, X86}]
 *                                             [--radius-server-auth-certificate]
 *                                             [--resource-group]
 *                                             [--subscription]
 *                                             [--use-legacy {false, true}]
 * ```
 */
declare class az_network_vnet_gateway_vpn_client_generate_command_builder extends CommandBuilder<az_network_vnet_gateway_vpn_client_generate_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Method used to authenticate with the generated client. */
    authenticationMethod(value: 'EAPMSCHAPv2' | 'EAPTLS'): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Space-separated list of client root certificate public certificate data in Base-64 format. Optional for external Radius-based auth with EAPTLS. */
    clientRootCertificates(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Processor architecture of the target system. */
    processorArchitecture(value: 'Amd64' | 'X86'): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Public certificate data for the Radius server auth certificate in Base-64 format. Required only if external Radius auth has been configured with EAPTLS auth. */
    radiusServerAuthCertificate(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_vpn_client_generate_command_builder;
    /** Generate VPN client package using legacy implementation. */
    useLegacy(value: boolean): az_network_vnet_gateway_vpn_client_generate_command_builder;
}
/**
 * Retrieve a pre-generated VPN client configuration.
 *
 * Syntax:
 * ```
 * az network vnet-gateway vpn-client show-url [--ids]
 *                                             [--name]
 *                                             [--resource-group]
 *                                             [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_vpn_client_show_url_command_builder extends CommandBuilder<az_network_vnet_gateway_vpn_client_show_url_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_vpn_client_show_url_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_vpn_client_show_url_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_vpn_client_show_url_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_vpn_client_show_url_command_builder;
}
/**
 * Create a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway create --name
 *                                --public-ip-addresses
 *                                --resource-group
 *                                --vnet
 *                                [--address-prefixes]
 *                                [--asn]
 *                                [--bgp-peering-address]
 *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
 *                                [--custom-routes]
 *                                [--gateway-default-site]
 *                                [--gateway-type {ExpressRoute, Vpn}]
 *                                [--location]
 *                                [--no-wait]
 *                                [--peer-weight]
 *                                [--radius-secret]
 *                                [--radius-server]
 *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
 *                                [--subscription]
 *                                [--tags]
 *                                [--vpn-gateway-generation {Generation1, Generation2}]
 *                                [--vpn-type {PolicyBased, RouteBased}]
 * ```
 *
 * @param {string} name Name of the VNet gateway.
 * @param {string} publicIpAddresses Specify a single public IP (name or ID) for an active-standby gateway. Specify two space-separated public IPs for an active-active gateway.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnet Name or ID of an existing virtual network which has a subnet named 'GatewaySubnet'.
 */
declare class az_network_vnet_gateway_create_command_builder extends CommandBuilder<az_network_vnet_gateway_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, publicIpAddresses: string, resourceGroup: string, vnet: string);
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_create_command_builder;
    /** Specify a single public IP (name or ID) for an active-standby gateway. Specify two space-separated public IPs for an active-active gateway. */
    publicIpAddresses(value: string): az_network_vnet_gateway_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_create_command_builder;
    /** Name or ID of an existing virtual network which has a subnet named 'GatewaySubnet'. */
    vnet(value: string): az_network_vnet_gateway_create_command_builder;
    /** Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient. */
    addressPrefixes(value: string): az_network_vnet_gateway_create_command_builder;
    /** Autonomous System Number to use for the BGP settings. */
    asn(value: string): az_network_vnet_gateway_create_command_builder;
    /** IP address to use for BGP peering. */
    bgpPeeringAddress(value: string): az_network_vnet_gateway_create_command_builder;
    /** Protocols to use for connecting. */
    clientProtocol(value: 'IkeV2' | 'OpenVPN' | 'SSTP'): az_network_vnet_gateway_create_command_builder;
    /** Space-separated list of CIDR prefixes representing the custom routes address space specified by the customer for VpnClient. */
    customRoutes(value: string): az_network_vnet_gateway_create_command_builder;
    /** Name or ID of a local network gateway representing a local network site with default routes. */
    gatewayDefaultSite(value: string): az_network_vnet_gateway_create_command_builder;
    /** The gateway type. */
    gatewayType(value: 'ExpressRoute' | 'Vpn'): az_network_vnet_gateway_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vnet_gateway_create_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_create_command_builder;
    /** Weight (0-100) added to routes learned through BGP peering. */
    peerWeight(value: string): az_network_vnet_gateway_create_command_builder;
    /** Radius secret to use for authentication. */
    radiusSecret(value: string): az_network_vnet_gateway_create_command_builder;
    /** Radius server address to connect to. */
    radiusServer(value: string): az_network_vnet_gateway_create_command_builder;
    /** VNet gateway SKU. */
    sku(value: 'Basic' | 'ErGw1AZ' | 'ErGw2AZ' | 'ErGw3AZ' | 'HighPerformance' | 'Standard' | 'UltraPerformance' | 'VpnGw1' | 'VpnGw1AZ' | 'VpnGw2' | 'VpnGw2AZ' | 'VpnGw3' | 'VpnGw3AZ' | 'VpnGw4' | 'VpnGw4AZ' | 'VpnGw5' | 'VpnGw5AZ'): az_network_vnet_gateway_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vnet_gateway_create_command_builder;
    /** The generation for the virtual network gateway. vpn_gateway_generation should not be provided if gateway_type is not Vpn. */
    vpnGatewayGeneration(value: 'Generation1' | 'Generation2'): az_network_vnet_gateway_create_command_builder;
    /** VPN routing type. */
    vpnType(value: 'PolicyBased' | 'RouteBased'): az_network_vnet_gateway_create_command_builder;
}
/**
 * Delete a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway delete [--ids]
 *                                [--name]
 *                                [--no-wait]
 *                                [--resource-group]
 *                                [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_delete_command_builder extends CommandBuilder<az_network_vnet_gateway_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_delete_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_delete_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_delete_command_builder;
}
/**
 * List virtual network gateways.
 *
 * Syntax:
 * ```
 * az network vnet-gateway list --resource-group
 *                              [--query-examples]
 *                              [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_gateway_list_command_builder extends CommandBuilder<az_network_vnet_gateway_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_gateway_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_list_command_builder;
}
/**
 * List the routes of a virtual network gateway advertised to the specified peer.
 *
 * Syntax:
 * ```
 * az network vnet-gateway list-advertised-routes --peer
 *                                                [--ids]
 *                                                [--name]
 *                                                [--resource-group]
 *                                                [--subscription]
 * ```
 *
 * @param {string} peer The IP address of the peer.
 */
declare class az_network_vnet_gateway_list_advertised_routes_command_builder extends CommandBuilder<az_network_vnet_gateway_list_advertised_routes_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, peer: string);
    /** The IP address of the peer. */
    peer(value: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_list_advertised_routes_command_builder;
}
/**
 * Retrieve the status of BGP peers.
 *
 * Syntax:
 * ```
 * az network vnet-gateway list-bgp-peer-status [--ids]
 *                                              [--name]
 *                                              [--peer]
 *                                              [--resource-group]
 *                                              [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_list_bgp_peer_status_command_builder extends CommandBuilder<az_network_vnet_gateway_list_bgp_peer_status_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
    /** The IP address of the peer to retrieve the status of. */
    peer(value: string): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_list_bgp_peer_status_command_builder;
}
/**
 * This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.
 *
 * Syntax:
 * ```
 * az network vnet-gateway list-learned-routes [--ids]
 *                                             [--name]
 *                                             [--resource-group]
 *                                             [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_list_learned_routes_command_builder extends CommandBuilder<az_network_vnet_gateway_list_learned_routes_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_list_learned_routes_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_list_learned_routes_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_list_learned_routes_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_list_learned_routes_command_builder;
}
/**
 * Reset a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway reset [--gateway-vip]
 *                               [--ids]
 *                               [--name]
 *                               [--resource-group]
 *                               [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_reset_command_builder extends CommandBuilder<az_network_vnet_gateway_reset_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway. */
    gatewayVip(value: string): az_network_vnet_gateway_reset_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_reset_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_reset_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_reset_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_reset_command_builder;
}
/**
 * Get the details of a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway show [--ids]
 *                              [--name]
 *                              [--query-examples]
 *                              [--resource-group]
 *                              [--subscription]
 * ```
 */
declare class az_network_vnet_gateway_show_command_builder extends CommandBuilder<az_network_vnet_gateway_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_show_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_gateway_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_show_command_builder;
}
/**
 * Update a virtual network gateway.
 *
 * Syntax:
 * ```
 * az network vnet-gateway update [--add]
 *                                [--address-prefixes]
 *                                [--asn]
 *                                [--bgp-peering-address]
 *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
 *                                [--custom-routes]
 *                                [--enable-bgp {false, true}]
 *                                [--force-string]
 *                                [--gateway-default-site]
 *                                [--gateway-type {ExpressRoute, Vpn}]
 *                                [--ids]
 *                                [--name]
 *                                [--no-wait]
 *                                [--peer-weight]
 *                                [--public-ip-addresses]
 *                                [--radius-secret]
 *                                [--radius-server]
 *                                [--remove]
 *                                [--resource-group]
 *                                [--set]
 *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
 *                                [--subscription]
 *                                [--tags]
 *                                [--vnet]
 *                                [--vpn-type {PolicyBased, RouteBased}]
 * ```
 */
declare class az_network_vnet_gateway_update_command_builder extends CommandBuilder<az_network_vnet_gateway_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vnet_gateway_update_command_builder;
    /** Space-separated list of CIDR prefixes representing the address space for the P2S Vpnclient. */
    addressPrefixes(value: string): az_network_vnet_gateway_update_command_builder;
    /** Autonomous System Number to use for the BGP settings. */
    asn(value: string): az_network_vnet_gateway_update_command_builder;
    /** IP address to use for BGP peering. */
    bgpPeeringAddress(value: string): az_network_vnet_gateway_update_command_builder;
    /** Protocols to use for connecting. */
    clientProtocol(value: 'IkeV2' | 'OpenVPN' | 'SSTP'): az_network_vnet_gateway_update_command_builder;
    /** Space-separated list of CIDR prefixes representing the custom routes address space specified by the customer for VpnClient. */
    customRoutes(value: string): az_network_vnet_gateway_update_command_builder;
    /** Enable BGP (Border Gateway Protocol). */
    enableBgp(value: boolean): az_network_vnet_gateway_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vnet_gateway_update_command_builder;
    /** Name or ID of a local network gateway representing a local network site with default routes. */
    gatewayDefaultSite(value: string): az_network_vnet_gateway_update_command_builder;
    /** The gateway type. */
    gatewayType(value: 'ExpressRoute' | 'Vpn'): az_network_vnet_gateway_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_update_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_update_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vnet_gateway_update_command_builder;
    /** Weight (0-100) added to routes learned through BGP peering. */
    peerWeight(value: string): az_network_vnet_gateway_update_command_builder;
    /** Specify a single public IP (name or ID) for an active-standby gateway. Specify two space-separated public IPs for an active-active gateway. */
    publicIpAddresses(value: string): az_network_vnet_gateway_update_command_builder;
    /** Radius secret to use for authentication. */
    radiusSecret(value: string): az_network_vnet_gateway_update_command_builder;
    /** Radius server address to connect to. */
    radiusServer(value: string): az_network_vnet_gateway_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vnet_gateway_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vnet_gateway_update_command_builder;
    /** VNet gateway SKU. */
    sku(value: 'Basic' | 'ErGw1AZ' | 'ErGw2AZ' | 'ErGw3AZ' | 'HighPerformance' | 'Standard' | 'UltraPerformance' | 'VpnGw1' | 'VpnGw1AZ' | 'VpnGw2' | 'VpnGw2AZ' | 'VpnGw3' | 'VpnGw3AZ' | 'VpnGw4' | 'VpnGw4AZ' | 'VpnGw5' | 'VpnGw5AZ'): az_network_vnet_gateway_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vnet_gateway_update_command_builder;
    /** Name or ID of a virtual network that contains a subnet named 'GatewaySubnet'. */
    vnet(value: string): az_network_vnet_gateway_update_command_builder;
    /** VPN routing type. */
    vpnType(value: 'PolicyBased' | 'RouteBased'): az_network_vnet_gateway_update_command_builder;
}
/**
 * Place the CLI in a waiting state until a condition of the virtual network gateway is met.
 *
 * Syntax:
 * ```
 * az network vnet-gateway wait [--created]
 *                              [--custom]
 *                              [--deleted]
 *                              [--exists]
 *                              [--ids]
 *                              [--interval]
 *                              [--name]
 *                              [--resource-group]
 *                              [--subscription]
 *                              [--timeout]
 *                              [--updated]
 * ```
 */
declare class az_network_vnet_gateway_wait_command_builder extends CommandBuilder<az_network_vnet_gateway_wait_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Wait until created with 'provisioningState' at 'Succeeded'. */
    created(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running']. */
    custom(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Wait until deleted. */
    deleted(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Wait until the resource exists. */
    exists(value: string): az_network_vnet_gateway_wait_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Polling interval in seconds. */
    interval(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Name of the VNet gateway. */
    name(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Maximum wait in seconds. */
    timeout(value: string): az_network_vnet_gateway_wait_command_builder;
    /** Wait until updated with provisioningState at 'Succeeded'. */
    updated(value: string): az_network_vnet_gateway_wait_command_builder;
}
/**
 * Check if a private IP address is available for use within a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet check-ip-address --ip-address
 *                                  [--ids]
 *                                  [--name]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 *
 * @param {string} ipAddress The private IP address to be verified.
 */
declare class az_network_vnet_check_ip_address_command_builder extends CommandBuilder<az_network_vnet_check_ip_address_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, ipAddress: string);
    /** The private IP address to be verified. */
    ipAddress(value: string): az_network_vnet_check_ip_address_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_check_ip_address_command_builder;
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_check_ip_address_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_check_ip_address_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_check_ip_address_command_builder;
}
/**
 * Create a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet create --name
 *                        --resource-group
 *                        [--address-prefixes]
 *                        [--ddos-protection {false, true}]
 *                        [--ddos-protection-plan]
 *                        [--defer]
 *                        [--dns-servers]
 *                        [--location]
 *                        [--network-security-group]
 *                        [--subnet-name]
 *                        [--subnet-prefixes]
 *                        [--subscription]
 *                        [--tags]
 *                        [--vm-protection {false, true}]
 * ```
 *
 * @param {string} name The virtual network (VNet) name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vnet_create_command_builder extends CommandBuilder<az_network_vnet_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_create_command_builder;
    /** Space-separated list of IP address prefixes for the VNet. */
    addressPrefixes(value: string): az_network_vnet_create_command_builder;
    /** Control whether DDoS protection is enabled. */
    ddosProtection(value: boolean): az_network_vnet_create_command_builder;
    /** Name or ID of a DDoS protection plan to associate with the VNet. */
    ddosProtectionPlan(value: string): az_network_vnet_create_command_builder;
    /** Temporarily store the object in the local cache instead of sending to Azure. Use `az cache` commands to view/clear. */
    defer(value: string): az_network_vnet_create_command_builder;
    /** Space-separated list of DNS server IP addresses. */
    dnsServers(value: string): az_network_vnet_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vnet_create_command_builder;
    /** Name or ID of a network security group (NSG). */
    networkSecurityGroup(value: string): az_network_vnet_create_command_builder;
    /** Name of a new subnet to create within the VNet. */
    subnetName(value: string): az_network_vnet_create_command_builder;
    /** Space-separated list of address prefixes in CIDR format for the new subnet. If omitted, automatically reserves a /24 (or as large as available) block within the VNet address space. */
    subnetPrefixes(value: string): az_network_vnet_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vnet_create_command_builder;
    /** Enable VM protection for all subnets in the VNet. */
    vmProtection(value: boolean): az_network_vnet_create_command_builder;
}
/**
 * Delete a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet delete [--ids]
 *                        [--name]
 *                        [--resource-group]
 *                        [--subscription]
 * ```
 */
declare class az_network_vnet_delete_command_builder extends CommandBuilder<az_network_vnet_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_delete_command_builder;
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_delete_command_builder;
}
/**
 * List virtual networks.
 *
 * Syntax:
 * ```
 * az network vnet list [--query-examples]
 *                      [--resource-group]
 *                      [--subscription]
 * ```
 */
declare class az_network_vnet_list_command_builder extends CommandBuilder<az_network_vnet_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_list_command_builder;
}
/**
 * List some available ips in the vnet.
 *
 * Syntax:
 * ```
 * az network vnet list-available-ips [--ids]
 *                                    [--name]
 *                                    [--resource-group]
 *                                    [--subscription]
 * ```
 */
declare class az_network_vnet_list_available_ips_command_builder extends CommandBuilder<az_network_vnet_list_available_ips_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_list_available_ips_command_builder;
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_list_available_ips_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_list_available_ips_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_list_available_ips_command_builder;
}
/**
 * List which services support VNET service tunneling in a given region.
 *
 * Syntax:
 * ```
 * az network vnet list-endpoint-services --location
 *                                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_vnet_list_endpoint_services_command_builder extends CommandBuilder<az_network_vnet_list_endpoint_services_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vnet_list_endpoint_services_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_list_endpoint_services_command_builder;
}
/**
 * Get the details of a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet show [--expand]
 *                      [--ids]
 *                      [--name]
 *                      [--query-examples]
 *                      [--resource-group]
 *                      [--subscription]
 * ```
 */
declare class az_network_vnet_show_command_builder extends CommandBuilder<az_network_vnet_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Expands referenced resources. */
    expand(value: string): az_network_vnet_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_show_command_builder;
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vnet_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_show_command_builder;
}
/**
 * Update a virtual network.
 *
 * Syntax:
 * ```
 * az network vnet update [--add]
 *                        [--address-prefixes]
 *                        [--ddos-protection {false, true}]
 *                        [--ddos-protection-plan]
 *                        [--defer]
 *                        [--dns-servers]
 *                        [--force-string]
 *                        [--ids]
 *                        [--name]
 *                        [--remove]
 *                        [--resource-group]
 *                        [--set]
 *                        [--subscription]
 *                        [--vm-protection {false, true}]
 * ```
 */
declare class az_network_vnet_update_command_builder extends CommandBuilder<az_network_vnet_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vnet_update_command_builder;
    /** Space-separated list of IP address prefixes for the VNet. */
    addressPrefixes(value: string): az_network_vnet_update_command_builder;
    /** Control whether DDoS protection is enabled. */
    ddosProtection(value: boolean): az_network_vnet_update_command_builder;
    /** Name or ID of a DDoS protection plan to associate with the VNet. */
    ddosProtectionPlan(value: string): az_network_vnet_update_command_builder;
    /** Temporarily store the object in the local cache instead of sending to Azure. Use `az cache` commands to view/clear. */
    defer(value: string): az_network_vnet_update_command_builder;
    /** Space-separated list of DNS server IP addresses. */
    dnsServers(value: string): az_network_vnet_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vnet_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vnet_update_command_builder;
    /** The virtual network (VNet) name. */
    name(value: string): az_network_vnet_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vnet_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vnet_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vnet_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vnet_update_command_builder;
    /** Enable VM protection for all subnets in the VNet. */
    vmProtection(value: boolean): az_network_vnet_update_command_builder;
}
/**
 * Add a VPN connection IPSec policy.
 *
 * Syntax:
 * ```
 * az network vpn-connection ipsec-policy add --connection-name
 *                                            --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
 *                                            --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
 *                                            --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
 *                                            --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
 *                                            --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
 *                                            --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
 *                                            --resource-group
 *                                            --sa-lifetime
 *                                            --sa-max-size
 *                                            [--no-wait]
 *                                            [--subscription]
 * ```
 *
 * @param {string} connectionName Connection name.
 * @param {'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'} dhGroup Required. The DH Group used in IKE Phase 1 for initial SA.
 * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'} ikeEncryption Required. The IKE encryption algorithm (IKE phase 2).
 * @param {'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'} ikeIntegrity Required. The IKE integrity algorithm (IKE phase 2).
 * @param {'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'} ipsecEncryption Required. The IPSec encryption algorithm (IKE phase 1).
 * @param {'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'} ipsecIntegrity Required. The IPSec integrity algorithm (IKE phase 1).
 * @param {'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'} pfsGroup Required. The Pfs Group used in IKE Phase 2 for new child SA.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} saLifetime Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
 * @param {string} saMaxSize Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
 */
declare class az_network_vpn_connection_ipsec_policy_add_command_builder extends CommandBuilder<az_network_vpn_connection_ipsec_policy_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionName: string, dhGroup: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None', ikeEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256', ikeIntegrity: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384', ipsecEncryption: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None', ipsecIntegrity: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256', pfsGroup: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM', resourceGroup: string, saLifetime: string, saMaxSize: string);
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The DH Group used in IKE Phase 1 for initial SA. */
    dhGroup(value: 'DHGroup1' | 'DHGroup14' | 'DHGroup2' | 'DHGroup2048' | 'DHGroup24' | 'ECP256' | 'ECP384' | 'None'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IKE encryption algorithm (IKE phase 2). */
    ikeEncryption(value: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES256'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IKE integrity algorithm (IKE phase 2). */
    ikeIntegrity(value: 'GCMAES128' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256' | 'SHA384'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IPSec encryption algorithm (IKE phase 1). */
    ipsecEncryption(value: 'AES128' | 'AES192' | 'AES256' | 'DES' | 'DES3' | 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'None'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IPSec integrity algorithm (IKE phase 1). */
    ipsecIntegrity(value: 'GCMAES128' | 'GCMAES192' | 'GCMAES256' | 'MD5' | 'SHA1' | 'SHA256'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The Pfs Group used in IKE Phase 2 for new child SA. */
    pfsGroup(value: 'ECP256' | 'ECP384' | 'None' | 'PFS1' | 'PFS14' | 'PFS2' | 'PFS2048' | 'PFS24' | 'PFSMM'): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel. */
    saLifetime(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Required. The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel. */
    saMaxSize(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_ipsec_policy_add_command_builder;
}
/**
 * Delete all IPsec policies on a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection ipsec-policy clear --connection-name
 *                                              --resource-group
 *                                              [--no-wait]
 *                                              [--subscription]
 * ```
 *
 * @param {string} connectionName Connection name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vpn_connection_ipsec_policy_clear_command_builder extends CommandBuilder<az_network_vpn_connection_ipsec_policy_clear_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionName: string, resourceGroup: string);
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_ipsec_policy_clear_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_ipsec_policy_clear_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_vpn_connection_ipsec_policy_clear_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_ipsec_policy_clear_command_builder;
}
/**
 * List IPSec policies associated with a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection ipsec-policy list --connection-name
 *                                             --resource-group
 *                                             [--query-examples]
 *                                             [--subscription]
 * ```
 *
 * @param {string} connectionName Connection name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vpn_connection_ipsec_policy_list_command_builder extends CommandBuilder<az_network_vpn_connection_ipsec_policy_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionName: string, resourceGroup: string);
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_ipsec_policy_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_ipsec_policy_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vpn_connection_ipsec_policy_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_ipsec_policy_list_command_builder;
}
/**
 * Reset a VPN connection shared key.
 *
 * Syntax:
 * ```
 * az network vpn-connection shared-key reset --key-length
 *                                            [--connection-name]
 *                                            [--ids]
 *                                            [--resource-group]
 *                                            [--subscription]
 * ```
 *
 * @param {string} keyLength The virtual network connection reset shared key length, should between 1 and 128.
 */
declare class az_network_vpn_connection_shared_key_reset_command_builder extends CommandBuilder<az_network_vpn_connection_shared_key_reset_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, keyLength: string);
    /** The virtual network connection reset shared key length, should between 1 and 128. */
    keyLength(value: string): az_network_vpn_connection_shared_key_reset_command_builder;
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_shared_key_reset_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_shared_key_reset_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_shared_key_reset_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_shared_key_reset_command_builder;
}
/**
 * Retrieve a VPN connection shared key.
 *
 * Syntax:
 * ```
 * az network vpn-connection shared-key show [--connection-name]
 *                                           [--ids]
 *                                           [--query-examples]
 *                                           [--resource-group]
 *                                           [--subscription]
 * ```
 */
declare class az_network_vpn_connection_shared_key_show_command_builder extends CommandBuilder<az_network_vpn_connection_shared_key_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_shared_key_show_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_shared_key_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vpn_connection_shared_key_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_shared_key_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_shared_key_show_command_builder;
}
/**
 * Update a VPN connection shared key.
 *
 * Syntax:
 * ```
 * az network vpn-connection shared-key update --value
 *                                             [--add]
 *                                             [--connection-name]
 *                                             [--force-string]
 *                                             [--id]
 *                                             [--ids]
 *                                             [--remove]
 *                                             [--resource-group]
 *                                             [--set]
 *                                             [--subscription]
 * ```
 *
 * @param {string} value The virtual network connection shared key value.
 */
declare class az_network_vpn_connection_shared_key_update_command_builder extends CommandBuilder<az_network_vpn_connection_shared_key_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, value: string);
    /** The virtual network connection shared key value. */
    value(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Connection name. */
    connectionName(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Resource ID. */
    id(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vpn_connection_shared_key_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_shared_key_update_command_builder;
}
/**
 * Create a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection create --name
 *                                  --resource-group
 *                                  --vnet-gateway1
 *                                  [--authorization-key]
 *                                  [--enable-bgp]
 *                                  [--express-route-circuit2]
 *                                  [--express-route-gateway-bypass {false, true}]
 *                                  [--local-gateway2]
 *                                  [--location]
 *                                  [--routing-weight]
 *                                  [--shared-key]
 *                                  [--subscription]
 *                                  [--tags]
 *                                  [--use-policy-based-traffic-selectors {false, true}]
 *                                  [--validate]
 *                                  [--vnet-gateway2]
 * ```
 *
 * @param {string} name Connection name.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vnetGateway1 Name or ID of the source virtual network gateway.
 */
declare class az_network_vpn_connection_create_command_builder extends CommandBuilder<az_network_vpn_connection_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, vnetGateway1: string);
    /** Connection name. */
    name(value: string): az_network_vpn_connection_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_create_command_builder;
    /** Name or ID of the source virtual network gateway. */
    vnetGateway1(value: string): az_network_vpn_connection_create_command_builder;
    /** The authorization key for the VPN connection. */
    authorizationKey(value: string): az_network_vpn_connection_create_command_builder;
    /** Enable BGP for this VPN connection. */
    enableBgp(value: string): az_network_vpn_connection_create_command_builder;
    /** Name or ID of the destination ExpressRoute to connect to using an 'ExpressRoute' connection. */
    expressRouteCircuit2(value: string): az_network_vpn_connection_create_command_builder;
    /** Bypass ExpressRoute gateway for data forwarding. */
    expressRouteGatewayBypass(value: boolean): az_network_vpn_connection_create_command_builder;
    /** Name or ID of the destination local network gateway to connect to using an 'IPSec' connection. */
    localGateway2(value: string): az_network_vpn_connection_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vpn_connection_create_command_builder;
    /** Connection routing weight. */
    routingWeight(value: string): az_network_vpn_connection_create_command_builder;
    /** Shared IPSec key. */
    sharedKey(value: string): az_network_vpn_connection_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vpn_connection_create_command_builder;
    /** Enable policy-based traffic selectors. */
    usePolicyBasedTrafficSelectors(value: boolean): az_network_vpn_connection_create_command_builder;
    /** Display and validate the ARM template but do not create any resources. */
    validate(value: string): az_network_vpn_connection_create_command_builder;
    /** Name or ID of the destination virtual network gateway to connect to using a 'Vnet2Vnet' connection. */
    vnetGateway2(value: string): az_network_vpn_connection_create_command_builder;
}
/**
 * Delete a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection delete [--ids]
 *                                  [--name]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_vpn_connection_delete_command_builder extends CommandBuilder<az_network_vpn_connection_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_delete_command_builder;
    /** Connection name. */
    name(value: string): az_network_vpn_connection_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_delete_command_builder;
}
/**
 * List all VPN connections in a resource group.
 *
 * Syntax:
 * ```
 * az network vpn-connection list --resource-group
 *                                [--query-examples]
 *                                [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vpn_connection_list_command_builder extends CommandBuilder<az_network_vpn_connection_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vpn_connection_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_list_command_builder;
}
/**
 * Get the details of a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection show [--ids]
 *                                [--name]
 *                                [--query-examples]
 *                                [--resource-group]
 *                                [--subscription]
 * ```
 */
declare class az_network_vpn_connection_show_command_builder extends CommandBuilder<az_network_vpn_connection_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_show_command_builder;
    /** Connection name. */
    name(value: string): az_network_vpn_connection_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vpn_connection_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_show_command_builder;
}
/**
 * Update a VPN connection.
 *
 * Syntax:
 * ```
 * az network vpn-connection update [--add]
 *                                  [--enable-bgp {false, true}]
 *                                  [--express-route-gateway-bypass {false, true}]
 *                                  [--force-string]
 *                                  [--ids]
 *                                  [--name]
 *                                  [--remove]
 *                                  [--resource-group]
 *                                  [--routing-weight]
 *                                  [--set]
 *                                  [--shared-key]
 *                                  [--subscription]
 *                                  [--tags]
 *                                  [--use-policy-based-traffic-selectors {false, true}]
 * ```
 */
declare class az_network_vpn_connection_update_command_builder extends CommandBuilder<az_network_vpn_connection_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vpn_connection_update_command_builder;
    /** Enable BGP (Border Gateway Protocol). */
    enableBgp(value: boolean): az_network_vpn_connection_update_command_builder;
    /** Bypass ExpressRoute gateway for data forwarding. */
    expressRouteGatewayBypass(value: boolean): az_network_vpn_connection_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vpn_connection_update_command_builder;
    /** One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments. */
    ids(value: string): az_network_vpn_connection_update_command_builder;
    /** Connection name. */
    name(value: string): az_network_vpn_connection_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vpn_connection_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vpn_connection_update_command_builder;
    /** Connection routing weight. */
    routingWeight(value: string): az_network_vpn_connection_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vpn_connection_update_command_builder;
    /** Shared IPSec key. */
    sharedKey(value: string): az_network_vpn_connection_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vpn_connection_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vpn_connection_update_command_builder;
    /** Enable policy-based traffic selectors. */
    usePolicyBasedTrafficSelectors(value: boolean): az_network_vpn_connection_update_command_builder;
}
/**
 * Create a virtual router peering.
 *
 * Syntax:
 * ```
 * az network vrouter peering create --name
 *                                   --peer-asn
 *                                   --peer-ip
 *                                   --resource-group
 *                                   --vrouter-name
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router Peering.
 * @param {string} peerAsn Peer ASN. Its range is from 1 to 4294967295.
 * @param {string} peerIp Peer IP address.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vrouterName The name of the Virtual Router.
 */
declare class az_network_vrouter_peering_create_command_builder extends CommandBuilder<az_network_vrouter_peering_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, peerAsn: string, peerIp: string, resourceGroup: string, vrouterName: string);
    /** The name of the Virtual Router Peering. */
    name(value: string): az_network_vrouter_peering_create_command_builder;
    /** Peer ASN. Its range is from 1 to 4294967295. */
    peerAsn(value: string): az_network_vrouter_peering_create_command_builder;
    /** Peer IP address. */
    peerIp(value: string): az_network_vrouter_peering_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_peering_create_command_builder;
    /** The name of the Virtual Router. */
    vrouterName(value: string): az_network_vrouter_peering_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_peering_create_command_builder;
}
/**
 * Delete a virtual router peering.
 *
 * Syntax:
 * ```
 * az network vrouter peering delete --name
 *                                   --resource-group
 *                                   --vrouter-name
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router Peering.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vrouterName The name of the Virtual Router.
 */
declare class az_network_vrouter_peering_delete_command_builder extends CommandBuilder<az_network_vrouter_peering_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, vrouterName: string);
    /** The name of the Virtual Router Peering. */
    name(value: string): az_network_vrouter_peering_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_peering_delete_command_builder;
    /** The name of the Virtual Router. */
    vrouterName(value: string): az_network_vrouter_peering_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_peering_delete_command_builder;
}
/**
 * List all virtual router peerings under a resource group.
 *
 * Syntax:
 * ```
 * az network vrouter peering list --resource-group
 *                                 --vrouter-name
 *                                 [--query-examples]
 *                                 [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vrouterName The name of the Virtual Router.
 */
declare class az_network_vrouter_peering_list_command_builder extends CommandBuilder<az_network_vrouter_peering_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, vrouterName: string);
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_peering_list_command_builder;
    /** The name of the Virtual Router. */
    vrouterName(value: string): az_network_vrouter_peering_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vrouter_peering_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_peering_list_command_builder;
}
/**
 * Show a virtual router peering.
 *
 * Syntax:
 * ```
 * az network vrouter peering show --name
 *                                 --resource-group
 *                                 --vrouter-name
 *                                 [--query-examples]
 *                                 [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router Peering.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vrouterName The name of the Virtual Router.
 */
declare class az_network_vrouter_peering_show_command_builder extends CommandBuilder<az_network_vrouter_peering_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, vrouterName: string);
    /** The name of the Virtual Router Peering. */
    name(value: string): az_network_vrouter_peering_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_peering_show_command_builder;
    /** The name of the Virtual Router. */
    vrouterName(value: string): az_network_vrouter_peering_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vrouter_peering_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_peering_show_command_builder;
}
/**
 * Update a virtual router peering.
 *
 * Syntax:
 * ```
 * az network vrouter peering update --name
 *                                   --resource-group
 *                                   --vrouter-name
 *                                   [--add]
 *                                   [--force-string]
 *                                   [--peer-asn]
 *                                   [--peer-ip]
 *                                   [--remove]
 *                                   [--set]
 *                                   [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router Peering.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 * @param {string} vrouterName The name of the Virtual Router.
 */
declare class az_network_vrouter_peering_update_command_builder extends CommandBuilder<az_network_vrouter_peering_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, vrouterName: string);
    /** The name of the Virtual Router Peering. */
    name(value: string): az_network_vrouter_peering_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_peering_update_command_builder;
    /** The name of the Virtual Router. */
    vrouterName(value: string): az_network_vrouter_peering_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vrouter_peering_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vrouter_peering_update_command_builder;
    /** Peer ASN. Its range is from 1 to 4294967295. */
    peerAsn(value: string): az_network_vrouter_peering_update_command_builder;
    /** Peer IP address. */
    peerIp(value: string): az_network_vrouter_peering_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vrouter_peering_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vrouter_peering_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_peering_update_command_builder;
}
/**
 * Create a virtual router.
 *
 * Syntax:
 * ```
 * az network vrouter create --name
 *                           --resource-group
 *                           [--hosted-gateway]
 *                           [--hosted-subnet]
 *                           [--location]
 *                           [--subscription]
 *                           [--tags]
 * ```
 *
 * @param {string} name The name of the Virtual Router.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vrouter_create_command_builder extends CommandBuilder<az_network_vrouter_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Virtual Router. */
    name(value: string): az_network_vrouter_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_create_command_builder;
    /** Name or ID of the virtual network gateway with ExpressRouter on which VirtualRouter is hosted. */
    hostedGateway(value: string): az_network_vrouter_create_command_builder;
    /** The ID of a subnet where VirtualRouter would be deployed. */
    hostedSubnet(value: string): az_network_vrouter_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_vrouter_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vrouter_create_command_builder;
}
/**
 * Delete a virtual router under a resource group.
 *
 * Syntax:
 * ```
 * az network vrouter delete --name
 *                           --resource-group
 *                           [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vrouter_delete_command_builder extends CommandBuilder<az_network_vrouter_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Virtual Router. */
    name(value: string): az_network_vrouter_delete_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_delete_command_builder;
}
/**
 * List all virtual routers under a subscription or a resource group.
 *
 * Syntax:
 * ```
 * az network vrouter list [--query-examples]
 *                         [--resource-group]
 *                         [--subscription]
 * ```
 */
declare class az_network_vrouter_list_command_builder extends CommandBuilder<az_network_vrouter_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vrouter_list_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_list_command_builder;
}
/**
 * Show a virtual router.
 *
 * Syntax:
 * ```
 * az network vrouter show --name
 *                         --resource-group
 *                         [--query-examples]
 *                         [--subscription]
 * ```
 *
 * @param {string} name The name of the Virtual Router.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vrouter_show_command_builder extends CommandBuilder<az_network_vrouter_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Virtual Router. */
    name(value: string): az_network_vrouter_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_vrouter_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_show_command_builder;
}
/**
 * Update a virtual router.
 *
 * Syntax:
 * ```
 * az network vrouter update --name
 *                           --resource-group
 *                           [--add]
 *                           [--force-string]
 *                           [--remove]
 *                           [--set]
 *                           [--subscription]
 *                           [--tags]
 * ```
 *
 * @param {string} name The name of the Virtual Router.
 * @param {string} resourceGroup Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
 */
declare class az_network_vrouter_update_command_builder extends CommandBuilder<az_network_vrouter_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string);
    /** The name of the Virtual Router. */
    name(value: string): az_network_vrouter_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_vrouter_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_vrouter_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_vrouter_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_vrouter_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_vrouter_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_vrouter_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_vrouter_update_command_builder;
}
/**
 * Add an endpoint to a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor endpoint add --connection-monitor
 *                                                    --location
 *                                                    --name
 *                                                    [--address]
 *                                                    [--address-exclude]
 *                                                    [--address-include]
 *                                                    [--coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
 *                                                    [--dest-test-groups]
 *                                                    [--filter-item]
 *                                                    [--filter-type {Include}]
 *                                                    [--resource-id]
 *                                                    [--source-test-groups]
 *                                                    [--subscription]
 *                                                    [--type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor endpoint.
 */
declare class az_network_watcher_connection_monitor_endpoint_add_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_endpoint_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** The name of the connection monitor endpoint. */
    name(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Address of the connection monitor endpoint (IP or domain name). */
    address(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** List of address of the endpoint item which needs to be included to the endpoint scope. */
    addressExclude(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** List of address of the endpoint item which needs to be included to the endpoint scope. */
    addressInclude(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Test coverage for the endpoint. */
    coverageLevel(value: 'AboveAverage' | 'Average' | 'BelowAverage' | 'Default' | 'Full' | 'Low'): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Space-separated list of names for test group to reference as destination. */
    destTestGroups(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** List of property=value pairs to define filter items. Property currently include: type, address. Property value of type supports 'AgentAddress' only now. */
    filterItem(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** The behavior of the endpoint filter. Currently only 'Include' is supported. */
    filterType(value: 'Include'): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Resource ID of the connection monitor endpoint. */
    resourceId(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Space-separated list of names for test group to reference as source. */
    sourceTestGroups(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_endpoint_add_command_builder;
    /** The endpoint type. */
    type(value: 'AzureSubnet' | 'AzureVM' | 'AzureVNet' | 'ExternalAddress' | 'MMAWorkspaceMachine' | 'MMAWorkspaceNetwork'): az_network_watcher_connection_monitor_endpoint_add_command_builder;
}
/**
 * List all endpoints form a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor endpoint list --connection-monitor
 *                                                     --location
 *                                                     [--query-examples]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_endpoint_list_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_endpoint_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_endpoint_list_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_endpoint_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_endpoint_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_endpoint_list_command_builder;
}
/**
 * Remove an endpoint from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor endpoint remove --connection-monitor
 *                                                       --location
 *                                                       --name
 *                                                       [--subscription]
 *                                                       [--test-groups]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor endpoint.
 */
declare class az_network_watcher_connection_monitor_endpoint_remove_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_endpoint_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
    /** The name of the connection monitor endpoint. */
    name(value: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
    /** Space-separated list of names of test group which only need to be affected if specified. */
    testGroups(value: string): az_network_watcher_connection_monitor_endpoint_remove_command_builder;
}
/**
 * Show an endpoint from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor endpoint show --connection-monitor
 *                                                     --location
 *                                                     --name
 *                                                     [--query-examples]
 *                                                     [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor endpoint.
 */
declare class az_network_watcher_connection_monitor_endpoint_show_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_endpoint_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
    /** The name of the connection monitor endpoint. */
    name(value: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_endpoint_show_command_builder;
}
/**
 * Add an output to a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor output add --connection-monitor
 *                                                  --location
 *                                                  --type {Workspace}
 *                                                  [--subscription]
 *                                                  [--workspace-id]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {'Workspace'} type Connection monitor output destination type. Currently, only "Workspace" is supported.
 */
declare class az_network_watcher_connection_monitor_output_add_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_output_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, type: 'Workspace');
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_output_add_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_output_add_command_builder;
    /** Connection monitor output destination type. Currently, only "Workspace" is supported. */
    type(value: 'Workspace'): az_network_watcher_connection_monitor_output_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_output_add_command_builder;
    /** The id of log analytics workspace. */
    workspaceId(value: string): az_network_watcher_connection_monitor_output_add_command_builder;
}
/**
 * List all output from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor output list --connection-monitor
 *                                                   --location
 *                                                   [--query-examples]
 *                                                   [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_output_list_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_output_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_output_list_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_output_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_output_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_output_list_command_builder;
}
/**
 * Remove all outputs from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor output remove --connection-monitor
 *                                                     --location
 *                                                     [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_output_remove_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_output_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_output_remove_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_output_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_output_remove_command_builder;
}
/**
 * Add a test configuration to a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-configuration add --connection-monitor
 *                                                              --location
 *                                                              --name
 *                                                              --protocol {Http, Icmp, Tcp}
 *                                                              --test-groups
 *                                                              [--frequency]
 *                                                              [--http-method {Get, Post}]
 *                                                              [--http-path]
 *                                                              [--http-port]
 *                                                              [--http-prefer-https {false, true}]
 *                                                              [--http-request-header]
 *                                                              [--http-valid-status-codes]
 *                                                              [--icmp-disable-trace-route {false, true}]
 *                                                              [--preferred-ip-version {IPv4, IPv6}]
 *                                                              [--subscription]
 *                                                              [--tcp-disable-trace-route {false, true}]
 *                                                              [--tcp-port]
 *                                                              [--tcp-port-behavior {ListenIfAvailable, None}]
 *                                                              [--threshold-failed-percent]
 *                                                              [--threshold-round-trip-time]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test configuration.
 * @param {'Http' | 'Icmp' | 'Tcp'} protocol The protocol to use in test evaluation.
 * @param {string} testGroups Space-separated list of names of test group which only need to be affected if specified.
 */
declare class az_network_watcher_connection_monitor_test_configuration_add_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_configuration_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string, protocol: 'Http' | 'Icmp' | 'Tcp', testGroups: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The name of the connection monitor test configuration. */
    name(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The protocol to use in test evaluation. */
    protocol(value: 'Http' | 'Icmp' | 'Tcp'): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Space-separated list of names of test group which only need to be affected if specified. */
    testGroups(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The frequency of test evaluation, in seconds. */
    frequency(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The HTTP method to use. */
    httpMethod(value: 'Get' | 'Post'): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The path component of the URI. For instance, "/dir1/dir2". */
    httpPath(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The port to connect to. */
    httpPort(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit. */
    httpPreferHttps(value: boolean): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The HTTP headers to transmit with the request. List of property=value pairs to define HTTP headers. */
    httpRequestHeader(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Space-separated list of HTTP status codes to consider successful. For instance, "2xx 301-304 418". */
    httpValidStatusCodes(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    icmpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters. */
    preferredIpVersion(value: 'IPv4' | 'IPv6'): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    tcpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The port to connect to. */
    tcpPort(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** Destination port behavior. */
    tcpPortBehavior(value: 'ListenIfAvailable' | 'None'): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The maximum percentage of failed checks permitted for a test to evaluate as successful. */
    thresholdFailedPercent(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
    /** The maximum round-trip time in milliseconds permitted for a test to evaluate as successful. */
    thresholdRoundTripTime(value: string): az_network_watcher_connection_monitor_test_configuration_add_command_builder;
}
/**
 * List all test configurations of a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-configuration list --connection-monitor
 *                                                               --location
 *                                                               [--query-examples]
 *                                                               [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_test_configuration_list_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_configuration_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_configuration_list_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_configuration_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_test_configuration_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_configuration_list_command_builder;
}
/**
 * Remove a test configuration from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-configuration remove --connection-monitor
 *                                                                 --location
 *                                                                 --name
 *                                                                 [--subscription]
 *                                                                 [--test-groups]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test configuration.
 */
declare class az_network_watcher_connection_monitor_test_configuration_remove_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_configuration_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
    /** The name of the connection monitor test configuration. */
    name(value: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
    /** Space-separated list of names of test group which only need to be affected if specified. */
    testGroups(value: string): az_network_watcher_connection_monitor_test_configuration_remove_command_builder;
}
/**
 * Show a test configuration from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-configuration show --connection-monitor
 *                                                               --location
 *                                                               --name
 *                                                               [--query-examples]
 *                                                               [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test configuration.
 */
declare class az_network_watcher_connection_monitor_test_configuration_show_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_configuration_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
    /** The name of the connection monitor test configuration. */
    name(value: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_configuration_show_command_builder;
}
/**
 * Add a test group along with new-added/existing endpoint and test configuration to a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-group add --connection-monitor
 *                                                      --endpoint-dest-name
 *                                                      --endpoint-source-name
 *                                                      --location
 *                                                      --name
 *                                                      --test-config-name
 *                                                      [--disable {false, true}]
 *                                                      [--endpoint-dest-address]
 *                                                      [--endpoint-dest-resource-id]
 *                                                      [--endpoint-source-address]
 *                                                      [--endpoint-source-resource-id]
 *                                                      [--frequency]
 *                                                      [--http-method {Get, Post}]
 *                                                      [--http-path]
 *                                                      [--http-port]
 *                                                      [--http-valid-status-codes]
 *                                                      [--https-prefer {false, true}]
 *                                                      [--icmp-disable-trace-route {false, true}]
 *                                                      [--preferred-ip-version {IPv4, IPv6}]
 *                                                      [--protocol {Http, Icmp, Tcp}]
 *                                                      [--subscription]
 *                                                      [--tcp-disable-trace-route {false, true}]
 *                                                      [--tcp-port]
 *                                                      [--threshold-failed-percent]
 *                                                      [--threshold-round-trip-time]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} endpointDestName The name of the destination of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required.
 * @param {string} endpointSourceName The name of the source of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test group.
 * @param {string} testConfigName The name of the connection monitor test configuration. If you are creating a V2 Connection Monitor, it's required.
 */
declare class az_network_watcher_connection_monitor_test_group_add_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_group_add_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, endpointDestName: string, endpointSourceName: string, location: string, name: string, testConfigName: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The name of the destination of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required. */
    endpointDestName(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The name of the source of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required. */
    endpointSourceName(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The name of the connection monitor test group. */
    name(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The name of the connection monitor test configuration. If you are creating a V2 Connection Monitor, it's required. */
    testConfigName(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Value indicating whether test group is disabled. false is default. */
    disable(value: boolean): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Address of the destination of connection monitor endpoint (IP or domain name). */
    endpointDestAddress(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Resource ID of the destination of connection monitor endpoint. */
    endpointDestResourceId(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Address of the source of connection monitor endpoint (IP or domain name). */
    endpointSourceAddress(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Resource ID of the source of connection monitor endpoint. If endpoint is intended to used as source, this option is required. */
    endpointSourceResourceId(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The frequency of test evaluation, in seconds. */
    frequency(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The HTTP method to use. */
    httpMethod(value: 'Get' | 'Post'): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The path component of the URI. For instance, "/dir1/dir2". */
    httpPath(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The port to connect to. */
    httpPort(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Space-separated list of HTTP status codes to consider successful. For instance, "2xx 301-304 418". */
    httpValidStatusCodes(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit. */
    httpsPrefer(value: boolean): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    icmpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters. */
    preferredIpVersion(value: 'IPv4' | 'IPv6'): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The protocol to use in test evaluation. */
    protocol(value: 'Http' | 'Icmp' | 'Tcp'): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    tcpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The port to connect to. */
    tcpPort(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The maximum percentage of failed checks permitted for a test to evaluate as successful. */
    thresholdFailedPercent(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
    /** The maximum round-trip time in milliseconds permitted for a test to evaluate as successful. */
    thresholdRoundTripTime(value: string): az_network_watcher_connection_monitor_test_group_add_command_builder;
}
/**
 * List all test groups of a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-group list --connection-monitor
 *                                                       --location
 *                                                       [--query-examples]
 *                                                       [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_test_group_list_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_group_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_group_list_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_group_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_test_group_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_group_list_command_builder;
}
/**
 * Remove test group from a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-group remove --connection-monitor
 *                                                         --location
 *                                                         --name
 *                                                         [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test group.
 */
declare class az_network_watcher_connection_monitor_test_group_remove_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_group_remove_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_group_remove_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_group_remove_command_builder;
    /** The name of the connection monitor test group. */
    name(value: string): az_network_watcher_connection_monitor_test_group_remove_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_group_remove_command_builder;
}
/**
 * Show a test group of a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor test-group show --connection-monitor
 *                                                       --location
 *                                                       --name
 *                                                       [--query-examples]
 *                                                       [--subscription]
 * ```
 *
 * @param {string} connectionMonitor Connection monitor name.
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the connection monitor test group.
 */
declare class az_network_watcher_connection_monitor_test_group_show_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_test_group_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, connectionMonitor: string, location: string, name: string);
    /** Connection monitor name. */
    connectionMonitor(value: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
    /** The name of the connection monitor test group. */
    name(value: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_test_group_show_command_builder;
}
/**
 * Create a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor create --name
 *                                              [--dest-address]
 *                                              [--dest-port]
 *                                              [--dest-resource]
 *                                              [--do-not-start]
 *                                              [--endpoint-dest-address]
 *                                              [--endpoint-dest-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
 *                                              [--endpoint-dest-name]
 *                                              [--endpoint-dest-resource-id]
 *                                              [--endpoint-dest-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
 *                                              [--endpoint-source-address]
 *                                              [--endpoint-source-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
 *                                              [--endpoint-source-name]
 *                                              [--endpoint-source-resource-id]
 *                                              [--endpoint-source-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
 *                                              [--frequency]
 *                                              [--http-method {Get, Post}]
 *                                              [--http-path]
 *                                              [--http-port]
 *                                              [--http-valid-status-codes]
 *                                              [--https-prefer {false, true}]
 *                                              [--icmp-disable-trace-route {false, true}]
 *                                              [--location]
 *                                              [--monitoring-interval]
 *                                              [--notes]
 *                                              [--output-type {Workspace}]
 *                                              [--preferred-ip-version {IPv4, IPv6}]
 *                                              [--protocol {Http, Icmp, Tcp}]
 *                                              [--resource-group]
 *                                              [--source-port]
 *                                              [--source-resource]
 *                                              [--subscription]
 *                                              [--tags]
 *                                              [--tcp-disable-trace-route {false, true}]
 *                                              [--tcp-port]
 *                                              [--tcp-port-behavior {ListenIfAvailable, None}]
 *                                              [--test-config-name]
 *                                              [--test-group-disable {false, true}]
 *                                              [--test-group-name]
 *                                              [--threshold-failed-percent]
 *                                              [--threshold-round-trip-time]
 *                                              [--workspace-ids]
 * ```
 *
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_create_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string);
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The IP address or URI at which to receive traffic. */
    destAddress(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Port number on which to receive traffic. */
    destPort(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Currently only Virtual Machines are supported. */
    destResource(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Create the connection monitor but do not start it immediately. */
    doNotStart(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Address of the destination of connection monitor endpoint (IP or domain name). */
    endpointDestAddress(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Test coverage for the endpoint. */
    endpointDestCoverageLevel(value: 'AboveAverage' | 'Average' | 'BelowAverage' | 'Default' | 'Full' | 'Low'): az_network_watcher_connection_monitor_create_command_builder;
    /** The name of the destination of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required. */
    endpointDestName(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Resource ID of the destination of connection monitor endpoint. */
    endpointDestResourceId(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The endpoint type. */
    endpointDestType(value: 'AzureSubnet' | 'AzureVM' | 'AzureVNet' | 'ExternalAddress' | 'MMAWorkspaceMachine' | 'MMAWorkspaceNetwork'): az_network_watcher_connection_monitor_create_command_builder;
    /** Address of the source of connection monitor endpoint (IP or domain name). */
    endpointSourceAddress(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Test coverage for the endpoint. */
    endpointSourceCoverageLevel(value: 'AboveAverage' | 'Average' | 'BelowAverage' | 'Default' | 'Full' | 'Low'): az_network_watcher_connection_monitor_create_command_builder;
    /** The name of the source of connection monitor endpoint. If you are creating a V2 Connection Monitor, it's required. */
    endpointSourceName(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Resource ID of the source of connection monitor endpoint. If endpoint is intended to used as source, this option is required. */
    endpointSourceResourceId(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The endpoint type. */
    endpointSourceType(value: 'AzureSubnet' | 'AzureVM' | 'AzureVNet' | 'ExternalAddress' | 'MMAWorkspaceMachine' | 'MMAWorkspaceNetwork'): az_network_watcher_connection_monitor_create_command_builder;
    /** The frequency of test evaluation, in seconds. */
    frequency(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The HTTP method to use. */
    httpMethod(value: 'Get' | 'Post'): az_network_watcher_connection_monitor_create_command_builder;
    /** The path component of the URI. For instance, "/dir1/dir2". */
    httpPath(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The port to connect to. */
    httpPort(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Space-separated list of HTTP status codes to consider successful. For instance, "2xx 301-304 418". */
    httpValidStatusCodes(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit. */
    httpsPrefer(value: boolean): az_network_watcher_connection_monitor_create_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    icmpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_create_command_builder;
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Monitoring interval in seconds. */
    monitoringInterval(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Optional notes to be associated with the connection monitor. */
    notes(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Connection monitor output destination type. Currently, only "Workspace" is supported. */
    outputType(value: 'Workspace'): az_network_watcher_connection_monitor_create_command_builder;
    /** The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters. */
    preferredIpVersion(value: 'IPv4' | 'IPv6'): az_network_watcher_connection_monitor_create_command_builder;
    /** The protocol to use in test evaluation. */
    protocol(value: 'Http' | 'Icmp' | 'Tcp'): az_network_watcher_connection_monitor_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Port number from which to originate traffic. */
    sourcePort(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Currently only Virtual Machines are supported. */
    sourceResource(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Value indicating whether path evaluation with trace route should be disabled. false is default. */
    tcpDisableTraceRoute(value: boolean): az_network_watcher_connection_monitor_create_command_builder;
    /** The port to connect to. */
    tcpPort(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Destination port behavior. */
    tcpPortBehavior(value: 'ListenIfAvailable' | 'None'): az_network_watcher_connection_monitor_create_command_builder;
    /** The name of the connection monitor test configuration. If you are creating a V2 Connection Monitor, it's required. */
    testConfigName(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Value indicating whether test group is disabled. false is default. */
    testGroupDisable(value: boolean): az_network_watcher_connection_monitor_create_command_builder;
    /** The name of the connection monitor test group. */
    testGroupName(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The maximum percentage of failed checks permitted for a test to evaluate as successful. */
    thresholdFailedPercent(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** The maximum round-trip time in milliseconds permitted for a test to evaluate as successful. */
    thresholdRoundTripTime(value: string): az_network_watcher_connection_monitor_create_command_builder;
    /** Space-separated list of ids of log analytics workspace. */
    workspaceIds(value: string): az_network_watcher_connection_monitor_create_command_builder;
}
/**
 * Delete a connection monitor for the given region.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor delete --location
 *                                              --name
 *                                              [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_delete_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_delete_command_builder;
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_delete_command_builder;
}
/**
 * List connection monitors for the given region.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor list --location
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_connection_monitor_list_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_list_command_builder;
}
/**
 * Query a snapshot of the most recent connection state of a connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor query --location
 *                                             --name
 *                                             [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_query_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_query_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_query_command_builder;
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_query_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_query_command_builder;
}
/**
 * Shows a connection monitor by name.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor show --location
 *                                            --name
 *                                            [--query-examples]
 *                                            [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_show_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_show_command_builder;
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_connection_monitor_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_show_command_builder;
}
/**
 * Start the specified connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor start --location
 *                                             --name
 *                                             [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_start_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_start_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_start_command_builder;
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_start_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_start_command_builder;
}
/**
 * Stop the specified connection monitor.
 *
 * Syntax:
 * ```
 * az network watcher connection-monitor stop --location
 *                                            --name
 *                                            [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name Connection monitor name.
 */
declare class az_network_watcher_connection_monitor_stop_command_builder extends CommandBuilder<az_network_watcher_connection_monitor_stop_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_connection_monitor_stop_command_builder;
    /** Connection monitor name. */
    name(value: string): az_network_watcher_connection_monitor_stop_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_connection_monitor_stop_command_builder;
}
/**
 * Configure flow logging on a network security group.
 *
 * Syntax:
 * ```
 * az network watcher flow-log configure --nsg
 *                                       [--enabled {false, true}]
 *                                       [--format {JSON}]
 *                                       [--interval]
 *                                       [--log-version]
 *                                       [--resource-group]
 *                                       [--retention]
 *                                       [--storage-account]
 *                                       [--subscription]
 *                                       [--traffic-analytics {false, true}]
 *                                       [--workspace]
 * ```
 *
 * @param {string} nsg Name or ID of the Network Security Group to target.
 */
declare class az_network_watcher_flow_log_configure_command_builder extends CommandBuilder<az_network_watcher_flow_log_configure_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, nsg: string);
    /** Name or ID of the Network Security Group to target. */
    nsg(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Enable logging. */
    enabled(value: boolean): az_network_watcher_flow_log_configure_command_builder;
    /** File type of the flow log. */
    format(value: 'JSON'): az_network_watcher_flow_log_configure_command_builder;
    /** Interval in minutes at which to conduct flow analytics. Temporarily allowed values are 10 and 60. */
    interval(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Version (revision) of the flow log. */
    logVersion(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Number of days to retain logs. */
    retention(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Name or ID of the storage account in which to save the flow logs. */
    storageAccount(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_configure_command_builder;
    /** Enable traffic analytics. Defaults to true if `--workspace` is provided. */
    trafficAnalytics(value: boolean): az_network_watcher_flow_log_configure_command_builder;
    /** Name or ID of a Log Analytics workspace. Must be in the same region of flow log. */
    workspace(value: string): az_network_watcher_flow_log_configure_command_builder;
}
/**
 * Create a flow log on a network security group.
 *
 * Syntax:
 * ```
 * az network watcher flow-log create --location
 *                                    --name
 *                                    --nsg
 *                                    [--enabled {false, true}]
 *                                    [--format {JSON}]
 *                                    [--interval]
 *                                    [--log-version]
 *                                    [--resource-group]
 *                                    [--retention]
 *                                    [--storage-account]
 *                                    [--subscription]
 *                                    [--tags]
 *                                    [--traffic-analytics {false, true}]
 *                                    [--workspace]
 * ```
 *
 * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
 * @param {string} name The name of the flow logger.
 * @param {string} nsg Name or ID of the network security group.
 */
declare class az_network_watcher_flow_log_create_command_builder extends CommandBuilder<az_network_watcher_flow_log_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string, nsg: string);
    /** Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region. */
    location(value: string): az_network_watcher_flow_log_create_command_builder;
    /** The name of the flow logger. */
    name(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Name or ID of the network security group. */
    nsg(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Enable logging. */
    enabled(value: boolean): az_network_watcher_flow_log_create_command_builder;
    /** File type of the flow log. */
    format(value: 'JSON'): az_network_watcher_flow_log_create_command_builder;
    /** Interval in minutes at which to conduct flow analytics. Temporarily allowed values are 10 and 60. */
    interval(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Version (revision) of the flow log. */
    logVersion(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Number of days to retain logs. */
    retention(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Name or ID of the storage account in which to save the flow logs. Must be in the same region of flow log. */
    storageAccount(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_watcher_flow_log_create_command_builder;
    /** Enable traffic analytics. Defaults to true if `--workspace` is provided. */
    trafficAnalytics(value: boolean): az_network_watcher_flow_log_create_command_builder;
    /** Name or ID of a Log Analytics workspace. Must be in the same region of flow log. */
    workspace(value: string): az_network_watcher_flow_log_create_command_builder;
}
/**
 * Delete the specified flow log resource.
 *
 * Syntax:
 * ```
 * az network watcher flow-log delete --location
 *                                    --name
 *                                    [--subscription]
 * ```
 *
 * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
 * @param {string} name The name of the flow logger.
 */
declare class az_network_watcher_flow_log_delete_command_builder extends CommandBuilder<az_network_watcher_flow_log_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region. */
    location(value: string): az_network_watcher_flow_log_delete_command_builder;
    /** The name of the flow logger. */
    name(value: string): az_network_watcher_flow_log_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_delete_command_builder;
}
/**
 * List all flow log resources for the specified Network Watcher.
 *
 * Syntax:
 * ```
 * az network watcher flow-log list --location
 *                                  [--query-examples]
 *                                  [--subscription]
 * ```
 *
 * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
 */
declare class az_network_watcher_flow_log_list_command_builder extends CommandBuilder<az_network_watcher_flow_log_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region. */
    location(value: string): az_network_watcher_flow_log_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_flow_log_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_list_command_builder;
}
/**
 * Get the flow log configuration of a network security group.
 *
 * Syntax:
 * ```
 * az network watcher flow-log show [--location]
 *                                  [--name]
 *                                  [--nsg]
 *                                  [--query-examples]
 *                                  [--resource-group]
 *                                  [--subscription]
 * ```
 */
declare class az_network_watcher_flow_log_show_command_builder extends CommandBuilder<az_network_watcher_flow_log_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region. */
    location(value: string): az_network_watcher_flow_log_show_command_builder;
    /** The name of the flow logger. */
    name(value: string): az_network_watcher_flow_log_show_command_builder;
    /** Name or ID of the network security group. */
    nsg(value: string): az_network_watcher_flow_log_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_flow_log_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_flow_log_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_show_command_builder;
}
/**
 * Update the flow log configuration of a network security group.
 *
 * Syntax:
 * ```
 * az network watcher flow-log update --location
 *                                    --name
 *                                    [--add]
 *                                    [--enabled {false, true}]
 *                                    [--force-string]
 *                                    [--format {JSON}]
 *                                    [--interval]
 *                                    [--log-version]
 *                                    [--nsg]
 *                                    [--remove]
 *                                    [--resource-group]
 *                                    [--retention]
 *                                    [--set]
 *                                    [--storage-account]
 *                                    [--subscription]
 *                                    [--tags]
 *                                    [--traffic-analytics {false, true}]
 *                                    [--workspace]
 * ```
 *
 * @param {string} location Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region.
 * @param {string} name The name of the flow logger.
 */
declare class az_network_watcher_flow_log_update_command_builder extends CommandBuilder<az_network_watcher_flow_log_update_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location to identify the exclusive Network Watcher under a region. Only one Network Watcher can be existed per subscription and region. */
    location(value: string): az_network_watcher_flow_log_update_command_builder;
    /** The name of the flow logger. */
    name(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>. */
    add(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Enable logging. */
    enabled(value: boolean): az_network_watcher_flow_log_update_command_builder;
    /** When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON. */
    forceString(value: string): az_network_watcher_flow_log_update_command_builder;
    /** File type of the flow log. */
    format(value: 'JSON'): az_network_watcher_flow_log_update_command_builder;
    /** Interval in minutes at which to conduct flow analytics. Temporarily allowed values are 10 and 60. */
    interval(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Version (revision) of the flow log. */
    logVersion(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Name or ID of the network security group. */
    nsg(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove. */
    remove(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Number of days to retain logs. */
    retention(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>. */
    set(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Name or ID of the storage account in which to save the flow logs. Must be in the same region of flow log. */
    storageAccount(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_watcher_flow_log_update_command_builder;
    /** Enable traffic analytics. Defaults to true if `--workspace` is provided. */
    trafficAnalytics(value: boolean): az_network_watcher_flow_log_update_command_builder;
    /** Name or ID of a Log Analytics workspace. Must be in the same region of flow log. */
    workspace(value: string): az_network_watcher_flow_log_update_command_builder;
}
/**
 * Create and start a packet capture session.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture create --name
 *                                          --resource-group
 *                                          --vm
 *                                          [--capture-limit]
 *                                          [--capture-size]
 *                                          [--file-path]
 *                                          [--filters]
 *                                          [--storage-account]
 *                                          [--storage-path]
 *                                          [--subscription]
 *                                          [--time-limit]
 * ```
 *
 * @param {string} name Name of the packet capture session.
 * @param {string} resourceGroup Name of the resource group the target VM is in.
 * @param {string} vm Name or ID of the VM to target.
 */
declare class az_network_watcher_packet_capture_create_command_builder extends CommandBuilder<az_network_watcher_packet_capture_create_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, name: string, resourceGroup: string, vm: string);
    /** Name of the packet capture session. */
    name(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Name of the resource group the target VM is in. */
    resourceGroup(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Name or ID of the VM to target. */
    vm(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** The maximum size in bytes of the capture output. */
    captureLimit(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Number of bytes captured per packet. Excess bytes are truncated. */
    captureSize(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Local path on the targeted VM at which to save the packet capture. For Linux VMs, the path must start with /var/captures. */
    filePath(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** JSON encoded list of packet filters. Use `@{path}` to load from file. */
    filters(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Name or ID of a storage account to save the packet capture to. */
    storageAccount(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Fully qualified URI of an existing storage container in which to store the capture file. */
    storagePath(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_create_command_builder;
    /** Maximum duration of the capture session in seconds. */
    timeLimit(value: string): az_network_watcher_packet_capture_create_command_builder;
}
/**
 * Delete a packet capture session.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture delete --location
 *                                          --name
 *                                          [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the packet capture session.
 */
declare class az_network_watcher_packet_capture_delete_command_builder extends CommandBuilder<az_network_watcher_packet_capture_delete_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_packet_capture_delete_command_builder;
    /** The name of the packet capture session. */
    name(value: string): az_network_watcher_packet_capture_delete_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_delete_command_builder;
}
/**
 * List all packet capture sessions within a resource group.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture list --location
 *                                        [--query-examples]
 *                                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_watcher_packet_capture_list_command_builder extends CommandBuilder<az_network_watcher_packet_capture_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_packet_capture_list_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_packet_capture_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_list_command_builder;
}
/**
 * Show details of a packet capture session.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture show --location
 *                                        --name
 *                                        [--query-examples]
 *                                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the packet capture session.
 */
declare class az_network_watcher_packet_capture_show_command_builder extends CommandBuilder<az_network_watcher_packet_capture_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_packet_capture_show_command_builder;
    /** The name of the packet capture session. */
    name(value: string): az_network_watcher_packet_capture_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_packet_capture_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_show_command_builder;
}
/**
 * Show the status of a packet capture session.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture show-status --location
 *                                               --name
 *                                               [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name given to the packet capture session.
 */
declare class az_network_watcher_packet_capture_show_status_command_builder extends CommandBuilder<az_network_watcher_packet_capture_show_status_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_packet_capture_show_status_command_builder;
    /** The name given to the packet capture session. */
    name(value: string): az_network_watcher_packet_capture_show_status_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_show_status_command_builder;
}
/**
 * Stop a running packet capture session.
 *
 * Syntax:
 * ```
 * az network watcher packet-capture stop --location
 *                                        --name
 *                                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 * @param {string} name The name of the packet capture session.
 */
declare class az_network_watcher_packet_capture_stop_command_builder extends CommandBuilder<az_network_watcher_packet_capture_stop_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string, name: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_watcher_packet_capture_stop_command_builder;
    /** The name of the packet capture session. */
    name(value: string): az_network_watcher_packet_capture_stop_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_packet_capture_stop_command_builder;
}
/**
 * Get the results of the last troubleshooting operation.
 *
 * Syntax:
 * ```
 * az network watcher troubleshooting show --resource
 *                                         [--query-examples]
 *                                         [--resource-group]
 *                                         [--resource-type {vnetGateway, vpnConnection}]
 *                                         [--subscription]
 * ```
 *
 * @param {string} resource Name or ID of the resource to troubleshoot.
 */
declare class az_network_watcher_troubleshooting_show_command_builder extends CommandBuilder<az_network_watcher_troubleshooting_show_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resource: string);
    /** Name or ID of the resource to troubleshoot. */
    resource(value: string): az_network_watcher_troubleshooting_show_command_builder;
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_troubleshooting_show_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_troubleshooting_show_command_builder;
    /** The resource type. */
    resourceType(value: 'vnetGateway' | 'vpnConnection'): az_network_watcher_troubleshooting_show_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_troubleshooting_show_command_builder;
}
/**
 * Troubleshoot issues with VPN connections or gateway connectivity.
 *
 * Syntax:
 * ```
 * az network watcher troubleshooting start --resource
 *                                          --storage-account
 *                                          --storage-path
 *                                          [--no-wait]
 *                                          [--resource-group]
 *                                          [--resource-type {vnetGateway, vpnConnection}]
 *                                          [--subscription]
 * ```
 *
 * @param {string} resource Name or ID of the resource to troubleshoot.
 * @param {string} storageAccount Name or ID of the storage account in which to store the troubleshooting results.
 * @param {string} storagePath Fully qualified URI to the storage blob container in which to store the troubleshooting results.
 */
declare class az_network_watcher_troubleshooting_start_command_builder extends CommandBuilder<az_network_watcher_troubleshooting_start_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resource: string, storageAccount: string, storagePath: string);
    /** Name or ID of the resource to troubleshoot. */
    resource(value: string): az_network_watcher_troubleshooting_start_command_builder;
    /** Name or ID of the storage account in which to store the troubleshooting results. */
    storageAccount(value: string): az_network_watcher_troubleshooting_start_command_builder;
    /** Fully qualified URI to the storage blob container in which to store the troubleshooting results. */
    storagePath(value: string): az_network_watcher_troubleshooting_start_command_builder;
    /** Do not wait for the long-running operation to finish. */
    noWait(value: string): az_network_watcher_troubleshooting_start_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_troubleshooting_start_command_builder;
    /** The type of target resource to troubleshoot, if resource ID is not specified. */
    resourceType(value: 'vnetGateway' | 'vpnConnection'): az_network_watcher_troubleshooting_start_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_troubleshooting_start_command_builder;
}
/**
 * Configure the Network Watcher service for different regions.
 *
 * Syntax:
 * ```
 * az network watcher configure --locations
 *                              [--enabled {false, true}]
 *                              [--resource-group]
 *                              [--subscription]
 *                              [--tags]
 * ```
 *
 * @param {string} locations Space-separated list of locations to configure.
 */
declare class az_network_watcher_configure_command_builder extends CommandBuilder<az_network_watcher_configure_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, locations: string);
    /** Space-separated list of locations to configure. */
    locations(value: string): az_network_watcher_configure_command_builder;
    /** Enabled status of Network Watcher in the specified regions. */
    enabled(value: boolean): az_network_watcher_configure_command_builder;
    /** Name of resource group. Required when enabling new regions. */
    resourceGroup(value: string): az_network_watcher_configure_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_configure_command_builder;
    /** Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags. */
    tags(value: string): az_network_watcher_configure_command_builder;
}
/**
 * List Network Watchers.
 *
 * Syntax:
 * ```
 * az network watcher list [--query-examples]
 *                         [--subscription]
 * ```
 */
declare class az_network_watcher_list_command_builder extends CommandBuilder<az_network_watcher_list_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Recommend JMESPath string for you. You can copy one of the query and paste it after --query parameter within double quotation marks to see the results. You can add one or more positional keywords so that we can give suggestions based on these key words. */
    queryExamples(value: string): az_network_watcher_list_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_list_command_builder;
}
/**
 * Run a configuration diagnostic on a target resource.
 *
 * Syntax:
 * ```
 * az network watcher run-configuration-diagnostic --resource
 *                                                 [--destination]
 *                                                 [--direction {Inbound, Outbound}]
 *                                                 [--parent]
 *                                                 [--port]
 *                                                 [--protocol {Http, Https, Icmp, Tcp}]
 *                                                 [--queries]
 *                                                 [--resource-group]
 *                                                 [--resource-type {applicationGateways, networkInterfaces, virtualMachines}]
 *                                                 [--source]
 *                                                 [--subscription]
 * ```
 *
 * @param {string} resource Name or ID of the target resource to diagnose. If an ID is given, other resource arguments should not be given.
 */
declare class az_network_watcher_run_configuration_diagnostic_command_builder extends CommandBuilder<az_network_watcher_run_configuration_diagnostic_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resource: string);
    /** Name or ID of the target resource to diagnose. If an ID is given, other resource arguments should not be given. */
    resource(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Traffic destination. Accepted values are '\*', IP address/CIDR, or service tag. */
    destination(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Direction of the traffic. */
    direction(value: 'Inbound' | 'Outbound'): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** The parent path. (ex: virtualMachineScaleSets/vmss1). */
    parent(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Traffic destination port. Accepted values are '\*', port number (3389) or port range (80-100). */
    port(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Protocol to be verified on. */
    protocol(value: 'Http' | 'Https' | 'Icmp' | 'Tcp'): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** JSON list of queries to use. Use `@{path}` to load from a file. */
    queries(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** The resource type. */
    resourceType(value: 'applicationGateways' | 'networkInterfaces' | 'virtualMachines'): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Traffic source. Accepted values are '\*', IP address/CIDR, or service tag. */
    source(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_run_configuration_diagnostic_command_builder;
}
/**
 * Get information on the 'next hop' of a VM.
 *
 * Syntax:
 * ```
 * az network watcher show-next-hop --dest-ip
 *                                  --resource-group
 *                                  --source-ip
 *                                  --vm
 *                                  [--nic]
 *                                  [--subscription]
 * ```
 *
 * @param {string} destIp Destination IPv4 address.
 * @param {string} resourceGroup Name of the resource group the target VM is in.
 * @param {string} sourceIp Source IPv4 address.
 * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
 */
declare class az_network_watcher_show_next_hop_command_builder extends CommandBuilder<az_network_watcher_show_next_hop_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, destIp: string, resourceGroup: string, sourceIp: string, vm: string);
    /** Destination IPv4 address. */
    destIp(value: string): az_network_watcher_show_next_hop_command_builder;
    /** Name of the resource group the target VM is in. */
    resourceGroup(value: string): az_network_watcher_show_next_hop_command_builder;
    /** Source IPv4 address. */
    sourceIp(value: string): az_network_watcher_show_next_hop_command_builder;
    /** Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required. */
    vm(value: string): az_network_watcher_show_next_hop_command_builder;
    /** Name or ID of the NIC resource to test. If the VM has multiple NICs and IP forwarding is enabled on any of them, this parameter is required. */
    nic(value: string): az_network_watcher_show_next_hop_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_show_next_hop_command_builder;
}
/**
 * Get detailed security information on a VM for the currently configured network security group.
 *
 * Syntax:
 * ```
 * az network watcher show-security-group-view --resource-group
 *                                             --vm
 *                                             [--subscription]
 * ```
 *
 * @param {string} resourceGroup Name of the resource group the target VM is in.
 * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
 */
declare class az_network_watcher_show_security_group_view_command_builder extends CommandBuilder<az_network_watcher_show_security_group_view_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, resourceGroup: string, vm: string);
    /** Name of the resource group the target VM is in. */
    resourceGroup(value: string): az_network_watcher_show_security_group_view_command_builder;
    /** Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required. */
    vm(value: string): az_network_watcher_show_security_group_view_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_show_security_group_view_command_builder;
}
/**
 * Get the network topology of a resource group, virtual network or subnet.
 *
 * Syntax:
 * ```
 * az network watcher show-topology [--location]
 *                                  [--resource-group]
 *                                  [--subnet]
 *                                  [--subscription]
 *                                  [--vnet]
 * ```
 */
declare class az_network_watcher_show_topology_command_builder extends CommandBuilder<az_network_watcher_show_topology_command_result> {
    constructor(commandPath: string, resultDataTypeName: string);
    /** Location. Defaults to the location of the target resource group. */
    location(value: string): az_network_watcher_show_topology_command_builder;
    /** The name of the target resource group to perform topology on. */
    resourceGroup(value: string): az_network_watcher_show_topology_command_builder;
    /** Name or ID of the subnet to target. If name is used, --vnet NAME must also be supplied. */
    subnet(value: string): az_network_watcher_show_topology_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_show_topology_command_builder;
    /** Name or ID of the virtual network to target. */
    vnet(value: string): az_network_watcher_show_topology_command_builder;
}
/**
 * Test if a connection can be established between a Virtual Machine and a given endpoint.
 *
 * Syntax:
 * ```
 * az network watcher test-connectivity --source-resource
 *                                      [--dest-address]
 *                                      [--dest-port]
 *                                      [--dest-resource]
 *                                      [--headers]
 *                                      [--method {Get}]
 *                                      [--protocol {Http, Https, Icmp, Tcp}]
 *                                      [--resource-group]
 *                                      [--source-port]
 *                                      [--subscription]
 *                                      [--valid-status-codes]
 * ```
 *
 * @param {string} sourceResource Name or ID of the resource from which to originate traffic.
 */
declare class az_network_watcher_test_connectivity_command_builder extends CommandBuilder<az_network_watcher_test_connectivity_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, sourceResource: string);
    /** Name or ID of the resource from which to originate traffic. */
    sourceResource(value: string): az_network_watcher_test_connectivity_command_builder;
    /** The IP address or URI at which to receive traffic. */
    destAddress(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Port number on which to receive traffic. */
    destPort(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Name or ID of the resource to receive traffic. */
    destResource(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Space-separated list of headers in `KEY=VALUE` format. */
    headers(value: string): az_network_watcher_test_connectivity_command_builder;
    /** HTTP method to use. */
    method(value: 'Get'): az_network_watcher_test_connectivity_command_builder;
    /** Protocol to test on. */
    protocol(value: 'Http' | 'Https' | 'Icmp' | 'Tcp'): az_network_watcher_test_connectivity_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Port number from which to originate traffic. */
    sourcePort(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_test_connectivity_command_builder;
    /** Space-separated list of HTTP status codes considered valid. */
    validStatusCodes(value: string): az_network_watcher_test_connectivity_command_builder;
}
/**
 * Test IP flow to/from a VM given the currently configured network security group rules.
 *
 * Syntax:
 * ```
 * az network watcher test-ip-flow --direction {Inbound, Outbound}
 *                                 --local
 *                                 --protocol {Http, Https, Icmp, Tcp}
 *                                 --remote
 *                                 --vm
 *                                 [--nic]
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 *
 * @param {'Inbound' | 'Outbound'} direction Direction of the packet relative to the VM.
 * @param {string} local The private IPv4 address for the VMs NIC and the port of the packet in X.X.X.X:PORT format. `\*` can be used for port when direction is outbound.
 * @param {'Http' | 'Https' | 'Icmp' | 'Tcp'} protocol Protocol to test.
 * @param {string} remote The IPv4 address and port for the remote side of the packet X.X.X.X:PORT format. `\*` can be used for port when the direction is inbound.
 * @param {string} vm Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required.
 */
declare class az_network_watcher_test_ip_flow_command_builder extends CommandBuilder<az_network_watcher_test_ip_flow_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, direction: 'Inbound' | 'Outbound', local: string, protocol: 'Http' | 'Https' | 'Icmp' | 'Tcp', remote: string, vm: string);
    /** Direction of the packet relative to the VM. */
    direction(value: 'Inbound' | 'Outbound'): az_network_watcher_test_ip_flow_command_builder;
    /** The private IPv4 address for the VMs NIC and the port of the packet in X.X.X.X:PORT format. `\*` can be used for port when direction is outbound. */
    local(value: string): az_network_watcher_test_ip_flow_command_builder;
    /** Protocol to test. */
    protocol(value: 'Http' | 'Https' | 'Icmp' | 'Tcp'): az_network_watcher_test_ip_flow_command_builder;
    /** The IPv4 address and port for the remote side of the packet X.X.X.X:PORT format. `\*` can be used for port when the direction is inbound. */
    remote(value: string): az_network_watcher_test_ip_flow_command_builder;
    /** Name or ID of the VM to target. If the name of the VM is provided, the --resource-group is required. */
    vm(value: string): az_network_watcher_test_ip_flow_command_builder;
    /** Name or ID of the NIC resource to test. If the VM has multiple NICs and IP forwarding is enabled on any of them, this parameter is required. */
    nic(value: string): az_network_watcher_test_ip_flow_command_builder;
    /** Name of the resource group the target VM is in. */
    resourceGroup(value: string): az_network_watcher_test_ip_flow_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_watcher_test_ip_flow_command_builder;
}
/**
 * List available service aliases in the region which can be used for Service Endpoint Policies.
 *
 * Syntax:
 * ```
 * az network list-service-aliases --location
 *                                 [--resource-group]
 *                                 [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_list_service_aliases_command_builder extends CommandBuilder<az_network_list_service_aliases_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_list_service_aliases_command_builder;
    /** Name of resource group. You can configure the default group using `az configure --defaults group=<name>`. */
    resourceGroup(value: string): az_network_list_service_aliases_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_list_service_aliases_command_builder;
}
/**
 * List all service tags which are below to different resources.
 *
 * Syntax:
 * ```
 * az network list-service-tags --location
 *                              [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_list_service_tags_command_builder extends CommandBuilder<az_network_list_service_tags_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_list_service_tags_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_list_service_tags_command_builder;
}
/**
 * List the number of network resources in a region that are used against a subscription quota.
 *
 * Syntax:
 * ```
 * az network list-usages --location
 *                        [--subscription]
 * ```
 *
 * @param {string} location Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
 */
declare class az_network_list_usages_command_builder extends CommandBuilder<az_network_list_usages_command_result> {
    constructor(commandPath: string, resultDataTypeName: string, location: string);
    /** Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`. */
    location(value: string): az_network_list_usages_command_builder;
    /** Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`. */
    subscription(value: string): az_network_list_usages_command_builder;
}
export {};
