/** Manage Azure subscription level locks. */
class az_account_lock {
    /**
     * Create a subscription lock.
     *
     * Syntax: 
     *
     * az account lock create --lock-type {CanNotDelete, ReadOnly}
     *                        --name
     *                        [--notes]
     */
    az_account_lock_create(): void {
    }

    /**
     * Delete a subscription lock.
     *
     * Syntax: 
     *
     * az account lock delete [--ids]
     *                        [--name]
     */
    az_account_lock_delete(): void {
    }

    /**
     * List lock information in the subscription.
     *
     * Syntax: 
     *
     * az account lock list [--filter-string]
     *                      [--query-examples]
     */
    az_account_lock_list(): void {
    }

    /**
     * Show the details of a subscription lock.
     *
     * Syntax: 
     *
     * az account lock show [--ids]
     *                      [--name]
     *                      [--query-examples]
     */
    az_account_lock_show(): void {
    }

    /**
     * Update a subscription lock.
     *
     * Syntax: 
     *
     * az account lock update [--ids]
     *                        [--lock-type {CanNotDelete, ReadOnly}]
     *                        [--name]
     *                        [--notes]
     */
    az_account_lock_update(): void {
    }
}

/** Subscription operations for Management Groups. */
class az_account_management_group_subscription {
    /**
     * Add a subscription to a management group.
     *
     * Syntax: 
     *
     * az account management-group subscription add --name
     *                                              --subscription
     */
    az_account_management_group_subscription_add(): void {
    }

    /**
     * Remove an existing subscription from a management group.
     *
     * Syntax: 
     *
     * az account management-group subscription remove --name
     *                                                 --subscription
     */
    az_account_management_group_subscription_remove(): void {
    }
}

/** Manage Azure Management Groups. */
class az_account_management_group {
    /**
     * Create a new management group.
     *
     * Syntax: 
     *
     * az account management-group create --name
     *                                    [--display-name]
     *                                    [--parent]
     */
    az_account_management_group_create(): void {
    }

    /**
     * Delete an existing management group.
     *
     * Syntax: 
     *
     * az account management-group delete --name
     */
    az_account_management_group_delete(): void {
    }

    /**
     * List all management groups.
     *
     * Syntax: 
     *
     * az account management-group list [--query-examples]
     */
    az_account_management_group_list(): void {
    }

    /**
     * Get a specific management group.
     *
     * Syntax: 
     *
     * az account management-group show --name
     *                                  [--expand]
     *                                  [--query-examples]
     *                                  [--recurse]
     */
    az_account_management_group_show(): void {
    }

    /**
     * Update an existing management group.
     *
     * Syntax: 
     *
     * az account management-group update --name
     *                                    [--add]
     *                                    [--display-name]
     *                                    [--force-string]
     *                                    [--parent]
     *                                    [--remove]
     *                                    [--set]
     */
    az_account_management_group_update(): void {
    }
}

/** Manage Azure subscription information. */
class az_account {
    /**
     * Clear all subscriptions from the CLI's local cache.
     *
     * Syntax: 
     *
     * az account clear
     */
    az_account_clear(): void {
    }

    /**
     * Get a token for utilities to access Azure.
     *
     * Syntax: 
     *
     * az account get-access-token [--resource]
     *                             [--resource-type {aad-graph, arm, batch, data-lake, media, ms-graph, oss-rdbms}]
     *                             [--subscription]
     *                             [--tenant]
     */
    az_account_get_access_token(): void {
    }

    /**
     * Get a list of subscriptions for the logged in account.
     *
     * Syntax: 
     *
     * az account list [--all]
     *                 [--query-examples]
     *                 [--refresh]
     */
    az_account_list(): void {
    }

    /**
     * List supported regions for the current subscription.
     *
     * Syntax: 
     *
     * az account list-locations
     */
    az_account_list_locations(): void {
    }

    /**
     * Set a subscription to be the current active subscription.
     *
     * Syntax: 
     *
     * az account set --subscription
     */
    az_account_set(): void {
    }

    /**
     * Get the details of a subscription.
     *
     * Syntax: 
     *
     * az account show [--query-examples]
     *                 [--sdk-auth]
     *                 [--subscription]
     */
    az_account_show(): void {
    }
}

/** Manage private Tasks agent pools with Azure Container Registries. */
class az_acr_agentpool {
    /**
     * Create an agent pool for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr agentpool create --name
     *                         --registry
     *                         [--count]
     *                         [--no-wait]
     *                         [--os]
     *                         [--resource-group]
     *                         [--subnet-id]
     *                         [--subscription]
     *                         [--tier]
     */
    az_acr_agentpool_create(): void {
    }

    /**
     * Delete an agent pool.
     *
     * Syntax: 
     *
     * az acr agentpool delete --name
     *                         --registry
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--yes]
     */
    az_acr_agentpool_delete(): void {
    }

    /**
     * List the agent pools for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr agentpool list --registry
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_agentpool_list(): void {
    }

    /**
     * Get the properties of a specified agent pool for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr agentpool show --name
     *                       --registry
     *                       [--query-examples]
     *                       [--queue-count]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_agentpool_show(): void {
    }

    /**
     * Update an agent pool for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr agentpool update --name
     *                         --registry
     *                         [--count]
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_agentpool_update(): void {
    }
}

/** Manage content-trust policy for Azure Container Registries. */
class az_acr_config_content_trust {
    /**
     * Show the configured content-trust policy for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr config content-trust show --registry
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_acr_config_content_trust_show(): void {
    }

    /**
     * Update content-trust policy for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr config content-trust update --registry
     *                                    [--resource-group]
     *                                    [--status {disabled, enabled}]
     *                                    [--subscription]
     */
    az_acr_config_content_trust_update(): void {
    }
}

/** Manage retention policy for Azure Container Registries. */
class az_acr_config_retention {
    /**
     * Show the configured retention policy for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr config retention show --registry
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_acr_config_retention_show(): void {
    }

    /**
     * Update retention policy for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr config retention update --registry
     *                                --type {UntaggedManifests}
     *                                [--days]
     *                                [--resource-group]
     *                                [--status {disabled, enabled}]
     *                                [--subscription]
     */
    az_acr_config_retention_update(): void {
    }
}

/** Configure policies for Azure Container Registries. */
class az_acr_config {
}

/** Manage login credentials for Azure Container Registries. */
class az_acr_credential {
    /**
     * Regenerate login credentials for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr credential renew --name
     *                         --password-name {password, password2}
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_credential_renew(): void {
    }

    /**
     * Get the login credentials for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr credential show --name
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_credential_show(): void {
    }
}

/** Manage container registry encryption. */
class az_acr_encryption {
    /**
     * Rotate (update) the container registry's encryption key.
     *
     * Syntax: 
     *
     * az acr encryption rotate-key --name
     *                              [--identity]
     *                              [--key-encryption-key]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_acr_encryption_rotate_key(): void {
    }

    /**
     * Show the container registry's encryption details.
     *
     * Syntax: 
     *
     * az acr encryption show --name
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_encryption_show(): void {
    }
}

/** Manage helm chart repositories for Azure Container Registries. */
class az_acr_helm_repo {
    /**
     * Add a helm chart repository from an Azure Container Registry through the Helm CLI.
     *
     * Syntax: 
     *
     * az acr helm repo add --name
     *                      [--password]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--suffix]
     *                      [--username]
     */
    az_acr_helm_repo_add(): void {
    }
}

/** Manage helm charts for Azure Container Registries. */
class az_acr_helm {
    /**
     * Delete a helm chart version in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr helm delete --name
     *                    [--password]
     *                    [--prov]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--suffix]
     *                    [--username]
     *                    [--version]
     *                    [--yes]
     *                    [<CHART>]
     */
    az_acr_helm_delete(): void {
    }

    /**
     * Download and install Helm command-line tool.
     *
     * Syntax: 
     *
     * az acr helm install-cli [--client-version]
     *                         [--install-location]
     *                         [--subscription]
     *                         [--yes]
     */
    az_acr_helm_install_cli(): void {
    }

    /**
     * List all helm charts in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr helm list --name
     *                  [--password]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--suffix]
     *                  [--username]
     */
    az_acr_helm_list(): void {
    }

    /**
     * Push a helm chart package to an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr helm push --name
     *                  [--force]
     *                  [--password]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--suffix]
     *                  [--username]
     *                  [<CHART_PACKAGE>]
     */
    az_acr_helm_push(): void {
    }

    /**
     * Describe a helm chart in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr helm show --name
     *                  [--password]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--suffix]
     *                  [--username]
     *                  [--version]
     *                  [<CHART>]
     */
    az_acr_helm_show(): void {
    }
}

/** Manage service (managed) identities for a container registry. */
class az_acr_identity {
    /**
     * Assign a managed identity to a container registry.
     *
     * Syntax: 
     *
     * az acr identity assign --identities
     *                        --name
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_identity_assign(): void {
    }

    /**
     * Remove a managed identity from a container registry.
     *
     * Syntax: 
     *
     * az acr identity remove --identities
     *                        --name
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_identity_remove(): void {
    }

    /**
     * Show the container registry's identity details.
     *
     * Syntax: 
     *
     * az acr identity show --name
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_acr_identity_show(): void {
    }
}

/** Manage network rules for Azure Container Registries. */
class az_acr_network_rule {
    /**
     * Add a network rule.
     *
     * Syntax: 
     *
     * az acr network-rule add --name
     *                         [--ip-address]
     *                         [--resource-group]
     *                         [--subnet]
     *                         [--subscription]
     *                         [--vnet-name]
     */
    az_acr_network_rule_add(): void {
    }

    /**
     * List network rules.
     *
     * Syntax: 
     *
     * az acr network-rule list --name
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_acr_network_rule_list(): void {
    }

    /**
     * Remove a network rule.
     *
     * Syntax: 
     *
     * az acr network-rule remove --name
     *                            [--ip-address]
     *                            [--resource-group]
     *                            [--subnet]
     *                            [--subscription]
     *                            [--vnet-name]
     */
    az_acr_network_rule_remove(): void {
    }
}

/** Manage Azure Container Registry Tasks that use Cloud Native Buildpacks. */
class az_acr_pack {
    /**
     * Queues a quick build task that builds an app and pushes it into an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr pack build --builder
     *                   --image
     *                   --registry
     *                   [--agent-pool]
     *                   [--auth-mode {Default, None}]
     *                   [--no-format]
     *                   [--no-logs]
     *                   [--no-wait]
     *                   [--pack-image-tag]
     *                   [--platform]
     *                   [--pull]
     *                   [--resource-group]
     *                   [--subscription]
     *                   [--timeout]
     *                   [<SOURCE_LOCATION>]
     */
    az_acr_pack_build(): void {
    }
}

/** Manage container registry private endpoint connections. */
class az_acr_private_endpoint_connection {
    /**
     * Approve a private endpoint connection request for a container registry.
     *
     * Syntax: 
     *
     * az acr private-endpoint-connection approve --name
     *                                            --registry-name
     *                                            [--description]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_acr_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection request for a container registry.
     *
     * Syntax: 
     *
     * az acr private-endpoint-connection delete --name
     *                                           --registry-name
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_acr_private_endpoint_connection_delete(): void {
    }

    /**
     * List all private endpoint connections to a container registry.
     *
     * Syntax: 
     *
     * az acr private-endpoint-connection list --registry-name
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_acr_private_endpoint_connection_list(): void {
    }

    /**
     * Reject a private endpoint connection request for a container registry.
     *
     * Syntax: 
     *
     * az acr private-endpoint-connection reject --name
     *                                           --registry-name
     *                                           [--description]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_acr_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a container registry's private endpoint connection.
     *
     * Syntax: 
     *
     * az acr private-endpoint-connection show --name
     *                                         --registry-name
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_acr_private_endpoint_connection_show(): void {
    }
}

/** Manage registry private link resources. */
class az_acr_private_link_resource {
    /**
     * List the private link resources supported for a registry.
     *
     * Syntax: 
     *
     * az acr private-link-resource list --name
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_acr_private_link_resource_list(): void {
    }
}

/** Manage geo-replicated regions of Azure Container Registries. */
class az_acr_replication {
    /**
     * Create a replicated region for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr replication create --location
     *                           --registry
     *                           [--name]
     *                           [--region-endpoint-enabled {false, true}]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--tags]
     */
    az_acr_replication_create(): void {
    }

    /**
     * Delete a replicated region from an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr replication delete --name
     *                           --registry
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_acr_replication_delete(): void {
    }

    /**
     * List all of the regions for a geo-replicated Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr replication list --registry
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_replication_list(): void {
    }

    /**
     * Get the details of a replicated region.
     *
     * Syntax: 
     *
     * az acr replication show --name
     *                         --registry
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_replication_show(): void {
    }

    /**
     * Updates a replication.
     *
     * Syntax: 
     *
     * az acr replication update --name
     *                           --registry
     *                           [--add]
     *                           [--force-string]
     *                           [--region-endpoint-enabled {false, true}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--subscription]
     *                           [--tags]
     */
    az_acr_replication_update(): void {
    }
}

/** Manage repositories (image names) for Azure Container Registries. */
class az_acr_repository {
    /**
     * Delete a repository or image in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository delete --name
     *                          [--image]
     *                          [--password]
     *                          [--repository]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--suffix]
     *                          [--username]
     *                          [--yes]
     */
    az_acr_repository_delete(): void {
    }

    /**
     * List repositories in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository list --name
     *                        [--password]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--suffix]
     *                        [--top]
     *                        [--username]
     */
    az_acr_repository_list(): void {
    }

    /**
     * Get the attributes of a repository or image in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository show --name
     *                        [--image]
     *                        [--password]
     *                        [--query-examples]
     *                        [--repository]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--suffix]
     *                        [--username]
     */
    az_acr_repository_show(): void {
    }

    /**
     * Show manifests of a repository in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository show-manifests --name
     *                                  --repository
     *                                  [--detail]
     *                                  [--orderby {time_asc, time_desc}]
     *                                  [--password]
     *                                  [--resource-group]
     *                                  [--subscription]
     *                                  [--suffix]
     *                                  [--top]
     *                                  [--username]
     */
    az_acr_repository_show_manifests(): void {
    }

    /**
     * Show tags for a repository in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository show-tags --name
     *                             --repository
     *                             [--detail]
     *                             [--orderby {time_asc, time_desc}]
     *                             [--password]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--suffix]
     *                             [--top]
     *                             [--username]
     */
    az_acr_repository_show_tags(): void {
    }

    /**
     * Untag an image in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository untag --image
     *                         --name
     *                         [--password]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--suffix]
     *                         [--username]
     */
    az_acr_repository_untag(): void {
    }

    /**
     * Update the attributes of a repository or image in an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr repository update --name
     *                          [--delete-enabled {false, true}]
     *                          [--image]
     *                          [--list-enabled {false, true}]
     *                          [--password]
     *                          [--read-enabled {false, true}]
     *                          [--repository]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--suffix]
     *                          [--username]
     *                          [--write-enabled {false, true}]
     */
    az_acr_repository_update(): void {
    }
}

/** Manage scope access maps for Azure Container Registries. */
class az_acr_scope_map {
    /**
     * Create a scope map for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr scope-map create --name
     *                         --registry
     *                         --repository
     *                         [--description]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_scope_map_create(): void {
    }

    /**
     * Delete a scope map for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr scope-map delete --name
     *                         --registry
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--yes]
     */
    az_acr_scope_map_delete(): void {
    }

    /**
     * List all scope maps for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr scope-map list --registry
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_scope_map_list(): void {
    }

    /**
     * Show details and attributes of a scope map for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr scope-map show --name
     *                       --registry
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_scope_map_show(): void {
    }

    /**
     * Update a scope map for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr scope-map update --name
     *                         --registry
     *                         [--add]
     *                         [--description]
     *                         [--remove]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_acr_scope_map_update(): void {
    }
}

/** Manage credentials for a task. Please see <a href="https://aka.ms/acr/tasks/cross-registry-authentication">https://aka.ms/acr/tasks/cross-registry-authentication</a> for more information. */
class az_acr_task_credential {
    /**
     * Add a custom registry login credential to the task.
     *
     * Syntax: 
     *
     * az acr task credential add --login-server
     *                            --name
     *                            --registry
     *                            [--password]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--use-identity]
     *                            [--username]
     */
    az_acr_task_credential_add(): void {
    }

    /**
     * List all the custom registry credentials for task.
     *
     * Syntax: 
     *
     * az acr task credential list --name
     *                             --registry
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_acr_task_credential_list(): void {
    }

    /**
     * Remove credential for a task.
     *
     * Syntax: 
     *
     * az acr task credential remove --login-server
     *                               --name
     *                               --registry
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_acr_task_credential_remove(): void {
    }

    /**
     * Update the registry login credential for a task.
     *
     * Syntax: 
     *
     * az acr task credential update --login-server
     *                               --name
     *                               --registry
     *                               [--password]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--use-identity]
     *                               [--username]
     */
    az_acr_task_credential_update(): void {
    }
}

/** Managed Identities for Task. Please see <a href="https://aka.ms/acr/tasks/task-create-managed-identity">https://aka.ms/acr/tasks/task-create-managed-identity</a> for more information. */
class az_acr_task_identity {
    /**
     * Update the managed identity for a task.
     *
     * Syntax: 
     *
     * az acr task identity assign --name
     *                             --registry
     *                             [--identities]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_acr_task_identity_assign(): void {
    }

    /**
     * Remove managed identities for a task.
     *
     * Syntax: 
     *
     * az acr task identity remove --name
     *                             --registry
     *                             [--identities]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_acr_task_identity_remove(): void {
    }

    /**
     * Display the managed identities for task.
     *
     * Syntax: 
     *
     * az acr task identity show --name
     *                           --registry
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_acr_task_identity_show(): void {
    }
}

/** Manage timer triggers for a task. */
class az_acr_task_timer {
    /**
     * Add a timer trigger to a task.
     *
     * Syntax: 
     *
     * az acr task timer add --name
     *                       --registry
     *                       --schedule
     *                       --timer-name
     *                       [--enabled {false, true}]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_task_timer_add(): void {
    }

    /**
     * List all timer triggers for a task.
     *
     * Syntax: 
     *
     * az acr task timer list --name
     *                        --registry
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_task_timer_list(): void {
    }

    /**
     * Remove a timer trigger from a task.
     *
     * Syntax: 
     *
     * az acr task timer remove --name
     *                          --registry
     *                          --timer-name
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_acr_task_timer_remove(): void {
    }

    /**
     * Update the timer trigger for a task.
     *
     * Syntax: 
     *
     * az acr task timer update --name
     *                          --registry
     *                          --timer-name
     *                          [--enabled {false, true}]
     *                          [--resource-group]
     *                          [--schedule]
     *                          [--subscription]
     */
    az_acr_task_timer_update(): void {
    }
}

/** Manage a collection of steps for building, testing and OS & Framework patching container images using Azure Container Registries. */
class az_acr_task {
    /**
     * Cancel a specified run of an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr task cancel-run --registry
     *                        --run-id
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_task_cancel_run(): void {
    }

    /**
     * Create a series of steps for building, testing and OS & Framework patching containers. Tasks support triggers from git commits and base image updates.
     *
     * Syntax: 
     *
     * az acr task create --context
     *                    --name
     *                    --registry
     *                    [--agent-pool]
     *                    [--arg]
     *                    [--assign-identity]
     *                    [--auth-mode {Default, None}]
     *                    [--base-image-trigger-enabled {false, true}]
     *                    [--base-image-trigger-name]
     *                    [--base-image-trigger-type {All, Runtime}]
     *                    [--cmd]
     *                    [--commit-trigger-enabled {false, true}]
     *                    [--cpu]
     *                    [--file]
     *                    [--git-access-token]
     *                    [--image]
     *                    [--no-cache {false, true}]
     *                    [--no-push {false, true}]
     *                    [--platform]
     *                    [--pull-request-trigger-enabled {false, true}]
     *                    [--resource-group]
     *                    [--schedule]
     *                    [--secret-arg]
     *                    [--set]
     *                    [--set-secret]
     *                    [--source-trigger-name]
     *                    [--status {Disabled, Enabled}]
     *                    [--subscription]
     *                    [--target]
     *                    [--timeout]
     *                    [--update-trigger-endpoint]
     *                    [--update-trigger-payload-type {Default, Token}]
     *                    [--values]
     */
    az_acr_task_create(): void {
    }

    /**
     * Delete a task from an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr task delete --name
     *                    --registry
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--yes]
     */
    az_acr_task_delete(): void {
    }

    /**
     * List the tasks for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr task list --registry
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_acr_task_list(): void {
    }

    /**
     * List all of the executed runs for an Azure Container Registry, with the ability to filter by a specific Task.
     *
     * Syntax: 
     *
     * az acr task list-runs --registry
     *                       [--image]
     *                       [--name]
     *                       [--resource-group]
     *                       [--run-status {Canceled, Error, Failed, Queued, Running, Started, Succeeded, Timeout}]
     *                       [--subscription]
     *                       [--top]
     */
    az_acr_task_list_runs(): void {
    }

    /**
     * Show logs for a particular run. If no run-id is supplied, show logs for the last created run.
     *
     * Syntax: 
     *
     * az acr task logs --registry
     *                  [--image]
     *                  [--name]
     *                  [--resource-group]
     *                  [--run-id]
     *                  [--subscription]
     */
    az_acr_task_logs(): void {
    }

    /**
     * Manually trigger a task that might otherwise be waiting for git commits or base image update triggers.
     *
     * Syntax: 
     *
     * az acr task run --name
     *                 --registry
     *                 [--agent-pool]
     *                 [--arg]
     *                 [--context]
     *                 [--file]
     *                 [--no-logs]
     *                 [--no-wait]
     *                 [--resource-group]
     *                 [--secret-arg]
     *                 [--set]
     *                 [--set-secret]
     *                 [--subscription]
     *                 [--target]
     *                 [--update-trigger-token]
     */
    az_acr_task_run(): void {
    }

    /**
     * Get the properties of a named task for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr task show --name
     *                  --registry
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--with-secure-properties]
     */
    az_acr_task_show(): void {
    }

    /**
     * Get the properties of a specified run of an Azure Container Registry Task.
     *
     * Syntax: 
     *
     * az acr task show-run --registry
     *                      --run-id
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_acr_task_show_run(): void {
    }

    /**
     * Update a task for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr task update --name
     *                    --registry
     *                    [--agent-pool]
     *                    [--arg]
     *                    [--auth-mode {Default, None}]
     *                    [--base-image-trigger-enabled {false, true}]
     *                    [--base-image-trigger-type {All, Runtime}]
     *                    [--commit-trigger-enabled {false, true}]
     *                    [--context]
     *                    [--cpu]
     *                    [--file]
     *                    [--git-access-token]
     *                    [--image]
     *                    [--no-cache {false, true}]
     *                    [--no-push {false, true}]
     *                    [--platform]
     *                    [--pull-request-trigger-enabled {false, true}]
     *                    [--resource-group]
     *                    [--secret-arg]
     *                    [--set]
     *                    [--set-secret]
     *                    [--status {Disabled, Enabled}]
     *                    [--subscription]
     *                    [--target]
     *                    [--timeout]
     *                    [--update-trigger-endpoint]
     *                    [--update-trigger-payload-type {Default, Token}]
     *                    [--values]
     */
    az_acr_task_update(): void {
    }

    /**
     * Patch the run properties of an Azure Container Registry Task.
     *
     * Syntax: 
     *
     * az acr task update-run --registry
     *                        --run-id
     *                        [--no-archive {false, true}]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_acr_task_update_run(): void {
    }
}

/** Manage taskruns using Azure Container Registries. */
class az_acr_taskrun {
    /**
     * Delete a taskrun from an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr taskrun delete --name
     *                       --registry
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--yes]
     */
    az_acr_taskrun_delete(): void {
    }

    /**
     * List the taskruns for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr taskrun list --registry
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_taskrun_list(): void {
    }

    /**
     * Show run logs for a particular taskrun.
     *
     * Syntax: 
     *
     * az acr taskrun logs --name
     *                     --registry
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_taskrun_logs(): void {
    }

    /**
     * Get the properties of a named taskrun for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr taskrun show --name
     *                     --registry
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_taskrun_show(): void {
    }
}

/** Manage credentials of a token for an Azure Container Registry. */
class az_acr_token_credential {
    /**
     * Delete a token credential.
     *
     * Syntax: 
     *
     * az acr token credential delete --name
     *                                --registry
     *                                [--password1]
     *                                [--password2]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_acr_token_credential_delete(): void {
    }

    /**
     * Generate or replace one or both passwords of a token for an Azure Container Registry. For using token and password to access a container registry, see <a href="https://aka.ms/acr/repo-permissions">https://aka.ms/acr/repo-permissions</a>.
     *
     * Syntax: 
     *
     * az acr token credential generate --name
     *                                  --registry
     *                                  [--expiration]
     *                                  [--expiration-in-days]
     *                                  [--password1]
     *                                  [--password2]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_acr_token_credential_generate(): void {
    }
}

/** Manage tokens for an Azure Container Registry. */
class az_acr_token {
    /**
     * Create a token associated with a scope map for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr token create --name
     *                     --registry
     *                     [--expiration]
     *                     [--expiration-in-days]
     *                     [--no-passwords {false, true}]
     *                     [--repository]
     *                     [--resource-group]
     *                     [--scope-map]
     *                     [--status {disabled, enabled}]
     *                     [--subscription]
     */
    az_acr_token_create(): void {
    }

    /**
     * Delete a token for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr token delete --name
     *                     --registry
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--yes]
     */
    az_acr_token_delete(): void {
    }

    /**
     * List all tokens for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr token list --registry
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_acr_token_list(): void {
    }

    /**
     * Show details and attributes of a token for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr token show --name
     *                   --registry
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_acr_token_show(): void {
    }

    /**
     * Update a token (replace associated scope map) for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr token update --name
     *                     --registry
     *                     [--resource-group]
     *                     [--scope-map]
     *                     [--status {disabled, enabled}]
     *                     [--subscription]
     */
    az_acr_token_update(): void {
    }
}

/** Manage webhooks for Azure Container Registries. */
class az_acr_webhook {
    /**
     * Create a webhook for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr webhook create --actions {chart_delete, chart_push, delete, push, quarantine}
     *                       --name
     *                       --registry
     *                       --uri
     *                       [--headers]
     *                       [--location]
     *                       [--resource-group]
     *                       [--scope]
     *                       [--status {disabled, enabled}]
     *                       [--subscription]
     *                       [--tags]
     */
    az_acr_webhook_create(): void {
    }

    /**
     * Delete a webhook from an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr webhook delete --name
     *                       --registry
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_webhook_delete(): void {
    }

    /**
     * Get the service URI and custom headers for the webhook.
     *
     * Syntax: 
     *
     * az acr webhook get-config --name
     *                           --registry
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_acr_webhook_get_config(): void {
    }

    /**
     * List all of the webhooks for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr webhook list --registry
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_webhook_list(): void {
    }

    /**
     * List recent events for a webhook.
     *
     * Syntax: 
     *
     * az acr webhook list-events --name
     *                            --registry
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_acr_webhook_list_events(): void {
    }

    /**
     * Trigger a ping event for a webhook.
     *
     * Syntax: 
     *
     * az acr webhook ping --name
     *                     --registry
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_webhook_ping(): void {
    }

    /**
     * Get the details of a webhook.
     *
     * Syntax: 
     *
     * az acr webhook show --name
     *                     --registry
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_acr_webhook_show(): void {
    }

    /**
     * Update a webhook.
     *
     * Syntax: 
     *
     * az acr webhook update --name
     *                       --registry
     *                       [--actions {chart_delete, chart_push, delete, push, quarantine}]
     *                       [--add]
     *                       [--force-string]
     *                       [--headers]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--scope]
     *                       [--set]
     *                       [--status {disabled, enabled}]
     *                       [--subscription]
     *                       [--tags]
     *                       [--uri]
     */
    az_acr_webhook_update(): void {
    }
}

/** Manage private registries with Azure Container Registries. */
class az_acr {
    /**
     * Queues a quick build, providing streaming logs for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr build --registry
     *              [--agent-pool]
     *              [--auth-mode {Default, None}]
     *              [--build-arg]
     *              [--file]
     *              [--image]
     *              [--no-format]
     *              [--no-logs]
     *              [--no-push]
     *              [--no-wait]
     *              [--platform]
     *              [--resource-group]
     *              [--secret-build-arg]
     *              [--subscription]
     *              [--target]
     *              [--timeout]
     *              [<SOURCE_LOCATION>]
     */
    az_acr_build(): void {
    }

    /**
     * Gets health information on the environment and optionally a target registry.
     *
     * Syntax: 
     *
     * az acr check-health [--ignore-errors]
     *                     [--name]
     *                     [--subscription]
     *                     [--yes]
     */
    az_acr_check_health(): void {
    }

    /**
     * Checks if an Azure Container Registry name is valid and available for use.
     *
     * Syntax: 
     *
     * az acr check-name --name
     *                   [--subscription]
     */
    az_acr_check_name(): void {
    }

    /**
     * Create an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr create --name
     *               --resource-group
     *               --sku {Basic, Classic, Premium, Standard}
     *               [--admin-enabled {false, true}]
     *               [--default-action {Allow, Deny}]
     *               [--identity]
     *               [--key-encryption-key]
     *               [--location]
     *               [--public-network-enabled {false, true}]
     *               [--subscription]
     *               [--tags]
     *               [--workspace]
     */
    az_acr_create(): void {
    }

    /**
     * Deletes an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr delete --name
     *               [--resource-group]
     *               [--subscription]
     *               [--yes]
     */
    az_acr_delete(): void {
    }

    /**
     * Imports an image to an Azure Container Registry from another Container Registry. Import removes the need to docker pull, docker tag, docker push.
     *
     * Syntax: 
     *
     * az acr import --name
     *               --source
     *               [--force]
     *               [--image]
     *               [--password]
     *               [--registry]
     *               [--repository]
     *               [--resource-group]
     *               [--subscription]
     *               [--username]
     */
    az_acr_import(): void {
    }

    /**
     * Lists all the container registries under the current subscription.
     *
     * Syntax: 
     *
     * az acr list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_acr_list(): void {
    }

    /**
     * Log in to an Azure Container Registry through the Docker CLI.
     *
     * Syntax: 
     *
     * az acr login --name
     *              [--expose-token]
     *              [--password]
     *              [--resource-group]
     *              [--subscription]
     *              [--suffix]
     *              [--username]
     */
    az_acr_login(): void {
    }

    /**
     * Queues a quick run providing streamed logs for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr run --registry
     *            [--agent-pool]
     *            [--auth-mode {Default, None}]
     *            [--cmd]
     *            [--file]
     *            [--no-format]
     *            [--no-logs]
     *            [--no-wait]
     *            [--platform]
     *            [--resource-group]
     *            [--set]
     *            [--set-secret]
     *            [--subscription]
     *            [--timeout]
     *            [--values]
     *            [<SOURCE_LOCATION>]
     */
    az_acr_run(): void {
    }

    /**
     * Get the details of an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr show --name
     *             [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_acr_show(): void {
    }

    /**
     * Display registry endpoints.
     *
     * Syntax: 
     *
     * az acr show-endpoints --name
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_acr_show_endpoints(): void {
    }

    /**
     * Get the storage usage for an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr show-usage --name
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_acr_show_usage(): void {
    }

    /**
     * Update an Azure Container Registry.
     *
     * Syntax: 
     *
     * az acr update --name
     *               [--add]
     *               [--admin-enabled {false, true}]
     *               [--data-endpoint-enabled {false, true}]
     *               [--default-action {Allow, Deny}]
     *               [--force-string]
     *               [--public-network-enabled {false, true}]
     *               [--remove]
     *               [--resource-group]
     *               [--set]
     *               [--sku {Basic, Classic, Premium, Standard}]
     *               [--subscription]
     *               [--tags]
     */
    az_acr_update(): void {
    }
}

/** Commands to manage a DC/OS-orchestrated Azure Container Service. */
class az_acs_dcos {
    /**
     * Creates an SSH tunnel to the Azure container service, and opens the Mesosphere DC/OS dashboard in the browser.
     *
     * Syntax: 
     *
     * az acs dcos browse --name
     *                    --resource-group
     *                    [--disable-browser]
     *                    [--ssh-key-file]
     *                    [--subscription]
     */
    az_acs_dcos_browse(): void {
    }

    /**
     * Download and install the DC/OS command-line tool for a cluster.
     *
     * Syntax: 
     *
     * az acs dcos install-cli [--client-version]
     *                         [--install-location]
     *                         [--subscription]
     */
    az_acs_dcos_install_cli(): void {
    }
}

/** Commands to manage a Kubernetes-orchestrated Azure Container Service. */
class az_acs_kubernetes {
    /**
     * Launch a proxy and browse the Kubernetes web UI.
     *
     * Syntax: 
     *
     * az acs kubernetes browse --name
     *                          --resource-group
     *                          [--disable-browser]
     *                          [--ssh-key-file]
     *                          [--subscription]
     */
    az_acs_kubernetes_browse(): void {
    }

    /**
     * Download and install credentials to access a cluster.  This command requires the same private-key used to create the cluster.
     *
     * Syntax: 
     *
     * az acs kubernetes get-credentials --name
     *                                   --resource-group
     *                                   [--file]
     *                                   [--overwrite-existing]
     *                                   [--ssh-key-file]
     *                                   [--subscription]
     */
    az_acs_kubernetes_get_credentials(): void {
    }

    /**
     * Download and install the Kubernetes command-line tool for a cluster.
     *
     * Syntax: 
     *
     * az acs kubernetes install-cli [--client-version]
     *                               [--install-location]
     *                               [--kubelogin-install-location]
     *                               [--kubelogin-version]
     *                               [--subscription]
     */
    az_acs_kubernetes_install_cli(): void {
    }
}

/** Manage Azure Container Services. */
class az_acs {
    /**
     * Show the dashboard for a service container's orchestrator in a web browser.
     *
     * Syntax: 
     *
     * az acs browse --name
     *               --resource-group
     *               [--disable-browser]
     *               [--ssh-key-file]
     *               [--subscription]
     */
    az_acs_browse(): void {
    }

    /**
     * Create a new container service.
     *
     * Syntax: 
     *
     * az acs create --name
     *               --resource-group
     *               [--admin-password]
     *               [--admin-username]
     *               [--agent-count]
     *               [--agent-osdisk-size]
     *               [--agent-ports]
     *               [--agent-profiles]
     *               [--agent-storage-profile {ManagedDisks, StorageAccount}]
     *               [--agent-vm-size]
     *               [--agent-vnet-subnet-id]
     *               [--api-version]
     *               [--client-secret]
     *               [--dns-prefix]
     *               [--generate-ssh-keys]
     *               [--location]
     *               [--master-count]
     *               [--master-first-consecutive-static-ip]
     *               [--master-osdisk-size]
     *               [--master-profile]
     *               [--master-storage-profile {ManagedDisks, StorageAccount}]
     *               [--master-vm-size]
     *               [--master-vnet-subnet-id]
     *               [--no-wait]
     *               [--orchestrator-type {Custom, DCOS, DockerCE, Kubernetes, Swarm}]
     *               [--orchestrator-version]
     *               [--service-principal]
     *               [--ssh-key-value]
     *               [--subscription]
     *               [--tags]
     *               [--validate]
     *               [--windows]
     */
    az_acs_create(): void {
    }

    /**
     * Delete a container service.
     *
     * Syntax: 
     *
     * az acs delete --name
     *               --resource-group
     *               [--subscription]
     *               [--yes]
     */
    az_acs_delete(): void {
    }

    /**
     * List container services.
     *
     * Syntax: 
     *
     * az acs list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_acs_list(): void {
    }

    /**
     * List locations where Azure Container Service is in preview and in production.
     *
     * Syntax: 
     *
     * az acs list-locations [--subscription]
     */
    az_acs_list_locations(): void {
    }

    /**
     * Change the private agent count of a container service.
     *
     * Syntax: 
     *
     * az acs scale --name
     *              --new-agent-count
     *              --resource-group
     *              [--subscription]
     */
    az_acs_scale(): void {
    }

    /**
     * Show the details for a container service.
     *
     * Syntax: 
     *
     * az acs show --name
     *             --resource-group
     *             [--query-examples]
     *             [--subscription]
     */
    az_acs_show(): void {
    }

    /**
     * Wait for a container service to reach a desired state.
     *
     * Syntax: 
     *
     * az acs wait --name
     *             --resource-group
     *             [--created]
     *             [--custom]
     *             [--deleted]
     *             [--exists]
     *             [--interval]
     *             [--subscription]
     *             [--timeout]
     *             [--updated]
     */
    az_acs_wait(): void {
    }
}

/** Manage an application's password or certificate credentials. */
class az_ad_app_credential {
    /**
     * Delete an application's password or certificate credentials.
     *
     * Syntax: 
     *
     * az ad app credential delete --id
     *                             --key-id
     *                             [--cert]
     */
    az_ad_app_credential_delete(): void {
    }

    /**
     * List an application's password or certificate credentials.
     *
     * Syntax: 
     *
     * az ad app credential list --id
     *                           [--cert]
     *                           [--query-examples]
     */
    az_ad_app_credential_list(): void {
    }

    /**
     * Append or overwrite an application's password or certificate credentials.
     *
     * Syntax: 
     *
     * az ad app credential reset --id
     *                            [--append]
     *                            [--cert]
     *                            [--create-cert]
     *                            [--credential-description]
     *                            [--end-date]
     *                            [--keyvault]
     *                            [--password]
     *                            [--years]
     */
    az_ad_app_credential_reset(): void {
    }
}

/** Manage application owners. */
class az_ad_app_owner {
    /**
     * Add an application owner.
     *
     * Syntax: 
     *
     * az ad app owner add --id
     *                     --owner-object-id
     */
    az_ad_app_owner_add(): void {
    }

    /**
     * List application owners.
     *
     * Syntax: 
     *
     * az ad app owner list --id
     *                      [--query-examples]
     */
    az_ad_app_owner_list(): void {
    }

    /**
     * Remove an application owner.
     *
     * Syntax: 
     *
     * az ad app owner remove --id
     *                        --owner-object-id
     */
    az_ad_app_owner_remove(): void {
    }
}

/** Manage an application's OAuth2 permissions. */
class az_ad_app_permission {
    /**
     * Add an API permission.
     *
     * Syntax: 
     *
     * az ad app permission add --api
     *                          --api-permissions
     *                          --id
     */
    az_ad_app_permission_add(): void {
    }

    /**
     * Grant Application & Delegated permissions through admin-consent.
     *
     * Syntax: 
     *
     * az ad app permission admin-consent --id
     */
    az_ad_app_permission_admin_consent(): void {
    }

    /**
     * Remove an API permission.
     *
     * Syntax: 
     *
     * az ad app permission delete --api
     *                             --id
     *                             [--api-permissions]
     */
    az_ad_app_permission_delete(): void {
    }

    /**
     * Grant the app an API Delegated permissions.
     *
     * Syntax: 
     *
     * az ad app permission grant --api
     *                            --id
     *                            [--consent-type {AllPrincipals, Principal}]
     *                            [--expires]
     *                            [--principal-id]
     *                            [--scope]
     */
    az_ad_app_permission_grant(): void {
    }

    /**
     * List API permissions the application has requested.
     *
     * Syntax: 
     *
     * az ad app permission list --id
     *                           [--query-examples]
     */
    az_ad_app_permission_list(): void {
    }

    /**
     * List Oauth2 permission grants.
     *
     * Syntax: 
     *
     * az ad app permission list-grants [--filter]
     *                                  [--id]
     *                                  [--show-resource-name {false, true}]
     */
    az_ad_app_permission_list_grants(): void {
    }
}

/** Manage applications with AAD Graph. */
class az_ad_app {
    /**
     * Create a web application, web API or native application.
     *
     * Syntax: 
     *
     * az ad app create --display-name
     *                  [--app-roles]
     *                  [--available-to-other-tenants {false, true}]
     *                  [--credential-description]
     *                  [--end-date]
     *                  [--homepage]
     *                  [--identifier-uris]
     *                  [--key-type {AsymmetricX509Cert, Password, Symmetric}]
     *                  [--key-usage {Sign, Verify}]
     *                  [--key-value]
     *                  [--native-app {false, true}]
     *                  [--oauth2-allow-implicit-flow {false, true}]
     *                  [--optional-claims]
     *                  [--password]
     *                  [--reply-urls]
     *                  [--required-resource-accesses]
     *                  [--start-date]
     */
    az_ad_app_create(): void {
    }

    /**
     * Delete an application.
     *
     * Syntax: 
     *
     * az ad app delete --id
     */
    az_ad_app_delete(): void {
    }

    /**
     * List applications.
     *
     * Syntax: 
     *
     * az ad app list [--all]
     *                [--app-id]
     *                [--display-name]
     *                [--filter]
     *                [--identifier-uri]
     *                [--query-examples]
     *                [--show-mine]
     */
    az_ad_app_list(): void {
    }

    /**
     * Get the details of an application.
     *
     * Syntax: 
     *
     * az ad app show --id
     *                [--query-examples]
     */
    az_ad_app_show(): void {
    }

    /**
     * Update an application.
     *
     * Syntax: 
     *
     * az ad app update --id
     *                  [--add]
     *                  [--app-roles]
     *                  [--available-to-other-tenants {false, true}]
     *                  [--credential-description]
     *                  [--display-name]
     *                  [--end-date]
     *                  [--force-string]
     *                  [--homepage]
     *                  [--identifier-uris]
     *                  [--key-type {AsymmetricX509Cert, Password, Symmetric}]
     *                  [--key-usage {Sign, Verify}]
     *                  [--key-value]
     *                  [--oauth2-allow-implicit-flow {false, true}]
     *                  [--optional-claims]
     *                  [--password]
     *                  [--remove]
     *                  [--reply-urls]
     *                  [--required-resource-accesses]
     *                  [--set]
     *                  [--start-date]
     */
    az_ad_app_update(): void {
    }
}

/** Manage Azure Active Directory group members. */
class az_ad_group_member {
    /**
     * Add a member to a group.
     *
     * Syntax: 
     *
     * az ad group member add --group
     *                        --member-id
     *                        [--additional-properties]
     */
    az_ad_group_member_add(): void {
    }

    /**
     * Check if a member is in a group.
     *
     * Syntax: 
     *
     * az ad group member check --group
     *                          --member-id
     */
    az_ad_group_member_check(): void {
    }

    /**
     * Gets the members of a group.
     *
     * Syntax: 
     *
     * az ad group member list --group
     *                         [--query-examples]
     */
    az_ad_group_member_list(): void {
    }

    /**
     * Remove a member from a group.
     *
     * Syntax: 
     *
     * az ad group member remove --group
     *                           --member-id
     */
    az_ad_group_member_remove(): void {
    }
}

/** Manage Azure Active Directory group owners. */
class az_ad_group_owner {
    /**
     * Add a group owner.
     *
     * Syntax: 
     *
     * az ad group owner add --group
     *                       --owner-object-id
     */
    az_ad_group_owner_add(): void {
    }

    /**
     * List group owners.
     *
     * Syntax: 
     *
     * az ad group owner list --group
     *                        [--query-examples]
     */
    az_ad_group_owner_list(): void {
    }

    /**
     * Remove a group owner.
     *
     * Syntax: 
     *
     * az ad group owner remove --group
     *                          --owner-object-id
     */
    az_ad_group_owner_remove(): void {
    }
}

/** Manage Azure Active Directory groups. */
class az_ad_group {
    /**
     * Create a group in the directory.
     *
     * Syntax: 
     *
     * az ad group create --display-name
     *                    --mail-nickname
     *                    [--description]
     *                    [--force {false, true}]
     */
    az_ad_group_create(): void {
    }

    /**
     * Delete a group from the directory.
     *
     * Syntax: 
     *
     * az ad group delete --group
     */
    az_ad_group_delete(): void {
    }

    /**
     * Gets a collection of object IDs of groups of which the specified group is a member.
     *
     * Syntax: 
     *
     * az ad group get-member-groups --group
     *                               [--additional-properties]
     *                               [--security-enabled-only {false, true}]
     */
    az_ad_group_get_member_groups(): void {
    }

    /**
     * List groups in the directory.
     *
     * Syntax: 
     *
     * az ad group list [--display-name]
     *                  [--filter]
     *                  [--query-examples]
     */
    az_ad_group_list(): void {
    }

    /**
     * Gets group information from the directory.
     *
     * Syntax: 
     *
     * az ad group show --group
     *                  [--query-examples]
     */
    az_ad_group_show(): void {
    }
}

/** Show graph information about current signed-in user in CLI. */
class az_ad_signed_in_user {
    /**
     * Get the list of directory objects that are owned by the user.
     *
     * Syntax: 
     *
     * az ad signed-in-user list-owned-objects [--type]
     */
    az_ad_signed_in_user_list_owned_objects(): void {
    }

    /**
     * Gets the details for the currently logged-in user.
     *
     * Syntax: 
     *
     * az ad signed-in-user show [--query-examples]
     */
    az_ad_signed_in_user_show(): void {
    }
}

/** Manage a service principal's credentials. */
class az_ad_sp_credential {
    /**
     * Delete a service principal's credential.
     *
     * Syntax: 
     *
     * az ad sp credential delete --id
     *                            --key-id
     *                            [--cert]
     */
    az_ad_sp_credential_delete(): void {
    }

    /**
     * List a service principal's credentials.
     *
     * Syntax: 
     *
     * az ad sp credential list --id
     *                          [--cert]
     *                          [--query-examples]
     */
    az_ad_sp_credential_list(): void {
    }

    /**
     * Reset a service principal credential.
     *
     * Syntax: 
     *
     * az ad sp credential reset --name
     *                           [--append]
     *                           [--cert]
     *                           [--create-cert]
     *                           [--credential-description]
     *                           [--end-date]
     *                           [--keyvault]
     *                           [--password]
     *                           [--years]
     */
    az_ad_sp_credential_reset(): void {
    }
}

/** Manage service principal owners. */
class az_ad_sp_owner {
    /**
     * List service principal owners.
     *
     * Syntax: 
     *
     * az ad sp owner list --id
     *                     [--query-examples]
     */
    az_ad_sp_owner_list(): void {
    }
}

/** Manage Azure Active Directory service principals for automation authentication. */
class az_ad_sp {
    /**
     * Create a service principal.
     *
     * Syntax: 
     *
     * az ad sp create --id
     */
    az_ad_sp_create(): void {
    }

    /**
     * Create a service principal and configure its access to Azure resources.
     *
     * Syntax: 
     *
     * az ad sp create-for-rbac [--cert]
     *                          [--create-cert]
     *                          [--keyvault]
     *                          [--name]
     *                          [--role]
     *                          [--scopes]
     *                          [--sdk-auth {false, true}]
     *                          [--skip-assignment {false, true}]
     *                          [--years]
     */
    az_ad_sp_create_for_rbac(): void {
    }

    /**
     * Delete a service principal and its role assignments.
     *
     * Syntax: 
     *
     * az ad sp delete --id
     */
    az_ad_sp_delete(): void {
    }

    /**
     * List service principals.
     *
     * Syntax: 
     *
     * az ad sp list [--all]
     *               [--display-name]
     *               [--filter]
     *               [--query-examples]
     *               [--show-mine]
     *               [--spn]
     */
    az_ad_sp_list(): void {
    }

    /**
     * Get the details of a service principal.
     *
     * Syntax: 
     *
     * az ad sp show --id
     *               [--query-examples]
     */
    az_ad_sp_show(): void {
    }

    /**
     * Update a service principal.
     *
     * Syntax: 
     *
     * az ad sp update --id
     *                 [--add]
     *                 [--force-string]
     *                 [--remove]
     *                 [--set]
     */
    az_ad_sp_update(): void {
    }
}

/** Manage Azure Active Directory users and user authentication. */
class az_ad_user {
    /**
     * Create an Azure Active Directory user.
     *
     * Syntax: 
     *
     * az ad user create --display-name
     *                   --password
     *                   --user-principal-name
     *                   [--force-change-password-next-login {false, true}]
     *                   [--immutable-id]
     *                   [--mail-nickname]
     */
    az_ad_user_create(): void {
    }

    /**
     * Delete a user.
     *
     * Syntax: 
     *
     * az ad user delete --id
     */
    az_ad_user_delete(): void {
    }

    /**
     * Get groups of which the user is a member.
     *
     * Syntax: 
     *
     * az ad user get-member-groups --id
     *                              [--security-enabled-only]
     */
    az_ad_user_get_member_groups(): void {
    }

    /**
     * List Azure Active Directory users.
     *
     * Syntax: 
     *
     * az ad user list [--display-name]
     *                 [--filter]
     *                 [--query-examples]
     *                 [--upn]
     */
    az_ad_user_list(): void {
    }

    /**
     * Gets user information from the directory.
     *
     * Syntax: 
     *
     * az ad user show --id
     *                 [--query-examples]
     */
    az_ad_user_show(): void {
    }

    /**
     * Update Azure Active Directory users.
     *
     * Syntax: 
     *
     * az ad user update --id
     *                   [--account-enabled {false, true}]
     *                   [--display-name]
     *                   [--force-change-password-next-login {false, true}]
     *                   [--mail-nickname]
     *                   [--password]
     */
    az_ad_user_update(): void {
    }
}

/** Manage Azure Active Directory Graph entities needed for Role Based Access Control. */
class az_ad {
}

/** Manage Azure Advisor configuration. */
class az_advisor_configuration {
    /**
     * List Azure Advisor configuration for the entire subscription.
     *
     * Syntax: 
     *
     * az advisor configuration list [--query-examples]
     *                               [--subscription]
     */
    az_advisor_configuration_list(): void {
    }

    /**
     * Show Azure Advisor configuration for the given subscription or resource group.
     *
     * Syntax: 
     *
     * az advisor configuration show [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_advisor_configuration_show(): void {
    }

    /**
     * Update Azure Advisor configuration.
     *
     * Syntax: 
     *
     * az advisor configuration update [--add]
     *                                 [--exclude]
     *                                 [--force-string]
     *                                 [--include]
     *                                 [--low-cpu-threshold {10, 15, 20, 5}]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--subscription]
     */
    az_advisor_configuration_update(): void {
    }
}

/** Review Azure Advisor recommendations. */
class az_advisor_recommendation {
    /**
     * Disable Azure Advisor recommendations.
     *
     * Syntax: 
     *
     * az advisor recommendation disable [--days]
     *                                   [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_advisor_recommendation_disable(): void {
    }

    /**
     * Enable Azure Advisor recommendations.
     *
     * Syntax: 
     *
     * az advisor recommendation enable [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_advisor_recommendation_enable(): void {
    }

    /**
     * List Azure Advisor recommendations.
     *
     * Syntax: 
     *
     * az advisor recommendation list [--category {Cost, HighAvailability, Performance, Security}]
     *                                [--ids]
     *                                [--query-examples]
     *                                [--refresh]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_advisor_recommendation_list(): void {
    }
}

/** Manage Azure Advisor. */
class az_advisor {
}

/** Commands to manage node pools in Kubernetes kubernetes cluster. */
class az_aks_nodepool {
    /**
     * Add a node pool to the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool add --cluster-name
     *                     --name
     *                     --resource-group
     *                     [--enable-cluster-autoscaler]
     *                     [--enable-node-public-ip]
     *                     [--kubernetes-version]
     *                     [--labels]
     *                     [--max-count]
     *                     [--max-pods]
     *                     [--min-count]
     *                     [--mode {System, User}]
     *                     [--no-wait]
     *                     [--node-count]
     *                     [--node-osdisk-size]
     *                     [--node-taints]
     *                     [--node-vm-size]
     *                     [--os-type]
     *                     [--subscription]
     *                     [--tags]
     *                     [--vnet-subnet-id]
     *                     [--zones {1, 2, 3}]
     */
    az_aks_nodepool_add(): void {
    }

    /**
     * Delete the agent pool in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool delete --cluster-name
     *                        --name
     *                        --resource-group
     *                        [--no-wait]
     *                        [--subscription]
     */
    az_aks_nodepool_delete(): void {
    }

    /**
     * Get the available upgrade versions for an agent pool of the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool get-upgrades --cluster-name
     *                              --nodepool-name
     *                              --resource-group
     *                              [--subscription]
     */
    az_aks_nodepool_get_upgrades(): void {
    }

    /**
     * List node pools in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool list --cluster-name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_aks_nodepool_list(): void {
    }

    /**
     * Scale the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool scale --cluster-name
     *                       --name
     *                       --resource-group
     *                       [--no-wait]
     *                       [--node-count]
     *                       [--subscription]
     */
    az_aks_nodepool_scale(): void {
    }

    /**
     * Show the details for a node pool in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool show --cluster-name
     *                      --name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_aks_nodepool_show(): void {
    }

    /**
     * Update a node pool to enable/disable cluster-autoscaler or change min-count or max-count.
     *
     * Syntax: 
     *
     * az aks nodepool update --cluster-name
     *                        --name
     *                        --resource-group
     *                        [--disable-cluster-autoscaler]
     *                        [--enable-cluster-autoscaler]
     *                        [--max-count]
     *                        [--min-count]
     *                        [--mode {System, User}]
     *                        [--no-wait]
     *                        [--subscription]
     *                        [--tags]
     *                        [--update-cluster-autoscaler]
     */
    az_aks_nodepool_update(): void {
    }

    /**
     * Upgrade the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool upgrade --cluster-name
     *                         --kubernetes-version
     *                         --name
     *                         --resource-group
     *                         [--no-wait]
     *                         [--subscription]
     */
    az_aks_nodepool_upgrade(): void {
    }
}

/** Manage Azure Kubernetes Services. */
class az_aks {
    /**
     * Show the dashboard for a Kubernetes cluster in a web browser.
     *
     * Syntax: 
     *
     * az aks browse --name
     *               --resource-group
     *               [--disable-browser]
     *               [--listen-address]
     *               [--listen-port]
     *               [--subscription]
     */
    az_aks_browse(): void {
    }

    /**
     * Create a new managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks create --name
     *               --resource-group
     *               [--aad-admin-group-object-ids]
     *               [--aad-client-app-id]
     *               [--aad-server-app-id]
     *               [--aad-server-app-secret]
     *               [--aad-tenant-id]
     *               [--admin-username]
     *               [--api-server-authorized-ip-ranges]
     *               [--attach-acr]
     *               [--ca-profile]
     *               [--client-secret]
     *               [--disable-rbac]
     *               [--dns-name-prefix]
     *               [--dns-service-ip]
     *               [--docker-bridge-address]
     *               [--enable-aad]
     *               [--enable-addons]
     *               [--enable-cluster-autoscaler]
     *               [--enable-managed-identity]
     *               [--enable-node-public-ip]
     *               [--enable-private-cluster]
     *               [--enable-rbac]
     *               [--generate-ssh-keys]
     *               [--kubernetes-version]
     *               [--load-balancer-idle-timeout]
     *               [--load-balancer-managed-outbound-ip-count]
     *               [--load-balancer-outbound-ip-prefixes]
     *               [--load-balancer-outbound-ips]
     *               [--load-balancer-outbound-ports]
     *               [--load-balancer-sku]
     *               [--location]
     *               [--max-count]
     *               [--max-pods]
     *               [--min-count]
     *               [--network-plugin {azure, kubenet}]
     *               [--network-policy]
     *               [--no-ssh-key]
     *               [--no-wait]
     *               [--node-count]
     *               [--node-osdisk-diskencryptionset-id]
     *               [--node-osdisk-size]
     *               [--node-vm-size]
     *               [--nodepool-labels]
     *               [--nodepool-name]
     *               [--nodepool-tags]
     *               [--outbound-type {loadBalancer, userDefinedRouting}]
     *               [--pod-cidr]
     *               [--service-cidr]
     *               [--service-principal]
     *               [--skip-subnet-role-assignment]
     *               [--ssh-key-value]
     *               [--subscription]
     *               [--tags]
     *               [--uptime-sla]
     *               [--vm-set-type]
     *               [--vnet-subnet-id]
     *               [--windows-admin-password]
     *               [--windows-admin-username]
     *               [--workspace-resource-id]
     *               [--zones {1, 2, 3}]
     */
    az_aks_create(): void {
    }

    /**
     * Delete a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks delete --name
     *               --resource-group
     *               [--no-wait]
     *               [--subscription]
     *               [--yes]
     */
    az_aks_delete(): void {
    }

    /**
     * Disable Kubernetes addons.
     *
     * Syntax: 
     *
     * az aks disable-addons --addons
     *                       --name
     *                       --resource-group
     *                       [--no-wait]
     *                       [--subscription]
     */
    az_aks_disable_addons(): void {
    }

    /**
     * Enable Kubernetes addons.
     *
     * Syntax: 
     *
     * az aks enable-addons --addons
     *                      --name
     *                      --resource-group
     *                      [--no-wait]
     *                      [--subnet-name]
     *                      [--subscription]
     *                      [--workspace-resource-id]
     */
    az_aks_enable_addons(): void {
    }

    /**
     * Get access credentials for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-credentials --name
     *                        --resource-group
     *                        [--admin]
     *                        [--context]
     *                        [--file]
     *                        [--overwrite-existing]
     *                        [--subscription]
     */
    az_aks_get_credentials(): void {
    }

    /**
     * Get the upgrade versions available for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-upgrades --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_aks_get_upgrades(): void {
    }

    /**
     * Get the versions available for creating a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-versions --location
     *                     [--subscription]
     */
    az_aks_get_versions(): void {
    }

    /**
     * Download and install kubectl, the Kubernetes command-line tool. Download and install kubelogin, a client-go credential (exec) plugin implementing azure authentication.
     *
     * Syntax: 
     *
     * az aks install-cli [--client-version]
     *                    [--install-location]
     *                    [--kubelogin-install-location]
     *                    [--kubelogin-version]
     *                    [--subscription]
     */
    az_aks_install_cli(): void {
    }

    /**
     * List managed Kubernetes clusters.
     *
     * Syntax: 
     *
     * az aks list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_aks_list(): void {
    }

    /**
     * Remove Azure Dev Spaces from a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks remove-dev-spaces --name
     *                          --resource-group
     *                          [--subscription]
     *                          [--yes]
     */
    az_aks_remove_dev_spaces(): void {
    }

    /**
     * Rotate certificates and keys on a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks rotate-certs --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--subscription]
     *                     [--yes]
     */
    az_aks_rotate_certs(): void {
    }

    /**
     * Scale the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks scale --name
     *              --node-count
     *              --resource-group
     *              [--no-wait]
     *              [--nodepool-name]
     *              [--subscription]
     */
    az_aks_scale(): void {
    }

    /**
     * Show the details for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks show --name
     *             --resource-group
     *             [--query-examples]
     *             [--subscription]
     */
    az_aks_show(): void {
    }

    /**
     * Update a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks update --name
     *               --resource-group
     *               [--aad-admin-group-object-ids]
     *               [--aad-tenant-id]
     *               [--api-server-authorized-ip-ranges]
     *               [--attach-acr]
     *               [--ca-profile]
     *               [--detach-acr]
     *               [--disable-cluster-autoscaler]
     *               [--enable-aad]
     *               [--enable-cluster-autoscaler]
     *               [--load-balancer-idle-timeout]
     *               [--load-balancer-managed-outbound-ip-count]
     *               [--load-balancer-outbound-ip-prefixes]
     *               [--load-balancer-outbound-ips]
     *               [--load-balancer-outbound-ports]
     *               [--max-count]
     *               [--min-count]
     *               [--no-wait]
     *               [--subscription]
     *               [--update-cluster-autoscaler]
     *               [--uptime-sla]
     */
    az_aks_update(): void {
    }

    /**
     * Update credentials for a managed Kubernetes cluster, like service principal.
     *
     * Syntax: 
     *
     * az aks update-credentials --name
     *                           --resource-group
     *                           [--aad-client-app-id]
     *                           [--aad-server-app-id]
     *                           [--aad-server-app-secret]
     *                           [--aad-tenant-id]
     *                           [--client-secret]
     *                           [--no-wait]
     *                           [--reset-aad]
     *                           [--reset-service-principal]
     *                           [--service-principal]
     *                           [--subscription]
     */
    az_aks_update_credentials(): void {
    }

    /**
     * Upgrade a managed Kubernetes cluster to a newer version.
     *
     * Syntax: 
     *
     * az aks upgrade --kubernetes-version
     *                --name
     *                --resource-group
     *                [--control-plane-only]
     *                [--no-wait]
     *                [--subscription]
     *                [--yes]
     */
    az_aks_upgrade(): void {
    }

    /**
     * Use Azure Dev Spaces with a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks use-dev-spaces --name
     *                       --resource-group
     *                       [--endpoint {None, Private, Public}]
     *                       [--space]
     *                       [--subscription]
     *                       [--update]
     *                       [--yes]
     */
    az_aks_use_dev_spaces(): void {
    }

    /**
     * Wait for a managed Kubernetes cluster to reach a desired state.
     *
     * Syntax: 
     *
     * az aks wait --name
     *             --resource-group
     *             [--created]
     *             [--custom]
     *             [--deleted]
     *             [--exists]
     *             [--interval]
     *             [--subscription]
     *             [--timeout]
     *             [--updated]
     */
    az_aks_wait(): void {
    }
}

/** Manage media reserved units for an Azure Media Services account. */
class az_ams_account_mru {
    /**
     * Set the type and number of media reserved units for an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account mru set [--count]
     *                        [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--type]
     */
    az_ams_account_mru_set(): void {
    }

    /**
     * Show the details of media reserved units for an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account mru show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_ams_account_mru_show(): void {
    }
}

/** Manage service principal and role based access for an Azure Media Services account. */
class az_ams_account_sp {
    /**
     * Create or update a service principal and configure its access to an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account sp create --account-name
     *                          --resource-group
     *                          [--name]
     *                          [--new-sp-name]
     *                          [--password]
     *                          [--role]
     *                          [--subscription]
     *                          [--xml]
     *                          [--years]
     */
    az_ams_account_sp_create(): void {
    }

    /**
     * Generate a new client secret for a service principal configured for an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account sp reset-credentials [--account-name]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--password]
     *                                     [--resource-group]
     *                                     [--role]
     *                                     [--subscription]
     *                                     [--xml]
     *                                     [--years]
     */
    az_ams_account_sp_reset_credentials(): void {
    }
}

/** Manage storage for an Azure Media Services account. */
class az_ams_account_storage {
    /**
     * Attach a secondary storage to an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account storage add [--account-name]
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_ams_account_storage_add(): void {
    }

    /**
     * Detach a secondary storage from an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account storage remove [--account-name]
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_ams_account_storage_remove(): void {
    }

    /**
     * Synchronize storage account keys for a storage account associated with an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account storage sync-storage-keys --id
     *                                          [--account-name]
     *                                          [--ids]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_ams_account_storage_sync_storage_keys(): void {
    }
}

/** Manage account filters for an Azure Media Services account. */
class az_ams_account_filter {
    /**
     * Create an account filter.
     *
     * Syntax: 
     *
     * az ams account-filter create --account-name
     *                              --name
     *                              --resource-group
     *                              [--bitrate]
     *                              [--end-timestamp]
     *                              [--first-quality]
     *                              [--force-end-timestamp {false, true}]
     *                              [--live-backoff-duration]
     *                              [--presentation-window-duration]
     *                              [--start-timestamp]
     *                              [--subscription]
     *                              [--timescale]
     *                              [--tracks]
     */
    az_ams_account_filter_create(): void {
    }

    /**
     * Delete an account filter.
     *
     * Syntax: 
     *
     * az ams account-filter delete [--account-name]
     *                              [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_ams_account_filter_delete(): void {
    }

    /**
     * List all the account filters of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account-filter list --account-name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_ams_account_filter_list(): void {
    }

    /**
     * Show the details of an account filter.
     *
     * Syntax: 
     *
     * az ams account-filter show [--account-name]
     *                            [--ids]
     *                            [--name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_ams_account_filter_show(): void {
    }

    /**
     * Update the details of an account filter.
     *
     * Syntax: 
     *
     * az ams account-filter update [--account-name]
     *                              [--add]
     *                              [--bitrate]
     *                              [--end-timestamp]
     *                              [--first-quality]
     *                              [--force-end-timestamp {false, true}]
     *                              [--force-string]
     *                              [--ids]
     *                              [--live-backoff-duration]
     *                              [--name]
     *                              [--presentation-window-duration]
     *                              [--remove]
     *                              [--resource-group]
     *                              [--set]
     *                              [--start-timestamp]
     *                              [--subscription]
     *                              [--timescale]
     *                              [--tracks]
     */
    az_ams_account_filter_update(): void {
    }
}

/** Manage Azure Media Services accounts. */
class az_ams_account {
    /**
     * Checks whether the Media Service resource name is available.
     *
     * Syntax: 
     *
     * az ams account check-name --location
     *                           --name
     *                           [--subscription]
     */
    az_ams_account_check_name(): void {
    }

    /**
     * Create an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account create --name
     *                       --resource-group
     *                       --storage-account
     *                       [--location]
     *                       [--subscription]
     *                       [--tags]
     */
    az_ams_account_create(): void {
    }

    /**
     * Delete an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_ams_account_delete(): void {
    }

    /**
     * List Azure Media Services accounts for the entire subscription.
     *
     * Syntax: 
     *
     * az ams account list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_ams_account_list(): void {
    }

    /**
     * Show the details of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_ams_account_show(): void {
    }

    /**
     * Update the details of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams account update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     *                       [--tags]
     */
    az_ams_account_update(): void {
    }
}

/** Manage asset filters for an Azure Media Services account. */
class az_ams_asset_filter {
    /**
     * Create an asset filter.
     *
     * Syntax: 
     *
     * az ams asset-filter create --account-name
     *                            --asset-name
     *                            --name
     *                            --resource-group
     *                            [--bitrate]
     *                            [--end-timestamp]
     *                            [--first-quality]
     *                            [--force-end-timestamp {false, true}]
     *                            [--live-backoff-duration]
     *                            [--presentation-window-duration]
     *                            [--start-timestamp]
     *                            [--subscription]
     *                            [--timescale]
     *                            [--tracks]
     */
    az_ams_asset_filter_create(): void {
    }

    /**
     * Delete an asset filter.
     *
     * Syntax: 
     *
     * az ams asset-filter delete [--account-name]
     *                            [--asset-name]
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_ams_asset_filter_delete(): void {
    }

    /**
     * List all the asset filters of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams asset-filter list --account-name
     *                          --asset-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_ams_asset_filter_list(): void {
    }

    /**
     * Show the details of an asset filter.
     *
     * Syntax: 
     *
     * az ams asset-filter show [--account-name]
     *                          [--asset-name]
     *                          [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_ams_asset_filter_show(): void {
    }

    /**
     * Update the details of an asset filter.
     *
     * Syntax: 
     *
     * az ams asset-filter update [--account-name]
     *                            [--add]
     *                            [--asset-name]
     *                            [--bitrate]
     *                            [--end-timestamp]
     *                            [--first-quality]
     *                            [--force-end-timestamp {false, true}]
     *                            [--force-string]
     *                            [--ids]
     *                            [--live-backoff-duration]
     *                            [--name]
     *                            [--presentation-window-duration]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--start-timestamp]
     *                            [--subscription]
     *                            [--timescale]
     *                            [--tracks]
     */
    az_ams_asset_filter_update(): void {
    }
}

/** Manage assets for an Azure Media Services account. */
class az_ams_asset {
    /**
     * Create an asset.
     *
     * Syntax: 
     *
     * az ams asset create --account-name
     *                     --name
     *                     --resource-group
     *                     [--alternate-id]
     *                     [--container]
     *                     [--description]
     *                     [--storage-account]
     *                     [--subscription]
     */
    az_ams_asset_create(): void {
    }

    /**
     * Delete an asset.
     *
     * Syntax: 
     *
     * az ams asset delete [--account-name]
     *                     [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_ams_asset_delete(): void {
    }

    /**
     * Get the asset storage encryption keys used to decrypt content created by version 2 of the Media Services API.
     *
     * Syntax: 
     *
     * az ams asset get-encryption-key [--account-name]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_ams_asset_get_encryption_key(): void {
    }

    /**
     * Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.
     *
     * Syntax: 
     *
     * az ams asset get-sas-urls [--account-name]
     *                           [--expiry]
     *                           [--ids]
     *                           [--name]
     *                           [--permissions {Read, ReadWrite, ReadWriteDelete}]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_ams_asset_get_sas_urls(): void {
    }

    /**
     * List all the assets of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams asset list --account-name
     *                   --resource-group
     *                   [--filter]
     *                   [--orderby]
     *                   [--query-examples]
     *                   [--subscription]
     *                   [--top]
     */
    az_ams_asset_list(): void {
    }

    /**
     * List streaming locators which are associated with this asset.
     *
     * Syntax: 
     *
     * az ams asset list-streaming-locators [--account-name]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_ams_asset_list_streaming_locators(): void {
    }

    /**
     * Show the details of an asset.
     *
     * Syntax: 
     *
     * az ams asset show [--account-name]
     *                   [--ids]
     *                   [--name]
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_ams_asset_show(): void {
    }

    /**
     * Update the details of an asset.
     *
     * Syntax: 
     *
     * az ams asset update [--account-name]
     *                     [--add]
     *                     [--alternate-id]
     *                     [--description]
     *                     [--force-string]
     *                     [--ids]
     *                     [--name]
     *                     [--remove]
     *                     [--resource-group]
     *                     [--set]
     *                     [--subscription]
     */
    az_ams_asset_update(): void {
    }
}

/** Manage options for an existing content key policy. */
class az_ams_content_key_policy_option {
    /**
     * Add a new option to an existing content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy option add --policy-option-name
     *                                      [--account-name]
     *                                      [--alt-rsa-token-keys]
     *                                      [--alt-symmetric-token-keys]
     *                                      [--alt-x509-token-keys]
     *                                      [--ask]
     *                                      [--audience]
     *                                      [--clear-key-configuration]
     *                                      [--fair-play-pfx]
     *                                      [--fair-play-pfx-password]
     *                                      [--fp-playback-duration-seconds]
     *                                      [--fp-storage-duration-seconds]
     *                                      [--ids]
     *                                      [--issuer]
     *                                      [--name]
     *                                      [--open-id-connect-discovery-document]
     *                                      [--open-restriction]
     *                                      [--play-ready-template]
     *                                      [--rental-and-lease-key-type]
     *                                      [--rental-duration]
     *                                      [--resource-group]
     *                                      [--subscription]
     *                                      [--token-claims]
     *                                      [--token-key]
     *                                      [--token-key-type]
     *                                      [--token-type]
     *                                      [--widevine-template]
     */
    az_ams_content_key_policy_option_add(): void {
    }

    /**
     * Remove an option from an existing content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy option remove --policy-option-id
     *                                         [--account-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_ams_content_key_policy_option_remove(): void {
    }

    /**
     * Update an option from an existing content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy option update --policy-option-id
     *                                         [--account-name]
     *                                         [--add-alt-token-key]
     *                                         [--add-alt-token-key-type]
     *                                         [--ask]
     *                                         [--audience]
     *                                         [--fair-play-pfx]
     *                                         [--fair-play-pfx-password]
     *                                         [--fp-playback-duration-seconds]
     *                                         [--fp-storage-duration-seconds]
     *                                         [--ids]
     *                                         [--issuer]
     *                                         [--name]
     *                                         [--open-id-connect-discovery-document]
     *                                         [--play-ready-template]
     *                                         [--policy-option-name]
     *                                         [--rental-and-lease-key-type]
     *                                         [--rental-duration]
     *                                         [--resource-group]
     *                                         [--subscription]
     *                                         [--token-claims]
     *                                         [--token-key]
     *                                         [--token-key-type]
     *                                         [--token-type]
     *                                         [--widevine-template]
     */
    az_ams_content_key_policy_option_update(): void {
    }
}

/** Manage content key policies for an Azure Media Services account. */
class az_ams_content_key_policy {
    /**
     * Create a new content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy create --account-name
     *                                  --name
     *                                  --policy-option-name
     *                                  --resource-group
     *                                  [--alt-rsa-token-keys]
     *                                  [--alt-symmetric-token-keys]
     *                                  [--alt-x509-token-keys]
     *                                  [--ask]
     *                                  [--audience]
     *                                  [--clear-key-configuration]
     *                                  [--description]
     *                                  [--fair-play-pfx]
     *                                  [--fair-play-pfx-password]
     *                                  [--fp-playback-duration-seconds]
     *                                  [--fp-storage-duration-seconds]
     *                                  [--issuer]
     *                                  [--open-id-connect-discovery-document]
     *                                  [--open-restriction]
     *                                  [--play-ready-template]
     *                                  [--rental-and-lease-key-type]
     *                                  [--rental-duration]
     *                                  [--subscription]
     *                                  [--token-claims]
     *                                  [--token-key]
     *                                  [--token-key-type]
     *                                  [--token-type]
     *                                  [--widevine-template]
     */
    az_ams_content_key_policy_create(): void {
    }

    /**
     * Delete a content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy delete [--account-name]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_ams_content_key_policy_delete(): void {
    }

    /**
     * List all the content key policies within an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams content-key-policy list --account-name
     *                                --resource-group
     *                                [--filter]
     *                                [--orderby]
     *                                [--query-examples]
     *                                [--subscription]
     *                                [--top]
     */
    az_ams_content_key_policy_list(): void {
    }

    /**
     * Show an existing content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy show [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--with-secrets]
     */
    az_ams_content_key_policy_show(): void {
    }

    /**
     * Update an existing content key policy.
     *
     * Syntax: 
     *
     * az ams content-key-policy update [--account-name]
     *                                  [--add]
     *                                  [--description]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--set]
     *                                  [--subscription]
     */
    az_ams_content_key_policy_update(): void {
    }
}

/** Manage jobs for a transform. */
class az_ams_job {
    /**
     * Cancel a job.
     *
     * Syntax: 
     *
     * az ams job cancel [--account-name]
     *                   [--delete]
     *                   [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     *                   [--transform-name]
     */
    az_ams_job_cancel(): void {
    }

    /**
     * Delete a job.
     *
     * Syntax: 
     *
     * az ams job delete [--account-name]
     *                   [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     *                   [--transform-name]
     */
    az_ams_job_delete(): void {
    }

    /**
     * List all the jobs of a transform within an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams job list --account-name
     *                 --resource-group
     *                 --transform-name
     *                 [--filter]
     *                 [--orderby]
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_ams_job_list(): void {
    }

    /**
     * Show the details of a job.
     *
     * Syntax: 
     *
     * az ams job show [--account-name]
     *                 [--ids]
     *                 [--name]
     *                 [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     *                 [--transform-name]
     */
    az_ams_job_show(): void {
    }

    /**
     * Start a job.
     *
     * Syntax: 
     *
     * az ams job start --output-assets
     *                  [--account-name]
     *                  [--base-uri]
     *                  [--correlation-data]
     *                  [--description]
     *                  [--files]
     *                  [--ids]
     *                  [--input-asset-name]
     *                  [--label]
     *                  [--name]
     *                  [--priority {High, Low, Normal}]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--transform-name]
     */
    az_ams_job_start(): void {
    }

    /**
     * Update an existing job.
     *
     * Syntax: 
     *
     * az ams job update [--account-name]
     *                   [--add]
     *                   [--description]
     *                   [--force-string]
     *                   [--ids]
     *                   [--name]
     *                   [--priority {High, Low, Normal}]
     *                   [--remove]
     *                   [--resource-group]
     *                   [--set]
     *                   [--subscription]
     *                   [--transform-name]
     */
    az_ams_job_update(): void {
    }
}

/** Manage live events for an Azure Media Service account. */
class az_ams_live_event {
    /**
     * Create a live event.
     *
     * Syntax: 
     *
     * az ams live-event create --account-name
     *                          --ips
     *                          --name
     *                          --resource-group
     *                          --streaming-protocol {FragmentedMP4, RTMP}
     *                          [--access-token]
     *                          [--alternative-media-id]
     *                          [--auto-start]
     *                          [--client-access-policy]
     *                          [--cross-domain-policy]
     *                          [--description]
     *                          [--encoding-type]
     *                          [--key-frame-interval-duration]
     *                          [--no-wait]
     *                          [--preset-name]
     *                          [--preview-ips]
     *                          [--preview-locator]
     *                          [--stream-options {Default, LowLatency}]
     *                          [--streaming-policy-name]
     *                          [--subscription]
     *                          [--tags]
     *                          [--vanity-url {false, true}]
     */
    az_ams_live_event_create(): void {
    }

    /**
     * Delete a live event.
     *
     * Syntax: 
     *
     * az ams live-event delete [--account-name]
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_ams_live_event_delete(): void {
    }

    /**
     * List all the live events of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams live-event list --account-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_ams_live_event_list(): void {
    }

    /**
     * Reset a live event.
     *
     * Syntax: 
     *
     * az ams live-event reset [--account-name]
     *                         [--ids]
     *                         [--name]
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_ams_live_event_reset(): void {
    }

    /**
     * Show the details of a live event.
     *
     * Syntax: 
     *
     * az ams live-event show [--account-name]
     *                        [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_ams_live_event_show(): void {
    }

    /**
     * Start a live event.
     *
     * Syntax: 
     *
     * az ams live-event start [--account-name]
     *                         [--ids]
     *                         [--name]
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_ams_live_event_start(): void {
    }

    /**
     * Stop a live event.
     *
     * Syntax: 
     *
     * az ams live-event stop [--account-name]
     *                        [--ids]
     *                        [--name]
     *                        [--no-wait]
     *                        [--remove-outputs-on-stop]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_ams_live_event_stop(): void {
    }

    /**
     * Update the details of a live event.
     *
     * Syntax: 
     *
     * az ams live-event update [--account-name]
     *                          [--add]
     *                          [--client-access-policy]
     *                          [--cross-domain-policy]
     *                          [--description]
     *                          [--force-string]
     *                          [--ids]
     *                          [--ips]
     *                          [--key-frame-interval-duration]
     *                          [--name]
     *                          [--preview-ips]
     *                          [--remove]
     *                          [--resource-group]
     *                          [--set]
     *                          [--subscription]
     *                          [--tags]
     */
    az_ams_live_event_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the live event is met.
     *
     * Syntax: 
     *
     * az ams live-event wait [--account-name]
     *                        [--created]
     *                        [--custom]
     *                        [--deleted]
     *                        [--exists]
     *                        [--ids]
     *                        [--interval]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--timeout]
     *                        [--updated]
     */
    az_ams_live_event_wait(): void {
    }
}

/** Manage live outputs for an Azure Media Service account. */
class az_ams_live_output {
    /**
     * Create a live output.
     *
     * Syntax: 
     *
     * az ams live-output create --account-name
     *                           --archive-window-length
     *                           --asset-name
     *                           --live-event-name
     *                           --name
     *                           --resource-group
     *                           [--description]
     *                           [--fragments-per-ts-segment]
     *                           [--manifest-name]
     *                           [--output-snap-time]
     *                           [--subscription]
     */
    az_ams_live_output_create(): void {
    }

    /**
     * Delete a live output.
     *
     * Syntax: 
     *
     * az ams live-output delete [--account-name]
     *                           [--ids]
     *                           [--live-event-name]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_ams_live_output_delete(): void {
    }

    /**
     * List all the live outputs in a live event.
     *
     * Syntax: 
     *
     * az ams live-output list --account-name
     *                         --live-event-name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_ams_live_output_list(): void {
    }

    /**
     * Show the details of a live output.
     *
     * Syntax: 
     *
     * az ams live-output show [--account-name]
     *                         [--ids]
     *                         [--live-event-name]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_ams_live_output_show(): void {
    }
}

/** Manage AkamaiAccessControl objects to be used on streaming endpoints. */
class az_ams_streaming_endpoint_akamai {
    /**
     * Add an AkamaiAccessControl to an existing streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint akamai add [--account-name]
     *                                      [--base64-key]
     *                                      [--expiration]
     *                                      [--identifier]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_ams_streaming_endpoint_akamai_add(): void {
    }

    /**
     * Remove an AkamaiAccessControl from an existing streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint akamai remove --identifier
     *                                         [--account-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_ams_streaming_endpoint_akamai_remove(): void {
    }
}

/** Manage streaming endpoints for an Azure Media Service account. */
class az_ams_streaming_endpoint {
    /**
     * Create a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint create --account-name
     *                                  --name
     *                                  --resource-group
     *                                  --scale-units
     *                                  [--auto-start]
     *                                  [--availability-set-name]
     *                                  [--cdn-profile]
     *                                  [--cdn-provider]
     *                                  [--client-access-policy]
     *                                  [--cross-domain-policy]
     *                                  [--custom-host-names]
     *                                  [--description]
     *                                  [--ips]
     *                                  [--max-cache-age]
     *                                  [--no-wait]
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_ams_streaming_endpoint_create(): void {
    }

    /**
     * Delete a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint delete [--account-name]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_ams_streaming_endpoint_delete(): void {
    }

    /**
     * List all the streaming endpoints within an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint list --account-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_ams_streaming_endpoint_list(): void {
    }

    /**
     * Set the scale of a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint scale [--account-name]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--scale-units]
     *                                 [--subscription]
     */
    az_ams_streaming_endpoint_scale(): void {
    }

    /**
     * Show the details of a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint show [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_ams_streaming_endpoint_show(): void {
    }

    /**
     * Start a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint start [--account-name]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_ams_streaming_endpoint_start(): void {
    }

    /**
     * Stop a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint stop [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--no-wait]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_ams_streaming_endpoint_stop(): void {
    }

    /**
     * Update the details of a streaming endpoint.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint update [--account-name]
     *                                  [--add]
     *                                  [--cdn-profile]
     *                                  [--cdn-provider]
     *                                  [--client-access-policy]
     *                                  [--cross-domain-policy]
     *                                  [--custom-host-names]
     *                                  [--description]
     *                                  [--disable-cdn]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--ips]
     *                                  [--max-cache-age]
     *                                  [--name]
     *                                  [--no-wait]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--set]
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_ams_streaming_endpoint_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the streaming endpoint is met.
     *
     * Syntax: 
     *
     * az ams streaming-endpoint wait [--account-name]
     *                                [--created]
     *                                [--custom]
     *                                [--deleted]
     *                                [--exists]
     *                                [--ids]
     *                                [--interval]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--timeout]
     *                                [--updated]
     */
    az_ams_streaming_endpoint_wait(): void {
    }
}

/** Manage streaming locators for an Azure Media Services account. */
class az_ams_streaming_locator {
    /**
     * Create a streaming locator.
     *
     * Syntax: 
     *
     * az ams streaming-locator create --account-name
     *                                 --asset-name
     *                                 --name
     *                                 --resource-group
     *                                 --streaming-policy-name
     *                                 [--alternative-media-id]
     *                                 [--content-key-policy-name]
     *                                 [--content-keys]
     *                                 [--end-time]
     *                                 [--filters]
     *                                 [--start-time]
     *                                 [--streaming-locator-id]
     *                                 [--subscription]
     */
    az_ams_streaming_locator_create(): void {
    }

    /**
     * Delete a Streaming Locator.
     *
     * Syntax: 
     *
     * az ams streaming-locator delete [--account-name]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_ams_streaming_locator_delete(): void {
    }

    /**
     * List paths supported by a streaming locator.
     *
     * Syntax: 
     *
     * az ams streaming-locator get-paths [--account-name]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_ams_streaming_locator_get_paths(): void {
    }

    /**
     * List all the streaming locators within an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams streaming-locator list --account-name
     *                               --resource-group
     *                               [--filter]
     *                               [--orderby]
     *                               [--query-examples]
     *                               [--subscription]
     *                               [--top]
     */
    az_ams_streaming_locator_list(): void {
    }

    /**
     * List content keys used by a streaming locator.
     *
     * Syntax: 
     *
     * az ams streaming-locator list-content-keys [--account-name]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_ams_streaming_locator_list_content_keys(): void {
    }

    /**
     * Show the details of a streaming locator.
     *
     * Syntax: 
     *
     * az ams streaming-locator show [--account-name]
     *                               [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_ams_streaming_locator_show(): void {
    }
}

/** Manage streaming policies for an Azure Media Services account. */
class az_ams_streaming_policy {
    /**
     * Create a streaming policy.
     *
     * Syntax: 
     *
     * az ams streaming-policy create --account-name
     *                                --name
     *                                --resource-group
     *                                [--cbcs-clear-tracks]
     *                                [--cbcs-default-key-label]
     *                                [--cbcs-default-key-policy-name]
     *                                [--cbcs-fair-play-allow-persistent-license {false, true}]
     *                                [--cbcs-fair-play-template]
     *                                [--cbcs-key-to-track-mappings]
     *                                [--cbcs-play-ready-attributes]
     *                                [--cbcs-play-ready-template]
     *                                [--cbcs-protocols]
     *                                [--cbcs-widevine-template]
     *                                [--cenc-clear-tracks]
     *                                [--cenc-default-key-label]
     *                                [--cenc-default-key-policy-name]
     *                                [--cenc-disable-play-ready {false, true}]
     *                                [--cenc-disable-widevine {false, true}]
     *                                [--cenc-key-to-track-mappings]
     *                                [--cenc-play-ready-attributes]
     *                                [--cenc-play-ready-template]
     *                                [--cenc-protocols]
     *                                [--cenc-widevine-template]
     *                                [--default-content-key-policy-name]
     *                                [--envelope-clear-tracks]
     *                                [--envelope-default-key-label]
     *                                [--envelope-default-key-policy-name]
     *                                [--envelope-key-to-track-mappings]
     *                                [--envelope-protocols]
     *                                [--envelope-template]
     *                                [--no-encryption-protocols]
     *                                [--subscription]
     */
    az_ams_streaming_policy_create(): void {
    }

    /**
     * Delete a Streaming Policy.
     *
     * Syntax: 
     *
     * az ams streaming-policy delete [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_ams_streaming_policy_delete(): void {
    }

    /**
     * List all the streaming policies within an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams streaming-policy list --account-name
     *                              --resource-group
     *                              [--filter]
     *                              [--orderby]
     *                              [--query-examples]
     *                              [--subscription]
     *                              [--top]
     */
    az_ams_streaming_policy_list(): void {
    }

    /**
     * Show the details of a streaming policy.
     *
     * Syntax: 
     *
     * az ams streaming-policy show [--account-name]
     *                              [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_ams_streaming_policy_show(): void {
    }
}

/** Manage transform outputs for an Azure Media Services account. */
class az_ams_transform_output {
    /**
     * Add an output to an existing transform.
     *
     * Syntax: 
     *
     * az ams transform output add --preset
     *                             [--account-name]
     *                             [--audio-language]
     *                             [--ids]
     *                             [--insights-to-extract {AllInsights, AudioInsightsOnly, VideoInsightsOnly}]
     *                             [--name]
     *                             [--on-error {ContinueJob, StopProcessingJob}]
     *                             [--relative-priority {High, Low, Normal}]
     *                             [--resolution]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_ams_transform_output_add(): void {
    }

    /**
     * Remove an output from an existing transform.
     *
     * Syntax: 
     *
     * az ams transform output remove --output-index
     *                                [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_ams_transform_output_remove(): void {
    }
}

/** Manage transforms for an Azure Media Services account. */
class az_ams_transform {
    /**
     * Create a transform.
     *
     * Syntax: 
     *
     * az ams transform create --account-name
     *                         --name
     *                         --preset
     *                         --resource-group
     *                         [--audio-language]
     *                         [--description]
     *                         [--insights-to-extract {AllInsights, AudioInsightsOnly, VideoInsightsOnly}]
     *                         [--on-error {ContinueJob, StopProcessingJob}]
     *                         [--relative-priority {High, Low, Normal}]
     *                         [--resolution]
     *                         [--subscription]
     */
    az_ams_transform_create(): void {
    }

    /**
     * Delete a transform.
     *
     * Syntax: 
     *
     * az ams transform delete [--account-name]
     *                         [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_ams_transform_delete(): void {
    }

    /**
     * List all the transforms of an Azure Media Services account.
     *
     * Syntax: 
     *
     * az ams transform list --account-name
     *                       --resource-group
     *                       [--filter]
     *                       [--orderby]
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_ams_transform_list(): void {
    }

    /**
     * Show the details of a transform.
     *
     * Syntax: 
     *
     * az ams transform show [--account-name]
     *                       [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_ams_transform_show(): void {
    }

    /**
     * Update the details of a transform.
     *
     * Syntax: 
     *
     * az ams transform update [--account-name]
     *                         [--add]
     *                         [--description]
     *                         [--force-string]
     *                         [--ids]
     *                         [--name]
     *                         [--remove]
     *                         [--resource-group]
     *                         [--set]
     *                         [--subscription]
     */
    az_ams_transform_update(): void {
    }
}

/** Manage Azure Media Services resources. */
class az_ams {
}

/** Manage Azure API Management API Operations. */
class az_apim_api_operation {
    /**
     * Creates a new operation in the API.
     *
     * Syntax: 
     *
     * az apim api operation create --api-id
     *                              --display-name
     *                              --method
     *                              --resource-group
     *                              --service-name
     *                              --url-template
     *                              [--description]
     *                              [--if-match]
     *                              [--operation-id]
     *                              [--params]
     *                              [--subscription]
     */
    az_apim_api_operation_create(): void {
    }

    /**
     * Deletes the specified operation in the API.
     *
     * Syntax: 
     *
     * az apim api operation delete --api-id
     *                              --operation-id
     *                              --resource-group
     *                              --service-name
     *                              [--if-match]
     *                              [--subscription]
     */
    az_apim_api_operation_delete(): void {
    }

    /**
     * List a collection of the operations for the specified API.
     *
     * Syntax: 
     *
     * az apim api operation list --api-id
     *                            --resource-group
     *                            --service-name
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_apim_api_operation_list(): void {
    }

    /**
     * Gets the details of the API Operation specified by its identifier.
     *
     * Syntax: 
     *
     * az apim api operation show --api-id
     *                            --operation-id
     *                            --resource-group
     *                            --service-name
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_apim_api_operation_show(): void {
    }

    /**
     * Updates the details of the operation in the API specified by its identifier.
     *
     * Syntax: 
     *
     * az apim api operation update --api-id
     *                              --operation-id
     *                              --resource-group
     *                              --service-name
     *                              [--add]
     *                              [--description]
     *                              [--display-name]
     *                              [--force-string]
     *                              [--if-match]
     *                              [--method]
     *                              [--remove]
     *                              [--set]
     *                              [--subscription]
     *                              [--url-template]
     */
    az_apim_api_operation_update(): void {
    }
}

/** Manage Azure API Management API Release. */
class az_apim_api_release {
    /**
     * Creates a new Release for the API.
     *
     * Syntax: 
     *
     * az apim api release create --api-id
     *                            --api-revision
     *                            --resource-group
     *                            --service-name
     *                            [--if-match]
     *                            [--notes]
     *                            [--release-id]
     *                            [--subscription]
     */
    az_apim_api_release_create(): void {
    }

    /**
     * Deletes the specified release in the API.
     *
     * Syntax: 
     *
     * az apim api release delete --api-id
     *                            --release-id
     *                            --resource-group
     *                            --service-name
     *                            [--if-match]
     *                            [--subscription]
     */
    az_apim_api_release_delete(): void {
    }

    /**
     * Lists all releases of an API.
     *
     * Syntax: 
     *
     * az apim api release list --api-id
     *                          --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_apim_api_release_list(): void {
    }

    /**
     * Returns the details of an API release.
     *
     * Syntax: 
     *
     * az apim api release show --api-id
     *                          --release-id
     *                          --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_apim_api_release_show(): void {
    }

    /**
     * Updates the details of the release of the API specified by its identifier.
     *
     * Syntax: 
     *
     * az apim api release update --api-id
     *                            --release-id
     *                            --resource-group
     *                            --service-name
     *                            [--add]
     *                            [--api-id1]
     *                            [--force-string]
     *                            [--if-match]
     *                            [--notes]
     *                            [--remove]
     *                            [--set]
     *                            [--subscription]
     */
    az_apim_api_release_update(): void {
    }
}

/** Manage Azure API Management API Revision. */
class az_apim_api_revision {
    /**
     * Create API revision.
     *
     * Syntax: 
     *
     * az apim api revision create --api-id
     *                             --api-revision
     *                             --resource-group
     *                             --service-name
     *                             [--api-revision-description]
     *                             [--subscription]
     */
    az_apim_api_revision_create(): void {
    }

    /**
     * Lists all revisions of an API.
     *
     * Syntax: 
     *
     * az apim api revision list --api-id
     *                           --resource-group
     *                           --service-name
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_apim_api_revision_list(): void {
    }
}

/** Manage Azure API Management API Version Set. */
class az_apim_api_versionset {
    /**
     * Creates a Api Version Set.
     *
     * Syntax: 
     *
     * az apim api versionset create --display-name
     *                               --resource-group
     *                               --service-name
     *                               --versioning-scheme
     *                               [--description]
     *                               [--if-match]
     *                               [--subscription]
     *                               [--version-header-name]
     *                               [--version-query-name]
     *                               [--version-set-id]
     */
    az_apim_api_versionset_create(): void {
    }

    /**
     * Deletes specific Api Version Set.
     *
     * Syntax: 
     *
     * az apim api versionset delete --resource-group
     *                               --service-name
     *                               --version-set-id
     *                               [--if-match]
     *                               [--subscription]
     */
    az_apim_api_versionset_delete(): void {
    }

    /**
     * Lists a collection of API Version Sets in the specified service instance.
     *
     * Syntax: 
     *
     * az apim api versionset list --resource-group
     *                             --service-name
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_apim_api_versionset_list(): void {
    }

    /**
     * Gets the details of the Api Version Set specified by its identifier.
     *
     * Syntax: 
     *
     * az apim api versionset show --resource-group
     *                             --service-name
     *                             --version-set-id
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_apim_api_versionset_show(): void {
    }

    /**
     * Updates the details of the Api VersionSet specified by its identifier.
     *
     * Syntax: 
     *
     * az apim api versionset update --resource-group
     *                               --service-name
     *                               --version-set-id
     *                               [--add]
     *                               [--description]
     *                               [--display-name]
     *                               [--force-string]
     *                               [--if-match]
     *                               [--remove]
     *                               [--set]
     *                               [--subscription]
     *                               [--version-header-name]
     *                               [--version-query-name]
     *                               [--versioning-scheme]
     */
    az_apim_api_versionset_update(): void {
    }
}

/** Manage Azure API Management API's. */
class az_apim_api {
    /**
     * Create an API Management API.
     *
     * Syntax: 
     *
     * az apim api create --api-id
     *                    --display-name
     *                    --path
     *                    --resource-group
     *                    --service-name
     *                    [--api-type {http, soap}]
     *                    [--authorization-scope]
     *                    [--authorization-server-id]
     *                    [--bearer-token-sending-methods]
     *                    [--description]
     *                    [--no-wait]
     *                    [--open-id-provider-id]
     *                    [--protocols {http, https}]
     *                    [--service-url]
     *                    [--subscription]
     *                    [--subscription-key-header-name]
     *                    [--subscription-key-query-param-name]
     *                    [--subscription-key-required]
     *                    [--subscription-required {false, true}]
     */
    az_apim_api_create(): void {
    }

    /**
     * Delete an API Management API.
     *
     * Syntax: 
     *
     * az apim api delete --api-id
     *                    --resource-group
     *                    --service-name
     *                    [--delete-revisions]
     *                    [--if-match]
     *                    [--no-wait]
     *                    [--subscription]
     *                    [--yes]
     */
    az_apim_api_delete(): void {
    }

    /**
     * Import an API Management service instance.
     *
     * Syntax: 
     *
     * az apim api import --path
     *                    --resource-group
     *                    --service-name
     *                    [--api-id]
     *                    [--api-revision]
     *                    [--api-type {http, soap}]
     *                    [--description]
     *                    [--display-name]
     *                    [--no-wait]
     *                    [--protocols {http, https}]
     *                    [--service-url]
     *                    [--soap-api-type]
     *                    [--specification-format {OpenApi, OpenApiJson, Swagger, Wadl, Wsdl}]
     *                    [--specification-path]
     *                    [--specification-url]
     *                    [--subscription]
     *                    [--subscription-key-header-name]
     *                    [--subscription-key-query-param-name]
     *                    [--subscription-required {false, true}]
     *                    [--wsdl-endpoint-name]
     *                    [--wsdl-service-name]
     */
    az_apim_api_import(): void {
    }

    /**
     * List API Management API's.
     *
     * Syntax: 
     *
     * az apim api list --resource-group
     *                  --service-name
     *                  [--filter-display-name]
     *                  [--query-examples]
     *                  [--skip]
     *                  [--subscription]
     *                  [--top]
     */
    az_apim_api_list(): void {
    }

    /**
     * Show details of an API Management API.
     *
     * Syntax: 
     *
     * az apim api show --api-id
     *                  --resource-group
     *                  --service-name
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_apim_api_show(): void {
    }

    /**
     * Update an API Management API.
     *
     * Syntax: 
     *
     * az apim api update --api-id
     *                    --resource-group
     *                    --service-name
     *                    [--add]
     *                    [--api-type {http, soap}]
     *                    [--description]
     *                    [--display-name]
     *                    [--force-string]
     *                    [--if-match]
     *                    [--no-wait]
     *                    [--path]
     *                    [--protocols {http, https}]
     *                    [--remove]
     *                    [--service-url]
     *                    [--set]
     *                    [--subscription]
     *                    [--subscription-key-header-name]
     *                    [--subscription-key-query-param-name]
     *                    [--subscription-required {false, true}]
     *                    [--tags]
     */
    az_apim_api_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of an apim api is met.
     *
     * Syntax: 
     *
     * az apim api wait --api-id
     *                  --name
     *                  --resource-group
     *                  [--created]
     *                  [--custom]
     *                  [--deleted]
     *                  [--exists]
     *                  [--interval]
     *                  [--subscription]
     *                  [--timeout]
     *                  [--updated]
     */
    az_apim_api_wait(): void {
    }
}

/** Manage Azure API Management Named Values. */
class az_apim_nv {
    /**
     * Create an API Management Named Value.
     *
     * Syntax: 
     *
     * az apim nv create --display-name
     *                   --named-value-id
     *                   --resource-group
     *                   --service-name
     *                   [--secret {false, true}]
     *                   [--subscription]
     *                   [--tags]
     *                   [--value]
     */
    az_apim_nv_create(): void {
    }

    /**
     * Delete an API Management Named Value.
     *
     * Syntax: 
     *
     * az apim nv delete --named-value-id
     *                   --resource-group
     *                   --service-name
     *                   [--subscription]
     *                   [--yes]
     */
    az_apim_nv_delete(): void {
    }

    /**
     * List API Management Named Values.
     *
     * Syntax: 
     *
     * az apim nv list --resource-group
     *                 --service-name
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_apim_nv_list(): void {
    }

    /**
     * Show details of an API Management Named Value.
     *
     * Syntax: 
     *
     * az apim nv show --named-value-id
     *                 --resource-group
     *                 --service-name
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_apim_nv_show(): void {
    }

    /**
     * Gets the secret of an API Management Named Value.
     *
     * Syntax: 
     *
     * az apim nv show-secret --named-value-id
     *                        --resource-group
     *                        --service-name
     *                        [--subscription]
     */
    az_apim_nv_show_secret(): void {
    }

    /**
     * Update an API Management Named Value.
     *
     * Syntax: 
     *
     * az apim nv update --named-value-id
     *                   --resource-group
     *                   --service-name
     *                   [--add]
     *                   [--force-string]
     *                   [--if-match]
     *                   [--remove]
     *                   [--secret {false, true}]
     *                   [--set]
     *                   [--subscription]
     *                   [--tags]
     *                   [--value]
     */
    az_apim_nv_update(): void {
    }
}

/** Manage Azure API Management Product's APIs. */
class az_apim_product_api {
    /**
     * Add an API to the specified product.
     *
     * Syntax: 
     *
     * az apim product api add --api-id
     *                         --product-id
     *                         --resource-group
     *                         --service-name
     *                         [--subscription]
     */
    az_apim_product_api_add(): void {
    }

    /**
     * Checks that API entity specified by identifier is associated with the Product entity.
     *
     * Syntax: 
     *
     * az apim product api check --api-id
     *                           --product-id
     *                           --resource-group
     *                           --service-name
     *                           [--subscription]
     */
    az_apim_product_api_check(): void {
    }

    /**
     * Deletes the specified API from the specified product.
     *
     * Syntax: 
     *
     * az apim product api delete --api-id
     *                            --product-id
     *                            --resource-group
     *                            --service-name
     *                            [--subscription]
     */
    az_apim_product_api_delete(): void {
    }

    /**
     * Lists a collection of the APIs associated with a product.
     *
     * Syntax: 
     *
     * az apim product api list --product-id
     *                          --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_apim_product_api_list(): void {
    }
}

/** Manage Azure API Management Product's. */
class az_apim_product {
    /**
     * Creates a product.
     *
     * Syntax: 
     *
     * az apim product create --product-name
     *                        --resource-group
     *                        --service-name
     *                        [--approval-required]
     *                        [--description]
     *                        [--legal-terms]
     *                        [--no-wait]
     *                        [--product-id]
     *                        [--state {notPublished, published}]
     *                        [--subscription]
     *                        [--subscription-required]
     *                        [--subscriptions-limit]
     */
    az_apim_product_create(): void {
    }

    /**
     * Delete product.
     *
     * Syntax: 
     *
     * az apim product delete --product-id
     *                        --resource-group
     *                        --service-name
     *                        [--delete-subscriptions]
     *                        [--if-match]
     *                        [--no-wait]
     *                        [--subscription]
     *                        [--yes]
     */
    az_apim_product_delete(): void {
    }

    /**
     * Lists a collection of products in the specified service instance.
     *
     * Syntax: 
     *
     * az apim product list --resource-group
     *                      --service-name
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_apim_product_list(): void {
    }

    /**
     * Gets the details of the product specified by its identifier.
     *
     * Syntax: 
     *
     * az apim product show --product-id
     *                      --resource-group
     *                      --service-name
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_apim_product_show(): void {
    }

    /**
     * Update existing product details.
     *
     * Syntax: 
     *
     * az apim product update --product-id
     *                        --resource-group
     *                        --service-name
     *                        [--add]
     *                        [--approval-required]
     *                        [--description]
     *                        [--force-string]
     *                        [--if-match]
     *                        [--legal-terms]
     *                        [--no-wait]
     *                        [--product-name]
     *                        [--remove]
     *                        [--set]
     *                        [--state {notPublished, published}]
     *                        [--subscription]
     *                        [--subscription-required]
     *                        [--subscriptions-limit]
     */
    az_apim_product_update(): void {
    }
}

/** Manage Azure API Management services. */
class az_apim {
    /**
     * Back up an API Management service to the configured storage account.
     *
     * Syntax: 
     *
     * az apim apply-network-updates --name
     *                               --resource-group
     *                               [--location]
     *                               [--no-wait]
     *                               [--subscription]
     */
    az_apim_apply_network_updates(): void {
    }

    /**
     * Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.
     *
     * Syntax: 
     *
     * az apim backup --backup-name
     *                --name
     *                --resource-group
     *                --storage-account-container
     *                --storage-account-key
     *                --storage-account-name
     *                [--no-wait]
     *                [--subscription]
     */
    az_apim_backup(): void {
    }

    /**
     * Checks to see if a service name is available to use.
     *
     * Syntax: 
     *
     * az apim check-name --name
     *                    [--subscription]
     */
    az_apim_check_name(): void {
    }

    /**
     * Create an API Management service instance.
     *
     * Syntax: 
     *
     * az apim create --name
     *                --publisher-email
     *                --publisher-name
     *                --resource-group
     *                [--enable-client-certificate {false, true}]
     *                [--enable-managed-identity {false, true}]
     *                [--location]
     *                [--no-wait]
     *                [--sku-capacity]
     *                [--sku-name {Basic, Consumption, Developer, Premium, Standard}]
     *                [--subscription]
     *                [--tags]
     *                [--virtual-network {External, Internal, None}]
     */
    az_apim_create(): void {
    }

    /**
     * Deletes an API Management service.
     *
     * Syntax: 
     *
     * az apim delete --name
     *                --resource-group
     *                [--no-wait]
     *                [--subscription]
     *                [--yes]
     */
    az_apim_delete(): void {
    }

    /**
     * List API Management service instances.
     *
     * Syntax: 
     *
     * az apim list [--query-examples]
     *              [--resource-group]
     *              [--subscription]
     */
    az_apim_list(): void {
    }

    /**
     * Show details of an API Management service instance.
     *
     * Syntax: 
     *
     * az apim show --name
     *              --resource-group
     *              [--query-examples]
     *              [--subscription]
     */
    az_apim_show(): void {
    }

    /**
     * Update an API Management service instance.
     *
     * Syntax: 
     *
     * az apim update --name
     *                --resource-group
     *                [--add]
     *                [--enable-client-certificate {false, true}]
     *                [--enable-managed-identity {false, true}]
     *                [--force-string]
     *                [--no-wait]
     *                [--publisher-email]
     *                [--publisher-name]
     *                [--remove]
     *                [--set]
     *                [--sku-capacity]
     *                [--sku-name {Basic, Consumption, Developer, Premium, Standard}]
     *                [--subscription]
     *                [--tags]
     *                [--virtual-network {External, Internal, None}]
     */
    az_apim_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of an apim is met.
     *
     * Syntax: 
     *
     * az apim wait --name
     *              --resource-group
     *              [--created]
     *              [--custom]
     *              [--deleted]
     *              [--exists]
     *              [--interval]
     *              [--subscription]
     *              [--timeout]
     *              [--updated]
     */
    az_apim_wait(): void {
    }
}

/** Manage credentials for App Configurations. */
class az_appconfig_credential {
    /**
     * List access keys of an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig credential list --name
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_appconfig_credential_list(): void {
    }

    /**
     * Regenerate an access key for an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig credential regenerate --id
     *                                    --name
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_appconfig_credential_regenerate(): void {
    }
}

/** Manage filters associated with feature flags stored in an App Configuration. */
class az_appconfig_feature_filter {
    /**
     * Add a filter to a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature filter add --feature
     *                                 --filter-name
     *                                 [--connection-string]
     *                                 [--filter-parameters]
     *                                 [--index]
     *                                 [--label]
     *                                 [--name]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_appconfig_feature_filter_add(): void {
    }

    /**
     * Delete a filter from a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature filter delete --feature
     *                                    [--all]
     *                                    [--connection-string]
     *                                    [--filter-name]
     *                                    [--index]
     *                                    [--label]
     *                                    [--name]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_appconfig_feature_filter_delete(): void {
    }

    /**
     * List all filters for a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature filter list --feature
     *                                  [--all]
     *                                  [--connection-string]
     *                                  [--label]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--subscription]
     *                                  [--top]
     */
    az_appconfig_feature_filter_list(): void {
    }

    /**
     * Show filters of a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature filter show --feature
     *                                  --filter-name
     *                                  [--connection-string]
     *                                  [--index]
     *                                  [--label]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_appconfig_feature_filter_show(): void {
    }
}

/** Manage feature flags stored in an App Configuration. */
class az_appconfig_feature {
    /**
     * Delete feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature delete --feature
     *                             [--connection-string]
     *                             [--label]
     *                             [--name]
     *                             [--subscription]
     *                             [--yes]
     */
    az_appconfig_feature_delete(): void {
    }

    /**
     * Disable a feature flag to turn it OFF for use.
     *
     * Syntax: 
     *
     * az appconfig feature disable --feature
     *                              [--connection-string]
     *                              [--label]
     *                              [--name]
     *                              [--subscription]
     *                              [--yes]
     */
    az_appconfig_feature_disable(): void {
    }

    /**
     * Enable a feature flag to turn it ON for use.
     *
     * Syntax: 
     *
     * az appconfig feature enable --feature
     *                             [--connection-string]
     *                             [--label]
     *                             [--name]
     *                             [--subscription]
     *                             [--yes]
     */
    az_appconfig_feature_enable(): void {
    }

    /**
     * List feature flags.
     *
     * Syntax: 
     *
     * az appconfig feature list [--all]
     *                           [--connection-string]
     *                           [--feature]
     *                           [--fields {conditions, description, key, label, last_modified, locked, state}]
     *                           [--label]
     *                           [--name]
     *                           [--query-examples]
     *                           [--subscription]
     *                           [--top]
     */
    az_appconfig_feature_list(): void {
    }

    /**
     * Lock a feature flag to prohibit write operations.
     *
     * Syntax: 
     *
     * az appconfig feature lock --feature
     *                           [--connection-string]
     *                           [--label]
     *                           [--name]
     *                           [--subscription]
     *                           [--yes]
     */
    az_appconfig_feature_lock(): void {
    }

    /**
     * Set a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature set --feature
     *                          [--connection-string]
     *                          [--description]
     *                          [--label]
     *                          [--name]
     *                          [--subscription]
     *                          [--yes]
     */
    az_appconfig_feature_set(): void {
    }

    /**
     * Show all attributes of a feature flag.
     *
     * Syntax: 
     *
     * az appconfig feature show --feature
     *                           [--connection-string]
     *                           [--fields {conditions, description, key, label, last_modified, locked, state}]
     *                           [--label]
     *                           [--name]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_appconfig_feature_show(): void {
    }

    /**
     * Unlock a feature to gain write operations.
     *
     * Syntax: 
     *
     * az appconfig feature unlock --feature
     *                             [--connection-string]
     *                             [--label]
     *                             [--name]
     *                             [--subscription]
     *                             [--yes]
     */
    az_appconfig_feature_unlock(): void {
    }
}

/** Managed identities for App Configurations. */
class az_appconfig_identity {
    /**
     * Update managed identities for an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig identity assign --name
     *                              [--identities]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_appconfig_identity_assign(): void {
    }

    /**
     * Remove managed identities for an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig identity remove --name
     *                              [--identities]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_appconfig_identity_remove(): void {
    }

    /**
     * Display managed identities for an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig identity show --name
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_appconfig_identity_show(): void {
    }
}

/** Manage key-values stored in an App Configuration. */
class az_appconfig_kv {
    /**
     * Delete key-values.
     *
     * Syntax: 
     *
     * az appconfig kv delete --key
     *                        [--connection-string]
     *                        [--label]
     *                        [--name]
     *                        [--subscription]
     *                        [--yes]
     */
    az_appconfig_kv_delete(): void {
    }

    /**
     * Export configurations to another place from your App Configuration.
     *
     * Syntax: 
     *
     * az appconfig kv export --destination {appconfig, appservice, file}
     *                        [--appservice-account]
     *                        [--connection-string]
     *                        [--dest-connection-string]
     *                        [--dest-label]
     *                        [--dest-name]
     *                        [--format {json, properties, yaml}]
     *                        [--key]
     *                        [--label]
     *                        [--name]
     *                        [--naming-convention {camel, hyphen, pascal, underscore}]
     *                        [--path]
     *                        [--prefix]
     *                        [--preserve-labels {false, true}]
     *                        [--resolve-keyvault {false, true}]
     *                        [--separator]
     *                        [--skip-features {false, true}]
     *                        [--skip-keyvault {false, true}]
     *                        [--subscription]
     *                        [--yes]
     */
    az_appconfig_kv_export(): void {
    }

    /**
     * Import configurations into your App Configuration from another place.
     *
     * Syntax: 
     *
     * az appconfig kv import --source {appconfig, appservice, file}
     *                        [--appservice-account]
     *                        [--connection-string]
     *                        [--content-type]
     *                        [--depth]
     *                        [--format {json, properties, yaml}]
     *                        [--label]
     *                        [--name]
     *                        [--path]
     *                        [--prefix]
     *                        [--preserve-labels {false, true}]
     *                        [--separator]
     *                        [--skip-features {false, true}]
     *                        [--src-connection-string]
     *                        [--src-key]
     *                        [--src-label]
     *                        [--src-name]
     *                        [--subscription]
     *                        [--yes]
     */
    az_appconfig_kv_import(): void {
    }

    /**
     * List key-values.
     *
     * Syntax: 
     *
     * az appconfig kv list [--all]
     *                      [--connection-string]
     *                      [--datetime]
     *                      [--fields {content_type, etag, key, label, last_modified, locked, tags, value}]
     *                      [--key]
     *                      [--label]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resolve-keyvault {false, true}]
     *                      [--subscription]
     *                      [--top]
     */
    az_appconfig_kv_list(): void {
    }

    /**
     * Lock a key-value to prohibit write operations.
     *
     * Syntax: 
     *
     * az appconfig kv lock --key
     *                      [--connection-string]
     *                      [--label]
     *                      [--name]
     *                      [--subscription]
     *                      [--yes]
     */
    az_appconfig_kv_lock(): void {
    }

    /**
     * Restore key-values.
     *
     * Syntax: 
     *
     * az appconfig kv restore --datetime
     *                         [--connection-string]
     *                         [--key]
     *                         [--label]
     *                         [--name]
     *                         [--subscription]
     *                         [--yes]
     */
    az_appconfig_kv_restore(): void {
    }

    /**
     * Set a key-value.
     *
     * Syntax: 
     *
     * az appconfig kv set --key
     *                     [--connection-string]
     *                     [--content-type]
     *                     [--label]
     *                     [--name]
     *                     [--subscription]
     *                     [--tags]
     *                     [--value]
     *                     [--yes]
     */
    az_appconfig_kv_set(): void {
    }

    /**
     * Set a keyvault reference.
     *
     * Syntax: 
     *
     * az appconfig kv set-keyvault --key
     *                              --secret-identifier
     *                              [--connection-string]
     *                              [--label]
     *                              [--name]
     *                              [--subscription]
     *                              [--tags]
     *                              [--yes]
     */
    az_appconfig_kv_set_keyvault(): void {
    }

    /**
     * Show all attributes of a key-value.
     *
     * Syntax: 
     *
     * az appconfig kv show --key
     *                      [--connection-string]
     *                      [--datetime]
     *                      [--label]
     *                      [--name]
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_appconfig_kv_show(): void {
    }

    /**
     * Unlock a key-value to gain write operations.
     *
     * Syntax: 
     *
     * az appconfig kv unlock --key
     *                        [--connection-string]
     *                        [--label]
     *                        [--name]
     *                        [--subscription]
     *                        [--yes]
     */
    az_appconfig_kv_unlock(): void {
    }
}

/** Manage revisions for key-values stored in an App Configuration. */
class az_appconfig_revision {
    /**
     * Lists revision history of key-values.
     *
     * Syntax: 
     *
     * az appconfig revision list [--all]
     *                            [--connection-string]
     *                            [--datetime]
     *                            [--fields {content_type, etag, key, label, last_modified, locked, tags, value}]
     *                            [--key]
     *                            [--label]
     *                            [--name]
     *                            [--query-examples]
     *                            [--subscription]
     *                            [--top]
     */
    az_appconfig_revision_list(): void {
    }
}

/** Manage App Configurations. */
class az_appconfig {
    /**
     * Create an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig create --location
     *                     --name
     *                     --resource-group
     *                     [--assign-identity]
     *                     [--enable-public-network {false, true}]
     *                     [--sku {Free, Standard}]
     *                     [--subscription]
     */
    az_appconfig_create(): void {
    }

    /**
     * Delete an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig delete --name
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--yes]
     */
    az_appconfig_delete(): void {
    }

    /**
     * Lists all App Configurations under the current subscription.
     *
     * Syntax: 
     *
     * az appconfig list [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_appconfig_list(): void {
    }

    /**
     * Show properties of an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig show --name
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_appconfig_show(): void {
    }

    /**
     * Update an App Configuration.
     *
     * Syntax: 
     *
     * az appconfig update --name
     *                     [--enable-public-network {false, true}]
     *                     [--encryption-key-name]
     *                     [--encryption-key-vault]
     *                     [--encryption-key-version]
     *                     [--identity-client-id]
     *                     [--resource-group]
     *                     [--sku {Free, Standard}]
     *                     [--subscription]
     *                     [--tags]
     */
    az_appconfig_update(): void {
    }
}

/** Manage App Service Environments v2. */
class az_appservice_ase {
    /**
     * Create app service environment.
     *
     * Syntax: 
     *
     * az appservice ase create --name
     *                          --resource-group
     *                          --subnet
     *                          [--force-network-security-group {false, true}]
     *                          [--force-route-table {false, true}]
     *                          [--front-end-scale-factor]
     *                          [--front-end-sku {I1, I2, I3}]
     *                          [--ignore-network-security-group {false, true}]
     *                          [--ignore-route-table {false, true}]
     *                          [--ignore-subnet-size-validation {false, true}]
     *                          [--location]
     *                          [--no-wait]
     *                          [--subscription]
     *                          [--virtual-ip-type {External, Internal}]
     *                          [--vnet-name]
     */
    az_appservice_ase_create(): void {
    }

    /**
     * Delete app service environment.
     *
     * Syntax: 
     *
     * az appservice ase delete --name
     *                          [--no-wait]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--yes]
     */
    az_appservice_ase_delete(): void {
    }

    /**
     * List app service environments.
     *
     * Syntax: 
     *
     * az appservice ase list [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_appservice_ase_list(): void {
    }

    /**
     * List VIPs associated with an app service environment.
     *
     * Syntax: 
     *
     * az appservice ase list-addresses --name
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_appservice_ase_list_addresses(): void {
    }

    /**
     * List app service plans associated with an app service environment.
     *
     * Syntax: 
     *
     * az appservice ase list-plans --name
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_appservice_ase_list_plans(): void {
    }

    /**
     * Show details of an app service environment.
     *
     * Syntax: 
     *
     * az appservice ase show --name
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_appservice_ase_show(): void {
    }

    /**
     * Update app service environment.
     *
     * Syntax: 
     *
     * az appservice ase update --name
     *                          [--front-end-scale-factor]
     *                          [--front-end-sku {I1, I2, I3}]
     *                          [--no-wait]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_appservice_ase_update(): void {
    }
}

/** A method that sets the key a hybrid-connection uses. */
class az_appservice_hybrid_connection {
    /**
     * Set the key that all apps in an appservice plan use to connect to the hybrid-connections in that appservice plan.
     *
     * Syntax: 
     *
     * az appservice hybrid-connection set-key --hybrid-connection
     *                                         --key-type
     *                                         --namespace
     *                                         --plan
     *                                         --resource-group
     *                                         [--subscription]
     */
    az_appservice_hybrid_connection_set_key(): void {
    }
}

/** Manage app service plans. */
class az_appservice_plan {
    /**
     * Create an app service plan.
     *
     * Syntax: 
     *
     * az appservice plan create --name
     *                           --resource-group
     *                           [--app-service-environment]
     *                           [--hyper-v]
     *                           [--is-linux]
     *                           [--location]
     *                           [--no-wait]
     *                           [--number-of-workers]
     *                           [--per-site-scaling]
     *                           [--sku {B1, B2, B3, D1, F1, FREE, I1, I2, I3, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED}]
     *                           [--subscription]
     *                           [--tags]
     */
    az_appservice_plan_create(): void {
    }

    /**
     * Delete an app service plan.
     *
     * Syntax: 
     *
     * az appservice plan delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--yes]
     */
    az_appservice_plan_delete(): void {
    }

    /**
     * List app service plans.
     *
     * Syntax: 
     *
     * az appservice plan list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_appservice_plan_list(): void {
    }

    /**
     * Get the app service plans for a resource group or a set of resource groups.
     *
     * Syntax: 
     *
     * az appservice plan show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_appservice_plan_show(): void {
    }

    /**
     * Update an app service plan.
     *
     * Syntax: 
     *
     * az appservice plan update [--add]
     *                           [--force-string]
     *                           [--ids]
     *                           [--name]
     *                           [--no-wait]
     *                           [--number-of-workers]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--sku {B1, B2, B3, D1, F1, FREE, I1, I2, I3, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED}]
     *                           [--subscription]
     */
    az_appservice_plan_update(): void {
    }
}

/** A method that lists the virtual network integrations used in an appservice plan. */
class az_appservice_vnet_integration {
    /**
     * List the virtual network integrations used in an appservice plan.
     *
     * Syntax: 
     *
     * az appservice vnet-integration list --plan
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_appservice_vnet_integration_list(): void {
    }
}

/** Manage App Service plans. */
class az_appservice {
    /**
     * List regions where a plan sku is available.
     *
     * Syntax: 
     *
     * az appservice list-locations --sku {B1, B2, B3, D1, F1, FREE, I1, I2, I3, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED}
     *                              [--linux-workers-enabled]
     *                              [--subscription]
     */
    az_appservice_list_locations(): void {
    }
}

/** Manage Azure Red Hat OpenShift clusters. */
class az_aro {
    /**
     * Create a cluster.
     *
     * Syntax: 
     *
     * az aro create --master-subnet
     *               --name
     *               --resource-group
     *               --worker-subnet
     *               [--apiserver-visibility {Private, Public}]
     *               [--client-id]
     *               [--client-secret]
     *               [--cluster-resource-group]
     *               [--domain]
     *               [--ingress-visibility {Private, Public}]
     *               [--location]
     *               [--master-vm-size]
     *               [--no-wait]
     *               [--pod-cidr]
     *               [--pull-secret]
     *               [--service-cidr]
     *               [--subscription]
     *               [--tags]
     *               [--vnet]
     *               [--vnet-resource-group]
     *               [--worker-count]
     *               [--worker-vm-disk-size-gb]
     *               [--worker-vm-size]
     */
    az_aro_create(): void {
    }

    /**
     * Delete a cluster.
     *
     * Syntax: 
     *
     * az aro delete --name
     *               --resource-group
     *               [--no-wait]
     *               [--subscription]
     *               [--yes]
     */
    az_aro_delete(): void {
    }

    /**
     * List clusters.
     *
     * Syntax: 
     *
     * az aro list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_aro_list(): void {
    }

    /**
     * List credentials of a cluster.
     *
     * Syntax: 
     *
     * az aro list-credentials --name
     *                         --resource-group
     *                         [--subscription]
     */
    az_aro_list_credentials(): void {
    }

    /**
     * Get the details of a cluster.
     *
     * Syntax: 
     *
     * az aro show --name
     *             --resource-group
     *             [--query-examples]
     *             [--subscription]
     */
    az_aro_show(): void {
    }

    /**
     * Update a cluster.
     *
     * Syntax: 
     *
     * az aro update --name
     *               --resource-group
     *               [--no-wait]
     *               [--subscription]
     */
    az_aro_update(): void {
    }

    /**
     * Wait for a cluster to reach a desired state.
     *
     * Syntax: 
     *
     * az aro wait --name
     *             --resource-group
     *             [--created]
     *             [--custom]
     *             [--deleted]
     *             [--exists]
     *             [--interval]
     *             [--subscription]
     *             [--timeout]
     *             [--updated]
     */
    az_aro_wait(): void {
    }
}

/** Manage Universal Packages. */
class az_artifacts_universal {
    /**
     * Download a package.
     *
     * Syntax: 
     *
     * az artifacts universal download --feed
     *                                 --name
     *                                 --path
     *                                 --version
     *                                 [--detect {false, true}]
     *                                 [--file-filter]
     *                                 [--org]
     *                                 [--project]
     *                                 [--scope {organization, project}]
     *                                 [--subscription]
     */
    az_artifacts_universal_download(): void {
    }

    /**
     * Publish a package to a feed.
     *
     * Syntax: 
     *
     * az artifacts universal publish --feed
     *                                --name
     *                                --path
     *                                --version
     *                                [--description]
     *                                [--detect {false, true}]
     *                                [--org]
     *                                [--project]
     *                                [--scope {organization, project}]
     *                                [--subscription]
     */
    az_artifacts_universal_publish(): void {
    }
}

/** Manage Azure Artifacts. */
class az_artifacts {
}

/** Resource which houses items or applications to be protected. */
class az_backup_container {
    /**
     * List containers registered to a Recovery services vault.
     *
     * Syntax: 
     *
     * az backup container list --backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}
     *                          --resource-group
     *                          --vault-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_backup_container_list(): void {
    }

    /**
     * Reset the registration details for a given container.
     *
     * Syntax: 
     *
     * az backup container re-register --container-name
     *                                 --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                 [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                                 [--ids]
     *                                 [--resource-group]
     *                                 [--subscription]
     *                                 [--vault-name]
     *                                 [--yes]
     */
    az_backup_container_re_register(): void {
    }

    /**
     * Register a Resource to the given Recovery Services Vault.
     *
     * Syntax: 
     *
     * az backup container register --resource-id
     *                              --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                              [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                              [--ids]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--vault-name]
     */
    az_backup_container_register(): void {
    }

    /**
     * Show details of a container registered to a Recovery services vault.
     *
     * Syntax: 
     *
     * az backup container show --name
     *                          [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                          [--ids]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--vault-name]
     */
    az_backup_container_show(): void {
    }

    /**
     * Unregister a Backup Container to make the underlying 'resource' be protected by another vault.
     *
     * Syntax: 
     *
     * az backup container unregister --container-name
     *                                [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--vault-name]
     *                                [--yes]
     */
    az_backup_container_unregister(): void {
    }
}

/** An item which is already protected or backed up to an Azure Recovery services vault with an associated policy. */
class az_backup_item {
    /**
     * List all backed up items within a container.
     *
     * Syntax: 
     *
     * az backup item list --resource-group
     *                     --vault-name
     *                     [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload, MAB}]
     *                     [--container-name]
     *                     [--query-examples]
     *                     [--subscription]
     *                     [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_item_list(): void {
    }

    /**
     * Update the policy associated with this item. Use this to change policies of the backup item.
     *
     * Syntax: 
     *
     * az backup item set-policy --container-name
     *                           --policy-name
     *                           [--backup-management-type]
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--vault-name]
     *                           [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_item_set_policy(): void {
    }

    /**
     * Show details of a particular backed up item.
     *
     * Syntax: 
     *
     * az backup item show --container-name
     *                     --name
     *                     [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                     [--ids]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--vault-name]
     *                     [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_item_show(): void {
    }
}

/** Entity which contains details of the job. */
class az_backup_job {
    /**
     * List all backup jobs of a Recovery Services vault.
     *
     * Syntax: 
     *
     * az backup job list --resource-group
     *                    --vault-name
     *                    [--end-date]
     *                    [--operation {Backup, ConfigureBackup, DeleteBackupData, DisableBackup, Restore}]
     *                    [--query-examples]
     *                    [--start-date]
     *                    [--status {Cancelled, Completed, CompletedWithWarnings, Failed, InProgress}]
     *                    [--subscription]
     */
    az_backup_job_list(): void {
    }

    /**
     * Show details of a particular job.
     *
     * Syntax: 
     *
     * az backup job show --name
     *                    [--ids]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--vault-name]
     */
    az_backup_job_show(): void {
    }

    /**
     * Suspend or terminate a currently running job.
     *
     * Syntax: 
     *
     * az backup job stop --name
     *                    [--ids]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--vault-name]
     */
    az_backup_job_stop(): void {
    }

    /**
     * Wait until either the job completes or the specified timeout value is reached.
     *
     * Syntax: 
     *
     * az backup job wait --name
     *                    [--ids]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--timeout]
     *                    [--vault-name]
     */
    az_backup_job_wait(): void {
    }
}

/** A backup policy defines when you want to take a backup and for how long you would retain each backup copy. */
class az_backup_policy {
    /**
     * Create a new policy for the given BackupManagementType and workloadType.
     *
     * Syntax: 
     *
     * az backup policy create --backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}
     *                         --name
     *                         --policy
     *                         --resource-group
     *                         --vault-name
     *                         [--subscription]
     *                         [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_policy_create(): void {
    }

    /**
     * Delete a backup policy which doesn't have any associated backup items.
     *
     * Syntax: 
     *
     * az backup policy delete --name
     *                         [--ids]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--vault-name]
     */
    az_backup_policy_delete(): void {
    }

    /**
     * Get the default policy with default values to backup a VM.
     *
     * Syntax: 
     *
     * az backup policy get-default-for-vm [--ids]
     *                                     [--resource-group]
     *                                     [--subscription]
     *                                     [--vault-name]
     */
    az_backup_policy_get_default_for_vm(): void {
    }

    /**
     * List all policies for a Recovery services vault.
     *
     * Syntax: 
     *
     * az backup policy list --resource-group
     *                       --vault-name
     *                       [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                       [--query-examples]
     *                       [--subscription]
     *                       [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_policy_list(): void {
    }

    /**
     * List all items protected by a backup policy.
     *
     * Syntax: 
     *
     * az backup policy list-associated-items --name
     *                                        [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                                        [--ids]
     *                                        [--resource-group]
     *                                        [--subscription]
     *                                        [--vault-name]
     */
    az_backup_policy_list_associated_items(): void {
    }

    /**
     * Update the existing policy with the provided details.
     *
     * Syntax: 
     *
     * az backup policy set [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                      [--fix-for-inconsistent-items {false, true}]
     *                      [--ids]
     *                      [--name]
     *                      [--policy]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--vault-name]
     */
    az_backup_policy_set(): void {
    }

    /**
     * Show details of a particular policy.
     *
     * Syntax: 
     *
     * az backup policy show --name
     *                       [--ids]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--vault-name]
     */
    az_backup_policy_show(): void {
    }
}

/** Manage the item which is yet to be protected or backed up to an Azure Recovery services vault with an associated policy. */
class az_backup_protectable_item {
    /**
     * Trigger the discovery of any unprotected items of the given workload type in the given container.
     *
     * Syntax: 
     *
     * az backup protectable-item initialize --container-name
     *                                       --resource-group
     *                                       --vault-name
     *                                       --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                       [--subscription]
     */
    az_backup_protectable_item_initialize(): void {
    }

    /**
     * Retrieve all protectable items within a certain container or across all registered containers.
     *
     * Syntax: 
     *
     * az backup protectable-item list --resource-group
     *                                 --vault-name
     *                                 --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                 [--container-name]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_backup_protectable_item_list(): void {
    }

    /**
     * Retrieve the specified protectable item within the given container.
     *
     * Syntax: 
     *
     * az backup protectable-item show --name
     *                                 --protectable-item-type {HANAInstance, SAPHanaDatabase, SAPHanaSystem, SQLAG, SQLDatabase, SQLInstance}
     *                                 --resource-group
     *                                 --server-name
     *                                 --vault-name
     *                                 --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_backup_protectable_item_show(): void {
    }
}

/** Manage protection of your items, enable protection or disable it, or take on-demand backups. */
class az_backup_protection {
    /**
     * Disable auto-protection for the specified item.
     *
     * Syntax: 
     *
     * az backup protection auto-disable-for-azurewl --item-name
     *                                               [--ids]
     *                                               [--resource-group]
     *                                               [--subscription]
     *                                               [--vault-name]
     */
    az_backup_protection_auto_disable_for_azurewl(): void {
    }

    /**
     * Automatically protect all existing unprotected DBs and any DB which will be added later with the given policy.
     *
     * Syntax: 
     *
     * az backup protection auto-enable-for-azurewl --policy-name
     *                                              --protectable-item-name
     *                                              --protectable-item-type {HANAInstance, SAPHanaDatabase, SAPHanaSystem, SQLAG, SQLDatabase, SQLInstance}
     *                                              --server-name
     *                                              --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                              [--ids]
     *                                              [--resource-group]
     *                                              [--subscription]
     *                                              [--vault-name]
     */
    az_backup_protection_auto_enable_for_azurewl(): void {
    }

    /**
     * Perform an on-demand backup of a backed up item.
     *
     * Syntax: 
     *
     * az backup protection backup-now --item-name
     *                                 [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                                 [--backup-type]
     *                                 [--container-name]
     *                                 [--enable-compression {false, true}]
     *                                 [--ids]
     *                                 [--resource-group]
     *                                 [--retain-until]
     *                                 [--subscription]
     *                                 [--vault-name]
     *                                 [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_protection_backup_now(): void {
    }

    /**
     * Find out whether the virtual machine is protected or not. If protected, it returns the recovery services vault ID, otherwise it returns empty.
     *
     * Syntax: 
     *
     * az backup protection check-vm --vm-id
     *                               [--subscription]
     */
    az_backup_protection_check_vm(): void {
    }

    /**
     * Stop protecting a backed up item. Can retain the backed up data forever or choose to delete it.
     *
     * Syntax: 
     *
     * az backup protection disable --container-name
     *                              --item-name
     *                              [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                              [--delete-backup-data {false, true}]
     *                              [--ids]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--vault-name]
     *                              [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     *                              [--yes]
     */
    az_backup_protection_disable(): void {
    }

    /**
     * Start protecting a previously unprotected Azure File share within an Azure Storage account as per the specified policy to a Recovery services vault.
     *
     * Syntax: 
     *
     * az backup protection enable-for-azurefileshare --azure-file-share
     *                                                --policy-name
     *                                                --storage-account
     *                                                [--ids]
     *                                                [--resource-group]
     *                                                [--subscription]
     *                                                [--vault-name]
     */
    az_backup_protection_enable_for_azurefileshare(): void {
    }

    /**
     * Start protecting a previously unprotected workload within an Azure VM as per the specified policy to a Recovery services vault. Provide the workload details as a protectable item.
     *
     * Syntax: 
     *
     * az backup protection enable-for-azurewl --policy-name
     *                                         --protectable-item-name
     *                                         --protectable-item-type {HANAInstance, SAPHanaDatabase, SAPHanaSystem, SQLAG, SQLDatabase, SQLInstance}
     *                                         --server-name
     *                                         --workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}
     *                                         [--ids]
     *                                         [--resource-group]
     *                                         [--subscription]
     *                                         [--vault-name]
     */
    az_backup_protection_enable_for_azurewl(): void {
    }

    /**
     * Start protecting a previously unprotected Azure VM as per the specified policy to a Recovery services vault.
     *
     * Syntax: 
     *
     * az backup protection enable-for-vm --policy-name
     *                                    --vm
     *                                    [--disk-list-setting {exclude, include}]
     *                                    [--diskslist]
     *                                    [--exclude-all-data-disks {false, true}]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--vault-name]
     */
    az_backup_protection_enable_for_vm(): void {
    }

    /**
     * Resume backup for the associated backup item. Use this to change the policy associated with the backup item.
     *
     * Syntax: 
     *
     * az backup protection resume --container-name
     *                             --item-name
     *                             --policy-name
     *                             [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                             [--ids]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--vault-name]
     *                             [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_protection_resume(): void {
    }

    /**
     * Rehydrate an item from softdeleted state to stop protection with retained data state.
     *
     * Syntax: 
     *
     * az backup protection undelete --backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}
     *                               --container-name
     *                               --item-name
     *                               [--ids]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--vault-name]
     *                               [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_protection_undelete(): void {
    }

    /**
     * Update disk exclusion settings associated with a backed up VM item.
     *
     * Syntax: 
     *
     * az backup protection update-for-vm --container-name
     *                                    --item-name
     *                                    [--disk-list-setting {exclude, include, resetexclusionsettings}]
     *                                    [--diskslist]
     *                                    [--exclude-all-data-disks {false, true}]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--vault-name]
     */
    az_backup_protection_update_for_vm(): void {
    }
}

/** Manage recovery configuration of an Azure workload backed up item. */
class az_backup_recoveryconfig {
    /**
     * Construct the recovery configuration of an Azure workload backed up item.
     *
     * Syntax: 
     *
     * az backup recoveryconfig show --container-name
     *                               --item-name
     *                               --resource-group
     *                               --restore-mode {AlternateWorkloadRestore, OriginalWorkloadRestore, RestoreAsFiles}
     *                               --vault-name
     *                               [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                               [--filepath]
     *                               [--from-full-rp-name]
     *                               [--log-point-in-time]
     *                               [--query-examples]
     *                               [--rp-name]
     *                               [--subscription]
     *                               [--target-container-name]
     *                               [--target-item-name]
     *                               [--target-server-name]
     *                               [--target-server-type {HANAInstance, SAPHanaDatabase, SAPHanaSystem, SQLAG, SQLDatabase, SQLInstance}]
     *                               [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_recoveryconfig_show(): void {
    }
}

/** A snapshot of data at that point-of-time, stored in Recovery Services Vault, from which you can restore information. */
class az_backup_recoverypoint {
    /**
     * List all recovery points of a backed up item.
     *
     * Syntax: 
     *
     * az backup recoverypoint list --container-name
     *                              --item-name
     *                              --resource-group
     *                              --vault-name
     *                              [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                              [--end-date]
     *                              [--query-examples]
     *                              [--start-date]
     *                              [--subscription]
     *                              [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_recoverypoint_list(): void {
    }

    /**
     * Shows details of a particular recovery point.
     *
     * Syntax: 
     *
     * az backup recoverypoint show --container-name
     *                              --item-name
     *                              --name
     *                              [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--vault-name]
     *                              [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_recoverypoint_show(): void {
    }

    /**
     * List the start and end points of the unbroken log chain(s) of the given backup item.
     *
     * Syntax: 
     *
     * az backup recoverypoint show-log-chain --container-name
     *                                        --item-name
     *                                        --resource-group
     *                                        --vault-name
     *                                        [--backup-management-type {AzureIaasVM, AzureStorage, AzureWorkload}]
     *                                        [--end-date]
     *                                        [--start-date]
     *                                        [--subscription]
     *                                        [--workload-type {AzureFileShare, MSSQL, SAPHANA, SAPHanaDatabase, SQLDataBase, VM}]
     */
    az_backup_recoverypoint_show_log_chain(): void {
    }
}

/** Gives access to all files of a recovery point. */
class az_backup_restore_files {
    /**
     * Download a script which mounts files of a recovery point.
     *
     * Syntax: 
     *
     * az backup restore files mount-rp --container-name
     *                                  --item-name
     *                                  --rp-name
     *                                  [--ids]
     *                                  [--resource-group]
     *                                  [--subscription]
     *                                  [--vault-name]
     */
    az_backup_restore_files_mount_rp(): void {
    }

    /**
     * Close access to the recovery point.
     *
     * Syntax: 
     *
     * az backup restore files unmount-rp --container-name
     *                                    --item-name
     *                                    --rp-name
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--vault-name]
     */
    az_backup_restore_files_unmount_rp(): void {
    }
}

/** Restore backed up items from recovery points in a Recovery Services vault. */
class az_backup_restore {
    /**
     * Restore backed up Azure files within a file-share to the same file-share or another file-share in registered storage accounts.
     *
     * Syntax: 
     *
     * az backup restore restore-azurefiles --container-name
     *                                      --item-name
     *                                      --resolve-conflict {Overwrite, Skip}
     *                                      --restore-mode {AlternateLocation, OriginalLocation}
     *                                      --rp-name
     *                                      [--ids]
     *                                      [--resource-group]
     *                                      [--source-file-path]
     *                                      [--source-file-type {Directory, File}]
     *                                      [--subscription]
     *                                      [--target-file-share]
     *                                      [--target-folder]
     *                                      [--target-storage-account]
     *                                      [--vault-name]
     */
    az_backup_restore_restore_azurefiles(): void {
    }

    /**
     * Restore backed up Azure file shares to the same file-share or another file-share in registered storage accounts.
     *
     * Syntax: 
     *
     * az backup restore restore-azurefileshare --container-name
     *                                          --item-name
     *                                          --resolve-conflict {Overwrite, Skip}
     *                                          --restore-mode {AlternateLocation, OriginalLocation}
     *                                          --rp-name
     *                                          [--ids]
     *                                          [--resource-group]
     *                                          [--subscription]
     *                                          [--target-file-share]
     *                                          [--target-folder]
     *                                          [--target-storage-account]
     *                                          [--vault-name]
     */
    az_backup_restore_restore_azurefileshare(): void {
    }

    /**
     * Restore backed up Azure Workloads in a Recovery services vault to another registered container or to the same container.
     *
     * Syntax: 
     *
     * az backup restore restore-azurewl --recovery-config
     *                                   [--ids]
     *                                   [--resource-group]
     *                                   [--subscription]
     *                                   [--vault-name]
     */
    az_backup_restore_restore_azurewl(): void {
    }

    /**
     * Restore disks of the backed VM from the specified recovery point.
     *
     * Syntax: 
     *
     * az backup restore restore-disks --container-name
     *                                 --item-name
     *                                 --rp-name
     *                                 --storage-account
     *                                 [--diskslist]
     *                                 [--ids]
     *                                 [--resource-group]
     *                                 [--restore-as-unmanaged-disks {false, true}]
     *                                 [--restore-only-osdisk {false, true}]
     *                                 [--restore-to-staging-storage-account {false, true}]
     *                                 [--subscription]
     *                                 [--target-resource-group]
     *                                 [--vault-name]
     */
    az_backup_restore_restore_disks(): void {
    }
}

/** Properties of the Recovery Services vault. */
class az_backup_vault_backup_properties {
    /**
     * Sets backup related properties of the Recovery Services vault.
     *
     * Syntax: 
     *
     * az backup vault backup-properties set [--backup-storage-redundancy {GeoRedundant, LocallyRedundant}]
     *                                       [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--soft-delete-feature-state {Disable, Enable}]
     *                                       [--subscription]
     */
    az_backup_vault_backup_properties_set(): void {
    }

    /**
     * Gets backup related properties of the Recovery Services vault.
     *
     * Syntax: 
     *
     * az backup vault backup-properties show [--ids]
     *                                        [--name]
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_backup_vault_backup_properties_show(): void {
    }
}

/** Online storage entity in Azure used to hold data such as backup copies, recovery points and backup policies. */
class az_backup_vault {
    /**
     * Create a new Recovery Services vault.
     *
     * Syntax: 
     *
     * az backup vault create --location
     *                        --name
     *                        --resource-group
     *                        [--subscription]
     */
    az_backup_vault_create(): void {
    }

    /**
     * Delete an existing Recovery services vault.
     *
     * Syntax: 
     *
     * az backup vault delete [--force]
     *                        [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--yes]
     */
    az_backup_vault_delete(): void {
    }

    /**
     * List Recovery service vaults within a subscription.
     *
     * Syntax: 
     *
     * az backup vault list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_backup_vault_list(): void {
    }

    /**
     * Show details of a particular Recovery service vault.
     *
     * Syntax: 
     *
     * az backup vault show [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_backup_vault_show(): void {
    }
}

/** Manage Azure Backups. */
class az_backup {
}

/** Manage the access keys for the auto storage account configured for a Batch account. */
class az_batch_account_autostorage_keys {
    /**
     * Synchronizes access keys for the auto-storage account configured for the specified Batch account.
     *
     * Syntax: 
     *
     * az batch account autostorage-keys sync --name
     *                                        --resource-group
     *                                        [--subscription]
     */
    az_batch_account_autostorage_keys_sync(): void {
    }
}

/** Manage Batch account keys. */
class az_batch_account_keys {
    /**
     * Gets the account keys for the specified Batch account.
     *
     * Syntax: 
     *
     * az batch account keys list --name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_batch_account_keys_list(): void {
    }

    /**
     * Regenerates the specified account key for the Batch account.
     *
     * Syntax: 
     *
     * az batch account keys renew --key-name {Primary, Secondary}
     *                             --name
     *                             --resource-group
     *                             [--subscription]
     */
    az_batch_account_keys_renew(): void {
    }
}

/** Manage Azure Batch accounts. */
class az_batch_account {
    /**
     * Create a Batch account with the specified parameters.
     *
     * Syntax: 
     *
     * az batch account create --location
     *                         --name
     *                         --resource-group
     *                         [--encryption-key-identifier]
     *                         [--encryption-key-source {Microsoft.Batch, Microsoft.KeyVault}]
     *                         [--identity-type {None, SystemAssigned}]
     *                         [--keyvault]
     *                         [--no-wait]
     *                         [--public-network-access {Disabled, Enabled}]
     *                         [--storage-account]
     *                         [--subscription]
     *                         [--tags]
     */
    az_batch_account_create(): void {
    }

    /**
     * Deletes the specified Batch account.
     *
     * Syntax: 
     *
     * az batch account delete --name
     *                         --resource-group
     *                         [--no-wait]
     *                         [--subscription]
     *                         [--yes]
     */
    az_batch_account_delete(): void {
    }

    /**
     * List the Batch accounts associated with a subscription or resource group.
     *
     * Syntax: 
     *
     * az batch account list [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_batch_account_list(): void {
    }

    /**
     * Log in to a Batch account through Azure Active Directory or Shared Key authentication.
     *
     * Syntax: 
     *
     * az batch account login --name
     *                        --resource-group
     *                        [--shared-key-auth]
     *                        [--show]
     *                        [--subscription]
     */
    az_batch_account_login(): void {
    }

    /**
     * Update properties for a Batch account.
     *
     * Syntax: 
     *
     * az batch account set --name
     *                      --resource-group
     *                      [--encryption-key-identifier]
     *                      [--encryption-key-source]
     *                      [--identity-type {None, SystemAssigned}]
     *                      [--storage-account]
     *                      [--subscription]
     *                      [--tags]
     */
    az_batch_account_set(): void {
    }

    /**
     * Get a specified Batch account or the currently set account.
     *
     * Syntax: 
     *
     * az batch account show [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_batch_account_show(): void {
    }
}

/** Manage Batch application packages. */
class az_batch_application_package {
    /**
     * Activates a Batch application package.
     *
     * Syntax: 
     *
     * az batch application package activate --application-name
     *                                       --format
     *                                       --name
     *                                       --resource-group
     *                                       --version-name
     *                                       [--subscription]
     */
    az_batch_application_package_activate(): void {
    }

    /**
     * Create a Batch application package record and activate it.
     *
     * Syntax: 
     *
     * az batch application package create --application-name
     *                                     --name
     *                                     --package-file
     *                                     --resource-group
     *                                     --version-name
     *                                     [--subscription]
     */
    az_batch_application_package_create(): void {
    }

    /**
     * Deletes an application package record and its associated binary file.
     *
     * Syntax: 
     *
     * az batch application package delete --application-name
     *                                     --name
     *                                     --resource-group
     *                                     --version-name
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_batch_application_package_delete(): void {
    }

    /**
     * Lists all of the application packages in the specified application.
     *
     * Syntax: 
     *
     * az batch application package list --application-name
     *                                   --name
     *                                   --resource-group
     *                                   [--maxresults]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_batch_application_package_list(): void {
    }

    /**
     * Gets information about the specified application package.
     *
     * Syntax: 
     *
     * az batch application package show --application-name
     *                                   --name
     *                                   --resource-group
     *                                   --version-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_batch_application_package_show(): void {
    }
}

/** View a summary of Batch application packages. */
class az_batch_application_summary {
    /**
     * Lists all of the applications available in the specified account.
     *
     * Syntax: 
     *
     * az batch application summary list [--account-endpoint]
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_batch_application_summary_list(): void {
    }

    /**
     * Gets information about the specified application.
     *
     * Syntax: 
     *
     * az batch application summary show --application-id
     *                                   [--account-endpoint]
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_batch_application_summary_show(): void {
    }
}

/** Manage Batch applications. */
class az_batch_application {
    /**
     * Adds an application to the specified Batch account.
     *
     * Syntax: 
     *
     * az batch application create --application-name
     *                             --name
     *                             --resource-group
     *                             [--parameters]
     *                             [--subscription]
     */
    az_batch_application_create(): void {
    }

    /**
     * Deletes an application.
     *
     * Syntax: 
     *
     * az batch application delete --application-name
     *                             --name
     *                             --resource-group
     *                             [--subscription]
     *                             [--yes]
     */
    az_batch_application_delete(): void {
    }

    /**
     * Lists all of the applications in the specified account.
     *
     * Syntax: 
     *
     * az batch application list --name
     *                           --resource-group
     *                           [--maxresults]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_batch_application_list(): void {
    }

    /**
     * Update properties for a Batch application.
     *
     * Syntax: 
     *
     * az batch application set --application-name
     *                          --name
     *                          --resource-group
     *                          [--allow-updates]
     *                          [--default-version]
     *                          [--display-name]
     *                          [--subscription]
     */
    az_batch_application_set(): void {
    }

    /**
     * Gets information about the specified application.
     *
     * Syntax: 
     *
     * az batch application show --application-name
     *                           --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_batch_application_show(): void {
    }
}

/** Manage Batch certificates. */
class az_batch_certificate {
    /**
     * Add a certificate to a Batch account.
     *
     * Syntax: 
     *
     * az batch certificate create --certificate-file
     *                             --thumbprint
     *                             [--account-endpoint]
     *                             [--account-key]
     *                             [--account-name]
     *                             [--password]
     *                             [--subscription]
     */
    az_batch_certificate_create(): void {
    }

    /**
     * Delete a certificate from a Batch account.
     *
     * Syntax: 
     *
     * az batch certificate delete --thumbprint
     *                             [--abort]
     *                             [--account-endpoint]
     *                             [--account-key]
     *                             [--account-name]
     *                             [--subscription]
     *                             [--yes]
     */
    az_batch_certificate_delete(): void {
    }

    /**
     * Lists all of the Certificates that have been added to the specified Account.
     *
     * Syntax: 
     *
     * az batch certificate list [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--filter]
     *                           [--query-examples]
     *                           [--select]
     *                           [--subscription]
     */
    az_batch_certificate_list(): void {
    }

    /**
     * Gets information about the specified Certificate.
     *
     * Syntax: 
     *
     * az batch certificate show --thumbprint
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--query-examples]
     *                           [--select]
     *                           [--subscription]
     */
    az_batch_certificate_show(): void {
    }
}

/** View statistics of all jobs under a Batch account. */
class az_batch_job_all_statistics {
    /**
     * Get lifetime summary statistics for all of the jobs in a Batch account.
     *
     * Syntax: 
     *
     * az batch job all-statistics show [--account-endpoint]
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_batch_job_all_statistics_show(): void {
    }
}

/** View the status of Batch job preparation and release tasks. */
class az_batch_job_prep_release_status {
    /**
     * Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.
     *
     * Syntax: 
     *
     * az batch job prep-release-status list --job-id
     *                                       [--account-endpoint]
     *                                       [--account-key]
     *                                       [--account-name]
     *                                       [--filter]
     *                                       [--query-examples]
     *                                       [--select]
     *                                       [--subscription]
     */
    az_batch_job_prep_release_status_list(): void {
    }
}

/** View the number of tasks in a Batch job and their states. */
class az_batch_job_task_counts {
    /**
     * Gets the Task counts for the specified Job.
     *
     * Syntax: 
     *
     * az batch job task-counts show --job-id
     *                               [--account-endpoint]
     *                               [--account-key]
     *                               [--account-name]
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_batch_job_task_counts_show(): void {
    }
}

/** Manage Batch job schedules. */
class az_batch_job_schedule {
    /**
     * Add a Batch job schedule to an account.
     *
     * Syntax: 
     *
     * az batch job-schedule create [--account-endpoint]
     *                              [--account-key]
     *                              [--account-name]
     *                              [--do-not-run-after]
     *                              [--do-not-run-until]
     *                              [--id]
     *                              [--job-manager-task-command-line]
     *                              [--job-manager-task-id]
     *                              [--job-manager-task-resource-files]
     *                              [--job-max-task-retry-count]
     *                              [--job-max-wall-clock-time]
     *                              [--json-file]
     *                              [--metadata]
     *                              [--on-all-tasks-complete {noaction, terminatejob}]
     *                              [--pool-id]
     *                              [--priority]
     *                              [--recurrence-interval]
     *                              [--start-window]
     *                              [--subscription]
     *                              [--uses-task-dependencies]
     */
    az_batch_job_schedule_create(): void {
    }

    /**
     * Deletes a Job Schedule from the specified Account.
     *
     * Syntax: 
     *
     * az batch job-schedule delete --job-schedule-id
     *                              [--account-endpoint]
     *                              [--account-key]
     *                              [--account-name]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--subscription]
     *                              [--yes]
     */
    az_batch_job_schedule_delete(): void {
    }

    /**
     * Disables a Job Schedule.
     *
     * Syntax: 
     *
     * az batch job-schedule disable --job-schedule-id
     *                               [--account-endpoint]
     *                               [--account-key]
     *                               [--account-name]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--subscription]
     */
    az_batch_job_schedule_disable(): void {
    }

    /**
     * Enables a Job Schedule.
     *
     * Syntax: 
     *
     * az batch job-schedule enable --job-schedule-id
     *                              [--account-endpoint]
     *                              [--account-key]
     *                              [--account-name]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--subscription]
     */
    az_batch_job_schedule_enable(): void {
    }

    /**
     * Lists all of the Job Schedules in the specified Account.
     *
     * Syntax: 
     *
     * az batch job-schedule list [--account-endpoint]
     *                            [--account-key]
     *                            [--account-name]
     *                            [--expand]
     *                            [--filter]
     *                            [--query-examples]
     *                            [--select]
     *                            [--subscription]
     */
    az_batch_job_schedule_list(): void {
    }

    /**
     * Reset the properties of a job schedule.  An updated job specification only applies to new jobs.
     *
     * Syntax: 
     *
     * az batch job-schedule reset --job-schedule-id
     *                             [--account-endpoint]
     *                             [--account-key]
     *                             [--account-name]
     *                             [--do-not-run-after]
     *                             [--do-not-run-until]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--job-manager-task-application-package-references]
     *                             [--job-manager-task-command-line]
     *                             [--job-manager-task-environment-settings]
     *                             [--job-manager-task-id]
     *                             [--job-manager-task-resource-files]
     *                             [--job-metadata]
     *                             [--json-file]
     *                             [--metadata]
     *                             [--on-all-tasks-complete {noaction, terminatejob}]
     *                             [--pool-id]
     *                             [--priority]
     *                             [--recurrence-interval]
     *                             [--start-window]
     *                             [--subscription]
     *                             [--uses-task-dependencies]
     */
    az_batch_job_schedule_reset(): void {
    }

    /**
     * Update the properties of a job schedule.
     *
     * Syntax: 
     *
     * az batch job-schedule set --job-schedule-id
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--do-not-run-after]
     *                           [--do-not-run-until]
     *                           [--if-match]
     *                           [--if-modified-since]
     *                           [--if-none-match]
     *                           [--if-unmodified-since]
     *                           [--job-manager-task-application-package-references]
     *                           [--job-manager-task-command-line]
     *                           [--job-manager-task-environment-settings]
     *                           [--job-manager-task-id]
     *                           [--job-manager-task-resource-files]
     *                           [--job-metadata]
     *                           [--json-file]
     *                           [--metadata]
     *                           [--on-all-tasks-complete {noaction, terminatejob}]
     *                           [--pool-id]
     *                           [--priority]
     *                           [--recurrence-interval]
     *                           [--start-window]
     *                           [--subscription]
     *                           [--uses-task-dependencies]
     */
    az_batch_job_schedule_set(): void {
    }

    /**
     * Gets information about the specified Job Schedule.
     *
     * Syntax: 
     *
     * az batch job-schedule show --job-schedule-id
     *                            [--account-endpoint]
     *                            [--account-key]
     *                            [--account-name]
     *                            [--expand]
     *                            [--if-match]
     *                            [--if-modified-since]
     *                            [--if-none-match]
     *                            [--if-unmodified-since]
     *                            [--query-examples]
     *                            [--select]
     *                            [--subscription]
     */
    az_batch_job_schedule_show(): void {
    }

    /**
     * Terminates a Job Schedule.
     *
     * Syntax: 
     *
     * az batch job-schedule stop --job-schedule-id
     *                            [--account-endpoint]
     *                            [--account-key]
     *                            [--account-name]
     *                            [--if-match]
     *                            [--if-modified-since]
     *                            [--if-none-match]
     *                            [--if-unmodified-since]
     *                            [--subscription]
     */
    az_batch_job_schedule_stop(): void {
    }
}

/** Manage Batch jobs. */
class az_batch_job {
    /**
     * Add a job to a Batch account.
     *
     * Syntax: 
     *
     * az batch job create [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--id]
     *                     [--job-manager-task-command-line]
     *                     [--job-manager-task-environment-settings]
     *                     [--job-manager-task-id]
     *                     [--job-manager-task-resource-files]
     *                     [--job-max-task-retry-count]
     *                     [--job-max-wall-clock-time]
     *                     [--json-file]
     *                     [--metadata]
     *                     [--pool-id]
     *                     [--priority]
     *                     [--subscription]
     *                     [--uses-task-dependencies]
     */
    az_batch_job_create(): void {
    }

    /**
     * Deletes a Job.
     *
     * Syntax: 
     *
     * az batch job delete --job-id
     *                     [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--if-match]
     *                     [--if-modified-since]
     *                     [--if-none-match]
     *                     [--if-unmodified-since]
     *                     [--subscription]
     *                     [--yes]
     */
    az_batch_job_delete(): void {
    }

    /**
     * Disables the specified Job, preventing new Tasks from running.
     *
     * Syntax: 
     *
     * az batch job disable --job-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--disable-tasks {requeue, terminate, wait}]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--subscription]
     */
    az_batch_job_disable(): void {
    }

    /**
     * Enables the specified Job, allowing new Tasks to run.
     *
     * Syntax: 
     *
     * az batch job enable --job-id
     *                     [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--if-match]
     *                     [--if-modified-since]
     *                     [--if-none-match]
     *                     [--if-unmodified-since]
     *                     [--subscription]
     */
    az_batch_job_enable(): void {
    }

    /**
     * List all of the jobs or job schedule in a Batch account.
     *
     * Syntax: 
     *
     * az batch job list [--account-endpoint]
     *                   [--account-key]
     *                   [--account-name]
     *                   [--expand]
     *                   [--filter]
     *                   [--job-schedule-id]
     *                   [--query-examples]
     *                   [--select]
     *                   [--subscription]
     */
    az_batch_job_list(): void {
    }

    /**
     * Update the properties of a Batch job. Unspecified properties which can be updated are reset to their defaults.
     *
     * Syntax: 
     *
     * az batch job reset --job-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--if-match]
     *                    [--if-modified-since]
     *                    [--if-none-match]
     *                    [--if-unmodified-since]
     *                    [--job-max-task-retry-count]
     *                    [--job-max-wall-clock-time]
     *                    [--json-file]
     *                    [--metadata]
     *                    [--on-all-tasks-complete {noaction, terminatejob}]
     *                    [--pool-id]
     *                    [--priority]
     *                    [--subscription]
     */
    az_batch_job_reset(): void {
    }

    /**
     * Update the properties of a Batch job. Updating a property in a subgroup will reset the unspecified properties of that group.
     *
     * Syntax: 
     *
     * az batch job set --job-id
     *                  [--account-endpoint]
     *                  [--account-key]
     *                  [--account-name]
     *                  [--if-match]
     *                  [--if-modified-since]
     *                  [--if-none-match]
     *                  [--if-unmodified-since]
     *                  [--job-max-task-retry-count]
     *                  [--job-max-wall-clock-time]
     *                  [--json-file]
     *                  [--metadata]
     *                  [--on-all-tasks-complete {noaction, terminatejob}]
     *                  [--pool-id]
     *                  [--priority]
     *                  [--subscription]
     */
    az_batch_job_set(): void {
    }

    /**
     * Gets information about the specified Job.
     *
     * Syntax: 
     *
     * az batch job show --job-id
     *                   [--account-endpoint]
     *                   [--account-key]
     *                   [--account-name]
     *                   [--expand]
     *                   [--if-match]
     *                   [--if-modified-since]
     *                   [--if-none-match]
     *                   [--if-unmodified-since]
     *                   [--query-examples]
     *                   [--select]
     *                   [--subscription]
     */
    az_batch_job_show(): void {
    }

    /**
     * Terminates the specified Job, marking it as completed.
     *
     * Syntax: 
     *
     * az batch job stop --job-id
     *                   [--account-endpoint]
     *                   [--account-key]
     *                   [--account-name]
     *                   [--if-match]
     *                   [--if-modified-since]
     *                   [--if-none-match]
     *                   [--if-unmodified-since]
     *                   [--subscription]
     *                   [--terminate-reason]
     */
    az_batch_job_stop(): void {
    }
}

/** Manage Batch service quotas at the region level. */
class az_batch_location_quotas {
    /**
     * Gets the Batch service quotas for the specified subscription at the given location.
     *
     * Syntax: 
     *
     * az batch location quotas show --location
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_batch_location_quotas_show(): void {
    }
}

/** Manage Batch service options for a subscription at the region level. */
class az_batch_location {
}

/** Manage Batch compute node files. */
class az_batch_node_file {
    /**
     * Deletes the specified file from the Compute Node.
     *
     * Syntax: 
     *
     * az batch node file delete --file-path
     *                           --node-id
     *                           --pool-id
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--recursive]
     *                           [--subscription]
     *                           [--yes]
     */
    az_batch_node_file_delete(): void {
    }

    /**
     * Download the content of the a node file.
     *
     * Syntax: 
     *
     * az batch node file download --destination
     *                             --file-path
     *                             --node-id
     *                             --pool-id
     *                             [--account-endpoint]
     *                             [--account-key]
     *                             [--account-name]
     *                             [--end-range]
     *                             [--if-modified-since]
     *                             [--if-unmodified-since]
     *                             [--start-range]
     *                             [--subscription]
     */
    az_batch_node_file_download(): void {
    }

    /**
     * Lists all of the files in Task directories on the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node file list --node-id
     *                         --pool-id
     *                         [--account-endpoint]
     *                         [--account-key]
     *                         [--account-name]
     *                         [--filter]
     *                         [--query-examples]
     *                         [--recursive]
     *                         [--subscription]
     */
    az_batch_node_file_list(): void {
    }

    /**
     * Gets the properties of the specified Compute Node file.
     *
     * Syntax: 
     *
     * az batch node file show --file-path
     *                         --node-id
     *                         --pool-id
     *                         [--account-endpoint]
     *                         [--account-key]
     *                         [--account-name]
     *                         [--if-modified-since]
     *                         [--if-unmodified-since]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_batch_node_file_show(): void {
    }
}

/** Retrieve the remote desktop protocol file for a Batch compute node. */
class az_batch_node_remote_desktop {
    /**
     * Gets the Remote Desktop Protocol file for the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node remote-desktop download --destination
     *                                       --node-id
     *                                       --pool-id
     *                                       [--account-endpoint]
     *                                       [--account-key]
     *                                       [--account-name]
     *                                       [--subscription]
     */
    az_batch_node_remote_desktop_download(): void {
    }
}

/** Retrieve the remote login settings for a Batch compute node. */
class az_batch_node_remote_login_settings {
    /**
     * Gets the settings required for remote login to a Compute Node.
     *
     * Syntax: 
     *
     * az batch node remote-login-settings show --node-id
     *                                          --pool-id
     *                                          [--account-endpoint]
     *                                          [--account-key]
     *                                          [--account-name]
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_batch_node_remote_login_settings_show(): void {
    }
}

/** Manage task scheduling for a Batch compute node. */
class az_batch_node_scheduling {
    /**
     * Disables Task scheduling on the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node scheduling disable --node-id
     *                                  --pool-id
     *                                  [--account-endpoint]
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--node-disable-scheduling-option {requeue, taskcompletion, terminate}]
     *                                  [--subscription]
     */
    az_batch_node_scheduling_disable(): void {
    }

    /**
     * Enables Task scheduling on the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node scheduling enable --node-id
     *                                 --pool-id
     *                                 [--account-endpoint]
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--subscription]
     */
    az_batch_node_scheduling_enable(): void {
    }
}

/** Manage the service log files of a Batch compute node. */
class az_batch_node_service_logs {
    /**
     * Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage.
     *
     * Syntax: 
     *
     * az batch node service-logs upload --node-id
     *                                   --pool-id
     *                                   [--account-endpoint]
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--container-url]
     *                                   [--end-time]
     *                                   [--json-file]
     *                                   [--start-time]
     *                                   [--subscription]
     */
    az_batch_node_service_logs_upload(): void {
    }
}

/** Manage the user accounts of a Batch compute node. */
class az_batch_node_user {
    /**
     * Add a user account to a Batch compute node.
     *
     * Syntax: 
     *
     * az batch node user create --node-id
     *                           --pool-id
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--expiry-time]
     *                           [--is-admin]
     *                           [--json-file]
     *                           [--name]
     *                           [--password]
     *                           [--ssh-public-key]
     *                           [--subscription]
     */
    az_batch_node_user_create(): void {
    }

    /**
     * Deletes a user Account from the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node user delete --node-id
     *                           --pool-id
     *                           --user-name
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--subscription]
     *                           [--yes]
     */
    az_batch_node_user_delete(): void {
    }

    /**
     * Update the properties of a user account on a Batch compute node. Unspecified properties which can be updated are reset to their defaults.
     *
     * Syntax: 
     *
     * az batch node user reset --node-id
     *                          --pool-id
     *                          --user-name
     *                          [--account-endpoint]
     *                          [--account-key]
     *                          [--account-name]
     *                          [--expiry-time]
     *                          [--json-file]
     *                          [--password]
     *                          [--ssh-public-key]
     *                          [--subscription]
     */
    az_batch_node_user_reset(): void {
    }
}

/** Manage Batch compute nodes. */
class az_batch_node {
    /**
     * Removes Compute Nodes from the specified Pool.
     *
     * Syntax: 
     *
     * az batch node delete --pool-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--json-file]
     *                      [--node-deallocation-option {requeue, retaineddata, taskcompletion, terminate}]
     *                      [--node-list]
     *                      [--resize-timeout]
     *                      [--subscription]
     */
    az_batch_node_delete(): void {
    }

    /**
     * Lists the Compute Nodes in the specified Pool.
     *
     * Syntax: 
     *
     * az batch node list --pool-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--filter]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_node_list(): void {
    }

    /**
     * Restarts the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node reboot --node-id
     *                      --pool-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--node-reboot-option {requeue, retaineddata, taskcompletion, terminate}]
     *                      [--subscription]
     */
    az_batch_node_reboot(): void {
    }

    /**
     * Reinstalls the operating system on the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node reimage --node-id
     *                       --pool-id
     *                       [--account-endpoint]
     *                       [--account-key]
     *                       [--account-name]
     *                       [--node-reimage-option {requeue, retaineddata, taskcompletion, terminate}]
     *                       [--subscription]
     */
    az_batch_node_reimage(): void {
    }

    /**
     * Gets information about the specified Compute Node.
     *
     * Syntax: 
     *
     * az batch node show --node-id
     *                    --pool-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_node_show(): void {
    }
}

/** View statistics of all pools under a Batch account. */
class az_batch_pool_all_statistics {
    /**
     * Get lifetime summary statistics for all of the pools in a Batch account.
     *
     * Syntax: 
     *
     * az batch pool all-statistics show [--account-endpoint]
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_batch_pool_all_statistics_show(): void {
    }
}

/** Manage automatic scaling of Batch pools. */
class az_batch_pool_autoscale {
    /**
     * Disables automatic scaling for a Pool.
     *
     * Syntax: 
     *
     * az batch pool autoscale disable --pool-id
     *                                 [--account-endpoint]
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--subscription]
     */
    az_batch_pool_autoscale_disable(): void {
    }

    /**
     * Enables automatic scaling for a Pool.
     *
     * Syntax: 
     *
     * az batch pool autoscale enable --pool-id
     *                                [--account-endpoint]
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auto-scale-evaluation-interval]
     *                                [--auto-scale-formula]
     *                                [--if-match]
     *                                [--if-modified-since]
     *                                [--if-none-match]
     *                                [--if-unmodified-since]
     *                                [--subscription]
     */
    az_batch_pool_autoscale_enable(): void {
    }

    /**
     * Gets the result of evaluating an automatic scaling formula on the Pool.
     *
     * Syntax: 
     *
     * az batch pool autoscale evaluate --auto-scale-formula
     *                                  --pool-id
     *                                  [--account-endpoint]
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--subscription]
     */
    az_batch_pool_autoscale_evaluate(): void {
    }
}

/** Get node counts for Batch pools. */
class az_batch_pool_node_counts {
    /**
     * Gets the number of Compute Nodes in each state, grouped by Pool.
     *
     * Syntax: 
     *
     * az batch pool node-counts list [--account-endpoint]
     *                                [--account-key]
     *                                [--account-name]
     *                                [--filter]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_batch_pool_node_counts_list(): void {
    }
}

/** Query information on VM images supported by Azure Batch service. */
class az_batch_pool_supported_images {
    /**
     * Lists all Virtual Machine Images supported by the Azure Batch service.
     *
     * Syntax: 
     *
     * az batch pool supported-images list [--account-endpoint]
     *                                     [--account-key]
     *                                     [--account-name]
     *                                     [--filter]
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_batch_pool_supported_images_list(): void {
    }
}

/** View usage metrics of Batch pools. */
class az_batch_pool_usage_metrics {
    /**
     * Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.
     *
     * Syntax: 
     *
     * az batch pool usage-metrics list [--account-endpoint]
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--end-time]
     *                                  [--filter]
     *                                  [--query-examples]
     *                                  [--start-time]
     *                                  [--subscription]
     */
    az_batch_pool_usage_metrics_list(): void {
    }
}

/** Manage Batch pools. */
class az_batch_pool {
    /**
     * Create a Batch pool in an account. When creating a pool, choose arguments from either Cloud Services Configuration or Virtual Machine Configuration.
     *
     * Syntax: 
     *
     * az batch pool create [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--application-licenses]
     *                      [--application-package-references]
     *                      [--auto-scale-formula]
     *                      [--certificate-references]
     *                      [--disk-encryption-targets]
     *                      [--enable-inter-node-communication]
     *                      [--id]
     *                      [--image]
     *                      [--json-file]
     *                      [--max-tasks-per-node]
     *                      [--metadata]
     *                      [--node-agent-sku-id]
     *                      [--os-family {2, 3, 4, 5, 6}]
     *                      [--os-version]
     *                      [--resize-timeout]
     *                      [--start-task-command-line]
     *                      [--start-task-resource-files]
     *                      [--start-task-wait-for-success]
     *                      [--subscription]
     *                      [--target-dedicated-nodes]
     *                      [--target-low-priority-nodes]
     *                      [--targets]
     *                      [--vm-size]
     */
    az_batch_pool_create(): void {
    }

    /**
     * Deletes a Pool from the specified Account.
     *
     * Syntax: 
     *
     * az batch pool delete --pool-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--subscription]
     *                      [--yes]
     */
    az_batch_pool_delete(): void {
    }

    /**
     * Lists all of the Pools in the specified Account.
     *
     * Syntax: 
     *
     * az batch pool list [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--expand]
     *                    [--filter]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_pool_list(): void {
    }

    /**
     * Update the properties of a Batch pool. Unspecified properties which can be updated are reset to their defaults.
     *
     * Syntax: 
     *
     * az batch pool reset --pool-id
     *                     [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--application-package-references]
     *                     [--certificate-references]
     *                     [--json-file]
     *                     [--metadata]
     *                     [--start-task-command-line]
     *                     [--start-task-environment-settings]
     *                     [--start-task-max-task-retry-count]
     *                     [--start-task-wait-for-success]
     *                     [--subscription]
     */
    az_batch_pool_reset(): void {
    }

    /**
     * Resize or stop resizing a Batch pool.
     *
     * Syntax: 
     *
     * az batch pool resize --pool-id
     *                      [--abort]
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--node-deallocation-option {requeue, retaineddata, taskcompletion, terminate}]
     *                      [--resize-timeout]
     *                      [--subscription]
     *                      [--target-dedicated-nodes]
     *                      [--target-low-priority-nodes]
     */
    az_batch_pool_resize(): void {
    }

    /**
     * Update the properties of a Batch pool. Updating a property in a subgroup will reset the unspecified properties of that group.
     *
     * Syntax: 
     *
     * az batch pool set --pool-id
     *                   [--account-endpoint]
     *                   [--account-key]
     *                   [--account-name]
     *                   [--application-package-references]
     *                   [--certificate-references]
     *                   [--if-match]
     *                   [--if-modified-since]
     *                   [--if-none-match]
     *                   [--if-unmodified-since]
     *                   [--json-file]
     *                   [--metadata]
     *                   [--start-task-command-line]
     *                   [--start-task-environment-settings]
     *                   [--start-task-max-task-retry-count]
     *                   [--start-task-resource-files]
     *                   [--start-task-wait-for-success]
     *                   [--subscription]
     */
    az_batch_pool_set(): void {
    }

    /**
     * Gets information about the specified Pool.
     *
     * Syntax: 
     *
     * az batch pool show --pool-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--expand]
     *                    [--if-match]
     *                    [--if-modified-since]
     *                    [--if-none-match]
     *                    [--if-unmodified-since]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_pool_show(): void {
    }
}

/** Manage Batch task files. */
class az_batch_task_file {
    /**
     * Deletes the specified Task file from the Compute Node where the Task ran.
     *
     * Syntax: 
     *
     * az batch task file delete --file-path
     *                           --job-id
     *                           --task-id
     *                           [--account-endpoint]
     *                           [--account-key]
     *                           [--account-name]
     *                           [--recursive]
     *                           [--subscription]
     *                           [--yes]
     */
    az_batch_task_file_delete(): void {
    }

    /**
     * Download the content of a Batch task file.
     *
     * Syntax: 
     *
     * az batch task file download --destination
     *                             --file-path
     *                             --job-id
     *                             --task-id
     *                             [--account-endpoint]
     *                             [--account-key]
     *                             [--account-name]
     *                             [--end-range]
     *                             [--if-modified-since]
     *                             [--if-unmodified-since]
     *                             [--start-range]
     *                             [--subscription]
     */
    az_batch_task_file_download(): void {
    }

    /**
     * Lists the files in a Task's directory on its Compute Node.
     *
     * Syntax: 
     *
     * az batch task file list --job-id
     *                         --task-id
     *                         [--account-endpoint]
     *                         [--account-key]
     *                         [--account-name]
     *                         [--filter]
     *                         [--query-examples]
     *                         [--recursive]
     *                         [--subscription]
     */
    az_batch_task_file_list(): void {
    }

    /**
     * Gets the properties of the specified Task file.
     *
     * Syntax: 
     *
     * az batch task file show --file-path
     *                         --job-id
     *                         --task-id
     *                         [--account-endpoint]
     *                         [--account-key]
     *                         [--account-name]
     *                         [--if-modified-since]
     *                         [--if-unmodified-since]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_batch_task_file_show(): void {
    }
}

/** Manage subtask information of a Batch task. */
class az_batch_task_subtask {
    /**
     * Lists all of the subtasks that are associated with the specified multi-instance Task.
     *
     * Syntax: 
     *
     * az batch task subtask list --job-id
     *                            --task-id
     *                            [--account-endpoint]
     *                            [--account-key]
     *                            [--account-name]
     *                            [--query-examples]
     *                            [--select]
     *                            [--subscription]
     */
    az_batch_task_subtask_list(): void {
    }
}

/** Manage Batch tasks. */
class az_batch_task {
    /**
     * Create Batch tasks.
     *
     * Syntax: 
     *
     * az batch task create --job-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--affinity-id]
     *                      [--application-package-references]
     *                      [--command-line]
     *                      [--environment-settings]
     *                      [--json-file]
     *                      [--max-task-retry-count]
     *                      [--max-wall-clock-time]
     *                      [--resource-files]
     *                      [--retention-time]
     *                      [--subscription]
     *                      [--task-id]
     */
    az_batch_task_create(): void {
    }

    /**
     * Deletes a Task from the specified Job.
     *
     * Syntax: 
     *
     * az batch task delete --job-id
     *                      --task-id
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--subscription]
     *                      [--yes]
     */
    az_batch_task_delete(): void {
    }

    /**
     * Lists all of the Tasks that are associated with the specified Job.
     *
     * Syntax: 
     *
     * az batch task list --job-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--expand]
     *                    [--filter]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_task_list(): void {
    }

    /**
     * Reactivates a Task, allowing it to run again even if its retry count has been exhausted.
     *
     * Syntax: 
     *
     * az batch task reactivate --job-id
     *                          --task-id
     *                          [--account-endpoint]
     *                          [--account-key]
     *                          [--account-name]
     *                          [--if-match]
     *                          [--if-modified-since]
     *                          [--if-none-match]
     *                          [--if-unmodified-since]
     *                          [--subscription]
     */
    az_batch_task_reactivate(): void {
    }

    /**
     * Reset the properties of a Batch task.
     *
     * Syntax: 
     *
     * az batch task reset --job-id
     *                     --task-id
     *                     [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--if-match]
     *                     [--if-modified-since]
     *                     [--if-none-match]
     *                     [--if-unmodified-since]
     *                     [--json-file]
     *                     [--max-task-retry-count]
     *                     [--max-wall-clock-time]
     *                     [--retention-time]
     *                     [--subscription]
     */
    az_batch_task_reset(): void {
    }

    /**
     * Gets information about the specified Task.
     *
     * Syntax: 
     *
     * az batch task show --job-id
     *                    --task-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--expand]
     *                    [--if-match]
     *                    [--if-modified-since]
     *                    [--if-none-match]
     *                    [--if-unmodified-since]
     *                    [--query-examples]
     *                    [--select]
     *                    [--subscription]
     */
    az_batch_task_show(): void {
    }

    /**
     * Terminates the specified Task.
     *
     * Syntax: 
     *
     * az batch task stop --job-id
     *                    --task-id
     *                    [--account-endpoint]
     *                    [--account-key]
     *                    [--account-name]
     *                    [--if-match]
     *                    [--if-modified-since]
     *                    [--if-none-match]
     *                    [--if-unmodified-since]
     *                    [--subscription]
     */
    az_batch_task_stop(): void {
    }
}

/** Manage Azure Batch. */
class az_batch {
}

/** Commands to work with files generated by node setup task. */
class az_batchai_cluster_file {
    /**
     * List files generated by the cluster's node setup task.
     *
     * Syntax: 
     *
     * az batchai cluster file list --cluster
     *                              --resource-group
     *                              --workspace
     *                              [--expiry]
     *                              [--path]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_batchai_cluster_file_list(): void {
    }
}

/** Commands to work with cluster nodes. */
class az_batchai_cluster_node {
    /**
     * Executes a command line on a cluster's node with optional ports forwarding.
     *
     * Syntax: 
     *
     * az batchai cluster node exec --cluster
     *                              --resource-group
     *                              --workspace
     *                              [--address]
     *                              [--exec]
     *                              [--node-id]
     *                              [--password]
     *                              [--ssh-private-key]
     *                              [--subscription]
     */
    az_batchai_cluster_node_exec(): void {
    }

    /**
     * List remote login information for cluster's nodes.
     *
     * Syntax: 
     *
     * az batchai cluster node list --cluster
     *                              --resource-group
     *                              --workspace
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_batchai_cluster_node_list(): void {
    }
}

/** Commands to manage clusters. */
class az_batchai_cluster {
    /**
     * Set auto-scale parameters for a cluster.
     *
     * Syntax: 
     *
     * az batchai cluster auto-scale --max
     *                               --min
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--workspace]
     */
    az_batchai_cluster_auto_scale(): void {
    }

    /**
     * Create a cluster.
     *
     * Syntax: 
     *
     * az batchai cluster create --name
     *                           --resource-group
     *                           --workspace
     *                           [--afs-mount-path]
     *                           [--afs-name]
     *                           [--bfs-mount-path]
     *                           [--bfs-name]
     *                           [--config-file]
     *                           [--custom-image]
     *                           [--generate-ssh-keys]
     *                           [--image]
     *                           [--max]
     *                           [--min]
     *                           [--nfs]
     *                           [--nfs-mount-path]
     *                           [--password]
     *                           [--setup-task]
     *                           [--setup-task-output]
     *                           [--ssh-key]
     *                           [--storage-account-key]
     *                           [--storage-account-name]
     *                           [--subnet]
     *                           [--subscription]
     *                           [--target]
     *                           [--use-auto-storage]
     *                           [--user-name]
     *                           [--vm-priority {dedicated, lowpriority}]
     *                           [--vm-size]
     */
    az_batchai_cluster_create(): void {
    }

    /**
     * Delete a cluster.
     *
     * Syntax: 
     *
     * az batchai cluster delete [--ids]
     *                           [--name]
     *                           [--no-wait]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--workspace]
     *                           [--yes]
     */
    az_batchai_cluster_delete(): void {
    }

    /**
     * List clusters.
     *
     * Syntax: 
     *
     * az batchai cluster list --resource-group
     *                         --workspace
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_batchai_cluster_list(): void {
    }

    /**
     * Resize a cluster.
     *
     * Syntax: 
     *
     * az batchai cluster resize --target
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--workspace]
     */
    az_batchai_cluster_resize(): void {
    }

    /**
     * Show information about a cluster.
     *
     * Syntax: 
     *
     * az batchai cluster show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--workspace]
     */
    az_batchai_cluster_show(): void {
    }
}

/** Commands to manage experiments. */
class az_batchai_experiment {
    /**
     * Create an experiment.
     *
     * Syntax: 
     *
     * az batchai experiment create --name
     *                              --resource-group
     *                              --workspace
     *                              [--subscription]
     */
    az_batchai_experiment_create(): void {
    }

    /**
     * Delete an experiment.
     *
     * Syntax: 
     *
     * az batchai experiment delete [--ids]
     *                              [--name]
     *                              [--no-wait]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--workspace]
     *                              [--yes]
     */
    az_batchai_experiment_delete(): void {
    }

    /**
     * List experiments.
     *
     * Syntax: 
     *
     * az batchai experiment list --resource-group
     *                            --workspace
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_batchai_experiment_list(): void {
    }

    /**
     * Show information about an experiment.
     *
     * Syntax: 
     *
     * az batchai experiment show [--ids]
     *                            [--name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--workspace]
     */
    az_batchai_experiment_show(): void {
    }
}

/** Commands to manage file servers. */
class az_batchai_file_server {
    /**
     * Create a file server.
     *
     * Syntax: 
     *
     * az batchai file-server create --name
     *                               --resource-group
     *                               --workspace
     *                               [--caching-type {none, readonly, readwrite}]
     *                               [--config-file]
     *                               [--disk-count]
     *                               [--disk-size]
     *                               [--generate-ssh-keys]
     *                               [--no-wait]
     *                               [--password]
     *                               [--ssh-key]
     *                               [--storage-sku {Premium_LRS, Standard_LRS}]
     *                               [--subnet]
     *                               [--subscription]
     *                               [--user-name]
     *                               [--vm-size]
     */
    az_batchai_file_server_create(): void {
    }

    /**
     * Delete a file server.
     *
     * Syntax: 
     *
     * az batchai file-server delete [--ids]
     *                               [--name]
     *                               [--no-wait]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--workspace]
     *                               [--yes]
     */
    az_batchai_file_server_delete(): void {
    }

    /**
     * List file servers.
     *
     * Syntax: 
     *
     * az batchai file-server list --resource-group
     *                             --workspace
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_batchai_file_server_list(): void {
    }

    /**
     * Show information about a file server.
     *
     * Syntax: 
     *
     * az batchai file-server show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--workspace]
     */
    az_batchai_file_server_show(): void {
    }
}

/** Commands to list and stream files in job's output directories. */
class az_batchai_job_file {
    /**
     * List job's output files in a directory with given id.
     *
     * Syntax: 
     *
     * az batchai job file list --experiment
     *                          --job
     *                          --resource-group
     *                          --workspace
     *                          [--expiry]
     *                          [--output-directory-id]
     *                          [--path]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_batchai_job_file_list(): void {
    }

    /**
     * Stream the content of a file (similar to 'tail -f').
     *
     * Syntax: 
     *
     * az batchai job file stream --experiment
     *                            --file-name
     *                            --job
     *                            --resource-group
     *                            --workspace
     *                            [--output-directory-id]
     *                            [--path]
     *                            [--subscription]
     */
    az_batchai_job_file_stream(): void {
    }
}

/** Commands to work with nodes which executed a job. */
class az_batchai_job_node {
    /**
     * Executes a command line on a cluster's node used to execute the job with optional ports forwarding.
     *
     * Syntax: 
     *
     * az batchai job node exec --experiment
     *                          --job
     *                          --resource-group
     *                          --workspace
     *                          [--address]
     *                          [--exec]
     *                          [--node-id]
     *                          [--password]
     *                          [--ssh-private-key]
     *                          [--subscription]
     */
    az_batchai_job_node_exec(): void {
    }

    /**
     * List remote login information for nodes which executed the job.
     *
     * Syntax: 
     *
     * az batchai job node list --experiment
     *                          --job
     *                          --resource-group
     *                          --workspace
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_batchai_job_node_list(): void {
    }
}

/** Commands to manage jobs. */
class az_batchai_job {
    /**
     * Create a job.
     *
     * Syntax: 
     *
     * az batchai job create --cluster
     *                       --config-file
     *                       --experiment
     *                       --name
     *                       --resource-group
     *                       --workspace
     *                       [--afs-mount-path]
     *                       [--afs-name]
     *                       [--bfs-mount-path]
     *                       [--bfs-name]
     *                       [--nfs]
     *                       [--nfs-mount-path]
     *                       [--storage-account-key]
     *                       [--storage-account-name]
     *                       [--subscription]
     */
    az_batchai_job_create(): void {
    }

    /**
     * Delete a job.
     *
     * Syntax: 
     *
     * az batchai job delete [--experiment]
     *                       [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--workspace]
     *                       [--yes]
     */
    az_batchai_job_delete(): void {
    }

    /**
     * List jobs.
     *
     * Syntax: 
     *
     * az batchai job list --experiment
     *                     --resource-group
     *                     --workspace
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_batchai_job_list(): void {
    }

    /**
     * Show information about a job.
     *
     * Syntax: 
     *
     * az batchai job show [--experiment]
     *                     [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--workspace]
     */
    az_batchai_job_show(): void {
    }

    /**
     * Terminate a job.
     *
     * Syntax: 
     *
     * az batchai job terminate [--experiment]
     *                          [--ids]
     *                          [--name]
     *                          [--no-wait]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--workspace]
     *                          [--yes]
     */
    az_batchai_job_terminate(): void {
    }

    /**
     * Waits for specified job completion and setups the exit code to the job's exit code.
     *
     * Syntax: 
     *
     * az batchai job wait [--experiment]
     *                     [--ids]
     *                     [--interval]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--workspace]
     */
    az_batchai_job_wait(): void {
    }
}

/** Commands to manage workspaces. */
class az_batchai_workspace {
    /**
     * Create a workspace.
     *
     * Syntax: 
     *
     * az batchai workspace create --resource-group
     *                             --workspace
     *                             [--location]
     *                             [--subscription]
     */
    az_batchai_workspace_create(): void {
    }

    /**
     * Delete a workspace.
     *
     * Syntax: 
     *
     * az batchai workspace delete [--ids]
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--workspace]
     *                             [--yes]
     */
    az_batchai_workspace_delete(): void {
    }

    /**
     * List workspaces.
     *
     * Syntax: 
     *
     * az batchai workspace list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_batchai_workspace_list(): void {
    }

    /**
     * Show information about a workspace.
     *
     * Syntax: 
     *
     * az batchai workspace show [--ids]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--workspace]
     */
    az_batchai_workspace_show(): void {
    }
}

/** Manage Batch AI resources. */
class az_batchai {
    /**
     * Gets the current usage information as well as limits for Batch AI resources for given location.
     *
     * Syntax: 
     *
     * az batchai list-usages --location
     *                        [--subscription]
     */
    az_batchai_list_usages(): void {
    }
}

/** Get enrollment accounts. */
class az_billing_enrollment_account {
    /**
     * Lists the enrollment accounts the caller has access to.
     *
     * Syntax: 
     *
     * az billing enrollment-account list [--query-examples]
     *                                    [--subscription]
     */
    az_billing_enrollment_account_list(): void {
    }

    /**
     * Gets a enrollment account by name.
     *
     * Syntax: 
     *
     * az billing enrollment-account show --name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_billing_enrollment_account_show(): void {
    }
}

/** Get billing invoices for a subscription. */
class az_billing_invoice {
    /**
     * List all available invoices of the subscription.
     *
     * Syntax: 
     *
     * az billing invoice list [--generate-download-url]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_billing_invoice_list(): void {
    }

    /**
     * Retrieve invoice of specific name of the subscription.
     *
     * Syntax: 
     *
     * az billing invoice show [--name]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_billing_invoice_show(): void {
    }
}

/** Get billing periods for a subscription. */
class az_billing_period {
    /**
     * Lists the available billing periods for a subscription in reverse chronological order.
     *
     * Syntax: 
     *
     * az billing period list [--filter]
     *                        [--query-examples]
     *                        [--skiptoken]
     *                        [--subscription]
     *                        [--top]
     */
    az_billing_period_list(): void {
    }

    /**
     * Gets a named billing period.
     *
     * Syntax: 
     *
     * az billing period show --name
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_billing_period_show(): void {
    }
}

/** Manage Azure Billing. */
class az_billing {
}

/** Manage areas for a project. */
class az_boards_area_project {
    /**
     * Create area.
     *
     * Syntax: 
     *
     * az boards area project create --name
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--path]
     *                               [--project]
     *                               [--subscription]
     */
    az_boards_area_project_create(): void {
    }

    /**
     * Delete area.
     *
     * Syntax: 
     *
     * az boards area project delete --path
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--subscription]
     *                               [--yes]
     */
    az_boards_area_project_delete(): void {
    }

    /**
     * List areas for a project.
     *
     * Syntax: 
     *
     * az boards area project list [--depth]
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--path]
     *                             [--project]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_boards_area_project_list(): void {
    }

    /**
     * Show area details for a project.
     *
     * Syntax: 
     *
     * az boards area project show --id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--project]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_boards_area_project_show(): void {
    }

    /**
     * Update area.
     *
     * Syntax: 
     *
     * az boards area project update --path
     *                               [--child-id]
     *                               [--detect {false, true}]
     *                               [--name]
     *                               [--org]
     *                               [--project]
     *                               [--subscription]
     */
    az_boards_area_project_update(): void {
    }
}

/** Manage areas for a team. */
class az_boards_area_team {
    /**
     * Add area to a team.
     *
     * Syntax: 
     *
     * az boards area team add --path
     *                         --team
     *                         [--detect {false, true}]
     *                         [--include-sub-areas {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--set-as-default]
     *                         [--subscription]
     */
    az_boards_area_team_add(): void {
    }

    /**
     * List areas for a team.
     *
     * Syntax: 
     *
     * az boards area team list --team
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--project]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_boards_area_team_list(): void {
    }

    /**
     * Remove area from a team.
     *
     * Syntax: 
     *
     * az boards area team remove --path
     *                            --team
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_boards_area_team_remove(): void {
    }

    /**
     * Update team area.
     *
     * Syntax: 
     *
     * az boards area team update --path
     *                            --team
     *                            [--detect {false, true}]
     *                            [--include-sub-areas {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--set-as-default]
     *                            [--subscription]
     */
    az_boards_area_team_update(): void {
    }
}

/** Manage area paths. */
class az_boards_area {
}

/** Manage iterations for a project. */
class az_boards_iteration_project {
    /**
     * Create iteration.
     *
     * Syntax: 
     *
     * az boards iteration project create --name
     *                                    [--detect {false, true}]
     *                                    [--finish-date]
     *                                    [--org]
     *                                    [--path]
     *                                    [--project]
     *                                    [--start-date]
     *                                    [--subscription]
     */
    az_boards_iteration_project_create(): void {
    }

    /**
     * Delete iteration.
     *
     * Syntax: 
     *
     * az boards iteration project delete --path
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_boards_iteration_project_delete(): void {
    }

    /**
     * List iterations for a project.
     *
     * Syntax: 
     *
     * az boards iteration project list [--depth]
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--path]
     *                                  [--project]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_boards_iteration_project_list(): void {
    }

    /**
     * Show iteration details for a project.
     *
     * Syntax: 
     *
     * az boards iteration project show --id
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_boards_iteration_project_show(): void {
    }

    /**
     * Update project iteration.
     *
     * Syntax: 
     *
     * az boards iteration project update --path
     *                                    [--child-id]
     *                                    [--detect {false, true}]
     *                                    [--finish-date]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     *                                    [--start-date]
     *                                    [--subscription]
     */
    az_boards_iteration_project_update(): void {
    }
}

/** Manage iterations for a team. */
class az_boards_iteration_team {
    /**
     * Add iteration to a team.
     *
     * Syntax: 
     *
     * az boards iteration team add --id
     *                              --team
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--project]
     *                              [--subscription]
     */
    az_boards_iteration_team_add(): void {
    }

    /**
     * List iterations for a team.
     *
     * Syntax: 
     *
     * az boards iteration team list --team
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--query-examples]
     *                               [--subscription]
     *                               [--timeframe]
     */
    az_boards_iteration_team_list(): void {
    }

    /**
     * List work-items for an iteration.
     *
     * Syntax: 
     *
     * az boards iteration team list-work-items --id
     *                                          --team
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     *                                          [--subscription]
     */
    az_boards_iteration_team_list_work_items(): void {
    }

    /**
     * Remove iteration from a team.
     *
     * Syntax: 
     *
     * az boards iteration team remove --id
     *                                 --team
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     *                                 [--subscription]
     */
    az_boards_iteration_team_remove(): void {
    }

    /**
     * Set backlog iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team set-backlog-iteration --id
     *                                                --team
     *                                                [--detect {false, true}]
     *                                                [--org]
     *                                                [--project]
     *                                                [--subscription]
     */
    az_boards_iteration_team_set_backlog_iteration(): void {
    }

    /**
     * Set default iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team set-default-iteration --team
     *                                                [--default-iteration-macro]
     *                                                [--detect {false, true}]
     *                                                [--id]
     *                                                [--org]
     *                                                [--project]
     *                                                [--subscription]
     */
    az_boards_iteration_team_set_default_iteration(): void {
    }

    /**
     * Show backlog iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team show-backlog-iteration --team
     *                                                 [--detect {false, true}]
     *                                                 [--org]
     *                                                 [--project]
     *                                                 [--subscription]
     */
    az_boards_iteration_team_show_backlog_iteration(): void {
    }

    /**
     * Show default iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team show-default-iteration --team
     *                                                 [--detect {false, true}]
     *                                                 [--org]
     *                                                 [--project]
     *                                                 [--subscription]
     */
    az_boards_iteration_team_show_default_iteration(): void {
    }
}

/** Manage iterations. */
class az_boards_iteration {
}

/** Manage work item relations. */
class az_boards_work_item_relation {
    /**
     * Add relation(s) to work item.
     *
     * Syntax: 
     *
     * az boards work-item relation add --id
     *                                  --relation-type
     *                                  --target-id
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--subscription]
     */
    az_boards_work_item_relation_add(): void {
    }

    /**
     * List work item relations supported in the organization.
     *
     * Syntax: 
     *
     * az boards work-item relation list-type [--detect {false, true}]
     *                                        [--org]
     *                                        [--subscription]
     */
    az_boards_work_item_relation_list_type(): void {
    }

    /**
     * Remove relation(s) from work item.
     *
     * Syntax: 
     *
     * az boards work-item relation remove --id
     *                                     --relation-type
     *                                     --target-id
     *                                     [--detect {false, true}]
     *                                     [--org]
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_boards_work_item_relation_remove(): void {
    }

    /**
     * Get work item, fill relations with friendly name.
     *
     * Syntax: 
     *
     * az boards work-item relation show --id
     *                                   [--detect {false, true}]
     *                                   [--org]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_boards_work_item_relation_show(): void {
    }
}

/** Manage work items. */
class az_boards_work_item {
    /**
     * Create a work item.
     *
     * Syntax: 
     *
     * az boards work-item create --title
     *                            --type
     *                            [--area]
     *                            [--assigned-to]
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--discussion]
     *                            [--fields]
     *                            [--iteration]
     *                            [--open]
     *                            [--org]
     *                            [--project]
     *                            [--reason]
     *                            [--subscription]
     */
    az_boards_work_item_create(): void {
    }

    /**
     * Delete a work item.
     *
     * Syntax: 
     *
     * az boards work-item delete --id
     *                            [--destroy]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     *                            [--yes]
     */
    az_boards_work_item_delete(): void {
    }

    /**
     * Show details for a work item.
     *
     * Syntax: 
     *
     * az boards work-item show --id
     *                          [--as-of]
     *                          [--detect {false, true}]
     *                          [--expand {all, fields, links, none, relations}]
     *                          [--fields]
     *                          [--open]
     *                          [--org]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_boards_work_item_show(): void {
    }

    /**
     * Update work items.
     *
     * Syntax: 
     *
     * az boards work-item update --id
     *                            [--area]
     *                            [--assigned-to]
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--discussion]
     *                            [--fields]
     *                            [--iteration]
     *                            [--open]
     *                            [--org]
     *                            [--reason]
     *                            [--state]
     *                            [--subscription]
     *                            [--title]
     */
    az_boards_work_item_update(): void {
    }
}

/** Manage Azure Boards. */
class az_boards {
    /**
     * Query for a list of work items.
     *
     * Syntax: 
     *
     * az boards query [--detect {false, true}]
     *                 [--id]
     *                 [--org]
     *                 [--path]
     *                 [--project]
     *                 [--subscription]
     *                 [--wiql]
     */
    az_boards_query(): void {
    }
}

/** Manage OAuth connection settings on a bot. */
class az_bot_authsetting {
    /**
     * Create an OAuth connection setting on a bot.
     *
     * Syntax: 
     *
     * az bot authsetting create --client-id
     *                           --client-secret
     *                           --name
     *                           --provider-scope-string
     *                           --resource-group
     *                           --service
     *                           --setting-name
     *                           [--parameters]
     *                           [--subscription]
     */
    az_bot_authsetting_create(): void {
    }

    /**
     * Delete an OAuth connection setting on a bot.
     *
     * Syntax: 
     *
     * az bot authsetting delete --name
     *                           --resource-group
     *                           --setting-name
     *                           [--subscription]
     */
    az_bot_authsetting_delete(): void {
    }

    /**
     * Show all OAuth connection settings on a bot.
     *
     * Syntax: 
     *
     * az bot authsetting list --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_bot_authsetting_list(): void {
    }

    /**
     * List details for all service providers available for creating OAuth connection settings.
     *
     * Syntax: 
     *
     * az bot authsetting list-providers [--provider-name]
     *                                   [--subscription]
     */
    az_bot_authsetting_list_providers(): void {
    }

    /**
     * Show details of an OAuth connection setting on a bot.
     *
     * Syntax: 
     *
     * az bot authsetting show --name
     *                         --resource-group
     *                         --setting-name
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_bot_authsetting_show(): void {
    }
}

/** Manage the Directline Channel on a bot. */
class az_bot_directline {
    /**
     * Create the DirectLine Channel on a bot with only v3 protocol enabled.
     *
     * Syntax: 
     *
     * az bot directline create --name
     *                          --resource-group
     *                          [--add-disabled {false, true}]
     *                          [--disablev1 {false, true}]
     *                          [--disablev3 {false, true}]
     *                          [--enable-enhanced-auth {false, true}]
     *                          [--site-name]
     *                          [--subscription]
     *                          [--trusted-origins]
     */
    az_bot_directline_create(): void {
    }

    /**
     * Delete the Directline Channel on a bot.
     *
     * Syntax: 
     *
     * az bot directline delete --name
     *                          --resource-group
     *                          [--subscription]
     */
    az_bot_directline_delete(): void {
    }

    /**
     * Get details of the Directline Channel on a bot.
     *
     * Syntax: 
     *
     * az bot directline show --name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     *                        [--with-secrets {false, true}]
     */
    az_bot_directline_show(): void {
    }

    /**
     * Update the DirectLine Channel on a bot with only v3 protocol enabled.
     *
     * Syntax: 
     *
     * az bot directline update --name
     *                          --resource-group
     *                          [--add-disabled {false, true}]
     *                          [--disablev1 {false, true}]
     *                          [--disablev3 {false, true}]
     *                          [--enable-enhanced-auth {false, true}]
     *                          [--site-name]
     *                          [--subscription]
     *                          [--trusted-origins]
     */
    az_bot_directline_update(): void {
    }
}

/** Manage the email Channel on a bot. */
class az_bot_email {
    /**
     * Create the Email Channel on a bot.
     *
     * Syntax: 
     *
     * az bot email create --email-address
     *                     --name
     *                     --password
     *                     --resource-group
     *                     [--add-disabled {false, true}]
     *                     [--subscription]
     */
    az_bot_email_create(): void {
    }

    /**
     * Delete the email Channel on a bot.
     *
     * Syntax: 
     *
     * az bot email delete --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_bot_email_delete(): void {
    }

    /**
     * Get details of the email Channel on a bot.
     *
     * Syntax: 
     *
     * az bot email show --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     *                   [--with-secrets {false, true}]
     */
    az_bot_email_show(): void {
    }
}

/** Manage the Facebook Channel on a bot. */
class az_bot_facebook {
    /**
     * Create the Facebook Channel on a bot.
     *
     * Syntax: 
     *
     * az bot facebook create --appid
     *                        --name
     *                        --page-id
     *                        --resource-group
     *                        --secret
     *                        --token
     *                        [--add-disabled {false, true}]
     *                        [--subscription]
     */
    az_bot_facebook_create(): void {
    }

    /**
     * Delete the Facebook Channel on a bot.
     *
     * Syntax: 
     *
     * az bot facebook delete --name
     *                        --resource-group
     *                        [--subscription]
     */
    az_bot_facebook_delete(): void {
    }

    /**
     * Get details of the Facebook Channel on a bot.
     *
     * Syntax: 
     *
     * az bot facebook show --name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     *                      [--with-secrets {false, true}]
     */
    az_bot_facebook_show(): void {
    }
}

/** Manage the Kik Channel on a bot. */
class az_bot_kik {
    /**
     * Create the Kik Channel on a bot.
     *
     * Syntax: 
     *
     * az bot kik create --key
     *                   --name
     *                   --resource-group
     *                   --user-name
     *                   [--add-disabled {false, true}]
     *                   [--is-validated {false, true}]
     *                   [--subscription]
     */
    az_bot_kik_create(): void {
    }

    /**
     * Delete the Kik Channel on a bot.
     *
     * Syntax: 
     *
     * az bot kik delete --name
     *                   --resource-group
     *                   [--subscription]
     */
    az_bot_kik_delete(): void {
    }

    /**
     * Get details of the Kik Channel on a bot.
     *
     * Syntax: 
     *
     * az bot kik show --name
     *                 --resource-group
     *                 [--query-examples]
     *                 [--subscription]
     *                 [--with-secrets {false, true}]
     */
    az_bot_kik_show(): void {
    }
}

/** Manage the Microsoft Teams Channel on a bot. */
class az_bot_msteams {
    /**
     * Create the Microsoft Teams Channel on a bot.
     *
     * Syntax: 
     *
     * az bot msteams create --name
     *                       --resource-group
     *                       [--add-disabled {false, true}]
     *                       [--calling-web-hook]
     *                       [--enable-calling {false, true}]
     *                       [--subscription]
     */
    az_bot_msteams_create(): void {
    }

    /**
     * Delete the Microsoft Teams Channel on a bot.
     *
     * Syntax: 
     *
     * az bot msteams delete --name
     *                       --resource-group
     *                       [--subscription]
     */
    az_bot_msteams_delete(): void {
    }

    /**
     * Get details of the Microsoft Teams Channel on a bot.
     *
     * Syntax: 
     *
     * az bot msteams show --name
     *                     --resource-group
     *                     [--query-examples]
     *                     [--subscription]
     *                     [--with-secrets {false, true}]
     */
    az_bot_msteams_show(): void {
    }
}

/** Manage the Skype Channel on a bot. */
class az_bot_skype {
    /**
     * Create the Skype Channel on a bot.
     *
     * Syntax: 
     *
     * az bot skype create --name
     *                     --resource-group
     *                     [--add-disabled {false, true}]
     *                     [--calling-web-hook]
     *                     [--enable-calling {false, true}]
     *                     [--enable-groups {false, true}]
     *                     [--enable-media-cards {false, true}]
     *                     [--enable-messaging {false, true}]
     *                     [--enable-screen-sharing {false, true}]
     *                     [--enable-video {false, true}]
     *                     [--groups-mode]
     *                     [--subscription]
     */
    az_bot_skype_create(): void {
    }

    /**
     * Delete the Skype Channel on a bot.
     *
     * Syntax: 
     *
     * az bot skype delete --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_bot_skype_delete(): void {
    }

    /**
     * Get details of the Skype Channel on a bot.
     *
     * Syntax: 
     *
     * az bot skype show --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     *                   [--with-secrets {false, true}]
     */
    az_bot_skype_show(): void {
    }
}

/** Manage the Slack Channel on a bot. */
class az_bot_slack {
    /**
     * Create the Slack Channel on a bot.
     *
     * Syntax: 
     *
     * az bot slack create --client-id
     *                     --client-secret
     *                     --name
     *                     --resource-group
     *                     --verification-token
     *                     [--add-disabled {false, true}]
     *                     [--landing-page-url]
     *                     [--subscription]
     */
    az_bot_slack_create(): void {
    }

    /**
     * Delete the Slack Channel on a bot.
     *
     * Syntax: 
     *
     * az bot slack delete --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_bot_slack_delete(): void {
    }

    /**
     * Get details of the Slack Channel on a bot.
     *
     * Syntax: 
     *
     * az bot slack show --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     *                   [--with-secrets {false, true}]
     */
    az_bot_slack_show(): void {
    }
}

/** Manage the SMS Channel on a bot. */
class az_bot_sms {
    /**
     * Create the SMS Channel on a bot.
     *
     * Syntax: 
     *
     * az bot sms create --account-sid
     *                   --auth-token
     *                   --name
     *                   --phone
     *                   --resource-group
     *                   [--add-disabled {false, true}]
     *                   [--is-validated {false, true}]
     *                   [--subscription]
     */
    az_bot_sms_create(): void {
    }

    /**
     * Delete the SMS Channel on a bot.
     *
     * Syntax: 
     *
     * az bot sms delete --name
     *                   --resource-group
     *                   [--subscription]
     */
    az_bot_sms_delete(): void {
    }

    /**
     * Get details of the SMS Channel on a bot.
     *
     * Syntax: 
     *
     * az bot sms show --name
     *                 --resource-group
     *                 [--query-examples]
     *                 [--subscription]
     *                 [--with-secrets {false, true}]
     */
    az_bot_sms_show(): void {
    }
}

/** Manage the Telegram Channel on a bot. */
class az_bot_telegram {
    /**
     * Create the Telegram Channel on a bot.
     *
     * Syntax: 
     *
     * az bot telegram create --access-token
     *                        --name
     *                        --resource-group
     *                        [--add-disabled {false, true}]
     *                        [--is-validated {false, true}]
     *                        [--subscription]
     */
    az_bot_telegram_create(): void {
    }

    /**
     * Delete the Telegram Channel on a bot.
     *
     * Syntax: 
     *
     * az bot telegram delete --name
     *                        --resource-group
     *                        [--subscription]
     */
    az_bot_telegram_delete(): void {
    }

    /**
     * Get details of the Telegram Channel on a bot.
     *
     * Syntax: 
     *
     * az bot telegram show --name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     *                      [--with-secrets {false, true}]
     */
    az_bot_telegram_show(): void {
    }
}

/** Manage the Webchat Channel on a bot. */
class az_bot_webchat {
    /**
     * Get details of the Webchat Channel on a bot.
     *
     * Syntax: 
     *
     * az bot webchat show --name
     *                     --resource-group
     *                     [--query-examples]
     *                     [--subscription]
     *                     [--with-secrets {false, true}]
     */
    az_bot_webchat_show(): void {
    }
}

/** Manage Microsoft Azure Bot Service. */
class az_bot {
    /**
     * Create a new v4 SDK bot.
     *
     * Syntax: 
     *
     * az bot create --appid
     *               --kind {registration, webapp}
     *               --name
     *               --resource-group
     *               [--description]
     *               [--display-name]
     *               [--echo {false, true}]
     *               [--endpoint]
     *               [--lang {Csharp, Javascript}]
     *               [--location]
     *               [--password]
     *               [--sku {F0, S1}]
     *               [--subscription]
     *               [--tags]
     */
    az_bot_create(): void {
    }

    /**
     * Delete an existing bot.
     *
     * Syntax: 
     *
     * az bot delete --name
     *               --resource-group
     *               [--subscription]
     */
    az_bot_delete(): void {
    }

    /**
     * Download an existing bot.
     *
     * Syntax: 
     *
     * az bot download --name
     *                 --resource-group
     *                 [--save-path]
     *                 [--subscription]
     */
    az_bot_download(): void {
    }

    /**
     * Add scripts/config files for publishing with `az webapp deployment`.
     *
     * Syntax: 
     *
     * az bot prepare-deploy --lang {Csharp, Javascript, Typescript}
     *                       [--code-dir]
     *                       [--proj-file-path]
     *                       [--subscription]
     */
    az_bot_prepare_deploy(): void {
    }

    /**
     * (Maintenance mode) Add scripts to your local source code directory to be able to publish back using `az bot publish` for v3 SDK bots.
     *
     * Syntax: 
     *
     * az bot prepare-publish --name
     *                        --proj-file-path
     *                        --resource-group
     *                        --sln-name
     *                        [--code-dir]
     *                        [--subscription]
     *                        [--version {v3, v4}]
     */
    az_bot_prepare_publish(): void {
    }

    /**
     * Publish to a bot's associated app service.
     *
     * Syntax: 
     *
     * az bot publish --name
     *                --resource-group
     *                [--code-dir]
     *                [--keep-node-modules {false, true}]
     *                [--proj-file-path]
     *                [--subscription]
     *                [--timeout]
     *                [--version]
     */
    az_bot_publish(): void {
    }

    /**
     * Get an existing bot.
     *
     * Syntax: 
     *
     * az bot show --name
     *             --resource-group
     *             [--msbot {false, true}]
     *             [--query-examples]
     *             [--subscription]
     */
    az_bot_show(): void {
    }

    /**
     * Update an existing bot.
     *
     * Syntax: 
     *
     * az bot update --name
     *               --resource-group
     *               [--ai-api-key]
     *               [--ai-app-id]
     *               [--ai-key]
     *               [--description]
     *               [--display-name]
     *               [--endpoint]
     *               [--icon-url]
     *               [--sku {F0, S1}]
     *               [--subscription]
     *               [--tags]
     */
    az_bot_update(): void {
    }
}

/** Commands to manage CLI objects cached using the `--defer` argument. */
class az_cache {
    /**
     * Delete an object from the cache.
     *
     * Syntax: 
     *
     * az cache delete --name
     *                 --resource-group
     *                 --resource-type
     *                 [--subscription]
     */
    az_cache_delete(): void {
    }

    /**
     * List the contents of the object cache.
     *
     * Syntax: 
     *
     * az cache list [--query-examples]
     *               [--subscription]
     */
    az_cache_list(): void {
    }

    /**
     * Clear the entire CLI object cache.
     *
     * Syntax: 
     *
     * az cache purge [--subscription]
     */
    az_cache_purge(): void {
    }

    /**
     * Show the contents of a specific object in the cache.
     *
     * Syntax: 
     *
     * az cache show --name
     *               --resource-group
     *               --resource-type
     *               [--query-examples]
     *               [--subscription]
     */
    az_cache_show(): void {
    }
}

/** Manage Azure CDN Custom Domains to provide custom host names for endpoints. */
class az_cdn_custom_domain {
    /**
     * Create a new custom domain to provide a hostname for a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn custom-domain create --endpoint-name
     *                             --hostname
     *                             --name
     *                             --profile-name
     *                             --resource-group
     *                             [--location]
     *                             [--subscription]
     *                             [--tags]
     */
    az_cdn_custom_domain_create(): void {
    }

    /**
     * Delete the custom domain of a CDN.
     *
     * Syntax: 
     *
     * az cdn custom-domain delete --endpoint-name
     *                             --name
     *                             --profile-name
     *                             --resource-group
     *                             [--subscription]
     */
    az_cdn_custom_domain_delete(): void {
    }

    /**
     * Disable https delivery of the custom domain.
     *
     * Syntax: 
     *
     * az cdn custom-domain disable-https --endpoint-name
     *                                    --name
     *                                    --profile-name
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_cdn_custom_domain_disable_https(): void {
    }

    /**
     * Enable HTTPS delivery of the custom domain.
     *
     * Syntax: 
     *
     * az cdn custom-domain enable-https --endpoint-name
     *                                   --name
     *                                   --profile-name
     *                                   --resource-group
     *                                   [--min-tls-version {1.0, 1.2, none}]
     *                                   [--subscription]
     *                                   [--user-cert-group-name]
     *                                   [--user-cert-protocol-type {ip, sni}]
     *                                   [--user-cert-secret-name]
     *                                   [--user-cert-secret-version]
     *                                   [--user-cert-subscription-id]
     *                                   [--user-cert-vault-name]
     */
    az_cdn_custom_domain_enable_https(): void {
    }

    /**
     * Lists all of the existing custom domains within an endpoint.
     *
     * Syntax: 
     *
     * az cdn custom-domain list --endpoint-name
     *                           --profile-name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_cdn_custom_domain_list(): void {
    }

    /**
     * Show details for the custom domain of a CDN.
     *
     * Syntax: 
     *
     * az cdn custom-domain show --endpoint-name
     *                           --name
     *                           --profile-name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_cdn_custom_domain_show(): void {
    }
}

/** View all available CDN edge nodes. */
class az_cdn_edge_node {
    /**
     * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.
     *
     * Syntax: 
     *
     * az cdn edge-node list [--query-examples]
     *                       [--subscription]
     */
    az_cdn_edge_node_list(): void {
    }
}

/** Manage delivery rule actions for an endpoint. */
class az_cdn_endpoint_rule_action {
    /**
     * Add an action to a delivery rule.
     *
     * Syntax: 
     *
     * az cdn endpoint rule action add --action-name
     *                                 --rule-name
     *                                 [--cache-behavior {BypassCache, Override, SetIfMissing}]
     *                                 [--cache-duration]
     *                                 [--custom-fragment]
     *                                 [--custom-hostname]
     *                                 [--custom-path]
     *                                 [--custom-querystring]
     *                                 [--destination]
     *                                 [--header-action {Append, Delete, Overwrite}]
     *                                 [--header-name]
     *                                 [--header-value]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--preserve-unmatched-path {false, true}]
     *                                 [--profile-name]
     *                                 [--query-parameters]
     *                                 [--query-string-behavior {Exclude, ExcludeAll, Include, IncludeAll}]
     *                                 [--redirect-protocol {Http, Https, MatchRequest}]
     *                                 [--redirect-type {Found, Moved, PermanentRedirect, TemporaryRedirect}]
     *                                 [--resource-group]
     *                                 [--source-pattern]
     *                                 [--subscription]
     */
    az_cdn_endpoint_rule_action_add(): void {
    }

    /**
     * Remove an action from a delivery rule.
     *
     * Syntax: 
     *
     * az cdn endpoint rule action remove --index
     *                                    --rule-name
     *                                    [--ids]
     *                                    [--name]
     *                                    [--profile-name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_cdn_endpoint_rule_action_remove(): void {
    }

    /**
     * Show delivery rules asscociate with the endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint rule action show [--ids]
     *                                  [--name]
     *                                  [--profile-name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_cdn_endpoint_rule_action_show(): void {
    }
}

/** Manage delivery rule conditions for an endpoint. */
class az_cdn_endpoint_rule_condition {
    /**
     * Add a condition to a delivery rule.
     *
     * Syntax: 
     *
     * az cdn endpoint rule condition add --match-variable
     *                                    --operator
     *                                    --rule-name
     *                                    [--ids]
     *                                    [--match-values]
     *                                    [--name]
     *                                    [--negate-condition {false, true}]
     *                                    [--profile-name]
     *                                    [--resource-group]
     *                                    [--selector]
     *                                    [--subscription]
     *                                    [--transform {Lowercase, Uppercase}]
     */
    az_cdn_endpoint_rule_condition_add(): void {
    }

    /**
     * Remove a condition from a delivery rule.
     *
     * Syntax: 
     *
     * az cdn endpoint rule condition remove --index
     *                                       --rule-name
     *                                       [--ids]
     *                                       [--name]
     *                                       [--profile-name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_cdn_endpoint_rule_condition_remove(): void {
    }

    /**
     * Show delivery rules asscociate with the endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint rule condition show [--ids]
     *                                     [--name]
     *                                     [--profile-name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_cdn_endpoint_rule_condition_show(): void {
    }
}

/** Manage delivery rules for an endpoint. */
class az_cdn_endpoint_rule {
    /**
     * Add a delivery rule to a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint rule add --action-name
     *                          --order
     *                          --rule-name
     *                          [--cache-behavior {BypassCache, Override, SetIfMissing}]
     *                          [--cache-duration]
     *                          [--custom-fragment]
     *                          [--custom-hostname]
     *                          [--custom-path]
     *                          [--custom-querystring]
     *                          [--destination]
     *                          [--header-action {Append, Delete, Overwrite}]
     *                          [--header-name]
     *                          [--header-value]
     *                          [--ids]
     *                          [--match-values]
     *                          [--match-variable]
     *                          [--name]
     *                          [--negate-condition {false, true}]
     *                          [--operator]
     *                          [--preserve-unmatched-path {false, true}]
     *                          [--profile-name]
     *                          [--query-parameters]
     *                          [--query-string-behavior {Exclude, ExcludeAll, Include, IncludeAll}]
     *                          [--redirect-protocol {Http, Https, MatchRequest}]
     *                          [--redirect-type {Found, Moved, PermanentRedirect, TemporaryRedirect}]
     *                          [--resource-group]
     *                          [--selector]
     *                          [--source-pattern]
     *                          [--subscription]
     *                          [--transform {Lowercase, Uppercase}]
     */
    az_cdn_endpoint_rule_add(): void {
    }

    /**
     * Remove a delivery rule from an endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint rule remove --rule-name
     *                             [--ids]
     *                             [--name]
     *                             [--profile-name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_cdn_endpoint_rule_remove(): void {
    }

    /**
     * Show delivery rules asscociate with the endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint rule show [--ids]
     *                           [--name]
     *                           [--profile-name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_cdn_endpoint_rule_show(): void {
    }
}

/** Apply a CDN WAF policy to a CDN endpoint. */
class az_cdn_endpoint_waf_policy {
    /**
     * Remove a CDN WAF policy from a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint waf policy remove [--endpoint-name]
     *                                   [--ids]
     *                                   [--profile-name]
     *                                   [--resource-group]
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_cdn_endpoint_waf_policy_remove(): void {
    }

    /**
     * Set the CDN WAF policy applied to a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint waf policy set [--endpoint-name]
     *                                [--ids]
     *                                [--profile-name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--waf-policy-id]
     *                                [--waf-policy-name]
     *                                [--waf-policy-resource-group-name]
     *                                [--waf-policy-subscription-id]
     */
    az_cdn_endpoint_waf_policy_set(): void {
    }

    /**
     * Show which CDN WAF policy is applied to a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint waf policy show [--endpoint-name]
     *                                 [--ids]
     *                                 [--profile-name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_cdn_endpoint_waf_policy_show(): void {
    }
}

/** Manage WAF properties of a CDN endpoint. */
class az_cdn_endpoint_waf {
}

/** Manage CDN endpoints. */
class az_cdn_endpoint {
    /**
     * Create a named endpoint to connect to a CDN.
     *
     * Syntax: 
     *
     * az cdn endpoint create --name
     *                        --origin
     *                        --profile-name
     *                        --resource-group
     *                        [--content-types-to-compress]
     *                        [--enable-compression {false, true}]
     *                        [--location]
     *                        [--no-http {false, true}]
     *                        [--no-https {false, true}]
     *                        [--no-wait]
     *                        [--origin-host-header]
     *                        [--origin-path]
     *                        [--query-string-caching-behavior]
     *                        [--subscription]
     *                        [--tags]
     */
    az_cdn_endpoint_create(): void {
    }

    /**
     * Delete a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint delete [--ids]
     *                        [--name]
     *                        [--no-wait]
     *                        [--profile-name]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_cdn_endpoint_delete(): void {
    }

    /**
     * List available endpoints for a CDN.
     *
     * Syntax: 
     *
     * az cdn endpoint list --profile-name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_cdn_endpoint_list(): void {
    }

    /**
     * Pre-load content for a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint load --content-paths
     *                      [--ids]
     *                      [--name]
     *                      [--no-wait]
     *                      [--profile-name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_cdn_endpoint_load(): void {
    }

    /**
     * Purge pre-loaded content for a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint purge --content-paths
     *                       [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--profile-name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_cdn_endpoint_purge(): void {
    }

    /**
     * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
     *
     * Syntax: 
     *
     * az cdn endpoint show [--ids]
     *                      [--name]
     *                      [--profile-name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_cdn_endpoint_show(): void {
    }

    /**
     * Start a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint start [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--profile-name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_cdn_endpoint_start(): void {
    }

    /**
     * Stop a CDN endpoint.
     *
     * Syntax: 
     *
     * az cdn endpoint stop [--ids]
     *                      [--name]
     *                      [--no-wait]
     *                      [--profile-name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_cdn_endpoint_stop(): void {
    }

    /**
     * Update a CDN endpoint to manage how content is delivered.
     *
     * Syntax: 
     *
     * az cdn endpoint update [--add]
     *                        [--content-types-to-compress]
     *                        [--enable-compression {false, true}]
     *                        [--force-string]
     *                        [--ids]
     *                        [--name]
     *                        [--no-http {false, true}]
     *                        [--no-https {false, true}]
     *                        [--no-wait]
     *                        [--origin-host-header]
     *                        [--origin-path]
     *                        [--profile-name]
     *                        [--query-string-caching {BypassCaching, IgnoreQueryString, NotSet, UseQueryString}]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--set]
     *                        [--subscription]
     *                        [--tags]
     */
    az_cdn_endpoint_update(): void {
    }

    /**
     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.
     *
     * Syntax: 
     *
     * az cdn endpoint validate-custom-domain --host-name
     *                                        [--ids]
     *                                        [--name]
     *                                        [--profile-name]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_cdn_endpoint_validate_custom_domain(): void {
    }
}

/** List or show existing origins related to CDN endpoints. */
class az_cdn_origin {
    /**
     * Lists all of the existing origins within an endpoint.
     *
     * Syntax: 
     *
     * az cdn origin list --endpoint-name
     *                    --profile-name
     *                    --resource-group
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_cdn_origin_list(): void {
    }

    /**
     * Gets an existing origin within an endpoint.
     *
     * Syntax: 
     *
     * az cdn origin show [--endpoint-name]
     *                    [--ids]
     *                    [--name]
     *                    [--profile-name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_cdn_origin_show(): void {
    }

    /**
     * Update an origin.
     *
     * Syntax: 
     *
     * az cdn origin update [--endpoint-name]
     *                      [--http-port]
     *                      [--https-port]
     *                      [--ids]
     *                      [--name]
     *                      [--private-link-approval-message]
     *                      [--private-link-location]
     *                      [--private-link-resource-id]
     *                      [--profile-name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_cdn_origin_update(): void {
    }
}

/** Manage CDN profiles to define an edge network. */
class az_cdn_profile {
    /**
     * Create a new CDN profile.
     *
     * Syntax: 
     *
     * az cdn profile create --name
     *                       --resource-group
     *                       [--location]
     *                       [--sku {Custom_Verizon, Premium_ChinaCdn, Premium_Verizon, Standard_Akamai, Standard_ChinaCdn, Standard_Microsoft, Standard_Verizon}]
     *                       [--subscription]
     *                       [--tags]
     */
    az_cdn_profile_create(): void {
    }

    /**
     * Delete a CDN profile.
     *
     * Syntax: 
     *
     * az cdn profile delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_cdn_profile_delete(): void {
    }

    /**
     * List CDN profiles.
     *
     * Syntax: 
     *
     * az cdn profile list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_cdn_profile_list(): void {
    }

    /**
     * Gets a CDN profile with the specified profile name under the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az cdn profile show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_cdn_profile_show(): void {
    }

    /**
     * Update a CDN profile.
     *
     * Syntax: 
     *
     * az cdn profile update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     *                       [--tags]
     */
    az_cdn_profile_update(): void {
    }

    /**
     * Checks the quota and actual usage of endpoints under the given CDN profile.
     *
     * Syntax: 
     *
     * az cdn profile usage [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_cdn_profile_usage(): void {
    }
}

/** Manage custom rules of a CDN WAF policy. */
class az_cdn_waf_policy_custom_rule {
    /**
     * Remove a custom rule from a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy custom-rule delete --name
     *                                      [--ids]
     *                                      [--policy-name]
     *                                      [--resource-group]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_cdn_waf_policy_custom_rule_delete(): void {
    }

    /**
     * List custom rules of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy custom-rule list --policy-name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_cdn_waf_policy_custom_rule_list(): void {
    }

    /**
     * Add a custom rule to a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy custom-rule set --action {Allow, Block, Log, Redirect}
     *                                   --match-condition
     *                                   --name
     *                                   --priority
     *                                   [--disabled]
     *                                   [--ids]
     *                                   [--policy-name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_cdn_waf_policy_custom_rule_set(): void {
    }

    /**
     * Show a custom rule of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy custom-rule show --name
     *                                    [--ids]
     *                                    [--policy-name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_cdn_waf_policy_custom_rule_show(): void {
    }
}

/** Manage rule group overrides of a managed rule on a CDN WAF policy. */
class az_cdn_waf_policy_managed_rule_set_rule_group_override {
    /**
     * Remove a rule group override from a managed rule set on a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set rule-group-override delete --name
     *                                                               --rule-set-type
     *                                                               --rule-set-version
     *                                                               [--ids]
     *                                                               [--policy-name]
     *                                                               [--resource-group]
     *                                                               [--subscription]
     *                                                               [--yes]
     */
    az_cdn_waf_policy_managed_rule_set_rule_group_override_delete(): void {
    }

    /**
     * List rule group overrides of a managed rule on a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set rule-group-override list --policy-name
     *                                                             --resource-group
     *                                                             --rule-set-type
     *                                                             --rule-set-version
     *                                                             [--query-examples]
     *                                                             [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_rule_group_override_list(): void {
    }

    /**
     * List available CDN WAF managed rule groups of a managed rule set.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set rule-group-override list-available --rule-set-type
     *                                                                       --rule-set-version
     *                                                                       [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_rule_group_override_list_available(): void {
    }

    /**
     * Add or update a rule group override to a managed rule set on a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set rule-group-override set --name
     *                                                            --rule-override
     *                                                            --rule-set-type
     *                                                            --rule-set-version
     *                                                            [--ids]
     *                                                            [--policy-name]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_rule_group_override_set(): void {
    }

    /**
     * Show a rule group override of a managed rule on a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set rule-group-override show --name
     *                                                             --rule-set-type
     *                                                             --rule-set-version
     *                                                             [--ids]
     *                                                             [--policy-name]
     *                                                             [--query-examples]
     *                                                             [--resource-group]
     *                                                             [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_rule_group_override_show(): void {
    }
}

/** Manage managed rule sets of a CDN WAF policy. */
class az_cdn_waf_policy_managed_rule_set {
    /**
     * Add a managed rule set to a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set add --rule-set-type
     *                                        --rule-set-version
     *                                        [--ids]
     *                                        [--policy-name]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_add(): void {
    }

    /**
     * List managed rule sets added to a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set list --policy-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_list(): void {
    }

    /**
     * List available CDN WAF managed rule sets.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set list-available [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_list_available(): void {
    }

    /**
     * Remove a managed rule set from a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set remove --rule-set-type
     *                                           --rule-set-version
     *                                           [--ids]
     *                                           [--policy-name]
     *                                           [--resource-group]
     *                                           [--subscription]
     *                                           [--yes]
     */
    az_cdn_waf_policy_managed_rule_set_remove(): void {
    }

    /**
     * Show a managed rule of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy managed-rule-set show --rule-set-type
     *                                         --rule-set-version
     *                                         [--ids]
     *                                         [--policy-name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_cdn_waf_policy_managed_rule_set_show(): void {
    }
}

/** Manage rate limit rules of a CDN WAF policy. */
class az_cdn_waf_policy_rate_limit_rule {
    /**
     * Remove a rate limit rule from a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy rate-limit-rule delete --name
     *                                          [--ids]
     *                                          [--policy-name]
     *                                          [--resource-group]
     *                                          [--subscription]
     *                                          [--yes]
     */
    az_cdn_waf_policy_rate_limit_rule_delete(): void {
    }

    /**
     * List rate limit rules of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy rate-limit-rule list --policy-name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_cdn_waf_policy_rate_limit_rule_list(): void {
    }

    /**
     * Add a rate limit rule to a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy rate-limit-rule set --action {Allow, Block, Log, Redirect}
     *                                       --duration
     *                                       --match-condition
     *                                       --name
     *                                       --priority
     *                                       --request-threshold
     *                                       [--disabled]
     *                                       [--ids]
     *                                       [--policy-name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_cdn_waf_policy_rate_limit_rule_set(): void {
    }

    /**
     * Show a rate limit rule of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy rate-limit-rule show --name
     *                                        [--ids]
     *                                        [--policy-name]
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_cdn_waf_policy_rate_limit_rule_show(): void {
    }
}

/** Manage CDN WAF policies. */
class az_cdn_waf_policy {
    /**
     * Delete a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy delete [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--yes]
     */
    az_cdn_waf_policy_delete(): void {
    }

    /**
     * List CDN WAF policies.
     *
     * Syntax: 
     *
     * az cdn waf policy list --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_cdn_waf_policy_list(): void {
    }

    /**
     * Create a new CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy set [--block-response-body]
     *                       [--block-response-status-code]
     *                       [--disabled {false, true}]
     *                       [--ids]
     *                       [--mode]
     *                       [--name]
     *                       [--redirect-url]
     *                       [--resource-group]
     *                       [--sku]
     *                       [--subscription]
     *                       [--tags]
     */
    az_cdn_waf_policy_set(): void {
    }

    /**
     * Show details of a CDN WAF policy.
     *
     * Syntax: 
     *
     * az cdn waf policy show [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_cdn_waf_policy_show(): void {
    }
}

/** */
class az_cdn_waf {
}

/** Manage Azure Content Delivery Networks (CDNs). */
class az_cdn {
    /**
     * Check the availability of a resource name.
     *
     * Syntax: 
     *
     * az cdn name-exists [--ids]
     *                    [--name]
     *                    [--subscription]
     */
    az_cdn_name_exists(): void {
    }

    /**
     * Check the quota and actual usage of the CDN profiles under the given subscription.
     *
     * Syntax: 
     *
     * az cdn usage [--subscription]
     */
    az_cdn_usage(): void {
    }
}

/** Manage registered Azure clouds. */
class az_cloud {
    /**
     * List registered clouds.
     *
     * Syntax: 
     *
     * az cloud list [--query-examples]
     */
    az_cloud_list(): void {
    }

    /**
     * List the supported profiles for a cloud.
     *
     * Syntax: 
     *
     * az cloud list-profiles [--name]
     *                        [--show-all]
     */
    az_cloud_list_profiles(): void {
    }

    /**
     * Register a cloud.
     *
     * Syntax: 
     *
     * az cloud register --name
     *                   [--cloud-config]
     *                   [--endpoint-active-directory]
     *                   [--endpoint-active-directory-data-lake-resource-id]
     *                   [--endpoint-active-directory-graph-resource-id]
     *                   [--endpoint-active-directory-resource-id]
     *                   [--endpoint-gallery]
     *                   [--endpoint-management]
     *                   [--endpoint-resource-manager]
     *                   [--endpoint-sql-management]
     *                   [--endpoint-vm-image-alias-doc]
     *                   [--profile {2017-03-09-profile, 2018-03-01-hybrid, 2019-03-01-hybrid, latest}]
     *                   [--suffix-acr-login-server-endpoint]
     *                   [--suffix-azure-datalake-analytics-catalog-and-job-endpoint]
     *                   [--suffix-azure-datalake-store-file-system-endpoint]
     *                   [--suffix-keyvault-dns]
     *                   [--suffix-sql-server-hostname]
     *                   [--suffix-storage-endpoint]
     */
    az_cloud_register(): void {
    }

    /**
     * Set the active cloud.
     *
     * Syntax: 
     *
     * az cloud set --name
     *              [--profile {2017-03-09-profile, 2018-03-01-hybrid, 2019-03-01-hybrid, latest}]
     */
    az_cloud_set(): void {
    }

    /**
     * Get the details of a registered cloud.
     *
     * Syntax: 
     *
     * az cloud show [--name]
     *               [--query-examples]
     */
    az_cloud_show(): void {
    }

    /**
     * Unregister a cloud.
     *
     * Syntax: 
     *
     * az cloud unregister --name
     */
    az_cloud_unregister(): void {
    }

    /**
     * Update the configuration of a cloud.
     *
     * Syntax: 
     *
     * az cloud update [--cloud-config]
     *                 [--endpoint-active-directory]
     *                 [--endpoint-active-directory-data-lake-resource-id]
     *                 [--endpoint-active-directory-graph-resource-id]
     *                 [--endpoint-active-directory-resource-id]
     *                 [--endpoint-gallery]
     *                 [--endpoint-management]
     *                 [--endpoint-resource-manager]
     *                 [--endpoint-sql-management]
     *                 [--endpoint-vm-image-alias-doc]
     *                 [--name]
     *                 [--profile {2017-03-09-profile, 2018-03-01-hybrid, 2019-03-01-hybrid, latest}]
     *                 [--suffix-acr-login-server-endpoint]
     *                 [--suffix-azure-datalake-analytics-catalog-and-job-endpoint]
     *                 [--suffix-azure-datalake-store-file-system-endpoint]
     *                 [--suffix-keyvault-dns]
     *                 [--suffix-sql-server-hostname]
     *                 [--suffix-storage-endpoint]
     */
    az_cloud_update(): void {
    }
}

/** Manage identity of Cognitive Services accounts. */
class az_cognitiveservices_account_identity {
    /**
     * Assign an identity of a Cognitive Services account.
     *
     * Syntax: 
     *
     * az cognitiveservices account identity assign --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_cognitiveservices_account_identity_assign(): void {
    }

    /**
     * Remove the identity from a Cognitive Services account.
     *
     * Syntax: 
     *
     * az cognitiveservices account identity remove --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_cognitiveservices_account_identity_remove(): void {
    }

    /**
     * Show the identity of a Cognitive Services account.
     *
     * Syntax: 
     *
     * az cognitiveservices account identity show --name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_cognitiveservices_account_identity_show(): void {
    }
}

/** Manage Azure Cognitive Services accounts. */
class az_cognitiveservices_account_keys {
    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account keys list --name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_cognitiveservices_account_keys_list(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account keys regenerate --key-name {key1, key2}
     *                                              --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_cognitiveservices_account_keys_regenerate(): void {
    }
}

/** Manage network rules. */
class az_cognitiveservices_account_network_rule {
    /**
     * Add a network rule.
     *
     * Syntax: 
     *
     * az cognitiveservices account network-rule add --name
     *                                               --resource-group
     *                                               [--ip-address]
     *                                               [--subnet]
     *                                               [--subscription]
     *                                               [--vnet-name]
     */
    az_cognitiveservices_account_network_rule_add(): void {
    }

    /**
     * List network rules.
     *
     * Syntax: 
     *
     * az cognitiveservices account network-rule list --name
     *                                                --resource-group
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_cognitiveservices_account_network_rule_list(): void {
    }

    /**
     * Remove a network rule.
     *
     * Syntax: 
     *
     * az cognitiveservices account network-rule remove --name
     *                                                  --resource-group
     *                                                  [--ip-address]
     *                                                  [--subnet]
     *                                                  [--subscription]
     *                                                  [--vnet-name]
     */
    az_cognitiveservices_account_network_rule_remove(): void {
    }
}

/** Manage Azure Cognitive Services accounts. */
class az_cognitiveservices_account {
    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account create --kind
     *                                     --location
     *                                     --name
     *                                     --resource-group
     *                                     --sku
     *                                     [--api-properties]
     *                                     [--assign-identity]
     *                                     [--custom-domain]
     *                                     [--encryption]
     *                                     [--storage]
     *                                     [--subscription]
     *                                     [--tags]
     *                                     [--yes]
     */
    az_cognitiveservices_account_create(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account delete --name
     *                                     --resource-group
     *                                     [--subscription]
     */
    az_cognitiveservices_account_delete(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account list [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_cognitiveservices_account_list(): void {
    }

    /**
     * List all valid kinds for Azure Cognitive Services account.
     *
     * Syntax: 
     *
     * az cognitiveservices account list-kinds [--subscription]
     */
    az_cognitiveservices_account_list_kinds(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account list-skus [--kind]
     *                                        [--location]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_cognitiveservices_account_list_skus(): void {
    }

    /**
     * List usages for Azure Cognitive Services account.
     *
     * Syntax: 
     *
     * az cognitiveservices account list-usage --name
     *                                         --resource-group
     *                                         [--subscription]
     */
    az_cognitiveservices_account_list_usage(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account show --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cognitiveservices_account_show(): void {
    }

    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices account update --name
     *                                     --resource-group
     *                                     [--api-properties]
     *                                     [--custom-domain]
     *                                     [--encryption]
     *                                     [--sku]
     *                                     [--storage]
     *                                     [--subscription]
     *                                     [--tags]
     */
    az_cognitiveservices_account_update(): void {
    }
}

/** Manage Azure Cognitive Services accounts. */
class az_cognitiveservices {
    /**
     * Manage Azure Cognitive Services accounts.
     *
     * Syntax: 
     *
     * az cognitiveservices list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_cognitiveservices_list(): void {
    }
}

/** Manage parameter persistence. */
class az_config_param_persist {
    /**
     * Delete parameter persistence data.
     *
     * Syntax: 
     *
     * az config param-persist delete [--all]
     *                                [--purge]
     *                                [--recursive]
     *                                [--yes]
     *                                [<NAME>]
     */
    az_config_param_persist_delete(): void {
    }

    /**
     * Turn off parameter persistence.
     *
     * Syntax: 
     *
     * az config param-persist off
     */
    az_config_param_persist_off(): void {
    }

    /**
     * Turn on parameter persistence.
     *
     * Syntax: 
     *
     * az config param-persist on
     */
    az_config_param_persist_on(): void {
    }

    /**
     * Show parameter persistence data.
     *
     * Syntax: 
     *
     * az config param-persist show [--query-examples]
     *                              [<NAME>]
     */
    az_config_param_persist_show(): void {
    }
}

/** Manage Azure CLI configuration. */
class az_config {
    /**
     * Get a configuration.
     *
     * Syntax: 
     *
     * az config get [--local]
     *               [<KEY>]
     */
    az_config_get(): void {
    }

    /**
     * Set a configuration.
     *
     * Syntax: 
     *
     * az config set [--local]
     *               [<KEY_VALUE>]
     */
    az_config_set(): void {
    }

    /**
     * Unset a configuration.
     *
     * Syntax: 
     *
     * az config unset [--local]
     *                 [<KEY>]
     */
    az_config_unset(): void {
    }
}

/** Manage budgets for an Azure subscription. */
class az_consumption_budget {
    /**
     * Create a budget for an Azure subscription.
     *
     * Syntax: 
     *
     * az consumption budget create --amount
     *                              --budget-name
     *                              --category {cost, usage}
     *                              --end-date
     *                              --start-date
     *                              --time-grain {annually, monthly, quarterly}
     *                              [--meter-filter]
     *                              [--resource-filter]
     *                              [--resource-group]
     *                              [--resource-group-filter]
     *                              [--subscription]
     */
    az_consumption_budget_create(): void {
    }

    /**
     * Delete a budget for an Azure subscription.
     *
     * Syntax: 
     *
     * az consumption budget delete --budget-name
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_consumption_budget_delete(): void {
    }

    /**
     * List budgets for an Azure subscription.
     *
     * Syntax: 
     *
     * az consumption budget list [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_consumption_budget_list(): void {
    }

    /**
     * Show budget for an Azure subscription.
     *
     * Syntax: 
     *
     * az consumption budget show --budget-name
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_consumption_budget_show(): void {
    }
}

/** Inspect the marketplace usage data of an Azure subscription within a billing period. */
class az_consumption_marketplace {
    /**
     * List the marketplace for an Azure subscription within a billing period.
     *
     * Syntax: 
     *
     * az consumption marketplace list [--billing-period-name]
     *                                 [--end-date]
     *                                 [--query-examples]
     *                                 [--start-date]
     *                                 [--subscription]
     *                                 [--top]
     */
    az_consumption_marketplace_list(): void {
    }
}

/** Inspect the price sheet of an Azure subscription within a billing period. */
class az_consumption_pricesheet {
    /**
     * Show the price sheet for an Azure subscription within a billing period.
     *
     * Syntax: 
     *
     * az consumption pricesheet show [--billing-period-name]
     *                                [--include-meter-details]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_consumption_pricesheet_show(): void {
    }
}

/** List reservation details. */
class az_consumption_reservation_detail {
    /**
     * List the details of a reservation by order id or reservation id.
     *
     * Syntax: 
     *
     * az consumption reservation detail list --end-date
     *                                        --reservation-order-id
     *                                        --start-date
     *                                        [--query-examples]
     *                                        [--reservation-id]
     *                                        [--subscription]
     */
    az_consumption_reservation_detail_list(): void {
    }
}

/** List reservation summaries. */
class az_consumption_reservation_summary {
    /**
     * List reservation summaries for daily or monthly by order Id or reservation id.
     *
     * Syntax: 
     *
     * az consumption reservation summary list --grain
     *                                         --reservation-order-id
     *                                         [--end-date]
     *                                         [--query-examples]
     *                                         [--reservation-id]
     *                                         [--start-date]
     *                                         [--subscription]
     */
    az_consumption_reservation_summary_list(): void {
    }
}

/** Manage reservations for Azure resources. */
class az_consumption_reservation {
}

/** Inspect the usage of Azure resources. */
class az_consumption_usage {
    /**
     * List the details of Azure resource consumption, either as an invoice or within a billing period.
     *
     * Syntax: 
     *
     * az consumption usage list [--billing-period-name]
     *                           [--end-date]
     *                           [--include-additional-properties]
     *                           [--include-meter-details]
     *                           [--query-examples]
     *                           [--start-date]
     *                           [--subscription]
     *                           [--top]
     */
    az_consumption_usage_list(): void {
    }
}

/** Manage consumption of Azure resources. */
class az_consumption {
}

/** Manage Azure Container Instances. */
class az_container {
    /**
     * Attach local standard output and error streams to a container in a container group.
     *
     * Syntax: 
     *
     * az container attach [--container-name]
     *                     [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_container_attach(): void {
    }

    /**
     * Create a container group.
     *
     * Syntax: 
     *
     * az container create --resource-group
     *                     [--assign-identity]
     *                     [--azure-file-volume-account-key]
     *                     [--azure-file-volume-account-name]
     *                     [--azure-file-volume-mount-path]
     *                     [--azure-file-volume-share-name]
     *                     [--command-line]
     *                     [--cpu]
     *                     [--dns-name-label]
     *                     [--environment-variables]
     *                     [--file]
     *                     [--gitrepo-dir]
     *                     [--gitrepo-mount-path]
     *                     [--gitrepo-revision]
     *                     [--gitrepo-url]
     *                     [--image]
     *                     [--ip-address {Private, Public}]
     *                     [--location]
     *                     [--log-analytics-workspace]
     *                     [--log-analytics-workspace-key]
     *                     [--memory]
     *                     [--name]
     *                     [--network-profile]
     *                     [--no-wait]
     *                     [--os-type {Linux, Windows}]
     *                     [--ports]
     *                     [--protocol {TCP, UDP}]
     *                     [--registry-login-server]
     *                     [--registry-password]
     *                     [--registry-username]
     *                     [--restart-policy {Always, Never, OnFailure}]
     *                     [--role]
     *                     [--scope]
     *                     [--secrets]
     *                     [--secrets-mount-path]
     *                     [--secure-environment-variables]
     *                     [--subnet]
     *                     [--subnet-address-prefix]
     *                     [--subscription]
     *                     [--vnet]
     *                     [--vnet-address-prefix]
     *                     [--vnet-name]
     */
    az_container_create(): void {
    }

    /**
     * Delete a container group.
     *
     * Syntax: 
     *
     * az container delete [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--yes]
     */
    az_container_delete(): void {
    }

    /**
     * Execute a command from within a running container of a container group.
     *
     * Syntax: 
     *
     * az container exec --exec-command
     *                   [--container-name]
     *                   [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     *                   [--terminal-col-size]
     *                   [--terminal-row-size]
     */
    az_container_exec(): void {
    }

    /**
     * Export a container group in yaml format.
     *
     * Syntax: 
     *
     * az container export --file
     *                     [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_container_export(): void {
    }

    /**
     * List container groups.
     *
     * Syntax: 
     *
     * az container list [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_container_list(): void {
    }

    /**
     * Examine the logs for a container in a container group.
     *
     * Syntax: 
     *
     * az container logs [--container-name]
     *                   [--follow]
     *                   [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_container_logs(): void {
    }

    /**
     * Restarts all containers in a container group.
     *
     * Syntax: 
     *
     * az container restart --name
     *                      --resource-group
     *                      [--no-wait]
     *                      [--subscription]
     */
    az_container_restart(): void {
    }

    /**
     * Get the details of a container group.
     *
     * Syntax: 
     *
     * az container show [--ids]
     *                   [--name]
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_container_show(): void {
    }

    /**
     * Starts all containers in a container group.
     *
     * Syntax: 
     *
     * az container start --name
     *                    --resource-group
     *                    [--no-wait]
     *                    [--subscription]
     */
    az_container_start(): void {
    }

    /**
     * Stops all containers in a container group.
     *
     * Syntax: 
     *
     * az container stop --name
     *                   --resource-group
     *                   [--subscription]
     */
    az_container_stop(): void {
    }
}

/** Manage throughput of Cassandra keyspace under an Azure Cosmos DB account. */
class az_cosmosdb_cassandra_keyspace_throughput {
    /**
     * Migrate the throughput of the Cassandra keyspace between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace throughput migrate --account-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   --throughput-type {autoscale, manual}
     *                                                   [--subscription]
     */
    az_cosmosdb_cassandra_keyspace_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the Cassandra keyspace under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace throughput show --account-name
     *                                                --name
     *                                                --resource-group
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_cosmosdb_cassandra_keyspace_throughput_show(): void {
    }

    /**
     * Update the throughput of the Cassandra keyspace under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace throughput update --account-name
     *                                                  --name
     *                                                  --resource-group
     *                                                  [--max-throughput]
     *                                                  [--subscription]
     *                                                  [--throughput]
     */
    az_cosmosdb_cassandra_keyspace_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB Cassandra keyspaces. */
class az_cosmosdb_cassandra_keyspace {
    /**
     * Create an Cassandra keyspace under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace create --account-name
     *                                       --name
     *                                       --resource-group
     *                                       [--max-throughput]
     *                                       [--subscription]
     *                                       [--throughput]
     */
    az_cosmosdb_cassandra_keyspace_create(): void {
    }

    /**
     * Delete the Cassandra keyspace under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace delete --account-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     *                                       [--yes]
     */
    az_cosmosdb_cassandra_keyspace_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB Cassandra keyspace exists.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace exists --account-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_cosmosdb_cassandra_keyspace_exists(): void {
    }

    /**
     * List the Cassandra keyspaces under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace list --account-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_cosmosdb_cassandra_keyspace_list(): void {
    }

    /**
     * Show the details of a Cassandra keyspace under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra keyspace show --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_cosmosdb_cassandra_keyspace_show(): void {
    }
}

/** Manage throughput of Cassandra table under an Azure Cosmos DB account. */
class az_cosmosdb_cassandra_table_throughput {
    /**
     * Migrate the throughput of the Cassandra table between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table throughput migrate --account-name
     *                                                --keyspace-name
     *                                                --name
     *                                                --resource-group
     *                                                --throughput-type {autoscale, manual}
     *                                                [--subscription]
     */
    az_cosmosdb_cassandra_table_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table throughput show --account-name
     *                                             --keyspace-name
     *                                             --name
     *                                             --resource-group
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_cosmosdb_cassandra_table_throughput_show(): void {
    }

    /**
     * Update the throughput of the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table throughput update --account-name
     *                                               --keyspace-name
     *                                               --name
     *                                               --resource-group
     *                                               [--max-throughput]
     *                                               [--subscription]
     *                                               [--throughput]
     */
    az_cosmosdb_cassandra_table_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB Cassandra tables. */
class az_cosmosdb_cassandra_table {
    /**
     * Create an Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table create --account-name
     *                                    --keyspace-name
     *                                    --name
     *                                    --resource-group
     *                                    --schema
     *                                    [--analytical-storage-ttl]
     *                                    [--max-throughput]
     *                                    [--subscription]
     *                                    [--throughput]
     *                                    [--ttl]
     */
    az_cosmosdb_cassandra_table_create(): void {
    }

    /**
     * Delete the Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table delete --account-name
     *                                    --keyspace-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_cosmosdb_cassandra_table_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB Cassandra table exists.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table exists --account-name
     *                                    --keyspace-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_cosmosdb_cassandra_table_exists(): void {
    }

    /**
     * List the Cassandra tables under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table list --account-name
     *                                  --keyspace-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_cosmosdb_cassandra_table_list(): void {
    }

    /**
     * Show the details of a Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table show --account-name
     *                                  --keyspace-name
     *                                  --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_cosmosdb_cassandra_table_show(): void {
    }

    /**
     * Update an Cassandra table under an Azure Cosmos DB Cassandra keyspace.
     *
     * Syntax: 
     *
     * az cosmosdb cassandra table update --account-name
     *                                    --keyspace-name
     *                                    --name
     *                                    --resource-group
     *                                    [--analytical-storage-ttl]
     *                                    [--schema]
     *                                    [--subscription]
     *                                    [--ttl]
     */
    az_cosmosdb_cassandra_table_update(): void {
    }
}

/** Manage Cassandra resources of Azure Cosmos DB account. */
class az_cosmosdb_cassandra {
}

/** Manage Azure Cosmos DB collections. */
class az_cosmosdb_collection {
    /**
     * Creates an Azure Cosmos DB collection.
     *
     * Syntax: 
     *
     * az cosmosdb collection create --collection-name
     *                               --db-name
     *                               [--default-ttl]
     *                               [--indexing-policy]
     *                               [--key]
     *                               [--name]
     *                               [--partition-key-path]
     *                               [--resource-group-name]
     *                               [--subscription]
     *                               [--throughput]
     *                               [--url-connection]
     */
    az_cosmosdb_collection_create(): void {
    }

    /**
     * Deletes an Azure Cosmos DB collection.
     *
     * Syntax: 
     *
     * az cosmosdb collection delete --collection-name
     *                               --db-name
     *                               [--key]
     *                               [--name]
     *                               [--resource-group-name]
     *                               [--subscription]
     *                               [--url-connection]
     *                               [--yes]
     */
    az_cosmosdb_collection_delete(): void {
    }

    /**
     * Returns a boolean indicating whether the collection exists.
     *
     * Syntax: 
     *
     * az cosmosdb collection exists --collection-name
     *                               --db-name
     *                               [--key]
     *                               [--name]
     *                               [--resource-group-name]
     *                               [--subscription]
     *                               [--url-connection]
     */
    az_cosmosdb_collection_exists(): void {
    }

    /**
     * Lists all Azure Cosmos DB collections.
     *
     * Syntax: 
     *
     * az cosmosdb collection list --db-name
     *                             [--key]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group-name]
     *                             [--subscription]
     *                             [--url-connection]
     */
    az_cosmosdb_collection_list(): void {
    }

    /**
     * Shows an Azure Cosmos DB collection and its offer.
     *
     * Syntax: 
     *
     * az cosmosdb collection show --collection-name
     *                             --db-name
     *                             [--key]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group-name]
     *                             [--subscription]
     *                             [--url-connection]
     */
    az_cosmosdb_collection_show(): void {
    }

    /**
     * Updates an Azure Cosmos DB collection.
     *
     * Syntax: 
     *
     * az cosmosdb collection update --collection-name
     *                               --db-name
     *                               [--default-ttl]
     *                               [--indexing-policy]
     *                               [--key]
     *                               [--name]
     *                               [--resource-group-name]
     *                               [--subscription]
     *                               [--throughput]
     *                               [--url-connection]
     */
    az_cosmosdb_collection_update(): void {
    }
}

/** Manage Azure Cosmos DB databases. */
class az_cosmosdb_database {
    /**
     * Creates an Azure Cosmos DB database.
     *
     * Syntax: 
     *
     * az cosmosdb database create --db-name
     *                             [--key]
     *                             [--name]
     *                             [--resource-group-name]
     *                             [--subscription]
     *                             [--throughput]
     *                             [--url-connection]
     */
    az_cosmosdb_database_create(): void {
    }

    /**
     * Deletes an Azure Cosmos DB database.
     *
     * Syntax: 
     *
     * az cosmosdb database delete --db-name
     *                             [--key]
     *                             [--name]
     *                             [--resource-group-name]
     *                             [--subscription]
     *                             [--url-connection]
     *                             [--yes]
     */
    az_cosmosdb_database_delete(): void {
    }

    /**
     * Returns a boolean indicating whether the database exists.
     *
     * Syntax: 
     *
     * az cosmosdb database exists --db-name
     *                             [--key]
     *                             [--name]
     *                             [--resource-group-name]
     *                             [--subscription]
     *                             [--url-connection]
     */
    az_cosmosdb_database_exists(): void {
    }

    /**
     * Lists all Azure Cosmos DB databases.
     *
     * Syntax: 
     *
     * az cosmosdb database list [--key]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group-name]
     *                           [--subscription]
     *                           [--url-connection]
     */
    az_cosmosdb_database_list(): void {
    }

    /**
     * Shows an Azure Cosmos DB database.
     *
     * Syntax: 
     *
     * az cosmosdb database show --db-name
     *                           [--key]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group-name]
     *                           [--subscription]
     *                           [--url-connection]
     */
    az_cosmosdb_database_show(): void {
    }
}

/** Manage throughput of Gremlin database under an Azure Cosmos DB account. */
class az_cosmosdb_gremlin_database_throughput {
    /**
     * Migrate the throughput of the Gremlin database between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database throughput migrate --account-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 --throughput-type {autoscale, manual}
     *                                                 [--subscription]
     */
    az_cosmosdb_gremlin_database_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the Gremlin database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database throughput show --account-name
     *                                              --name
     *                                              --resource-group
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_cosmosdb_gremlin_database_throughput_show(): void {
    }

    /**
     * Update the throughput of the Gremlin database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database throughput update --account-name
     *                                                --name
     *                                                --resource-group
     *                                                [--max-throughput]
     *                                                [--subscription]
     *                                                [--throughput]
     */
    az_cosmosdb_gremlin_database_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB Gremlin databases. */
class az_cosmosdb_gremlin_database {
    /**
     * Create an Gremlin database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database create --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--max-throughput]
     *                                     [--subscription]
     *                                     [--throughput]
     */
    az_cosmosdb_gremlin_database_create(): void {
    }

    /**
     * Delete the Gremlin database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database delete --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_cosmosdb_gremlin_database_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB Gremlin database exists.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database exists --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--subscription]
     */
    az_cosmosdb_gremlin_database_exists(): void {
    }

    /**
     * List the Gremlin databases under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database list --account-name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cosmosdb_gremlin_database_list(): void {
    }

    /**
     * Show the details of a Gremlin database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin database show --account-name
     *                                   --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cosmosdb_gremlin_database_show(): void {
    }
}

/** Manage throughput of Gremlin graph under an Azure Cosmos DB account. */
class az_cosmosdb_gremlin_graph_throughput {
    /**
     * Migrate the throughput of the Gremlin Graph between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph throughput migrate --account-name
     *                                              --database-name
     *                                              --name
     *                                              --resource-group
     *                                              --throughput-type {autoscale, manual}
     *                                              [--subscription]
     */
    az_cosmosdb_gremlin_graph_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph throughput show --account-name
     *                                           --database-name
     *                                           --name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_cosmosdb_gremlin_graph_throughput_show(): void {
    }

    /**
     * Update the throughput of the Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph throughput update --account-name
     *                                             --database-name
     *                                             --name
     *                                             --resource-group
     *                                             [--max-throughput]
     *                                             [--subscription]
     *                                             [--throughput]
     */
    az_cosmosdb_gremlin_graph_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB Gremlin graphs. */
class az_cosmosdb_gremlin_graph {
    /**
     * Create an Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph create --account-name
     *                                  --database-name
     *                                  --name
     *                                  --partition-key-path
     *                                  --resource-group
     *                                  [--conflict-resolution-policy]
     *                                  [--idx]
     *                                  [--max-throughput]
     *                                  [--subscription]
     *                                  [--throughput]
     *                                  [--ttl]
     */
    az_cosmosdb_gremlin_graph_create(): void {
    }

    /**
     * Delete the Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph delete --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     *                                  [--yes]
     */
    az_cosmosdb_gremlin_graph_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB Gremlin graph exists.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph exists --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_cosmosdb_gremlin_graph_exists(): void {
    }

    /**
     * List the Gremlin graphs under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph list --account-name
     *                                --database-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_cosmosdb_gremlin_graph_list(): void {
    }

    /**
     * Show the details of a Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph show --account-name
     *                                --database-name
     *                                --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_cosmosdb_gremlin_graph_show(): void {
    }

    /**
     * Update an Gremlin graph under an Azure Cosmos DB Gremlin database.
     *
     * Syntax: 
     *
     * az cosmosdb gremlin graph update --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--idx]
     *                                  [--subscription]
     *                                  [--ttl]
     */
    az_cosmosdb_gremlin_graph_update(): void {
    }
}

/** Manage Gremlin resources of Azure Cosmos DB account. */
class az_cosmosdb_gremlin {
}

/** Manage Azure Comsos DB keys. */
class az_cosmosdb_keys {
    /**
     * List the access keys or connection strings for a Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb keys list --name
     *                       --resource-group
     *                       [--query-examples]
     *                       [--subscription]
     *                       [--type {connection-strings, keys, read-only-keys}]
     */
    az_cosmosdb_keys_list(): void {
    }

    /**
     * Regenerates an access key for the specified Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb keys regenerate --key-kind {primary, primaryReadonly, secondary, secondaryReadonly}
     *                             [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_cosmosdb_keys_regenerate(): void {
    }
}

/** Manage throughput of MongoDB collection under an Azure Cosmos DB account. */
class az_cosmosdb_mongodb_collection_throughput {
    /**
     * Migrate the throughput of the MongoDB collection between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection throughput migrate --account-name
     *                                                   --database-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   --throughput-type {autoscale, manual}
     *                                                   [--subscription]
     */
    az_cosmosdb_mongodb_collection_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection throughput show --account-name
     *                                                --database-name
     *                                                --name
     *                                                --resource-group
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_cosmosdb_mongodb_collection_throughput_show(): void {
    }

    /**
     * Update the throughput of the MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection throughput update --account-name
     *                                                  --database-name
     *                                                  --name
     *                                                  --resource-group
     *                                                  [--max-throughput]
     *                                                  [--subscription]
     *                                                  [--throughput]
     */
    az_cosmosdb_mongodb_collection_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB MongoDB collections. */
class az_cosmosdb_mongodb_collection {
    /**
     * Create an MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection create --account-name
     *                                       --database-name
     *                                       --name
     *                                       --resource-group
     *                                       [--analytical-storage-ttl]
     *                                       [--idx]
     *                                       [--max-throughput]
     *                                       [--shard]
     *                                       [--subscription]
     *                                       [--throughput]
     */
    az_cosmosdb_mongodb_collection_create(): void {
    }

    /**
     * Delete the MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection delete --account-name
     *                                       --database-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     *                                       [--yes]
     */
    az_cosmosdb_mongodb_collection_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB MongoDB collection exists.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection exists --account-name
     *                                       --database-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_cosmosdb_mongodb_collection_exists(): void {
    }

    /**
     * List the MongoDB collections under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection list --account-name
     *                                     --database-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_cosmosdb_mongodb_collection_list(): void {
    }

    /**
     * Show the details of a MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection show --account-name
     *                                     --database-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_cosmosdb_mongodb_collection_show(): void {
    }

    /**
     * Update an MongoDB collection under an Azure Cosmos DB MongoDB database.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb collection update --account-name
     *                                       --database-name
     *                                       --name
     *                                       --resource-group
     *                                       [--analytical-storage-ttl]
     *                                       [--idx]
     *                                       [--subscription]
     */
    az_cosmosdb_mongodb_collection_update(): void {
    }
}

/** Manage throughput of MongoDB database under an Azure Cosmos DB account. */
class az_cosmosdb_mongodb_database_throughput {
    /**
     * Migrate the throughput of the MongoDB database between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database throughput migrate --account-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 --throughput-type {autoscale, manual}
     *                                                 [--subscription]
     */
    az_cosmosdb_mongodb_database_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the MongoDB database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database throughput show --account-name
     *                                              --name
     *                                              --resource-group
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_cosmosdb_mongodb_database_throughput_show(): void {
    }

    /**
     * Update the throughput of the MongoDB database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database throughput update --account-name
     *                                                --name
     *                                                --resource-group
     *                                                [--max-throughput]
     *                                                [--subscription]
     *                                                [--throughput]
     */
    az_cosmosdb_mongodb_database_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB MongoDB databases. */
class az_cosmosdb_mongodb_database {
    /**
     * Create an MongoDB database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database create --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--max-throughput]
     *                                     [--subscription]
     *                                     [--throughput]
     */
    az_cosmosdb_mongodb_database_create(): void {
    }

    /**
     * Delete the MongoDB database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database delete --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_cosmosdb_mongodb_database_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB MongoDB database exists.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database exists --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--subscription]
     */
    az_cosmosdb_mongodb_database_exists(): void {
    }

    /**
     * List the MongoDB databases under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database list --account-name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cosmosdb_mongodb_database_list(): void {
    }

    /**
     * Show the details of a MongoDB database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb mongodb database show --account-name
     *                                   --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cosmosdb_mongodb_database_show(): void {
    }
}

/** Manage MongoDB resources of Azure Cosmos DB account. */
class az_cosmosdb_mongodb {
}

/** Manage Azure Comsos DB network rules. */
class az_cosmosdb_network_rule {
    /**
     * Adds a virtual network rule to an existing Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb network-rule add --subnet
     *                              [--ids]
     *                              [--ignore-missing-endpoint {false, true}]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--virtual-network]
     */
    az_cosmosdb_network_rule_add(): void {
    }

    /**
     * Lists the virtual network accounts associated with a Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb network-rule list --name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_cosmosdb_network_rule_list(): void {
    }

    /**
     * Adds a virtual network rule to an existing Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb network-rule remove --subnet
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     *                                 [--virtual-network]
     */
    az_cosmosdb_network_rule_remove(): void {
    }
}

/** Manage Azure Comsos DB private endpoint connections. */
class az_cosmosdb_private_endpoint_connection {
    /**
     * Approve the specified private endpoint connection associated with Azure Comsos DB.
     *
     * Syntax: 
     *
     * az cosmosdb private-endpoint-connection approve [--account-name]
     *                                                 [--description]
     *                                                 [--id]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_cosmosdb_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete the specified private endpoint connection associated with Azure Comsos DB.
     *
     * Syntax: 
     *
     * az cosmosdb private-endpoint-connection delete [--account-name]
     *                                                [--id]
     *                                                [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_cosmosdb_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject the specified private endpoint connection associated with Azure Comsos DB.
     *
     * Syntax: 
     *
     * az cosmosdb private-endpoint-connection reject [--account-name]
     *                                                [--description]
     *                                                [--id]
     *                                                [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_cosmosdb_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection associated with Azure Comsos DB.
     *
     * Syntax: 
     *
     * az cosmosdb private-endpoint-connection show [--account-name]
     *                                              [--id]
     *                                              [--ids]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_cosmosdb_private_endpoint_connection_show(): void {
    }
}

/** Manage Azure Comsos DB private link resources. */
class az_cosmosdb_private_link_resource {
    /**
     * List the private link resources supported for Azure Comsos DB.
     *
     * Syntax: 
     *
     * az cosmosdb private-link-resource list --account-name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_cosmosdb_private_link_resource_list(): void {
    }
}

/** Manage throughput of SQL container under an Azure Cosmos DB account. */
class az_cosmosdb_sql_container_throughput {
    /**
     * Migrate the throughput of the SQL container between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb sql container throughput migrate --account-name
     *                                              --database-name
     *                                              --name
     *                                              --resource-group
     *                                              --throughput-type {autoscale, manual}
     *                                              [--subscription]
     */
    az_cosmosdb_sql_container_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container throughput show --account-name
     *                                           --database-name
     *                                           --name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_cosmosdb_sql_container_throughput_show(): void {
    }

    /**
     * Update the throughput of the SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container throughput update --account-name
     *                                             --database-name
     *                                             --name
     *                                             --resource-group
     *                                             [--max-throughput]
     *                                             [--subscription]
     *                                             [--throughput]
     */
    az_cosmosdb_sql_container_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB SQL containers. */
class az_cosmosdb_sql_container {
    /**
     * Create an SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container create --account-name
     *                                  --database-name
     *                                  --name
     *                                  --partition-key-path
     *                                  --resource-group
     *                                  [--conflict-resolution-policy]
     *                                  [--idx]
     *                                  [--max-throughput]
     *                                  [--partition-key-version]
     *                                  [--subscription]
     *                                  [--throughput]
     *                                  [--ttl]
     *                                  [--unique-key-policy]
     */
    az_cosmosdb_sql_container_create(): void {
    }

    /**
     * Delete the SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container delete --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     *                                  [--yes]
     */
    az_cosmosdb_sql_container_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB SQL container exists.
     *
     * Syntax: 
     *
     * az cosmosdb sql container exists --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_cosmosdb_sql_container_exists(): void {
    }

    /**
     * List the SQL containers under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container list --account-name
     *                                --database-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_cosmosdb_sql_container_list(): void {
    }

    /**
     * Show the details of a SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container show --account-name
     *                                --database-name
     *                                --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_cosmosdb_sql_container_show(): void {
    }

    /**
     * Update an SQL container under an Azure Cosmos DB SQL database.
     *
     * Syntax: 
     *
     * az cosmosdb sql container update --account-name
     *                                  --database-name
     *                                  --name
     *                                  --resource-group
     *                                  [--idx]
     *                                  [--subscription]
     *                                  [--ttl]
     */
    az_cosmosdb_sql_container_update(): void {
    }
}

/** Manage throughput of SQL database under an Azure Cosmos DB account. */
class az_cosmosdb_sql_database_throughput {
    /**
     * Migrate the throughput of the SQL database between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb sql database throughput migrate --account-name
     *                                             --name
     *                                             --resource-group
     *                                             --throughput-type {autoscale, manual}
     *                                             [--subscription]
     */
    az_cosmosdb_sql_database_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the SQL database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database throughput show --account-name
     *                                          --name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_cosmosdb_sql_database_throughput_show(): void {
    }

    /**
     * Update the throughput of the SQL database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database throughput update --account-name
     *                                            --name
     *                                            --resource-group
     *                                            [--max-throughput]
     *                                            [--subscription]
     *                                            [--throughput]
     */
    az_cosmosdb_sql_database_throughput_update(): void {
    }
}

/** Manage Azure Cosmos DB SQL databases. */
class az_cosmosdb_sql_database {
    /**
     * Create an SQL database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database create --account-name
     *                                 --name
     *                                 --resource-group
     *                                 [--max-throughput]
     *                                 [--subscription]
     *                                 [--throughput]
     */
    az_cosmosdb_sql_database_create(): void {
    }

    /**
     * Delete the SQL database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database delete --account-name
     *                                 --name
     *                                 --resource-group
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_cosmosdb_sql_database_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB SQL database exists.
     *
     * Syntax: 
     *
     * az cosmosdb sql database exists --account-name
     *                                 --name
     *                                 --resource-group
     *                                 [--subscription]
     */
    az_cosmosdb_sql_database_exists(): void {
    }

    /**
     * List the SQL databases under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database list --account-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_cosmosdb_sql_database_list(): void {
    }

    /**
     * Show the details of a SQL database under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb sql database show --account-name
     *                               --name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_cosmosdb_sql_database_show(): void {
    }
}

/** Manage Azure Cosmos DB SQL stored procedures. */
class az_cosmosdb_sql_stored_procedure {
    /**
     * Create an SQL stored procedure under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql stored-procedure create --account-name
     *                                         --body
     *                                         --container-name
     *                                         --database-name
     *                                         --name
     *                                         --resource-group
     *                                         [--subscription]
     */
    az_cosmosdb_sql_stored_procedure_create(): void {
    }

    /**
     * Delete the SQL stored procedure under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql stored-procedure delete --account-name
     *                                         --container-name
     *                                         --database-name
     *                                         --name
     *                                         --resource-group
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_cosmosdb_sql_stored_procedure_delete(): void {
    }

    /**
     * List the SQL stored procedures under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql stored-procedure list --account-name
     *                                       --container-name
     *                                       --database-name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_cosmosdb_sql_stored_procedure_list(): void {
    }

    /**
     * Show the details of a SQL stored procedure under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql stored-procedure show --account-name
     *                                       --container-name
     *                                       --database-name
     *                                       --name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_cosmosdb_sql_stored_procedure_show(): void {
    }

    /**
     * Creates or Updates an Azure Cosmos DB SQL stored procedure.
     *
     * Syntax: 
     *
     * az cosmosdb sql stored-procedure update --account-name
     *                                         --body
     *                                         --container-name
     *                                         --database-name
     *                                         --name
     *                                         --resource-group
     *                                         [--subscription]
     */
    az_cosmosdb_sql_stored_procedure_update(): void {
    }
}

/** Manage Azure Cosmos DB SQL triggers. */
class az_cosmosdb_sql_trigger {
    /**
     * Create an SQL trigger under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql trigger create --account-name
     *                                --body
     *                                --container-name
     *                                --database-name
     *                                --name
     *                                --resource-group
     *                                [--operation {All, Create, Delete, Replace, Update}]
     *                                [--subscription]
     *                                [--type {Post, Pre}]
     */
    az_cosmosdb_sql_trigger_create(): void {
    }

    /**
     * Delete the SQL trigger under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql trigger delete --account-name
     *                                --container-name
     *                                --database-name
     *                                --name
     *                                --resource-group
     *                                [--subscription]
     *                                [--yes]
     */
    az_cosmosdb_sql_trigger_delete(): void {
    }

    /**
     * List the SQL triggers under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql trigger list --account-name
     *                              --container-name
     *                              --database-name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_cosmosdb_sql_trigger_list(): void {
    }

    /**
     * Show the details of a SQL trigger under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql trigger show --account-name
     *                              --container-name
     *                              --database-name
     *                              --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_cosmosdb_sql_trigger_show(): void {
    }

    /**
     * Updates an Azure Cosmos DB SQL trigger.
     *
     * Syntax: 
     *
     * az cosmosdb sql trigger update --account-name
     *                                --container-name
     *                                --database-name
     *                                --name
     *                                --resource-group
     *                                [--body]
     *                                [--operation {All, Create, Delete, Replace, Update}]
     *                                [--subscription]
     *                                [--type {Post, Pre}]
     */
    az_cosmosdb_sql_trigger_update(): void {
    }
}

/** Manage Azure Cosmos DB SQL user defined functions. */
class az_cosmosdb_sql_user_defined_function {
    /**
     * Create an SQL user defined function under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql user-defined-function create --account-name
     *                                              --body
     *                                              --container-name
     *                                              --database-name
     *                                              --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_cosmosdb_sql_user_defined_function_create(): void {
    }

    /**
     * Delete the SQL user defined function under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql user-defined-function delete --account-name
     *                                              --container-name
     *                                              --database-name
     *                                              --name
     *                                              --resource-group
     *                                              [--subscription]
     *                                              [--yes]
     */
    az_cosmosdb_sql_user_defined_function_delete(): void {
    }

    /**
     * List the SQL user defined functions under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql user-defined-function list --account-name
     *                                            --container-name
     *                                            --database-name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_cosmosdb_sql_user_defined_function_list(): void {
    }

    /**
     * Show the details of a SQL user defined function under an Azure Cosmos DB SQL container.
     *
     * Syntax: 
     *
     * az cosmosdb sql user-defined-function show --account-name
     *                                            --container-name
     *                                            --database-name
     *                                            --name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_cosmosdb_sql_user_defined_function_show(): void {
    }

    /**
     * Creates or Updates an Azure Cosmos DB SQL user defined function.
     *
     * Syntax: 
     *
     * az cosmosdb sql user-defined-function update --account-name
     *                                              --body
     *                                              --container-name
     *                                              --database-name
     *                                              --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_cosmosdb_sql_user_defined_function_update(): void {
    }
}

/** Manage SQL resources of Azure Cosmos DB account. */
class az_cosmosdb_sql {
}

/** Manage throughput of Table under an Azure Cosmos DB account. */
class az_cosmosdb_table_throughput {
    /**
     * Migrate the throughput of the Table between autoscale and manually provisioned.
     *
     * Syntax: 
     *
     * az cosmosdb table throughput migrate --account-name
     *                                      --name
     *                                      --resource-group
     *                                      --throughput-type {autoscale, manual}
     *                                      [--subscription]
     */
    az_cosmosdb_table_throughput_migrate(): void {
    }

    /**
     * Get the throughput of the Table under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table throughput show --account-name
     *                                   --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_cosmosdb_table_throughput_show(): void {
    }

    /**
     * Update the throughput of the Table under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table throughput update --account-name
     *                                     --name
     *                                     --resource-group
     *                                     [--max-throughput]
     *                                     [--subscription]
     *                                     [--throughput]
     */
    az_cosmosdb_table_throughput_update(): void {
    }
}

/** Manage Table resources of Azure Cosmos DB account. */
class az_cosmosdb_table {
    /**
     * Create an Table under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table create --account-name
     *                          --name
     *                          --resource-group
     *                          [--max-throughput]
     *                          [--subscription]
     *                          [--throughput]
     */
    az_cosmosdb_table_create(): void {
    }

    /**
     * Delete the Table under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table delete --account-name
     *                          --name
     *                          --resource-group
     *                          [--subscription]
     *                          [--yes]
     */
    az_cosmosdb_table_delete(): void {
    }

    /**
     * Checks if an Azure Cosmos DB table exists.
     *
     * Syntax: 
     *
     * az cosmosdb table exists --account-name
     *                          --name
     *                          --resource-group
     *                          [--subscription]
     */
    az_cosmosdb_table_exists(): void {
    }

    /**
     * List the Tables under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table list --account-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_cosmosdb_table_list(): void {
    }

    /**
     * Show the details of a Table under an Azure Cosmos DB account.
     *
     * Syntax: 
     *
     * az cosmosdb table show --account-name
     *                        --name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_cosmosdb_table_show(): void {
    }
}

/** Manage Azure Cosmos DB database accounts. */
class az_cosmosdb {
    /**
     * Checks if an Azure Cosmos DB account name exists.
     *
     * Syntax: 
     *
     * az cosmosdb check-name-exists [--ids]
     *                               [--name]
     *                               [--subscription]
     */
    az_cosmosdb_check_name_exists(): void {
    }

    /**
     * Creates a new Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb create --name
     *                    --resource-group
     *                    [--capabilities]
     *                    [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
     *                    [--disable-key-based-metadata-write-access {false, true}]
     *                    [--enable-analytical-storage {false, true}]
     *                    [--enable-automatic-failover {false, true}]
     *                    [--enable-free-tier {false, true}]
     *                    [--enable-multiple-write-locations {false, true}]
     *                    [--enable-public-network {false, true}]
     *                    [--enable-virtual-network {false, true}]
     *                    [--ip-range-filter]
     *                    [--key-uri]
     *                    [--kind {GlobalDocumentDB, MongoDB, Parse}]
     *                    [--locations]
     *                    [--max-interval]
     *                    [--max-staleness-prefix]
     *                    [--server-version {3.2, 3.6}]
     *                    [--subscription]
     *                    [--tags]
     *                    [--virtual-network-rules]
     */
    az_cosmosdb_create(): void {
    }

    /**
     * Deletes an Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb delete [--ids]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--yes]
     */
    az_cosmosdb_delete(): void {
    }

    /**
     * Changes the failover priority for the Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb failover-priority-change --failover-policies
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_cosmosdb_failover_priority_change(): void {
    }

    /**
     * List Azure Cosmos DB database accounts.
     *
     * Syntax: 
     *
     * az cosmosdb list [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_cosmosdb_list(): void {
    }

    /**
     * List the connection strings for a Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb list-connection-strings [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_cosmosdb_list_connection_strings(): void {
    }

    /**
     * List the access keys for a Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb list-keys [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_cosmosdb_list_keys(): void {
    }

    /**
     * List the read-only access keys for a Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb list-read-only-keys [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_cosmosdb_list_read_only_keys(): void {
    }

    /**
     * Regenerate an access key for a Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb regenerate-key --key-kind {primary, primaryReadonly, secondary, secondaryReadonly}
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_cosmosdb_regenerate_key(): void {
    }

    /**
     * Get the details of an Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb show [--ids]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_cosmosdb_show(): void {
    }

    /**
     * Update an Azure Cosmos DB database account.
     *
     * Syntax: 
     *
     * az cosmosdb update [--capabilities]
     *                    [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
     *                    [--disable-key-based-metadata-write-access {false, true}]
     *                    [--enable-analytical-storage {false, true}]
     *                    [--enable-automatic-failover {false, true}]
     *                    [--enable-multiple-write-locations {false, true}]
     *                    [--enable-public-network {false, true}]
     *                    [--enable-virtual-network {false, true}]
     *                    [--ids]
     *                    [--ip-range-filter]
     *                    [--locations]
     *                    [--max-interval]
     *                    [--max-staleness-prefix]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--tags]
     *                    [--virtual-network-rules]
     */
    az_cosmosdb_update(): void {
    }
}

/** Manage Azure Resource Manager template deployment at resource group. */
class az_deployment_group {
    /**
     * Cancel a deployment at resource group.
     *
     * Syntax: 
     *
     * az deployment group cancel --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_deployment_group_cancel(): void {
    }

    /**
     * Start a deployment at resource group.
     *
     * Syntax: 
     *
     * az deployment group create --resource-group
     *                            [--aux-subs]
     *                            [--aux-tenants]
     *                            [--confirm-with-what-if]
     *                            [--handle-extended-json-format]
     *                            [--mode {Complete, Incremental}]
     *                            [--name]
     *                            [--no-prompt {false, true}]
     *                            [--no-wait]
     *                            [--parameters]
     *                            [--rollback-on-error]
     *                            [--subscription]
     *                            [--template-file]
     *                            [--template-uri]
     *                            [--what-if-exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                            [--what-if-result-format {FullResourcePayloads, ResourceIdOnly}]
     */
    az_deployment_group_create(): void {
    }

    /**
     * Delete a deployment at resource group.
     *
     * Syntax: 
     *
     * az deployment group delete --name
     *                            --resource-group
     *                            [--no-wait]
     *                            [--subscription]
     */
    az_deployment_group_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az deployment group export --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_deployment_group_export(): void {
    }

    /**
     * List deployments at resource group.
     *
     * Syntax: 
     *
     * az deployment group list --resource-group
     *                          [--filter]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_deployment_group_list(): void {
    }

    /**
     * Show a deployment at resource group.
     *
     * Syntax: 
     *
     * az deployment group show --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_deployment_group_show(): void {
    }

    /**
     * Validate whether a template is valid at resource group.
     *
     * Syntax: 
     *
     * az deployment group validate --resource-group
     *                              [--handle-extended-json-format]
     *                              [--mode {Complete, Incremental}]
     *                              [--name]
     *                              [--no-prompt {false, true}]
     *                              [--parameters]
     *                              [--rollback-on-error]
     *                              [--subscription]
     *                              [--template-file]
     *                              [--template-uri]
     */
    az_deployment_group_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az deployment group wait --name
     *                          --resource-group
     *                          [--created]
     *                          [--custom]
     *                          [--deleted]
     *                          [--exists]
     *                          [--interval]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--updated]
     */
    az_deployment_group_wait(): void {
    }

    /**
     * Execute a deployment What-If operation at resource group scope.
     *
     * Syntax: 
     *
     * az deployment group what-if --resource-group
     *                             [--aux-tenants]
     *                             [--exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                             [--mode {Complete, Incremental}]
     *                             [--name]
     *                             [--no-pretty-print]
     *                             [--no-prompt {false, true}]
     *                             [--parameters]
     *                             [--result-format {FullResourcePayloads, ResourceIdOnly}]
     *                             [--subscription]
     *                             [--template-file]
     *                             [--template-uri]
     */
    az_deployment_group_what_if(): void {
    }
}

/** Manage Azure Resource Manager template deployment at management group. */
class az_deployment_mg {
    /**
     * Cancel a deployment at management group.
     *
     * Syntax: 
     *
     * az deployment mg cancel --management-group-id
     *                         --name
     *                         [--subscription]
     */
    az_deployment_mg_cancel(): void {
    }

    /**
     * Start a deployment at management group.
     *
     * Syntax: 
     *
     * az deployment mg create --location
     *                         --management-group-id
     *                         [--confirm-with-what-if]
     *                         [--handle-extended-json-format]
     *                         [--name]
     *                         [--no-prompt {false, true}]
     *                         [--no-wait]
     *                         [--parameters]
     *                         [--subscription]
     *                         [--template-file]
     *                         [--template-uri]
     *                         [--what-if-exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                         [--what-if-result-format {FullResourcePayloads, ResourceIdOnly}]
     */
    az_deployment_mg_create(): void {
    }

    /**
     * Delete a deployment at management group.
     *
     * Syntax: 
     *
     * az deployment mg delete --management-group-id
     *                         --name
     *                         [--no-wait]
     *                         [--subscription]
     */
    az_deployment_mg_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az deployment mg export --management-group-id
     *                         --name
     *                         [--subscription]
     */
    az_deployment_mg_export(): void {
    }

    /**
     * List deployments at management group.
     *
     * Syntax: 
     *
     * az deployment mg list --management-group-id
     *                       [--filter]
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_deployment_mg_list(): void {
    }

    /**
     * Show a deployment at management group.
     *
     * Syntax: 
     *
     * az deployment mg show --management-group-id
     *                       --name
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_deployment_mg_show(): void {
    }

    /**
     * Validate whether a template is valid at management group.
     *
     * Syntax: 
     *
     * az deployment mg validate --location
     *                           --management-group-id
     *                           [--handle-extended-json-format]
     *                           [--name]
     *                           [--no-prompt {false, true}]
     *                           [--parameters]
     *                           [--subscription]
     *                           [--template-file]
     *                           [--template-uri]
     */
    az_deployment_mg_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az deployment mg wait --management-group-id
     *                       --name
     *                       [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--interval]
     *                       [--subscription]
     *                       [--timeout]
     *                       [--updated]
     */
    az_deployment_mg_wait(): void {
    }

    /**
     * Execute a deployment What-If operation at management group scope.
     *
     * Syntax: 
     *
     * az deployment mg what-if --location
     *                          --management-group-id
     *                          [--exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                          [--name]
     *                          [--no-pretty-print]
     *                          [--no-prompt {false, true}]
     *                          [--parameters]
     *                          [--result-format {FullResourcePayloads, ResourceIdOnly}]
     *                          [--subscription]
     *                          [--template-file]
     *                          [--template-uri]
     */
    az_deployment_mg_what_if(): void {
    }
}

/** Manage deployment operations at resource group. */
class az_deployment_operation_group {
    /**
     * List deployment operations at resource group.
     *
     * Syntax: 
     *
     * az deployment operation group list --name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_deployment_operation_group_list(): void {
    }

    /**
     * Show a deployment operation at resource group.
     *
     * Syntax: 
     *
     * az deployment operation group show --name
     *                                    --operation-ids
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_deployment_operation_group_show(): void {
    }
}

/** Manage deployment operations at management group. */
class az_deployment_operation_mg {
    /**
     * List deployment operations at management group.
     *
     * Syntax: 
     *
     * az deployment operation mg list --management-group-id
     *                                 --name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_deployment_operation_mg_list(): void {
    }

    /**
     * Show a deployment operation at management group.
     *
     * Syntax: 
     *
     * az deployment operation mg show --management-group-id
     *                                 --name
     *                                 --operation-ids
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_deployment_operation_mg_show(): void {
    }
}

/** Manage deployment operations at subscription scope. */
class az_deployment_operation_sub {
    /**
     * List deployment operations at subscription scope.
     *
     * Syntax: 
     *
     * az deployment operation sub list --name
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_deployment_operation_sub_list(): void {
    }

    /**
     * Show a deployment operation at subscription scope.
     *
     * Syntax: 
     *
     * az deployment operation sub show --name
     *                                  --operation-ids
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_deployment_operation_sub_show(): void {
    }
}

/** Manage deployment operations at tenant scope. */
class az_deployment_operation_tenant {
    /**
     * List deployment operations at tenant scope.
     *
     * Syntax: 
     *
     * az deployment operation tenant list --name
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_deployment_operation_tenant_list(): void {
    }

    /**
     * Show a deployment operation at tenant scope.
     *
     * Syntax: 
     *
     * az deployment operation tenant show --name
     *                                     --operation-ids
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_deployment_operation_tenant_show(): void {
    }
}

/** Manage deployment operations at subscription scope. */
class az_deployment_operation {
    /**
     * List deployment operations at subscription scope.
     *
     * Syntax: 
     *
     * az deployment operation list --name
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_deployment_operation_list(): void {
    }

    /**
     * Show a deployment operation at subscription scope.
     *
     * Syntax: 
     *
     * az deployment operation show --name
     *                              --operation-ids
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_deployment_operation_show(): void {
    }
}

/** Manage Azure Resource Manager template deployment at subscription scope. */
class az_deployment_sub {
    /**
     * Cancel a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub cancel --name
     *                          [--subscription]
     */
    az_deployment_sub_cancel(): void {
    }

    /**
     * Start a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub create --location
     *                          [--confirm-with-what-if]
     *                          [--handle-extended-json-format]
     *                          [--name]
     *                          [--no-prompt {false, true}]
     *                          [--no-wait]
     *                          [--parameters]
     *                          [--subscription]
     *                          [--template-file]
     *                          [--template-uri]
     *                          [--what-if-exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                          [--what-if-result-format {FullResourcePayloads, ResourceIdOnly}]
     */
    az_deployment_sub_create(): void {
    }

    /**
     * Delete a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub delete --name
     *                          [--no-wait]
     *                          [--subscription]
     */
    az_deployment_sub_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az deployment sub export --name
     *                          [--subscription]
     */
    az_deployment_sub_export(): void {
    }

    /**
     * List deployments at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub list [--filter]
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_deployment_sub_list(): void {
    }

    /**
     * Show a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub show --name
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_deployment_sub_show(): void {
    }

    /**
     * Validate whether a template is valid at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub validate --location
     *                            [--handle-extended-json-format]
     *                            [--name]
     *                            [--no-prompt {false, true}]
     *                            [--parameters]
     *                            [--subscription]
     *                            [--template-file]
     *                            [--template-uri]
     */
    az_deployment_sub_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az deployment sub wait --name
     *                        [--created]
     *                        [--custom]
     *                        [--deleted]
     *                        [--exists]
     *                        [--interval]
     *                        [--subscription]
     *                        [--timeout]
     *                        [--updated]
     */
    az_deployment_sub_wait(): void {
    }

    /**
     * Execute a deployment What-If operation at subscription scope.
     *
     * Syntax: 
     *
     * az deployment sub what-if --location
     *                           [--exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                           [--name]
     *                           [--no-pretty-print]
     *                           [--no-prompt {false, true}]
     *                           [--parameters]
     *                           [--result-format {FullResourcePayloads, ResourceIdOnly}]
     *                           [--subscription]
     *                           [--template-file]
     *                           [--template-uri]
     */
    az_deployment_sub_what_if(): void {
    }
}

/** Manage Azure Resource Manager template deployment at tenant scope. */
class az_deployment_tenant {
    /**
     * Cancel a deployment at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant cancel --name
     *                             [--subscription]
     */
    az_deployment_tenant_cancel(): void {
    }

    /**
     * Start a deployment at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant create --location
     *                             [--confirm-with-what-if]
     *                             [--handle-extended-json-format]
     *                             [--name]
     *                             [--no-prompt {false, true}]
     *                             [--no-wait]
     *                             [--parameters]
     *                             [--subscription]
     *                             [--template-file]
     *                             [--template-uri]
     *                             [--what-if-exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                             [--what-if-result-format {FullResourcePayloads, ResourceIdOnly}]
     */
    az_deployment_tenant_create(): void {
    }

    /**
     * Delete a deployment at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant delete --name
     *                             [--no-wait]
     *                             [--subscription]
     */
    az_deployment_tenant_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az deployment tenant export --name
     *                             [--subscription]
     */
    az_deployment_tenant_export(): void {
    }

    /**
     * List deployments at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant list [--filter]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_deployment_tenant_list(): void {
    }

    /**
     * Show a deployment at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant show --name
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_deployment_tenant_show(): void {
    }

    /**
     * Validate whether a template is valid at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant validate --location
     *                               [--handle-extended-json-format]
     *                               [--name]
     *                               [--no-prompt {false, true}]
     *                               [--parameters]
     *                               [--subscription]
     *                               [--template-file]
     *                               [--template-uri]
     */
    az_deployment_tenant_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az deployment tenant wait --name
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_deployment_tenant_wait(): void {
    }

    /**
     * Execute a deployment What-If operation at tenant scope.
     *
     * Syntax: 
     *
     * az deployment tenant what-if --location
     *                              [--exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                              [--name]
     *                              [--no-pretty-print]
     *                              [--no-prompt {false, true}]
     *                              [--parameters]
     *                              [--result-format {FullResourcePayloads, ResourceIdOnly}]
     *                              [--subscription]
     *                              [--template-file]
     *                              [--template-uri]
     */
    az_deployment_tenant_what_if(): void {
    }
}

/** Manage deployment scripts at subscription or resource group scope. */
class az_deployment_scripts {
    /**
     * Delete a deployment script.
     *
     * Syntax: 
     *
     * az deployment-scripts delete --name
     *                              --resource-group
     *                              [--subscription]
     *                              [--yes]
     */
    az_deployment_scripts_delete(): void {
    }

    /**
     * List all deployment scripts.
     *
     * Syntax: 
     *
     * az deployment-scripts list [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_deployment_scripts_list(): void {
    }

    /**
     * Retrieve a deployment script.
     *
     * Syntax: 
     *
     * az deployment-scripts show --name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_deployment_scripts_show(): void {
    }

    /**
     * Show deployment script logs.
     *
     * Syntax: 
     *
     * az deployment-scripts show-log --name
     *                                --resource-group
     *                                [--subscription]
     */
    az_deployment_scripts_show_log(): void {
    }
}

/** Manage Azure Resource Manager template deployment at subscription scope. */
class az_deployment {
    /**
     * Cancel a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment cancel --name
     *                      [--subscription]
     */
    az_deployment_cancel(): void {
    }

    /**
     * Start a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment create --location
     *                      [--confirm-with-what-if]
     *                      [--handle-extended-json-format]
     *                      [--name]
     *                      [--no-prompt {false, true}]
     *                      [--no-wait]
     *                      [--parameters]
     *                      [--subscription]
     *                      [--template-file]
     *                      [--template-uri]
     *                      [--what-if-exclude-change-types {Create, Delete, Deploy, Ignore, Modify, NoChange}]
     *                      [--what-if-result-format {FullResourcePayloads, ResourceIdOnly}]
     */
    az_deployment_create(): void {
    }

    /**
     * Delete a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment delete --name
     *                      [--no-wait]
     *                      [--subscription]
     */
    az_deployment_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az deployment export --name
     *                      [--subscription]
     */
    az_deployment_export(): void {
    }

    /**
     * List deployments at subscription scope.
     *
     * Syntax: 
     *
     * az deployment list [--filter]
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_deployment_list(): void {
    }

    /**
     * Show a deployment at subscription scope.
     *
     * Syntax: 
     *
     * az deployment show --name
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_deployment_show(): void {
    }

    /**
     * Validate whether a template is valid at subscription scope.
     *
     * Syntax: 
     *
     * az deployment validate --location
     *                        [--handle-extended-json-format]
     *                        [--name]
     *                        [--no-prompt {false, true}]
     *                        [--parameters]
     *                        [--subscription]
     *                        [--template-file]
     *                        [--template-uri]
     */
    az_deployment_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az deployment wait --name
     *                    [--created]
     *                    [--custom]
     *                    [--deleted]
     *                    [--exists]
     *                    [--interval]
     *                    [--subscription]
     *                    [--timeout]
     *                    [--updated]
     */
    az_deployment_wait(): void {
    }
}

/** Manage artifact sources. */
class az_deploymentmanager_artifact_source {
    /**
     * Creates an artifact source.
     *
     * Syntax: 
     *
     * az deploymentmanager artifact-source create --artifact-source-name
     *                                             --location
     *                                             --resource-group
     *                                             --sas-uri
     *                                             [--artifact-root]
     *                                             [--subscription]
     *                                             [--tags]
     */
    az_deploymentmanager_artifact_source_create(): void {
    }

    /**
     * Deletes an artifact source.
     *
     * Syntax: 
     *
     * az deploymentmanager artifact-source delete --artifact-source-name
     *                                             --resource-group
     *                                             [--subscription]
     *                                             [--yes]
     */
    az_deploymentmanager_artifact_source_delete(): void {
    }

    /**
     * List all artifact sources in a resource group.
     *
     * Syntax: 
     *
     * az deploymentmanager artifact-source list --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_deploymentmanager_artifact_source_list(): void {
    }

    /**
     * Get the details of an artifact source.
     *
     * Syntax: 
     *
     * az deploymentmanager artifact-source show --artifact-source-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_deploymentmanager_artifact_source_show(): void {
    }

    /**
     * Updates an artifact source.
     *
     * Syntax: 
     *
     * az deploymentmanager artifact-source update --artifact-source-name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--artifact-root]
     *                                             [--force-string]
     *                                             [--remove]
     *                                             [--sas-uri]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--tags]
     */
    az_deploymentmanager_artifact_source_update(): void {
    }
}

/** Manage the rollouts. */
class az_deploymentmanager_rollout {
    /**
     * Deletes a rollout resource.
     *
     * Syntax: 
     *
     * az deploymentmanager rollout delete --name
     *                                     --resource-group
     *                                     [--subscription]
     */
    az_deploymentmanager_rollout_delete(): void {
    }

    /**
     * List all rollouts in a resource group.
     *
     * Syntax: 
     *
     * az deploymentmanager rollout list --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_deploymentmanager_rollout_list(): void {
    }

    /**
     * Restarts the rollout.
     *
     * Syntax: 
     *
     * az deploymentmanager rollout restart --name
     *                                      --resource-group
     *                                      [--skip-succeeded]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_deploymentmanager_rollout_restart(): void {
    }

    /**
     * Gets the rollout.
     *
     * Syntax: 
     *
     * az deploymentmanager rollout show --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--retry-attempt]
     *                                   [--subscription]
     */
    az_deploymentmanager_rollout_show(): void {
    }

    /**
     * Stop the rollout.
     *
     * Syntax: 
     *
     * az deploymentmanager rollout stop --name
     *                                   --resource-group
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_deploymentmanager_rollout_stop(): void {
    }
}

/** Manage service topologies. */
class az_deploymentmanager_service_topology {
    /**
     * Creates a service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service-topology create --location
     *                                              --name
     *                                              --resource-group
     *                                              [--artifact-source]
     *                                              [--subscription]
     *                                              [--tags]
     */
    az_deploymentmanager_service_topology_create(): void {
    }

    /**
     * Deletes the service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service-topology delete --name
     *                                              --resource-group
     *                                              [--subscription]
     */
    az_deploymentmanager_service_topology_delete(): void {
    }

    /**
     * List all service topologies in a resource group.
     *
     * Syntax: 
     *
     * az deploymentmanager service-topology list --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_deploymentmanager_service_topology_list(): void {
    }

    /**
     * Get the details of a service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service-topology show --name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_deploymentmanager_service_topology_show(): void {
    }

    /**
     * Updates the service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service-topology update --name
     *                                              --resource-group
     *                                              [--add]
     *                                              [--artifact-source]
     *                                              [--force-string]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     *                                              [--tags]
     */
    az_deploymentmanager_service_topology_update(): void {
    }
}

/** Manage the service units. */
class az_deploymentmanager_service_unit {
    /**
     * Creates a service unit under the specified service and service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service-unit create --deployment-mode {Complete, Incremental}
     *                                          --name
     *                                          --parameters-path
     *                                          --resource-group
     *                                          --service-name
     *                                          --service-topology-name
     *                                          --target-resource-group
     *                                          --template-path
     *                                          [--location]
     *                                          [--subscription]
     *                                          [--tags]
     */
    az_deploymentmanager_service_unit_create(): void {
    }

    /**
     * Deletes the service unit.
     *
     * Syntax: 
     *
     * az deploymentmanager service-unit delete --name
     *                                          --resource-group
     *                                          --service-name
     *                                          --service-topology-name
     *                                          [--subscription]
     */
    az_deploymentmanager_service_unit_delete(): void {
    }

    /**
     * List all service units in a service.
     *
     * Syntax: 
     *
     * az deploymentmanager service-unit list --resource-group
     *                                        --service-name
     *                                        --service-topology-name
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_deploymentmanager_service_unit_list(): void {
    }

    /**
     * Get the details of a service unit.
     *
     * Syntax: 
     *
     * az deploymentmanager service-unit show --name
     *                                        --resource-group
     *                                        --service-name
     *                                        --service-topology-name
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_deploymentmanager_service_unit_show(): void {
    }

    /**
     * Updates the service unit.
     *
     * Syntax: 
     *
     * az deploymentmanager service-unit update --name
     *                                          --resource-group
     *                                          --service-name
     *                                          --service-topology-name
     *                                          [--add]
     *                                          [--deployment-mode {Complete, Incremental}]
     *                                          [--force-string]
     *                                          [--parameters-path]
     *                                          [--remove]
     *                                          [--set]
     *                                          [--subscription]
     *                                          [--tags]
     *                                          [--target-resource-group]
     *                                          [--template-path]
     */
    az_deploymentmanager_service_unit_update(): void {
    }
}

/** Manage the services in a service topology. */
class az_deploymentmanager_service {
    /**
     * Creates a service under the specified service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service create --location
     *                                     --name
     *                                     --resource-group
     *                                     --service-topology-name
     *                                     --target-location
     *                                     --target-subscription-id
     *                                     [--subscription]
     *                                     [--tags]
     */
    az_deploymentmanager_service_create(): void {
    }

    /**
     * Deletes the service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service delete --name
     *                                     --resource-group
     *                                     --service-topology-name
     *                                     [--subscription]
     */
    az_deploymentmanager_service_delete(): void {
    }

    /**
     * List all services in a service topology.
     *
     * Syntax: 
     *
     * az deploymentmanager service list --resource-group
     *                                   --service-topology-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_deploymentmanager_service_list(): void {
    }

    /**
     * Get the details of a service.
     *
     * Syntax: 
     *
     * az deploymentmanager service show --name
     *                                   --resource-group
     *                                   --service-topology-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_deploymentmanager_service_show(): void {
    }

    /**
     * Updates the service.
     *
     * Syntax: 
     *
     * az deploymentmanager service update --name
     *                                     --resource-group
     *                                     --service-topology-name
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--tags]
     *                                     [--target-location]
     *                                     [--target-subscription-id]
     */
    az_deploymentmanager_service_update(): void {
    }
}

/** Manage the steps. */
class az_deploymentmanager_step {
    /**
     * Creates the step.
     *
     * Syntax: 
     *
     * az deploymentmanager step create --resource-group
     *                                  [--duration]
     *                                  [--location]
     *                                  [--name]
     *                                  [--step]
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_deploymentmanager_step_create(): void {
    }

    /**
     * Deletes the step.
     *
     * Syntax: 
     *
     * az deploymentmanager step delete --name
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_deploymentmanager_step_delete(): void {
    }

    /**
     * List all steps in a resource group.
     *
     * Syntax: 
     *
     * az deploymentmanager step list --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_deploymentmanager_step_list(): void {
    }

    /**
     * Get the details of the step.
     *
     * Syntax: 
     *
     * az deploymentmanager step show --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_deploymentmanager_step_show(): void {
    }

    /**
     * Updates the step.
     *
     * Syntax: 
     *
     * az deploymentmanager step update --name
     *                                  --resource-group
     *                                  [--add]
     *                                  [--duration]
     *                                  [--force-string]
     *                                  [--remove]
     *                                  [--set]
     *                                  [--step]
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_deploymentmanager_step_update(): void {
    }
}

/** Create and manage rollouts for your service. */
class az_deploymentmanager {
}

/** Manage organization banner. */
class az_devops_admin_banner {
    /**
     * Add a new banner and immediately show it.
     *
     * Syntax: 
     *
     * az devops admin banner add --message
     *                            [--detect {false, true}]
     *                            [--expiration]
     *                            [--id]
     *                            [--org]
     *                            [--subscription]
     *                            [--type {error, info, warning}]
     */
    az_devops_admin_banner_add(): void {
    }

    /**
     * List banners.
     *
     * Syntax: 
     *
     * az devops admin banner list [--detect {false, true}]
     *                             [--org]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_devops_admin_banner_list(): void {
    }

    /**
     * Remove a banner.
     *
     * Syntax: 
     *
     * az devops admin banner remove --id
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--subscription]
     */
    az_devops_admin_banner_remove(): void {
    }

    /**
     * Show details for a banner.
     *
     * Syntax: 
     *
     * az devops admin banner show --id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_devops_admin_banner_show(): void {
    }

    /**
     * Update the message, level, or expiration date for a banner.
     *
     * Syntax: 
     *
     * az devops admin banner update --id
     *                               [--detect {false, true}]
     *                               [--expiration]
     *                               [--message]
     *                               [--org]
     *                               [--subscription]
     *                               [--type {error, info, warning}]
     */
    az_devops_admin_banner_update(): void {
    }
}

/** Manage administration operations. */
class az_devops_admin {
}

/** Manage extensions. */
class az_devops_extension {
    /**
     * Disable an extension.
     *
     * Syntax: 
     *
     * az devops extension disable --extension-id
     *                             --publisher-id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--subscription]
     */
    az_devops_extension_disable(): void {
    }

    /**
     * Enable an extension.
     *
     * Syntax: 
     *
     * az devops extension enable --extension-id
     *                            --publisher-id
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--subscription]
     */
    az_devops_extension_enable(): void {
    }

    /**
     * Install an extension.
     *
     * Syntax: 
     *
     * az devops extension install --extension-id
     *                             --publisher-id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--subscription]
     */
    az_devops_extension_install(): void {
    }

    /**
     * List extensions installed in an organization.
     *
     * Syntax: 
     *
     * az devops extension list [--detect {false, true}]
     *                          [--include-built-in {false, true}]
     *                          [--include-disabled {false, true}]
     *                          [--org]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_devops_extension_list(): void {
    }

    /**
     * Search extensions from marketplace.
     *
     * Syntax: 
     *
     * az devops extension search --search-query
     *                            [--subscription]
     */
    az_devops_extension_search(): void {
    }

    /**
     * Get detail of single extension.
     *
     * Syntax: 
     *
     * az devops extension show --extension-id
     *                          --publisher-id
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_devops_extension_show(): void {
    }

    /**
     * Uninstall an extension.
     *
     * Syntax: 
     *
     * az devops extension uninstall --extension-id
     *                               --publisher-id
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--subscription]
     *                               [--yes]
     */
    az_devops_extension_uninstall(): void {
    }
}

/** Manage team projects. */
class az_devops_project {
    /**
     * Create a team project.
     *
     * Syntax: 
     *
     * az devops project create --name
     *                          [--description]
     *                          [--detect {false, true}]
     *                          [--open]
     *                          [--org]
     *                          [--process]
     *                          [--source-control {git, tfvc}]
     *                          [--subscription]
     *                          [--visibility {private, public}]
     */
    az_devops_project_create(): void {
    }

    /**
     * Delete team project.
     *
     * Syntax: 
     *
     * az devops project delete --id
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--subscription]
     *                          [--yes]
     */
    az_devops_project_delete(): void {
    }

    /**
     * List team projects.
     *
     * Syntax: 
     *
     * az devops project list [--continuation-token]
     *                        [--detect {false, true}]
     *                        [--get-default-team-image-url {false, true}]
     *                        [--org]
     *                        [--query-examples]
     *                        [--skip]
     *                        [--state-filter {all, createPending, deleted, deleting, new, unchanged, wellFormed}]
     *                        [--subscription]
     *                        [--top]
     */
    az_devops_project_list(): void {
    }

    /**
     * Show team project.
     *
     * Syntax: 
     *
     * az devops project show --project
     *                        [--detect {false, true}]
     *                        [--open]
     *                        [--org]
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_devops_project_show(): void {
    }
}

/** Manage memberships for security groups. */
class az_devops_security_group_membership {
    /**
     * Add membership.
     *
     * Syntax: 
     *
     * az devops security group membership add --group-id
     *                                         --member-id
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--subscription]
     */
    az_devops_security_group_membership_add(): void {
    }

    /**
     * List memberships for a group or user.
     *
     * Syntax: 
     *
     * az devops security group membership list --id
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--query-examples]
     *                                          [--relationship {memberof, members}]
     *                                          [--subscription]
     */
    az_devops_security_group_membership_list(): void {
    }

    /**
     * Remove membership.
     *
     * Syntax: 
     *
     * az devops security group membership remove --group-id
     *                                            --member-id
     *                                            [--detect {false, true}]
     *                                            [--org]
     *                                            [--subscription]
     *                                            [--yes]
     */
    az_devops_security_group_membership_remove(): void {
    }
}

/** Manage security groups. */
class az_devops_security_group {
    /**
     * Create a new Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group create [--description]
     *                                 [--detect {false, true}]
     *                                 [--email-id]
     *                                 [--groups]
     *                                 [--name]
     *                                 [--org]
     *                                 [--origin-id]
     *                                 [--project]
     *                                 [--scope {organization, project}]
     *                                 [--subscription]
     */
    az_devops_security_group_create(): void {
    }

    /**
     * Delete an Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group delete --id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_devops_security_group_delete(): void {
    }

    /**
     * List all the groups in a project or organization.
     *
     * Syntax: 
     *
     * az devops security group list [--continuation-token]
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--query-examples]
     *                               [--scope {organization, project}]
     *                               [--subject-types]
     *                               [--subscription]
     */
    az_devops_security_group_list(): void {
    }

    /**
     * Show group details.
     *
     * Syntax: 
     *
     * az devops security group show --id
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_devops_security_group_show(): void {
    }

    /**
     * Update name AND/OR description for an Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group update --id
     *                                 [--description]
     *                                 [--detect {false, true}]
     *                                 [--name]
     *                                 [--org]
     *                                 [--subscription]
     */
    az_devops_security_group_update(): void {
    }
}

/** Manage security namespaces. */
class az_devops_security_permission_namespace {
    /**
     * List all available namespaces for an organization.
     *
     * Syntax: 
     *
     * az devops security permission namespace list [--detect {false, true}]
     *                                              [--local-only]
     *                                              [--org]
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_devops_security_permission_namespace_list(): void {
    }

    /**
     * Show details of permissions available in each namespace.
     *
     * Syntax: 
     *
     * az devops security permission namespace show --id
     *                                              [--detect {false, true}]
     *                                              [--org]
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_devops_security_permission_namespace_show(): void {
    }
}

/** Manage security permissions. */
class az_devops_security_permission {
    /**
     * List tokens for given user/group and namespace.
     *
     * Syntax: 
     *
     * az devops security permission list --id
     *                                    --subject
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--query-examples]
     *                                    [--recurse]
     *                                    [--subscription]
     *                                    [--token]
     */
    az_devops_security_permission_list(): void {
    }

    /**
     * Reset permission for given permission bit(s).
     *
     * Syntax: 
     *
     * az devops security permission reset --id
     *                                     --permission-bit
     *                                     --subject
     *                                     --token
     *                                     [--detect {false, true}]
     *                                     [--org]
     *                                     [--subscription]
     */
    az_devops_security_permission_reset(): void {
    }

    /**
     * Clear all permissions of this token for a user/group.
     *
     * Syntax: 
     *
     * az devops security permission reset-all --id
     *                                         --subject
     *                                         --token
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_devops_security_permission_reset_all(): void {
    }

    /**
     * Show permissions for given token, namespace and user/group.
     *
     * Syntax: 
     *
     * az devops security permission show --id
     *                                    --subject
     *                                    --token
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_devops_security_permission_show(): void {
    }

    /**
     * Assign allow or deny permission to given user/group.
     *
     * Syntax: 
     *
     * az devops security permission update --id
     *                                      --subject
     *                                      --token
     *                                      [--allow-bit]
     *                                      [--deny-bit]
     *                                      [--detect {false, true}]
     *                                      [--merge {false, true}]
     *                                      [--org]
     *                                      [--subscription]
     */
    az_devops_security_permission_update(): void {
    }
}

/** Manage security related operations. */
class az_devops_security {
}

/** Manage Azure RM service endpoints/connections. */
class az_devops_service_endpoint_azurerm {
    /**
     * Create an Azure RM type service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint azurerm create --azure-rm-service-principal-id
     *                                           --azure-rm-subscription-id
     *                                           --azure-rm-subscription-name
     *                                           --azure-rm-tenant-id
     *                                           --name
     *                                           [--azure-rm-service-principal-certificate-path]
     *                                           [--detect {false, true}]
     *                                           [--org]
     *                                           [--project]
     *                                           [--subscription]
     */
    az_devops_service_endpoint_azurerm_create(): void {
    }
}

/** Manage GitHub service endpoints/connections. */
class az_devops_service_endpoint_github {
    /**
     * Create a GitHub service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint github create --github-url
     *                                          --name
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     *                                          [--subscription]
     */
    az_devops_service_endpoint_github_create(): void {
    }
}

/** Manage service endpoints/connections. */
class az_devops_service_endpoint {
    /**
     * Create a service endpoint using configuration file.
     *
     * Syntax: 
     *
     * az devops service-endpoint create --service-endpoint-configuration
     *                                   [--detect {false, true}]
     *                                   [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                                   [--org]
     *                                   [--project]
     *                                   [--subscription]
     */
    az_devops_service_endpoint_create(): void {
    }

    /**
     * Deletes service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint delete --id
     *                                   [--deep]
     *                                   [--detect {false, true}]
     *                                   [--org]
     *                                   [--project]
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_devops_service_endpoint_delete(): void {
    }

    /**
     * List service endpoints in a project.
     *
     * Syntax: 
     *
     * az devops service-endpoint list [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_devops_service_endpoint_list(): void {
    }

    /**
     * Get the details of a service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint show --id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_devops_service_endpoint_show(): void {
    }

    /**
     * Update a service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint update --id
     *                                   [--detect {false, true}]
     *                                   [--enable-for-all {false, true}]
     *                                   [--org]
     *                                   [--project]
     *                                   [--subscription]
     */
    az_devops_service_endpoint_update(): void {
    }
}

/** Manage teams. */
class az_devops_team {
    /**
     * Create a team.
     *
     * Syntax: 
     *
     * az devops team create --name
     *                       [--description]
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     *                       [--subscription]
     */
    az_devops_team_create(): void {
    }

    /**
     * Delete a team.
     *
     * Syntax: 
     *
     * az devops team delete --id
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     *                       [--subscription]
     *                       [--yes]
     */
    az_devops_team_delete(): void {
    }

    /**
     * List all teams in a project.
     *
     * Syntax: 
     *
     * az devops team list [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--query-examples]
     *                     [--skip]
     *                     [--subscription]
     *                     [--top]
     */
    az_devops_team_list(): void {
    }

    /**
     * List members of a team.
     *
     * Syntax: 
     *
     * az devops team list-member --team
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--skip]
     *                            [--subscription]
     *                            [--top]
     */
    az_devops_team_list_member(): void {
    }

    /**
     * Show team details.
     *
     * Syntax: 
     *
     * az devops team show --team
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_devops_team_show(): void {
    }

    /**
     * Update a team's name and/or description.
     *
     * Syntax: 
     *
     * az devops team update --team
     *                       [--description]
     *                       [--detect {false, true}]
     *                       [--name]
     *                       [--org]
     *                       [--project]
     *                       [--subscription]
     */
    az_devops_team_update(): void {
    }
}

/** Manage users. */
class az_devops_user {
    /**
     * Add user.
     *
     * Syntax: 
     *
     * az devops user add --email-id
     *                    --license-type {advanced, earlyAdopter, express, professional, stakeholder}
     *                    [--detect {false, true}]
     *                    [--org]
     *                    [--send-email-invite {false, true}]
     *                    [--subscription]
     */
    az_devops_user_add(): void {
    }

    /**
     * List users in an organization [except for users which are added via AAD groups].
     *
     * Syntax: 
     *
     * az devops user list [--detect {false, true}]
     *                     [--org]
     *                     [--query-examples]
     *                     [--skip]
     *                     [--subscription]
     *                     [--top]
     */
    az_devops_user_list(): void {
    }

    /**
     * Remove user from an organization.
     *
     * Syntax: 
     *
     * az devops user remove --user
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--subscription]
     *                       [--yes]
     */
    az_devops_user_remove(): void {
    }

    /**
     * Show user details.
     *
     * Syntax: 
     *
     * az devops user show --user
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_devops_user_show(): void {
    }

    /**
     * Update license type for a user.
     *
     * Syntax: 
     *
     * az devops user update --license-type {advanced, earlyAdopter, express, professional, stakeholder}
     *                       --user
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--subscription]
     */
    az_devops_user_update(): void {
    }
}

/** Manage wiki pages. */
class az_devops_wiki_page {
    /**
     * Add a new page.
     *
     * Syntax: 
     *
     * az devops wiki page create --path
     *                            --wiki
     *                            [--comment]
     *                            [--content]
     *                            [--detect {false, true}]
     *                            [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                            [--file-path]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_devops_wiki_page_create(): void {
    }

    /**
     * Delete a page.
     *
     * Syntax: 
     *
     * az devops wiki page delete --path
     *                            --wiki
     *                            [--comment]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     *                            [--yes]
     */
    az_devops_wiki_page_delete(): void {
    }

    /**
     * Get the content of a page or open a page.
     *
     * Syntax: 
     *
     * az devops wiki page show --path
     *                          --wiki
     *                          [--detect {false, true}]
     *                          [--include-content]
     *                          [--open]
     *                          [--org]
     *                          [--project]
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--version]
     */
    az_devops_wiki_page_show(): void {
    }

    /**
     * Edit a page.
     *
     * Syntax: 
     *
     * az devops wiki page update --path
     *                            --version
     *                            --wiki
     *                            [--comment]
     *                            [--content]
     *                            [--detect {false, true}]
     *                            [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                            [--file-path]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_devops_wiki_page_update(): void {
    }
}

/** Manage wikis. */
class az_devops_wiki {
    /**
     * Create a wiki.
     *
     * Syntax: 
     *
     * az devops wiki create [--detect {false, true}]
     *                       [--mapped-path]
     *                       [--name]
     *                       [--org]
     *                       [--project]
     *                       [--repository]
     *                       [--subscription]
     *                       [--type {codewiki, projectwiki}]
     *                       [--version]
     */
    az_devops_wiki_create(): void {
    }

    /**
     * Delete a wiki.
     *
     * Syntax: 
     *
     * az devops wiki delete --wiki
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     *                       [--subscription]
     *                       [--yes]
     */
    az_devops_wiki_delete(): void {
    }

    /**
     * List all the wikis in a project or organization.
     *
     * Syntax: 
     *
     * az devops wiki list [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--query-examples]
     *                     [--scope {organization, project}]
     *                     [--subscription]
     */
    az_devops_wiki_list(): void {
    }

    /**
     * Show details of a wiki.
     *
     * Syntax: 
     *
     * az devops wiki show --wiki
     *                     [--detect {false, true}]
     *                     [--open]
     *                     [--org]
     *                     [--project]
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_devops_wiki_show(): void {
    }
}

/** Manage Azure DevOps organization level operations. */
class az_devops {
    /**
     * Configure the Azure DevOps CLI or view your configuration.
     *
     * Syntax: 
     *
     * az devops configure [--defaults]
     *                     [--list]
     *                     [--subscription]
     *                     [--use-git-aliases {false, true}]
     */
    az_devops_configure(): void {
    }

    /**
     * Displays information on how to provide feedback to the Azure DevOps CLI team.
     *
     * Syntax: 
     *
     * az devops feedback [--subscription]
     */
    az_devops_feedback(): void {
    }

    /**
     * This command will invoke request for any DevOps area and resource. Please use only json output as the response of this command is not fixed. Helpful docs - <a href="https://docs.microsoft.com/en-us/rest/api/azure/devops/">https://docs.microsoft.com/en-us/rest/api/azure/devops/</a>.
     *
     * Syntax: 
     *
     * az devops invoke [--accept-media-type]
     *                  [--api-version]
     *                  [--area]
     *                  [--detect {false, true}]
     *                  [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                  [--http-method {DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT}]
     *                  [--in-file]
     *                  [--media-type]
     *                  [--org]
     *                  [--out-file]
     *                  [--query-parameters]
     *                  [--resource]
     *                  [--route-parameters]
     *                  [--subscription]
     */
    az_devops_invoke(): void {
    }

    /**
     * Set the credential (PAT) to use for a particular organization.
     *
     * Syntax: 
     *
     * az devops login [--org]
     *                 [--subscription]
     */
    az_devops_login(): void {
    }

    /**
     * Clear the credential for all or a particular organization.
     *
     * Syntax: 
     *
     * az devops logout [--org]
     *                  [--subscription]
     */
    az_devops_logout(): void {
    }
}

/** Manage disk access resources. */
class az_disk_access {
    /**
     * Create a disk access resource.
     *
     * Syntax: 
     *
     * az disk-access create --name
     *                       --resource-group
     *                       [--location]
     *                       [--no-wait]
     *                       [--subscription]
     *                       [--tags]
     */
    az_disk_access_create(): void {
    }

    /**
     * Delete a disk access resource.
     *
     * Syntax: 
     *
     * az disk-access delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_disk_access_delete(): void {
    }

    /**
     * List disk access resources.
     *
     * Syntax: 
     *
     * az disk-access list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_disk_access_list(): void {
    }

    /**
     * Get information of a disk access resource.
     *
     * Syntax: 
     *
     * az disk-access show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_disk_access_show(): void {
    }

    /**
     * Update a disk access resource.
     *
     * Syntax: 
     *
     * az disk-access update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     *                       [--tags]
     */
    az_disk_access_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a disk access is met.
     *
     * Syntax: 
     *
     * az disk-access wait [--created]
     *                     [--custom]
     *                     [--deleted]
     *                     [--exists]
     *                     [--ids]
     *                     [--interval]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--timeout]
     *                     [--updated]
     */
    az_disk_access_wait(): void {
    }
}

/** Disk Encryption Set resource. */
class az_disk_encryption_set {
    /**
     * Create a disk encryption set.
     *
     * Syntax: 
     *
     * az disk-encryption-set create --key-url
     *                               --name
     *                               --resource-group
     *                               --source-vault
     *                               [--encryption-type {EncryptionAtRestWithCustomerKey, EncryptionAtRestWithPlatformAndCustomerKeys, EncryptionAtRestWithPlatformKey}]
     *                               [--location]
     *                               [--no-wait]
     *                               [--subscription]
     *                               [--tags]
     */
    az_disk_encryption_set_create(): void {
    }

    /**
     * Delete a disk encryption set.
     *
     * Syntax: 
     *
     * az disk-encryption-set delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_disk_encryption_set_delete(): void {
    }

    /**
     * List disk encryption sets.
     *
     * Syntax: 
     *
     * az disk-encryption-set list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_disk_encryption_set_list(): void {
    }

    /**
     * Lists all resources that are encrypted with this disk encryption set.
     *
     * Syntax: 
     *
     * az disk-encryption-set list-associated-resources [--ids]
     *                                                  [--name]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_disk_encryption_set_list_associated_resources(): void {
    }

    /**
     * Get information of a disk encryption sets.
     *
     * Syntax: 
     *
     * az disk-encryption-set show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_disk_encryption_set_show(): void {
    }

    /**
     * Update a disk encryption set.
     *
     * Syntax: 
     *
     * az disk-encryption-set update [--add]
     *                               [--force-string]
     *                               [--ids]
     *                               [--key-url]
     *                               [--name]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--source-vault]
     *                               [--subscription]
     */
    az_disk_encryption_set_update(): void {
    }
}

/** Manage Azure Managed Disks. */
class az_disk {
    /**
     * Create a managed disk.
     *
     * Syntax: 
     *
     * az disk create --name
     *                --resource-group
     *                [--disk-access]
     *                [--disk-encryption-set]
     *                [--disk-iops-read-only]
     *                [--disk-iops-read-write]
     *                [--disk-mbps-read-only]
     *                [--disk-mbps-read-write]
     *                [--encryption-type]
     *                [--for-upload {false, true}]
     *                [--gallery-image-reference]
     *                [--gallery-image-reference-lun]
     *                [--hyper-v-generation {V1, V2}]
     *                [--image-reference]
     *                [--image-reference-lun]
     *                [--location]
     *                [--logical-sector-size]
     *                [--max-shares]
     *                [--network-access-policy {AllowAll, AllowPrivate, DenyAll}]
     *                [--no-wait]
     *                [--os-type {Linux, Windows}]
     *                [--size-gb]
     *                [--sku {Premium_LRS, StandardSSD_LRS, Standard_LRS, UltraSSD_LRS}]
     *                [--source]
     *                [--source-storage-account-id]
     *                [--subscription]
     *                [--tags]
     *                [--tier]
     *                [--upload-size-bytes]
     *                [--zone {1, 2, 3}]
     */
    az_disk_create(): void {
    }

    /**
     * Delete a managed disk.
     *
     * Syntax: 
     *
     * az disk delete [--ids]
     *                [--name]
     *                [--no-wait]
     *                [--resource-group]
     *                [--subscription]
     *                [--yes]
     */
    az_disk_delete(): void {
    }

    /**
     * Grant a resource access to a managed disk.
     *
     * Syntax: 
     *
     * az disk grant-access --duration-in-seconds
     *                      [--access-level {Read, Write}]
     *                      [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_disk_grant_access(): void {
    }

    /**
     * List managed disks.
     *
     * Syntax: 
     *
     * az disk list [--query-examples]
     *              [--resource-group]
     *              [--subscription]
     */
    az_disk_list(): void {
    }

    /**
     * Revoke a resource's read access to a managed disk.
     *
     * Syntax: 
     *
     * az disk revoke-access [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_disk_revoke_access(): void {
    }

    /**
     * Gets information about a disk.
     *
     * Syntax: 
     *
     * az disk show [--ids]
     *              [--name]
     *              [--query-examples]
     *              [--resource-group]
     *              [--subscription]
     */
    az_disk_show(): void {
    }

    /**
     * Update a managed disk.
     *
     * Syntax: 
     *
     * az disk update [--add]
     *                [--disk-access]
     *                [--disk-encryption-set]
     *                [--disk-iops-read-only]
     *                [--disk-iops-read-write]
     *                [--disk-mbps-read-only]
     *                [--disk-mbps-read-write]
     *                [--encryption-type]
     *                [--force-string]
     *                [--ids]
     *                [--max-shares]
     *                [--name]
     *                [--network-access-policy {AllowAll, AllowPrivate, DenyAll}]
     *                [--no-wait]
     *                [--remove]
     *                [--resource-group]
     *                [--set]
     *                [--size-gb]
     *                [--sku {Premium_LRS, StandardSSD_LRS, Standard_LRS, UltraSSD_LRS}]
     *                [--subscription]
     */
    az_disk_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a managed disk is met.
     *
     * Syntax: 
     *
     * az disk wait [--created]
     *              [--custom]
     *              [--deleted]
     *              [--exists]
     *              [--ids]
     *              [--interval]
     *              [--name]
     *              [--resource-group]
     *              [--subscription]
     *              [--timeout]
     *              [--updated]
     */
    az_disk_wait(): void {
    }
}

/** Manage links between Data Lake Analytics accounts and Azure Storage. */
class az_dla_account_blob_storage {
    /**
     * Links an Azure Storage account to the specified Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account blob-storage add --access-key
     *                                 --storage-account-name
     *                                 [--account]
     *                                 [--ids]
     *                                 [--resource-group]
     *                                 [--subscription]
     *                                 [--suffix]
     */
    az_dla_account_blob_storage_add(): void {
    }

    /**
     * Updates the specified Data Lake Analytics account to remove an Azure Storage account.
     *
     * Syntax: 
     *
     * az dla account blob-storage delete --storage-account-name
     *                                    [--account]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_dla_account_blob_storage_delete(): void {
    }

    /**
     * Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account blob-storage list [--account]
     *                                  [--count]
     *                                  [--filter]
     *                                  [--ids]
     *                                  [--orderby]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--select]
     *                                  [--skip]
     *                                  [--subscription]
     *                                  [--top]
     */
    az_dla_account_blob_storage_list(): void {
    }

    /**
     * Gets the specified Azure Storage account linked to the given Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account blob-storage show --storage-account-name
     *                                  [--account]
     *                                  [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_dla_account_blob_storage_show(): void {
    }

    /**
     * Updates an Azure Storage account linked to the specified Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account blob-storage update --access-key
     *                                    --storage-account-name
     *                                    [--account]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--suffix]
     */
    az_dla_account_blob_storage_update(): void {
    }
}

/** Manage Data Lake Analytics account compute policies. */
class az_dla_account_compute_policy {
    /**
     * Create a compute policy in the Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account compute-policy create --account
     *                                      --compute-policy-name
     *                                      --object-id
     *                                      --object-type
     *                                      [--max-dop-per-job]
     *                                      [--min-priority-per-job]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_dla_account_compute_policy_create(): void {
    }

    /**
     * Delete a compute policy in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account compute-policy delete --compute-policy-name
     *                                      [--account]
     *                                      [--ids]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_dla_account_compute_policy_delete(): void {
    }

    /**
     * List compute policies in the a Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account compute-policy list [--account]
     *                                    [--ids]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_dla_account_compute_policy_list(): void {
    }

    /**
     * Retrieve a compute policy in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account compute-policy show --compute-policy-name
     *                                    [--account]
     *                                    [--ids]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_dla_account_compute_policy_show(): void {
    }

    /**
     * Update a compute policy in the Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account compute-policy update --compute-policy-name
     *                                      [--account]
     *                                      [--ids]
     *                                      [--max-dop-per-job]
     *                                      [--min-priority-per-job]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_dla_account_compute_policy_update(): void {
    }
}

/** Manage links between Data Lake Analytics and Data Lake Store accounts. */
class az_dla_account_data_lake_store {
    /**
     * Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.
     *
     * Syntax: 
     *
     * az dla account data-lake-store add --data-lake-store-account-name
     *                                    [--account]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--suffix]
     */
    az_dla_account_data_lake_store_add(): void {
    }

    /**
     * Updates the Data Lake Analytics account specified to remove the specified Data Lake Store account.
     *
     * Syntax: 
     *
     * az dla account data-lake-store delete --data-lake-store-account-name
     *                                       [--account]
     *                                       [--ids]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_dla_account_data_lake_store_delete(): void {
    }

    /**
     * Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account data-lake-store list [--account]
     *                                     [--count]
     *                                     [--filter]
     *                                     [--ids]
     *                                     [--orderby]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--select]
     *                                     [--skip]
     *                                     [--subscription]
     *                                     [--top]
     */
    az_dla_account_data_lake_store_list(): void {
    }

    /**
     * Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account data-lake-store show --data-lake-store-account-name
     *                                     [--account]
     *                                     [--ids]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_dla_account_data_lake_store_show(): void {
    }
}

/** Manage Data Lake Analytics account firewall rules. */
class az_dla_account_firewall {
    /**
     * Create a firewall rule in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account firewall create --account
     *                                --end-ip-address
     *                                --firewall-rule-name
     *                                --start-ip-address
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_dla_account_firewall_create(): void {
    }

    /**
     * Delete a firewall rule in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account firewall delete --firewall-rule-name
     *                                [--account]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_dla_account_firewall_delete(): void {
    }

    /**
     * List firewall rules in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account firewall list [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_dla_account_firewall_list(): void {
    }

    /**
     * Retrieve a firewall rule in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account firewall show --firewall-rule-name
     *                              [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_dla_account_firewall_show(): void {
    }

    /**
     * Update a firewall rule in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account firewall update --firewall-rule-name
     *                                [--account]
     *                                [--end-ip-address]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--start-ip-address]
     *                                [--subscription]
     */
    az_dla_account_firewall_update(): void {
    }
}

/** Manage Data Lake Analytics accounts. */
class az_dla_account {
    /**
     * Create a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account create --account
     *                       --default-data-lake-store
     *                       [--location]
     *                       [--max-degree-of-parallelism]
     *                       [--max-job-count]
     *                       [--query-store-retention]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--tags]
     *                       [--tier {Commitment_100000AUHours, Commitment_10000AUHours, Commitment_1000AUHours, Commitment_100AUHours, Commitment_500000AUHours, Commitment_50000AUHours, Commitment_5000AUHours, Commitment_500AUHours, Consumption}]
     */
    az_dla_account_create(): void {
    }

    /**
     * Delete a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account delete [--account]
     *                       [--ids]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_dla_account_delete(): void {
    }

    /**
     * List available Data Lake Analytics accounts.
     *
     * Syntax: 
     *
     * az dla account list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_dla_account_list(): void {
    }

    /**
     * Get the details of a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account show [--account]
     *                     [--ids]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_dla_account_show(): void {
    }

    /**
     * Update a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla account update [--account]
     *                       [--allow-azure-ips {Disabled, Enabled}]
     *                       [--firewall-state {Disabled, Enabled}]
     *                       [--ids]
     *                       [--max-degree-of-parallelism]
     *                       [--max-job-count]
     *                       [--query-store-retention]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--tags]
     *                       [--tier {Commitment_100000AUHours, Commitment_10000AUHours, Commitment_1000AUHours, Commitment_100AUHours, Commitment_500000AUHours, Commitment_50000AUHours, Commitment_5000AUHours, Commitment_500AUHours, Consumption}]
     */
    az_dla_account_update(): void {
    }
}

/** Manage Data Lake Analytics catalog assemblies. */
class az_dla_catalog_assembly {
    /**
     * Retrieves the list of assemblies from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog assembly list --database-name
     *                              [--account]
     *                              [--count]
     *                              [--filter]
     *                              [--ids]
     *                              [--orderby]
     *                              [--query-examples]
     *                              [--select]
     *                              [--skip]
     *                              [--subscription]
     *                              [--top]
     */
    az_dla_catalog_assembly_list(): void {
    }

    /**
     * Retrieves the specified assembly from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog assembly show --assembly-name
     *                              --database-name
     *                              [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_dla_catalog_assembly_show(): void {
    }
}

/** Manage Data Lake Analytics catalog credentials. */
class az_dla_catalog_credential {
    /**
     * Create a new catalog credential for use with an external data source.
     *
     * Syntax: 
     *
     * az dla catalog credential create --account
     *                                  --credential-name
     *                                  --database-name
     *                                  --uri
     *                                  --user-name
     *                                  [--password]
     *                                  [--subscription]
     */
    az_dla_catalog_credential_create(): void {
    }

    /**
     * Delete a catalog credential.
     *
     * Syntax: 
     *
     * az dla catalog credential delete --credential-name
     *                                  --database-name
     *                                  [--account]
     *                                  [--cascade]
     *                                  [--ids]
     *                                  [--password]
     *                                  [--subscription]
     */
    az_dla_catalog_credential_delete(): void {
    }

    /**
     * List catalog credentials.
     *
     * Syntax: 
     *
     * az dla catalog credential list --database-name
     *                                [--account]
     *                                [--count]
     *                                [--filter]
     *                                [--ids]
     *                                [--orderby]
     *                                [--query-examples]
     *                                [--select]
     *                                [--skip]
     *                                [--subscription]
     *                                [--top]
     */
    az_dla_catalog_credential_list(): void {
    }

    /**
     * Retrieve a catalog credential.
     *
     * Syntax: 
     *
     * az dla catalog credential show --credential-name
     *                                --database-name
     *                                [--account]
     *                                [--ids]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_dla_catalog_credential_show(): void {
    }

    /**
     * Update a catalog credential for use with an external data source.
     *
     * Syntax: 
     *
     * az dla catalog credential update --credential-name
     *                                  --database-name
     *                                  --uri
     *                                  --user-name
     *                                  [--account]
     *                                  [--ids]
     *                                  [--new-password]
     *                                  [--password]
     *                                  [--subscription]
     */
    az_dla_catalog_credential_update(): void {
    }
}

/** Manage Data Lake Analytics catalog databases. */
class az_dla_catalog_database {
    /**
     * Retrieves the list of databases from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog database list [--account]
     *                              [--count]
     *                              [--filter]
     *                              [--ids]
     *                              [--orderby]
     *                              [--query-examples]
     *                              [--select]
     *                              [--skip]
     *                              [--subscription]
     *                              [--top]
     */
    az_dla_catalog_database_list(): void {
    }

    /**
     * Retrieves the specified database from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog database show --database-name
     *                              [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_dla_catalog_database_show(): void {
    }
}

/** Manage Data Lake Analytics catalog external data sources. */
class az_dla_catalog_external_data_source {
    /**
     * Retrieves the list of external data sources from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog external-data-source list --database-name
     *                                          [--account]
     *                                          [--count]
     *                                          [--filter]
     *                                          [--ids]
     *                                          [--orderby]
     *                                          [--query-examples]
     *                                          [--select]
     *                                          [--skip]
     *                                          [--subscription]
     *                                          [--top]
     */
    az_dla_catalog_external_data_source_list(): void {
    }

    /**
     * Retrieves the specified external data source from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog external-data-source show --database-name
     *                                          --external-data-source-name
     *                                          [--account]
     *                                          [--ids]
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_dla_catalog_external_data_source_show(): void {
    }
}

/** Manage Data Lake Analytics catalog packages. */
class az_dla_catalog_package {
    /**
     * Retrieves the list of packages from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog package list --database-name
     *                             --schema-name
     *                             [--account]
     *                             [--count]
     *                             [--filter]
     *                             [--ids]
     *                             [--orderby]
     *                             [--query-examples]
     *                             [--select]
     *                             [--skip]
     *                             [--subscription]
     *                             [--top]
     */
    az_dla_catalog_package_list(): void {
    }

    /**
     * Retrieves the specified package from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog package show --database-name
     *                             --package-name
     *                             --schema-name
     *                             [--account]
     *                             [--ids]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_dla_catalog_package_show(): void {
    }
}

/** Manage Data Lake Analytics catalog stored procedures. */
class az_dla_catalog_procedure {
    /**
     * Retrieves the list of procedures from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog procedure list --database-name
     *                               --schema-name
     *                               [--account]
     *                               [--count]
     *                               [--filter]
     *                               [--ids]
     *                               [--orderby]
     *                               [--query-examples]
     *                               [--select]
     *                               [--skip]
     *                               [--subscription]
     *                               [--top]
     */
    az_dla_catalog_procedure_list(): void {
    }

    /**
     * Retrieves the specified procedure from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog procedure show --database-name
     *                               --procedure-name
     *                               --schema-name
     *                               [--account]
     *                               [--ids]
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_dla_catalog_procedure_show(): void {
    }
}

/** Manage Data Lake Analytics catalog schemas. */
class az_dla_catalog_schema {
    /**
     * Retrieves the list of schemas from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog schema list --database-name
     *                            [--account]
     *                            [--count]
     *                            [--filter]
     *                            [--ids]
     *                            [--orderby]
     *                            [--query-examples]
     *                            [--select]
     *                            [--skip]
     *                            [--subscription]
     *                            [--top]
     */
    az_dla_catalog_schema_list(): void {
    }

    /**
     * Retrieves the specified schema from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog schema show --database-name
     *                            --schema-name
     *                            [--account]
     *                            [--ids]
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_dla_catalog_schema_show(): void {
    }
}

/** Manage Data Lake Analytics catalog table partitions. */
class az_dla_catalog_table_partition {
    /**
     * Retrieves the list of table partitions from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table-partition list --database-name
     *                                     --schema-name
     *                                     --table-name
     *                                     [--account]
     *                                     [--count]
     *                                     [--filter]
     *                                     [--ids]
     *                                     [--orderby]
     *                                     [--query-examples]
     *                                     [--select]
     *                                     [--skip]
     *                                     [--subscription]
     *                                     [--top]
     */
    az_dla_catalog_table_partition_list(): void {
    }

    /**
     * Retrieves the specified table partition from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table-partition show --database-name
     *                                     --partition-name
     *                                     --schema-name
     *                                     --table-name
     *                                     [--account]
     *                                     [--ids]
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_dla_catalog_table_partition_show(): void {
    }
}

/** Manage Data Lake Analytics catalog table statistics. */
class az_dla_catalog_table_stats {
    /**
     * List table statistics in a database, table, or schema.
     *
     * Syntax: 
     *
     * az dla catalog table-stats list --database-name
     *                                 [--account]
     *                                 [--ids]
     *                                 [--query-examples]
     *                                 [--schema-name]
     *                                 [--subscription]
     *                                 [--table-name]
     */
    az_dla_catalog_table_stats_list(): void {
    }

    /**
     * Retrieves the specified table statistics from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table-stats show --database-name
     *                                 --schema-name
     *                                 --statistics-name
     *                                 --table-name
     *                                 [--account]
     *                                 [--ids]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_dla_catalog_table_stats_show(): void {
    }
}

/** Manage Data Lake Analytics catalog table types. */
class az_dla_catalog_table_type {
    /**
     * Retrieves the list of table types from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table-type list --database-name
     *                                --schema-name
     *                                [--account]
     *                                [--count]
     *                                [--filter]
     *                                [--ids]
     *                                [--orderby]
     *                                [--query-examples]
     *                                [--select]
     *                                [--skip]
     *                                [--subscription]
     *                                [--top]
     */
    az_dla_catalog_table_type_list(): void {
    }

    /**
     * Retrieves the specified table type from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table-type show --database-name
     *                                --schema-name
     *                                --table-type-name
     *                                [--account]
     *                                [--ids]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_dla_catalog_table_type_show(): void {
    }
}

/** Manage Data Lake Analytics catalog tables. */
class az_dla_catalog_table {
    /**
     * List tables in a database or schema.
     *
     * Syntax: 
     *
     * az dla catalog table list --database-name
     *                           [--account]
     *                           [--ids]
     *                           [--query-examples]
     *                           [--schema-name]
     *                           [--subscription]
     */
    az_dla_catalog_table_list(): void {
    }

    /**
     * Retrieves the specified table from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog table show --database-name
     *                           --schema-name
     *                           --table-name
     *                           [--account]
     *                           [--ids]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_dla_catalog_table_show(): void {
    }
}

/** Manage Data Lake Analytics catalog table valued functions. */
class az_dla_catalog_tvf {
    /**
     * List table valued functions in a database or schema.
     *
     * Syntax: 
     *
     * az dla catalog tvf list --database-name
     *                         [--account]
     *                         [--ids]
     *                         [--query-examples]
     *                         [--schema-name]
     *                         [--subscription]
     */
    az_dla_catalog_tvf_list(): void {
    }

    /**
     * Retrieves the specified table valued function from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog tvf show --database-name
     *                         --schema-name
     *                         --table-valued-function-name
     *                         [--account]
     *                         [--ids]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_dla_catalog_tvf_show(): void {
    }
}

/** Manage Data Lake Analytics catalog views. */
class az_dla_catalog_view {
    /**
     * List views in a database or schema.
     *
     * Syntax: 
     *
     * az dla catalog view list --database-name
     *                          [--account]
     *                          [--ids]
     *                          [--query-examples]
     *                          [--schema-name]
     *                          [--subscription]
     */
    az_dla_catalog_view_list(): void {
    }

    /**
     * Retrieves the specified view from the Data Lake Analytics catalog.
     *
     * Syntax: 
     *
     * az dla catalog view show --database-name
     *                          --schema-name
     *                          --view-name
     *                          [--account]
     *                          [--ids]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_dla_catalog_view_show(): void {
    }
}

/** Manage Data Lake Analytics catalogs. */
class az_dla_catalog {
}

/** Manage Data Lake Analytics job pipelines. */
class az_dla_job_pipeline {
    /**
     * List job pipelines in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla job pipeline list [--account]
     *                          [--end-date-time]
     *                          [--ids]
     *                          [--query-examples]
     *                          [--start-date-time]
     *                          [--subscription]
     */
    az_dla_job_pipeline_list(): void {
    }

    /**
     * Retrieve a job pipeline in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla job pipeline show --pipeline-identity
     *                          [--account]
     *                          [--end-date-time]
     *                          [--ids]
     *                          [--query-examples]
     *                          [--start-date-time]
     *                          [--subscription]
     */
    az_dla_job_pipeline_show(): void {
    }
}

/** Manage Data Lake Analytics job recurrences. */
class az_dla_job_recurrence {
    /**
     * List job recurrences in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla job recurrence list [--account]
     *                            [--end-date-time]
     *                            [--ids]
     *                            [--query-examples]
     *                            [--start-date-time]
     *                            [--subscription]
     */
    az_dla_job_recurrence_list(): void {
    }

    /**
     * Retrieve a job recurrence in a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla job recurrence show --recurrence-identity
     *                            [--account]
     *                            [--end-date-time]
     *                            [--ids]
     *                            [--query-examples]
     *                            [--start-date-time]
     *                            [--subscription]
     */
    az_dla_job_recurrence_show(): void {
    }
}

/** Manage Data Lake Analytics jobs. */
class az_dla_job {
    /**
     * Cancel a Data Lake Analytics job.
     *
     * Syntax: 
     *
     * az dla job cancel --job-identity
     *                   [--account]
     *                   [--ids]
     *                   [--subscription]
     */
    az_dla_job_cancel(): void {
    }

    /**
     * List Data Lake Analytics jobs.
     *
     * Syntax: 
     *
     * az dla job list [--account]
     *                 [--ids]
     *                 [--name]
     *                 [--pipeline-id]
     *                 [--query-examples]
     *                 [--recurrence-id]
     *                 [--result {Cancelled, Failed, None, Succeeded}]
     *                 [--state {Accepted, Compiling, Ended, New, Paused, Queued, Running, Scheduling, Starting, WaitingForCapacity}]
     *                 [--submitted-after]
     *                 [--submitted-before]
     *                 [--submitter]
     *                 [--subscription]
     *                 [--top]
     */
    az_dla_job_list(): void {
    }

    /**
     * Get information for a Data Lake Analytics job.
     *
     * Syntax: 
     *
     * az dla job show --job-identity
     *                 [--account]
     *                 [--ids]
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_dla_job_show(): void {
    }

    /**
     * Submit a job to a Data Lake Analytics account.
     *
     * Syntax: 
     *
     * az dla job submit --job-name
     *                   --script
     *                   [--account]
     *                   [--compile-mode {Full, Semantic, SingleBox}]
     *                   [--compile-only]
     *                   [--degree-of-parallelism]
     *                   [--ids]
     *                   [--pipeline-id]
     *                   [--pipeline-name]
     *                   [--pipeline-uri]
     *                   [--priority]
     *                   [--recurrence-id]
     *                   [--recurrence-name]
     *                   [--run-id]
     *                   [--runtime-version]
     *                   [--subscription]
     */
    az_dla_job_submit(): void {
    }

    /**
     * Wait for a Data Lake Analytics job to finish.
     *
     * Syntax: 
     *
     * az dla job wait --job-id
     *                 [--account]
     *                 [--ids]
     *                 [--max-wait-time-sec]
     *                 [--subscription]
     *                 [--wait-interval-sec]
     */
    az_dla_job_wait(): void {
    }
}

/** Manage Data Lake Analytics accounts, jobs, and catalogs. */
class az_dla {
}

/** Manage Data Lake Store account firewall rules. */
class az_dls_account_firewall {
    /**
     * Creates a firewall rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account firewall create --account
     *                                --end-ip-address
     *                                --firewall-rule-name
     *                                --start-ip-address
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_dls_account_firewall_create(): void {
    }

    /**
     * Deletes a firewall rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account firewall delete --firewall-rule-name
     *                                [--account]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_dls_account_firewall_delete(): void {
    }

    /**
     * Lists firewall rules in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account firewall list [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_dls_account_firewall_list(): void {
    }

    /**
     * Get the details of a firewall rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account firewall show --firewall-rule-name
     *                              [--account]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_dls_account_firewall_show(): void {
    }

    /**
     * Updates a firewall rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account firewall update --firewall-rule-name
     *                                [--account]
     *                                [--end-ip-address]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--start-ip-address]
     *                                [--subscription]
     */
    az_dls_account_firewall_update(): void {
    }
}

/** Manage Data Lake Store account virtual network rules. */
class az_dls_account_network_rule {
    /**
     * Creates a virtual network rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account network-rule create --account-name
     *                                    --name
     *                                    --subnet
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--vnet-name]
     */
    az_dls_account_network_rule_create(): void {
    }

    /**
     * Deletes a virtual network rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account network-rule delete --account-name
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_dls_account_network_rule_delete(): void {
    }

    /**
     * Lists virtual network rules in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account network-rule list --account-name
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_dls_account_network_rule_list(): void {
    }

    /**
     * Get the details of a virtual network rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account network-rule show --account-name
     *                                  [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_dls_account_network_rule_show(): void {
    }

    /**
     * Updates a virtual network rule in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account network-rule update --account-name
     *                                    --subnet
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--vnet-name]
     */
    az_dls_account_network_rule_update(): void {
    }
}

/** Manage Data Lake Store account trusted identity providers. */
class az_dls_account_trusted_provider {
    /**
     * Creates or updates the specified trusted identity provider.
     *
     * Syntax: 
     *
     * az dls account trusted-provider create --account
     *                                        --id-provider
     *                                        --trusted-id-provider-name
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_dls_account_trusted_provider_create(): void {
    }

    /**
     * Deletes the specified trusted identity provider from the specified Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account trusted-provider delete --trusted-id-provider-name
     *                                        [--account]
     *                                        [--ids]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_dls_account_trusted_provider_delete(): void {
    }

    /**
     * Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account trusted-provider list [--account]
     *                                      [--ids]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_dls_account_trusted_provider_list(): void {
    }

    /**
     * Gets the specified Data Lake Store trusted identity provider.
     *
     * Syntax: 
     *
     * az dls account trusted-provider show --trusted-id-provider-name
     *                                      [--account]
     *                                      [--ids]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_dls_account_trusted_provider_show(): void {
    }

    /**
     * Updates the specified trusted identity provider.
     *
     * Syntax: 
     *
     * az dls account trusted-provider update --trusted-id-provider-name
     *                                        [--account]
     *                                        [--id-provider]
     *                                        [--ids]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_dls_account_trusted_provider_update(): void {
    }
}

/** Manage Data Lake Store accounts. */
class az_dls_account {
    /**
     * Creates a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account create --account
     *                       [--default-group]
     *                       [--disable-encryption]
     *                       [--encryption-type {ServiceManaged, UserManaged}]
     *                       [--key-name]
     *                       [--key-vault-id]
     *                       [--key-version]
     *                       [--location]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--tags]
     *                       [--tier {Commitment_100TB, Commitment_10TB, Commitment_1PB, Commitment_1TB, Commitment_500TB, Commitment_5PB, Consumption}]
     */
    az_dls_account_create(): void {
    }

    /**
     * Delete a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account delete [--account]
     *                       [--ids]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_dls_account_delete(): void {
    }

    /**
     * Enable the use of Azure Key Vault for encryption of a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account enable-key-vault [--account]
     *                                 [--ids]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_dls_account_enable_key_vault(): void {
    }

    /**
     * Lists available Data Lake Store accounts.
     *
     * Syntax: 
     *
     * az dls account list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_dls_account_list(): void {
    }

    /**
     * Get the details of a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account show [--account]
     *                     [--ids]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_dls_account_show(): void {
    }

    /**
     * Updates a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls account update [--account]
     *                       [--allow-azure-ips {Disabled, Enabled}]
     *                       [--default-group]
     *                       [--firewall-state {Disabled, Enabled}]
     *                       [--ids]
     *                       [--key-version]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--tags]
     *                       [--tier {Commitment_100TB, Commitment_10TB, Commitment_1PB, Commitment_1TB, Commitment_500TB, Commitment_5PB, Consumption}]
     *                       [--trusted-id-provider-state {Disabled, Enabled}]
     */
    az_dls_account_update(): void {
    }
}

/** Manage Data Lake Store filesystem access and permissions. */
class az_dls_fs_access {
    /**
     * Remove the access control list for a file or folder.
     *
     * Syntax: 
     *
     * az dls fs access remove-all --path
     *                             [--account]
     *                             [--default-acl]
     *                             [--ids]
     *                             [--subscription]
     */
    az_dls_fs_access_remove_all(): void {
    }

    /**
     * Remove entries for the access control list of a file or folder.
     *
     * Syntax: 
     *
     * az dls fs access remove-entry --acl-spec
     *                               --path
     *                               [--account]
     *                               [--ids]
     *                               [--subscription]
     */
    az_dls_fs_access_remove_entry(): void {
    }

    /**
     * Replace the existing access control list for a file or folder.
     *
     * Syntax: 
     *
     * az dls fs access set --acl-spec
     *                      --path
     *                      [--account]
     *                      [--ids]
     *                      [--subscription]
     */
    az_dls_fs_access_set(): void {
    }

    /**
     * Update the access control list for a file or folder.
     *
     * Syntax: 
     *
     * az dls fs access set-entry --acl-spec
     *                            --path
     *                            [--account]
     *                            [--ids]
     *                            [--subscription]
     */
    az_dls_fs_access_set_entry(): void {
    }

    /**
     * Set the owner information for a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs access set-owner --path
     *                            [--account]
     *                            [--group]
     *                            [--ids]
     *                            [--owner]
     *                            [--subscription]
     */
    az_dls_fs_access_set_owner(): void {
    }

    /**
     * Set the permissions for a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs access set-permission --path
     *                                 --permission
     *                                 [--account]
     *                                 [--ids]
     *                                 [--subscription]
     */
    az_dls_fs_access_set_permission(): void {
    }

    /**
     * Display the access control list (ACL).
     *
     * Syntax: 
     *
     * az dls fs access show --path
     *                       [--account]
     *                       [--ids]
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_dls_fs_access_show(): void {
    }
}

/** Manage a Data Lake Store filesystem. */
class az_dls_fs {
    /**
     * Append content to a file in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs append --content
     *                  --path
     *                  [--account]
     *                  [--ids]
     *                  [--subscription]
     */
    az_dls_fs_append(): void {
    }

    /**
     * Creates a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs create --account
     *                  --path
     *                  [--content]
     *                  [--folder]
     *                  [--force]
     *                  [--subscription]
     */
    az_dls_fs_create(): void {
    }

    /**
     * Delete a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs delete --path
     *                  [--account]
     *                  [--ids]
     *                  [--recurse]
     *                  [--subscription]
     */
    az_dls_fs_delete(): void {
    }

    /**
     * Download a file or folder from a Data Lake Store account to the local machine.
     *
     * Syntax: 
     *
     * az dls fs download --destination-path
     *                    --source-path
     *                    [--account]
     *                    [--block-size]
     *                    [--buffer-size]
     *                    [--chunk-size]
     *                    [--ids]
     *                    [--overwrite]
     *                    [--subscription]
     *                    [--thread-count]
     */
    az_dls_fs_download(): void {
    }

    /**
     * Join files in a Data Lake Store account into one file.
     *
     * Syntax: 
     *
     * az dls fs join --destination-path
     *                --source-paths
     *                [--account]
     *                [--force]
     *                [--ids]
     *                [--subscription]
     */
    az_dls_fs_join(): void {
    }

    /**
     * List the files and folders in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs list --path
     *                [--account]
     *                [--ids]
     *                [--query-examples]
     *                [--subscription]
     */
    az_dls_fs_list(): void {
    }

    /**
     * Move a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs move --destination-path
     *                --source-path
     *                [--account]
     *                [--force]
     *                [--ids]
     *                [--subscription]
     */
    az_dls_fs_move(): void {
    }

    /**
     * Preview the content of a file in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs preview --path
     *                   [--account]
     *                   [--force]
     *                   [--ids]
     *                   [--length]
     *                   [--offset]
     *                   [--subscription]
     */
    az_dls_fs_preview(): void {
    }

    /**
     * Remove the expiration time for a file.
     *
     * Syntax: 
     *
     * az dls fs remove-expiry --path
     *                         [--account]
     *                         [--ids]
     *                         [--subscription]
     */
    az_dls_fs_remove_expiry(): void {
    }

    /**
     * Set the expiration time for a file.
     *
     * Syntax: 
     *
     * az dls fs set-expiry --expiration-time
     *                      --path
     *                      [--account]
     *                      [--ids]
     *                      [--subscription]
     */
    az_dls_fs_set_expiry(): void {
    }

    /**
     * Get file or folder information in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs show --path
     *                [--account]
     *                [--ids]
     *                [--query-examples]
     *                [--subscription]
     */
    az_dls_fs_show(): void {
    }

    /**
     * Test for the existence of a file or folder in a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs test --path
     *                [--account]
     *                [--ids]
     *                [--subscription]
     */
    az_dls_fs_test(): void {
    }

    /**
     * Upload a file or folder to a Data Lake Store account.
     *
     * Syntax: 
     *
     * az dls fs upload --destination-path
     *                  --source-path
     *                  [--account]
     *                  [--block-size]
     *                  [--buffer-size]
     *                  [--chunk-size]
     *                  [--ids]
     *                  [--overwrite]
     *                  [--subscription]
     *                  [--thread-count]
     */
    az_dls_fs_upload(): void {
    }
}

/** Manage Data Lake Store accounts and filesystems. */
class az_dls {
}

/** Manage Tasks for a Data Migration Service instance's Project. */
class az_dms_project_task {
    /**
     * Cancel a Task if it's currently queued or running.
     *
     * Syntax: 
     *
     * az dms project task cancel --name
     *                            --project-name
     *                            --resource-group
     *                            --service-name
     *                            [--subscription]
     */
    az_dms_project_task_cancel(): void {
    }

    /**
     * Check if a given Task name is available within a given instance of DMS as well as the name's validity.
     *
     * Syntax: 
     *
     * az dms project task check-name --name
     *                                --project-name
     *                                --resource-group
     *                                --service-name
     *                                [--subscription]
     */
    az_dms_project_task_check_name(): void {
    }

    /**
     * Create and start a migration Task.
     *
     * Syntax: 
     *
     * az dms project task create --database-options-json
     *                            --name
     *                            --project-name
     *                            --resource-group
     *                            --service-name
     *                            --source-connection-json
     *                            --target-connection-json
     *                            [--enable-data-integrity-validation]
     *                            [--enable-query-analysis-validation]
     *                            [--enable-schema-validation]
     *                            [--subscription]
     */
    az_dms_project_task_create(): void {
    }

    /**
     * Delete a migration Task.
     *
     * Syntax: 
     *
     * az dms project task delete --name
     *                            --project-name
     *                            --resource-group
     *                            --service-name
     *                            [--delete-running-tasks]
     *                            [--subscription]
     *                            [--yes]
     */
    az_dms_project_task_delete(): void {
    }

    /**
     * List the Tasks within a Project. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
     *
     * Syntax: 
     *
     * az dms project task list --project-name
     *                          --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--task-type]
     */
    az_dms_project_task_list(): void {
    }

    /**
     * Show the details of a migration Task. Use the "--expand" to get more details.
     *
     * Syntax: 
     *
     * az dms project task show --name
     *                          --project-name
     *                          --resource-group
     *                          --service-name
     *                          [--expand]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_dms_project_task_show(): void {
    }
}

/** Manage Projects for an instance of the Data Migration Service. */
class az_dms_project {
    /**
     * Check if a given Project name is available within a given instance of DMS as well as the name's validity.
     *
     * Syntax: 
     *
     * az dms project check-name --name
     *                           --resource-group
     *                           --service-name
     *                           [--subscription]
     */
    az_dms_project_check_name(): void {
    }

    /**
     * Create a migration Project which can contain multiple Tasks.
     *
     * Syntax: 
     *
     * az dms project create --location
     *                       --name
     *                       --resource-group
     *                       --service-name
     *                       --source-platform
     *                       --target-platform
     *                       [--subscription]
     *                       [--tags]
     */
    az_dms_project_create(): void {
    }

    /**
     * Delete a Project.
     *
     * Syntax: 
     *
     * az dms project delete --name
     *                       --resource-group
     *                       --service-name
     *                       [--delete-running-tasks]
     *                       [--subscription]
     *                       [--yes]
     */
    az_dms_project_delete(): void {
    }

    /**
     * List the Projects within an instance of DMS.
     *
     * Syntax: 
     *
     * az dms project list --resource-group
     *                     --service-name
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_dms_project_list(): void {
    }

    /**
     * Show the details of a migration Project.
     *
     * Syntax: 
     *
     * az dms project show --name
     *                     --resource-group
     *                     --service-name
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_dms_project_show(): void {
    }
}

/** Manage Azure Data Migration Service (DMS) instances. */
class az_dms {
    /**
     * Check if a given DMS instance name is available in a given region as well as the name's validity.
     *
     * Syntax: 
     *
     * az dms check-name --location
     *                   --name
     *                   [--subscription]
     */
    az_dms_check_name(): void {
    }

    /**
     * Perform a health check and return the status of the service and virtual machine size.
     *
     * Syntax: 
     *
     * az dms check-status --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_dms_check_status(): void {
    }

    /**
     * Create an instance of the Data Migration Service.
     *
     * Syntax: 
     *
     * az dms create --location
     *               --name
     *               --resource-group
     *               --sku-name
     *               --subnet
     *               [--no-wait]
     *               [--subscription]
     *               [--tags]
     */
    az_dms_create(): void {
    }

    /**
     * Delete an instance of the Data Migration Service.
     *
     * Syntax: 
     *
     * az dms delete --name
     *               --resource-group
     *               [--delete-running-tasks]
     *               [--no-wait]
     *               [--subscription]
     *               [--yes]
     */
    az_dms_delete(): void {
    }

    /**
     * List the DMS instances within your currently configured subscription (to set this use "az account set"). If provided, only show the instances within a given resource group.
     *
     * Syntax: 
     *
     * az dms list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_dms_list(): void {
    }

    /**
     * List the SKUs that are supported by the Data Migration Service.
     *
     * Syntax: 
     *
     * az dms list-skus [--subscription]
     */
    az_dms_list_skus(): void {
    }

    /**
     * Show the details for an instance of the Data Migration Service.
     *
     * Syntax: 
     *
     * az dms show --name
     *             --resource-group
     *             [--query-examples]
     *             [--subscription]
     */
    az_dms_show(): void {
    }

    /**
     * Start an instance of the Data Migration Service. It can then be used to run data migrations.
     *
     * Syntax: 
     *
     * az dms start --name
     *              --resource-group
     *              [--no-wait]
     *              [--subscription]
     */
    az_dms_start(): void {
    }

    /**
     * Stop an instance of the Data Migration Service. While stopped, it can't be used to run data migrations and the owner won't be billed.
     *
     * Syntax: 
     *
     * az dms stop --name
     *             --resource-group
     *             [--no-wait]
     *             [--subscription]
     */
    az_dms_stop(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the DMS instance is met.
     *
     * Syntax: 
     *
     * az dms wait --name
     *             --resource-group
     *             [--created]
     *             [--custom]
     *             [--deleted]
     *             [--exists]
     *             [--interval]
     *             [--subscription]
     *             [--timeout]
     *             [--updated]
     */
    az_dms_wait(): void {
    }
}

/** Manage shared access keys of a domain. */
class az_eventgrid_domain_key {
    /**
     * List shared access keys of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain key list --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_eventgrid_domain_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain key regenerate --key-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_eventgrid_domain_key_regenerate(): void {
    }
}

/** Manage event domain topics. */
class az_eventgrid_domain_topic {
    /**
     * Create a domain topic under a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic create --domain-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_eventgrid_domain_topic_create(): void {
    }

    /**
     * Delete a domain topic under a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic delete [--domain-name]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_eventgrid_domain_topic_delete(): void {
    }

    /**
     * List available topics in a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic list --domain-name
     *                                --resource-group
     *                                [--odata-query]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_eventgrid_domain_topic_list(): void {
    }

    /**
     * Get the details of a domain topic.
     *
     * Syntax: 
     *
     * az eventgrid domain topic show [--domain-name]
     *                                [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_eventgrid_domain_topic_show(): void {
    }
}

/** Manage event domains. */
class az_eventgrid_domain {
    /**
     * Create a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain create --location
     *                            --name
     *                            --resource-group
     *                            [--identity {noidentity, systemassigned}]
     *                            [--inbound-ip-rules]
     *                            [--input-mapping-default-values]
     *                            [--input-mapping-fields]
     *                            [--input-schema {cloudeventschemav1_0, customeventschema, eventgridschema}]
     *                            [--public-network-access {disabled, enabled}]
     *                            [--sku {basic, premium}]
     *                            [--subscription]
     *                            [--tags]
     */
    az_eventgrid_domain_create(): void {
    }

    /**
     * Delete a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain delete [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_eventgrid_domain_delete(): void {
    }

    /**
     * List available domains.
     *
     * Syntax: 
     *
     * az eventgrid domain list [--odata-query]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_eventgrid_domain_list(): void {
    }

    /**
     * Get the details of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain show [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_eventgrid_domain_show(): void {
    }

    /**
     * Update a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain update [--identity {noidentity, systemassigned}]
     *                            [--ids]
     *                            [--inbound-ip-rules]
     *                            [--name]
     *                            [--public-network-access {disabled, enabled}]
     *                            [--resource-group]
     *                            [--sku {basic, premium}]
     *                            [--subscription]
     *                            [--tags]
     */
    az_eventgrid_domain_update(): void {
    }
}

/** Manage event subscriptions. */
class az_eventgrid_event_subscription {
    /**
     * Create a new event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription create --name
     *                                        [--advanced-filter]
     *                                        [--azure-active-directory-application-id-or-uri]
     *                                        [--azure-active-directory-tenant-id]
     *                                        [--deadletter-endpoint]
     *                                        [--deadletter-identity {systemassigned}]
     *                                        [--deadletter-identity-endpoint]
     *                                        [--delivery-identity {systemassigned}]
     *                                        [--delivery-identity-endpoint]
     *                                        [--delivery-identity-endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--endpoint]
     *                                        [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                        [--event-ttl]
     *                                        [--expiration-date]
     *                                        [--included-event-types]
     *                                        [--labels]
     *                                        [--max-delivery-attempts]
     *                                        [--max-events-per-batch]
     *                                        [--preferred-batch-size-in-kilobytes]
     *                                        [--source-resource-id]
     *                                        [--subject-begins-with]
     *                                        [--subject-case-sensitive {false, true}]
     *                                        [--subject-ends-with]
     *                                        [--subscription]
     */
    az_eventgrid_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription delete --name
     *                                        [--source-resource-id]
     *                                        [--subscription]
     */
    az_eventgrid_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription list [--location]
     *                                      [--odata-query]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--source-resource-id]
     *                                      [--subscription]
     *                                      [--topic-type-name]
     */
    az_eventgrid_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription show --name
     *                                      [--include-full-endpoint-url {false, true}]
     *                                      [--query-examples]
     *                                      [--source-resource-id]
     *                                      [--subscription]
     */
    az_eventgrid_event_subscription_show(): void {
    }

    /**
     * Update an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription update --name
     *                                        [--add]
     *                                        [--advanced-filter]
     *                                        [--deadletter-endpoint]
     *                                        [--deadletter-identity {systemassigned}]
     *                                        [--deadletter-identity-endpoint]
     *                                        [--delivery-identity {systemassigned}]
     *                                        [--delivery-identity-endpoint]
     *                                        [--delivery-identity-endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--endpoint]
     *                                        [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--force-string]
     *                                        [--included-event-types]
     *                                        [--labels]
     *                                        [--remove]
     *                                        [--set]
     *                                        [--source-resource-id]
     *                                        [--subject-begins-with]
     *                                        [--subject-ends-with]
     *                                        [--subscription]
     */
    az_eventgrid_event_subscription_update(): void {
    }
}

/** Manage Azure Event Grid extension topics. */
class az_eventgrid_extension_topic {
    /**
     * Get the details of an extension topic.
     *
     * Syntax: 
     *
     * az eventgrid extension-topic show --scope
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_eventgrid_extension_topic_show(): void {
    }
}

/** Manage partner event channels. */
class az_eventgrid_partner_namespace_event_channel {
    /**
     * Create an event channel under a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel create --desination-topic-name
     *                                                     --destination-resource-group-name
     *                                                     --destination-subscription-id
     *                                                     --name
     *                                                     --partner-namespace-name
     *                                                     --resource-group
     *                                                     --source
     *                                                     [--activation-expiration-date]
     *                                                     [--partner-topic-description]
     *                                                     [--publisher-filter]
     *                                                     [--subscription]
     */
    az_eventgrid_partner_namespace_event_channel_create(): void {
    }

    /**
     * Delete a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel delete [--ids]
     *                                                     [--name]
     *                                                     [--partner-namespace-name]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     *                                                     [--yes]
     */
    az_eventgrid_partner_namespace_event_channel_delete(): void {
    }

    /**
     * List available partner event-channels.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel list --partner-namespace-name
     *                                                   --resource-group
     *                                                   [--odata-query]
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_eventgrid_partner_namespace_event_channel_list(): void {
    }

    /**
     * Get the details of an event channel under a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel show [--ids]
     *                                                   [--name]
     *                                                   [--partner-namespace-name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_eventgrid_partner_namespace_event_channel_show(): void {
    }
}

/** Manage shared access keys of a partner namespace. */
class az_eventgrid_partner_namespace_key {
    /**
     * List shared access keys of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace key list --partner-namespace-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_eventgrid_partner_namespace_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace key regenerate --key-name
     *                                               --partner-namespace-name
     *                                               --resource-group
     *                                               [--subscription]
     */
    az_eventgrid_partner_namespace_key_regenerate(): void {
    }
}

/** Manage partner namespaces. */
class az_eventgrid_partner_namespace {
    /**
     * Create a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace create --location
     *                                       --name
     *                                       --partner-registration-id
     *                                       --resource-group
     *                                       [--subscription]
     *                                       [--tags]
     */
    az_eventgrid_partner_namespace_create(): void {
    }

    /**
     * Delete a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace delete [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--subscription]
     *                                       [--yes]
     */
    az_eventgrid_partner_namespace_delete(): void {
    }

    /**
     * List available partner namespaces.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace list [--odata-query]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_eventgrid_partner_namespace_list(): void {
    }

    /**
     * Get the details of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace show [--ids]
     *                                     [--name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_eventgrid_partner_namespace_show(): void {
    }
}

/** Manage partner registrations. */
class az_eventgrid_partner_registration {
    /**
     * Create a new partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration create --name
     *                                          --partner-name
     *                                          --resource-group
     *                                          --resource-type-name
     *                                          [--authorized-subscription-ids]
     *                                          [--customer-service-extension]
     *                                          [--customer-service-number]
     *                                          [--customer-service-uri]
     *                                          [--description]
     *                                          [--display-name]
     *                                          [--logo-uri]
     *                                          [--long-description]
     *                                          [--setup-uri]
     *                                          [--subscription]
     *                                          [--tags]
     */
    az_eventgrid_partner_registration_create(): void {
    }

    /**
     * Delete a partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration delete [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--subscription]
     *                                          [--yes]
     */
    az_eventgrid_partner_registration_delete(): void {
    }

    /**
     * List all partner registrations in specific resource group or all under the specified azure subscription.
     *
     * Syntax: 
     *
     * az eventgrid partner registration list [--odata-query]
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_eventgrid_partner_registration_list(): void {
    }

    /**
     * Get a partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration show [--ids]
     *                                        [--name]
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_eventgrid_partner_registration_show(): void {
    }
}

/** Manage event subscriptions of partner topic. */
class az_eventgrid_partner_topic_event_subscription {
    /**
     * Create a new event subscription for a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription create --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     *                                                      [--advanced-filter]
     *                                                      [--azure-active-directory-application-id-or-uri]
     *                                                      [--azure-active-directory-tenant-id]
     *                                                      [--deadletter-endpoint]
     *                                                      [--endpoint]
     *                                                      [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                      [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                                      [--event-ttl]
     *                                                      [--expiration-date]
     *                                                      [--included-event-types]
     *                                                      [--labels]
     *                                                      [--max-delivery-attempts]
     *                                                      [--max-events-per-batch]
     *                                                      [--preferred-batch-size-in-kilobytes]
     *                                                      [--subject-begins-with]
     *                                                      [--subject-case-sensitive {false, true}]
     *                                                      [--subject-ends-with]
     *                                                      [--subscription]
     */
    az_eventgrid_partner_topic_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription delete --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     *                                                      [--subscription]
     *                                                      [--yes]
     */
    az_eventgrid_partner_topic_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions of a specific partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription list --partner-topic-name
     *                                                    --resource-group
     *                                                    [--odata-query]
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_eventgrid_partner_topic_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription show --name
     *                                                    --partner-topic-name
     *                                                    --resource-group
     *                                                    [--include-full-endpoint-url {false, true}]
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_eventgrid_partner_topic_event_subscription_show(): void {
    }

    /**
     * Update an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription update --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     *                                                      [--advanced-filter]
     *                                                      [--deadletter-endpoint]
     *                                                      [--endpoint]
     *                                                      [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                      [--included-event-types]
     *                                                      [--labels]
     *                                                      [--subject-begins-with]
     *                                                      [--subject-ends-with]
     *                                                      [--subscription]
     */
    az_eventgrid_partner_topic_event_subscription_update(): void {
    }
}

/** Manage partner topics. */
class az_eventgrid_partner_topic {
    /**
     * Activate a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic activate [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_eventgrid_partner_topic_activate(): void {
    }

    /**
     * Deactivate a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic deactivate [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_eventgrid_partner_topic_deactivate(): void {
    }

    /**
     * Delete a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic delete [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_eventgrid_partner_topic_delete(): void {
    }

    /**
     * List available partner topics.
     *
     * Syntax: 
     *
     * az eventgrid partner topic list [--odata-query]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_eventgrid_partner_topic_list(): void {
    }

    /**
     * Get the details of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic show [--ids]
     *                                 [--name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_eventgrid_partner_topic_show(): void {
    }
}

/** Manage partner resources. */
class az_eventgrid_partner {
}

/** Manage event subscriptions of system topic. */
class az_eventgrid_system_topic_event_subscription {
    /**
     * Create a new event subscription for a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription create --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     *                                                     [--advanced-filter]
     *                                                     [--azure-active-directory-application-id-or-uri]
     *                                                     [--azure-active-directory-tenant-id]
     *                                                     [--deadletter-endpoint]
     *                                                     [--endpoint]
     *                                                     [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                     [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                                     [--event-ttl]
     *                                                     [--expiration-date]
     *                                                     [--included-event-types]
     *                                                     [--labels]
     *                                                     [--max-delivery-attempts]
     *                                                     [--max-events-per-batch]
     *                                                     [--preferred-batch-size-in-kilobytes]
     *                                                     [--subject-begins-with]
     *                                                     [--subject-case-sensitive {false, true}]
     *                                                     [--subject-ends-with]
     *                                                     [--subscription]
     */
    az_eventgrid_system_topic_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription delete --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     *                                                     [--subscription]
     *                                                     [--yes]
     */
    az_eventgrid_system_topic_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions of a specific system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription list --resource-group
     *                                                   --system-topic-name
     *                                                   [--odata-query]
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_eventgrid_system_topic_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription show --name
     *                                                   --resource-group
     *                                                   --system-topic-name
     *                                                   [--include-full-endpoint-url {false, true}]
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_eventgrid_system_topic_event_subscription_show(): void {
    }

    /**
     * Update an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription update --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     *                                                     [--advanced-filter]
     *                                                     [--deadletter-endpoint]
     *                                                     [--endpoint]
     *                                                     [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                     [--included-event-types]
     *                                                     [--labels]
     *                                                     [--subject-begins-with]
     *                                                     [--subject-ends-with]
     *                                                     [--subscription]
     */
    az_eventgrid_system_topic_event_subscription_update(): void {
    }
}

/** Manage system topics. */
class az_eventgrid_system_topic {
    /**
     * Create a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic create --location
     *                                  --name
     *                                  --resource-group
     *                                  --source
     *                                  --topic-type
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_eventgrid_system_topic_create(): void {
    }

    /**
     * Delete a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic delete [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     *                                  [--yes]
     */
    az_eventgrid_system_topic_delete(): void {
    }

    /**
     * List available system topics.
     *
     * Syntax: 
     *
     * az eventgrid system-topic list [--odata-query]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_eventgrid_system_topic_list(): void {
    }

    /**
     * Get the details of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic show [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_eventgrid_system_topic_show(): void {
    }

    /**
     * Update a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic update [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     *                                  [--tags]
     */
    az_eventgrid_system_topic_update(): void {
    }
}

/** Manage shared access keys of a topic. */
class az_eventgrid_topic_key {
    /**
     * List shared access keys of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic key list --name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_eventgrid_topic_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic key regenerate --key-name
     *                                   --name
     *                                   --resource-group
     *                                   [--subscription]
     */
    az_eventgrid_topic_key_regenerate(): void {
    }
}

/** Get details for topic types. */
class az_eventgrid_topic_type {
    /**
     * List registered topic types.
     *
     * Syntax: 
     *
     * az eventgrid topic-type list [--query-examples]
     *                              [--subscription]
     */
    az_eventgrid_topic_type_list(): void {
    }

    /**
     * List the event types supported by a topic type.
     *
     * Syntax: 
     *
     * az eventgrid topic-type list-event-types --name
     *                                          [--subscription]
     */
    az_eventgrid_topic_type_list_event_types(): void {
    }

    /**
     * Get the details for a topic type.
     *
     * Syntax: 
     *
     * az eventgrid topic-type show --name
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_eventgrid_topic_type_show(): void {
    }
}

/** Manage Azure Event Grid topics. */
class az_eventgrid_topic {
    /**
     * Create a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic create --location
     *                           --name
     *                           --resource-group
     *                           [--identity {noidentity, systemassigned}]
     *                           [--inbound-ip-rules]
     *                           [--input-mapping-default-values]
     *                           [--input-mapping-fields]
     *                           [--input-schema {cloudeventschemav1_0, customeventschema, eventgridschema}]
     *                           [--public-network-access {disabled, enabled}]
     *                           [--sku {basic, premium}]
     *                           [--subscription]
     *                           [--tags]
     */
    az_eventgrid_topic_create(): void {
    }

    /**
     * Delete a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_eventgrid_topic_delete(): void {
    }

    /**
     * List available topics.
     *
     * Syntax: 
     *
     * az eventgrid topic list [--odata-query]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_eventgrid_topic_list(): void {
    }

    /**
     * Get the details of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_eventgrid_topic_show(): void {
    }

    /**
     * Update a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic update [--identity {noidentity, systemassigned}]
     *                           [--ids]
     *                           [--inbound-ip-rules]
     *                           [--name]
     *                           [--public-network-access {disabled, enabled}]
     *                           [--resource-group]
     *                           [--sku {basic, premium}]
     *                           [--subscription]
     *                           [--tags]
     */
    az_eventgrid_topic_update(): void {
    }
}

/** Manage Azure Event Grid topics, domains, domain topics, system topics partner topics, event subscriptions, system topic event subscriptions and partner topic event subscriptions. */
class az_eventgrid {
}

/** Manage Azure EventHubs Cluster for namespace. */
class az_eventhubs_cluster_namespace {
    /**
     * List of Namespaces within given Cluster.
     *
     * Syntax: 
     *
     * az eventhubs cluster namespace list --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_eventhubs_cluster_namespace_list(): void {
    }
}

/** Manage Azure EventHubs Clusters. */
class az_eventhubs_cluster {
    /**
     * List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.
     *
     * Syntax: 
     *
     * az eventhubs cluster available-region [--subscription]
     */
    az_eventhubs_cluster_available_region(): void {
    }

    /**
     * Create EventHubs Cluster.
     *
     * Syntax: 
     *
     * az eventhubs cluster create --name
     *                             --resource-group
     *                             [--capacity]
     *                             [--location]
     *                             [--subscription]
     *                             [--tags]
     */
    az_eventhubs_cluster_create(): void {
    }

    /**
     * Delete an existing Event Hubs Cluster.
     *
     * Syntax: 
     *
     * az eventhubs cluster delete --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--subscription]
     *                             [--yes]
     */
    az_eventhubs_cluster_delete(): void {
    }

    /**
     * List the available Event Hubs Clusters within an ARM resource group.
     *
     * Syntax: 
     *
     * az eventhubs cluster list --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_eventhubs_cluster_list(): void {
    }

    /**
     * Get the resource description of the specified Event Hubs Cluster.
     *
     * Syntax: 
     *
     * az eventhubs cluster show --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_eventhubs_cluster_show(): void {
    }

    /**
     * Update tags of EventHubs Cluster.
     *
     * Syntax: 
     *
     * az eventhubs cluster update --name
     *                             --resource-group
     *                             [--add]
     *                             [--force-string]
     *                             [--remove]
     *                             [--set]
     *                             [--subscription]
     *                             [--tags]
     */
    az_eventhubs_cluster_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Cluster operation is completed.
     *
     * Syntax: 
     *
     * az eventhubs cluster wait --name
     *                           --resource-group
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_eventhubs_cluster_wait(): void {
    }
}

/** Manage Azure Authorizationrule connection strings for Eventhub. */
class az_eventhubs_eventhub_authorization_rule_keys {
    /**
     * Shows the connection strings of Authorizationrule for the Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule keys list --eventhub-name
     *                                                    --name
     *                                                    --namespace-name
     *                                                    --resource-group
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate the connection strings of Authorizationrule for the namespace.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                     [--eventhub-name]
     *                                                     [--ids]
     *                                                     [--key-value]
     *                                                     [--name]
     *                                                     [--namespace-name]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Service Bus Authorizationrule for Eventhub. */
class az_eventhubs_eventhub_authorization_rule {
    /**
     * Creates Authorizationrule for the given Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule create --eventhub-name
     *                                                 --name
     *                                                 --namespace-name
     *                                                 --resource-group
     *                                                 --rights {Listen, Manage, Send}
     *                                                 [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorizationrule of Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule delete [--eventhub-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--namespace-name]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_delete(): void {
    }

    /**
     * Shows the list of Authorization-rules by Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule list --eventhub-name
     *                                               --namespace-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Authorizationrule.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule show [--eventhub-name]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--namespace-name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_show(): void {
    }

    /**
     * Updates Authorizationrule for the given Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub authorization-rule update --rights {Listen, Manage, Send}
     *                                                 [--add]
     *                                                 [--eventhub-name]
     *                                                 [--force-string]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--namespace-name]
     *                                                 [--remove]
     *                                                 [--resource-group]
     *                                                 [--set]
     *                                                 [--subscription]
     */
    az_eventhubs_eventhub_authorization_rule_update(): void {
    }
}

/** Manage Azure Event Hubs consumergroup. */
class az_eventhubs_eventhub_consumer_group {
    /**
     * Creates the EventHub ConsumerGroup.
     *
     * Syntax: 
     *
     * az eventhubs eventhub consumer-group create --eventhub-name
     *                                             --name
     *                                             --namespace-name
     *                                             --resource-group
     *                                             [--subscription]
     *                                             [--user-metadata]
     */
    az_eventhubs_eventhub_consumer_group_create(): void {
    }

    /**
     * Deletes the ConsumerGroup.
     *
     * Syntax: 
     *
     * az eventhubs eventhub consumer-group delete [--eventhub-name]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_eventhubs_eventhub_consumer_group_delete(): void {
    }

    /**
     * List the ConsumerGroup by Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub consumer-group list --eventhub-name
     *                                           --namespace-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--skip]
     *                                           [--subscription]
     *                                           [--top]
     */
    az_eventhubs_eventhub_consumer_group_list(): void {
    }

    /**
     * Shows the ConsumerGroup Details.
     *
     * Syntax: 
     *
     * az eventhubs eventhub consumer-group show [--eventhub-name]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--namespace-name]
     *                                           [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_eventhubs_eventhub_consumer_group_show(): void {
    }

    /**
     * Updates the EventHub ConsumerGroup.
     *
     * Syntax: 
     *
     * az eventhubs eventhub consumer-group update [--add]
     *                                             [--eventhub-name]
     *                                             [--force-string]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--user-metadata]
     */
    az_eventhubs_eventhub_consumer_group_update(): void {
    }
}

/** Manage Azure EventHubs eventhub and authorization-rule. */
class az_eventhubs_eventhub {
    /**
     * Creates the EventHubs Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub create --name
     *                              --namespace-name
     *                              --resource-group
     *                              [--archive-name-format]
     *                              [--blob-container]
     *                              [--capture-interval]
     *                              [--capture-size-limit]
     *                              [--destination-name]
     *                              [--enable-capture {false, true}]
     *                              [--message-retention]
     *                              [--partition-count]
     *                              [--skip-empty-archives {false, true}]
     *                              [--status {Active, Disabled, SendDisabled}]
     *                              [--storage-account]
     *                              [--subscription]
     */
    az_eventhubs_eventhub_create(): void {
    }

    /**
     * Deletes the Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub delete [--ids]
     *                              [--name]
     *                              [--namespace-name]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_eventhubs_eventhub_delete(): void {
    }

    /**
     * List the EventHub by Namepsace.
     *
     * Syntax: 
     *
     * az eventhubs eventhub list --namespace-name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--skip]
     *                            [--subscription]
     *                            [--top]
     */
    az_eventhubs_eventhub_list(): void {
    }

    /**
     * Shows the Eventhub Details.
     *
     * Syntax: 
     *
     * az eventhubs eventhub show [--ids]
     *                            [--name]
     *                            [--namespace-name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_eventhubs_eventhub_show(): void {
    }

    /**
     * Updates the EventHubs Eventhub.
     *
     * Syntax: 
     *
     * az eventhubs eventhub update [--add]
     *                              [--archive-name-format]
     *                              [--blob-container]
     *                              [--capture-interval]
     *                              [--capture-size-limit]
     *                              [--destination-name]
     *                              [--enable-capture {false, true}]
     *                              [--force-string]
     *                              [--ids]
     *                              [--message-retention]
     *                              [--name]
     *                              [--namespace-name]
     *                              [--partition-count]
     *                              [--remove]
     *                              [--resource-group]
     *                              [--set]
     *                              [--skip-empty-archives {false, true}]
     *                              [--status {Active, Disabled, SendDisabled}]
     *                              [--storage-account]
     *                              [--subscription]
     */
    az_eventhubs_eventhub_update(): void {
    }
}

/** Manage Azure Event Hubs Authorizationrule connection strings for Geo Recovery configuration Alias. */
class az_eventhubs_georecovery_alias_authorization_rule_keys {
    /**
     * Shows the keys and connection strings of Authorizationrule for the EventHubs Namespace.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias authorization-rule keys list --alias
     *                                                             --name
     *                                                             --namespace-name
     *                                                             --resource-group
     *                                                             [--query-examples]
     *                                                             [--subscription]
     */
    az_eventhubs_georecovery_alias_authorization_rule_keys_list(): void {
    }
}

/** Manage Azure EventHubs Authorizationrule for Geo Recovery configuration Alias. */
class az_eventhubs_georecovery_alias_authorization_rule {
    /**
     * List of Authorizationrule by EventHubs Namespace.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias authorization-rule list --alias
     *                                                        --namespace-name
     *                                                        --resource-group
     *                                                        [--query-examples]
     *                                                        [--subscription]
     */
    az_eventhubs_georecovery_alias_authorization_rule_list(): void {
    }

    /**
     * Show properties of EventHubs Geo-Disaster Recovery Configuration Alias and Namespace Authorizationrule.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias authorization-rule show [--alias]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--namespace-name]
     *                                                        [--query-examples]
     *                                                        [--resource-group]
     *                                                        [--subscription]
     */
    az_eventhubs_georecovery_alias_authorization_rule_show(): void {
    }
}

/** Manage Azure EventHubs Geo Recovery configuration Alias. */
class az_eventhubs_georecovery_alias {
    /**
     * Disables Geo-Disaster Recovery Configuration Alias and stops replicating changes from primary to secondary namespaces.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias break-pair [--alias]
     *                                           [--ids]
     *                                           [--namespace-name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_eventhubs_georecovery_alias_break_pair(): void {
    }

    /**
     * Delete Geo-Disaster Recovery Configuration Alias.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias delete [--alias]
     *                                       [--ids]
     *                                       [--namespace-name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_eventhubs_georecovery_alias_delete(): void {
    }

    /**
     * Check the availability of Geo-Disaster Recovery Configuration Alias Name.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias exists --alias
     *                                       --namespace-name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_eventhubs_georecovery_alias_exists(): void {
    }

    /**
     * Invokes Geo-Disaster Recovery Configuration Alias to point to the secondary namespace.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias fail-over [--alias]
     *                                          [--ids]
     *                                          [--namespace-name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_eventhubs_georecovery_alias_fail_over(): void {
    }

    /**
     * Gets all Alias(Disaster Recovery configurations).
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias list --namespace-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_eventhubs_georecovery_alias_list(): void {
    }

    /**
     * Sets a Geo-Disaster Recovery Configuration Alias for the give Namespace.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias set --partner-namespace
     *                                    [--alias]
     *                                    [--alternate-name]
     *                                    [--ids]
     *                                    [--namespace-name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_eventhubs_georecovery_alias_set(): void {
    }

    /**
     * Shows properties of Geo-Disaster Recovery Configuration Alias for Primay or Secondary Namespace.
     *
     * Syntax: 
     *
     * az eventhubs georecovery-alias show [--alias]
     *                                     [--ids]
     *                                     [--namespace-name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_eventhubs_georecovery_alias_show(): void {
    }
}

/** Manage Azure EventHubs Authorizationrule connection strings for Namespace. */
class az_eventhubs_namespace_authorization_rule_keys {
    /**
     * Shows the connection strings for namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule keys list --name
     *                                                     --namespace-name
     *                                                     --resource-group
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate the connection strings of Authorizationrule for the namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                      [--ids]
     *                                                      [--key-value]
     *                                                      [--name]
     *                                                      [--namespace-name]
     *                                                      [--resource-group]
     *                                                      [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure EventHubs Authorizationrule for Namespace. */
class az_eventhubs_namespace_authorization_rule {
    /**
     * Creates Authorizationrule for the given Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule create --name
     *                                                  --namespace-name
     *                                                  --resource-group
     *                                                  --rights {Listen, Manage, Send}
     *                                                  [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorizationrule of the namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule delete [--ids]
     *                                                  [--name]
     *                                                  [--namespace-name]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_delete(): void {
    }

    /**
     * Shows the list of Authorizationrule by Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule list --namespace-name
     *                                                --resource-group
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Authorizationrule.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule show [--ids]
     *                                                [--name]
     *                                                [--namespace-name]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_show(): void {
    }

    /**
     * Updates Authorizationrule for the given Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace authorization-rule update --rights {Listen, Manage, Send}
     *                                                  [--add]
     *                                                  [--force-string]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--namespace-name]
     *                                                  [--remove]
     *                                                  [--resource-group]
     *                                                  [--set]
     *                                                  [--subscription]
     */
    az_eventhubs_namespace_authorization_rule_update(): void {
    }
}

/** Manage Azure EventHubs networkruleset for namespace. */
class az_eventhubs_namespace_network_rule {
    /**
     * Add a network rule for a namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace network-rule add --namespace-name
     *                                         --resource-group
     *                                         [--action {Allow}]
     *                                         [--ignore-missing-endpoint {false, true}]
     *                                         [--ip-address]
     *                                         [--subnet]
     *                                         [--subscription]
     *                                         [--vnet-name]
     */
    az_eventhubs_namespace_network_rule_add(): void {
    }

    /**
     * Show properties of Network rule of the given Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace network-rule list --namespace-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_eventhubs_namespace_network_rule_list(): void {
    }

    /**
     * Remove network rule for a namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace network-rule remove --namespace-name
     *                                            --resource-group
     *                                            [--ip-address]
     *                                            [--subnet]
     *                                            [--subscription]
     *                                            [--vnet-name]
     */
    az_eventhubs_namespace_network_rule_remove(): void {
    }
}

/** Manage Azure EventHubs namespace and Authorizationrule. */
class az_eventhubs_namespace {
    /**
     * Creates the EventHubs Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace create --name
     *                               --resource-group
     *                               [--assign-identity {false, true}]
     *                               [--capacity]
     *                               [--cluster-arm-id]
     *                               [--default-action {Allow, Deny}]
     *                               [--enable-auto-inflate {false, true}]
     *                               [--enable-kafka {false, true}]
     *                               [--enable-trusted-service-access {false, true}]
     *                               [--location]
     *                               [--maximum-throughput-units]
     *                               [--sku {Basic, Standard}]
     *                               [--subscription]
     *                               [--tags]
     *                               [--zone-redundant {false, true}]
     */
    az_eventhubs_namespace_create(): void {
    }

    /**
     * Deletes the Namespaces.
     *
     * Syntax: 
     *
     * az eventhubs namespace delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_eventhubs_namespace_delete(): void {
    }

    /**
     * Check for the availability of the given name for the Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace exists --name
     *                               [--subscription]
     */
    az_eventhubs_namespace_exists(): void {
    }

    /**
     * Lists the EventHubs Namespaces.
     *
     * Syntax: 
     *
     * az eventhubs namespace list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_eventhubs_namespace_list(): void {
    }

    /**
     * Shows the Event Hubs Namespace Details.
     *
     * Syntax: 
     *
     * az eventhubs namespace show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_eventhubs_namespace_show(): void {
    }

    /**
     * Updates the EventHubs Namespace.
     *
     * Syntax: 
     *
     * az eventhubs namespace update [--add]
     *                               [--assign-identity {false, true}]
     *                               [--capacity]
     *                               [--default-action {Allow, Deny}]
     *                               [--enable-auto-inflate {false, true}]
     *                               [--enable-kafka {false, true}]
     *                               [--enable-trusted-service-access {false, true}]
     *                               [--force-string]
     *                               [--ids]
     *                               [--key-name]
     *                               [--key-source {Microsoft.KeyVault}]
     *                               [--key-vault-uri]
     *                               [--key-version]
     *                               [--maximum-throughput-units]
     *                               [--name]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--sku {Basic, Standard}]
     *                               [--subscription]
     *                               [--tags]
     */
    az_eventhubs_namespace_update(): void {
    }
}

/** Manage Azure Event Hubs namespaces, eventhubs, consumergroups and geo recovery configurations - Alias. */
class az_eventhubs {
}

/** Manage subscription alias. */
class ext_account_az_account_alias {
    /**
     * Create Alias Subscription.
     *
     * Syntax: 
     *
     * az account alias create --name
     *                         [--billing-scope]
     *                         [--display-name]
     *                         [--no-wait]
     *                         [--subscription-id]
     *                         [--workload {DevTest, Production}]
     */
    ext_account_az_account_alias_create(): void {
    }

    /**
     * Delete Alias.
     *
     * Syntax: 
     *
     * az account alias delete --name
     */
    ext_account_az_account_alias_delete(): void {
    }

    /**
     * List Alias Subscriptions.
     *
     * Syntax: 
     *
     * az account alias list
     */
    ext_account_az_account_alias_list(): void {
    }

    /**
     * Get Alias Subscription.
     *
     * Syntax: 
     *
     * az account alias show --name
     */
    ext_account_az_account_alias_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the account alias is met.
     *
     * Syntax: 
     *
     * az account alias wait --name
     *                       [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--interval]
     *                       [--timeout]
     *                       [--updated]
     */
    ext_account_az_account_alias_wait(): void {
    }
}

/** Manage subscriptions. */
class ext_account_az_account_subscription {
    /**
     * Cancel subscription.
     *
     * Syntax: 
     *
     * az account subscription cancel --id
     *                                [--yes]
     */
    ext_account_az_account_subscription_cancel(): void {
    }

    /**
     * Enable subscription.
     *
     * Syntax: 
     *
     * az account subscription enable --id
     */
    ext_account_az_account_subscription_enable(): void {
    }

    /**
     * Get all subscriptions for a tenant.
     *
     * Syntax: 
     *
     * az account subscription list
     */
    ext_account_az_account_subscription_list(): void {
    }

    /**
     * This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list.
     *
     * Syntax: 
     *
     * az account subscription list-location --id
     */
    ext_account_az_account_subscription_list_location(): void {
    }

    /**
     * Rename subscription.
     *
     * Syntax: 
     *
     * az account subscription rename --id
     *                                [--name]
     */
    ext_account_az_account_subscription_rename(): void {
    }

    /**
     * Get details about a specified subscription.
     *
     * Syntax: 
     *
     * az account subscription show --id
     */
    ext_account_az_account_subscription_show(): void {
    }
}

/** Manage tenant. */
class ext_account_az_account_tenant {
    /**
     * Get the tenants for your account.
     *
     * Syntax: 
     *
     * az account tenant list
     */
    ext_account_az_account_tenant_list(): void {
    }
}

/** Manage Azure subscription information. */
class ext_account_az_account {
}

/** */
class ext_account_az {
}

/** */
class ext_aem_az {
}

/** Manage Azure Enhanced Monitoring Extension for SAP. */
class ext_aem_az_vm_aem {
    /**
     * Remove Azure Enhanced Monitoring Extension.
     *
     * Syntax: 
     *
     * az vm aem delete --name
     *                  --resource-group
     */
    ext_aem_az_vm_aem_delete(): void {
    }

    /**
     * Configure Azure Enhanced Monitoring Extension.
     *
     * Syntax: 
     *
     * az vm aem set --name
     *               --resource-group
     *               [--skip-storage-analytics]
     */
    ext_aem_az_vm_aem_set(): void {
    }

    /**
     * Verify Azure Enhanced Monitoring Extensions configured correctly.
     *
     * Syntax: 
     *
     * az vm aem verify --name
     *                  --resource-group
     *                  [--skip-storage-check]
     *                  [--wait-time-in-minutes]
     */
    ext_aem_az_vm_aem_verify(): void {
    }
}

/** Manage Linux or Windows virtual machines. */
class ext_aem_az_vm {
}

/** Add AI powered examples to help content. */
class ext_ai-examples_az_ai_examples {
    /**
     * Check if the client can connect to the AI example service.
     *
     * Syntax: 
     *
     * az ai-examples check-connection
     */
    ext_ai-examples_az_ai_examples_check_connection(): void {
    }
}

/** */
class ext_ai-examples_az {
}

/** Commands to manage node pools in Kubernetes kubernetes cluster. */
class ext_aks-preview_az_aks_nodepool {
    /**
     * Add a node pool to the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool add --cluster-name
     *                     --name
     *                     --resource-group
     *                     [--aks-custom-headers]
     *                     [--enable-cluster-autoscaler]
     *                     [--enable-node-public-ip]
     *                     [--eviction-policy {Deallocate, Delete}]
     *                     [--kubernetes-version]
     *                     [--labels]
     *                     [--max-count]
     *                     [--max-pods]
     *                     [--max-surge]
     *                     [--min-count]
     *                     [--mode {System, User}]
     *                     [--no-wait]
     *                     [--node-count]
     *                     [--node-osdisk-size]
     *                     [--node-osdisk-type]
     *                     [--node-taints]
     *                     [--node-vm-size]
     *                     [--node-zones {1, 2, 3}]
     *                     [--os-type]
     *                     [--ppg]
     *                     [--priority {Regular, Spot}]
     *                     [--spot-max-price]
     *                     [--tags]
     *                     [--vnet-subnet-id]
     */
    ext_aks-preview_az_aks_nodepool_add(): void {
    }

    /**
     * Delete the agent pool in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool delete --cluster-name
     *                        --name
     *                        --resource-group
     *                        [--no-wait]
     */
    ext_aks-preview_az_aks_nodepool_delete(): void {
    }

    /**
     * List node pools in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool list --cluster-name
     *                      --resource-group
     */
    ext_aks-preview_az_aks_nodepool_list(): void {
    }

    /**
     * Scale the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool scale --cluster-name
     *                       --name
     *                       --resource-group
     *                       [--no-wait]
     *                       [--node-count]
     */
    ext_aks-preview_az_aks_nodepool_scale(): void {
    }

    /**
     * Show the details for a node pool in the managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool show --cluster-name
     *                      --name
     *                      --resource-group
     */
    ext_aks-preview_az_aks_nodepool_show(): void {
    }

    /**
     * Update a node pool to enable/disable cluster-autoscaler or change min-count or max-count.
     *
     * Syntax: 
     *
     * az aks nodepool update --cluster-name
     *                        --name
     *                        --resource-group
     *                        [--disable-cluster-autoscaler]
     *                        [--enable-cluster-autoscaler]
     *                        [--max-count]
     *                        [--max-surge]
     *                        [--min-count]
     *                        [--mode {System, User}]
     *                        [--no-wait]
     *                        [--tags]
     *                        [--update-cluster-autoscaler]
     */
    ext_aks-preview_az_aks_nodepool_update(): void {
    }

    /**
     * Upgrade the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks nodepool upgrade --cluster-name
     *                         --name
     *                         --resource-group
     *                         [--kubernetes-version]
     *                         [--max-surge]
     *                         [--no-wait]
     *                         [--node-image-only]
     */
    ext_aks-preview_az_aks_nodepool_upgrade(): void {
    }
}

/** Manage Azure Kubernetes Services. */
class ext_aks-preview_az_aks {
    /**
     * Show the dashboard for a Kubernetes cluster in a web browser.
     *
     * Syntax: 
     *
     * az aks browse --name
     *               --resource-group
     *               [--disable-browser]
     *               [--listen-address]
     *               [--listen-port]
     */
    ext_aks-preview_az_aks_browse(): void {
    }

    /**
     * Create a new managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks create --name
     *               --resource-group
     *               [--aad-admin-group-object-ids]
     *               [--aad-client-app-id]
     *               [--aad-server-app-id]
     *               [--aad-server-app-secret]
     *               [--aad-tenant-id]
     *               [--admin-username]
     *               [--aks-custom-headers]
     *               [--api-server-authorized-ip-ranges]
     *               [--appgw-id]
     *               [--appgw-name]
     *               [--appgw-subnet-id]
     *               [--appgw-subnet-prefix]
     *               [--appgw-watch-namespace]
     *               [--assign-identity]
     *               [--attach-acr]
     *               [--client-secret]
     *               [--cluster-autoscaler-profile]
     *               [--disable-rbac]
     *               [--disable-sgxquotehelper]
     *               [--dns-name-prefix]
     *               [--dns-service-ip]
     *               [--docker-bridge-address]
     *               [--enable-aad]
     *               [--enable-addons]
     *               [--enable-azure-rbac]
     *               [--enable-cluster-autoscaler]
     *               [--enable-managed-identity]
     *               [--enable-node-public-ip]
     *               [--enable-pod-security-policy]
     *               [--enable-private-cluster]
     *               [--enable-rbac]
     *               [--enable-vmss]
     *               [--generate-ssh-keys]
     *               [--kubernetes-version]
     *               [--load-balancer-idle-timeout]
     *               [--load-balancer-managed-outbound-ip-count]
     *               [--load-balancer-outbound-ip-prefixes]
     *               [--load-balancer-outbound-ips]
     *               [--load-balancer-outbound-ports]
     *               [--load-balancer-sku]
     *               [--location]
     *               [--max-count]
     *               [--max-pods]
     *               [--min-count]
     *               [--network-plugin {azure, kubenet}]
     *               [--network-policy]
     *               [--no-ssh-key]
     *               [--no-wait]
     *               [--node-count]
     *               [--node-osdisk-diskencryptionset-id]
     *               [--node-osdisk-size]
     *               [--node-osdisk-type]
     *               [--node-resource-group]
     *               [--node-vm-size]
     *               [--node-zones {1, 2, 3}]
     *               [--nodepool-labels]
     *               [--nodepool-name]
     *               [--nodepool-tags]
     *               [--outbound-type {loadBalancer, userDefinedRouting}]
     *               [--pod-cidr]
     *               [--ppg]
     *               [--service-cidr]
     *               [--service-principal]
     *               [--skip-subnet-role-assignment]
     *               [--ssh-key-value]
     *               [--tags]
     *               [--uptime-sla]
     *               [--vm-set-type]
     *               [--vnet-subnet-id]
     *               [--windows-admin-password]
     *               [--windows-admin-username]
     *               [--workspace-resource-id]
     */
    ext_aks-preview_az_aks_create(): void {
    }

    /**
     * Disable Kubernetes addons.
     *
     * Syntax: 
     *
     * az aks disable-addons --addons
     *                       --name
     *                       --resource-group
     *                       [--no-wait]
     */
    ext_aks-preview_az_aks_disable_addons(): void {
    }

    /**
     * Enable Kubernetes addons.
     *
     * Syntax: 
     *
     * az aks enable-addons --addons
     *                      --name
     *                      --resource-group
     *                      [--appgw-id]
     *                      [--appgw-name]
     *                      [--appgw-subnet-id]
     *                      [--appgw-subnet-prefix]
     *                      [--appgw-watch-namespace]
     *                      [--disable-sgxquotehelper]
     *                      [--no-wait]
     *                      [--subnet-name]
     *                      [--workspace-resource-id]
     */
    ext_aks-preview_az_aks_enable_addons(): void {
    }

    /**
     * Get access credentials for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-credentials --name
     *                        --resource-group
     *                        [--admin]
     *                        [--context]
     *                        [--file]
     *                        [--overwrite-existing]
     *                        [--user]
     */
    ext_aks-preview_az_aks_get_credentials(): void {
    }

    /**
     * Get the upgrade versions available for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-upgrades --name
     *                     --resource-group
     */
    ext_aks-preview_az_aks_get_upgrades(): void {
    }

    /**
     * Get the versions available for creating a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks get-versions --location
     */
    ext_aks-preview_az_aks_get_versions(): void {
    }

    /**
     * Display diagnostic results for the Kubernetes cluster after kollect is done.
     *
     * Syntax: 
     *
     * az aks kanalyze --name
     *                 --resource-group
     */
    ext_aks-preview_az_aks_kanalyze(): void {
    }

    /**
     * Collecting diagnostic information for the Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks kollect --name
     *                --resource-group
     *                [--container-logs]
     *                [--kube-objects]
     *                [--node-logs]
     *                [--sas-token]
     *                [--storage-account]
     */
    ext_aks-preview_az_aks_kollect(): void {
    }

    /**
     * Rotate certificates and keys on a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks rotate-certs --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--yes]
     */
    ext_aks-preview_az_aks_rotate_certs(): void {
    }

    /**
     * Scale the node pool in a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks scale --name
     *              --node-count
     *              --resource-group
     *              [--no-wait]
     *              [--nodepool-name]
     */
    ext_aks-preview_az_aks_scale(): void {
    }

    /**
     * Show the details for a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks show --name
     *             --resource-group
     */
    ext_aks-preview_az_aks_show(): void {
    }

    /**
     * Start Managed Cluster.
     *
     * Syntax: 
     *
     * az aks start --name
     *              --resource-group
     *              [--no-wait]
     */
    ext_aks-preview_az_aks_start(): void {
    }

    /**
     * Stop Managed Cluster.
     *
     * Syntax: 
     *
     * az aks stop --name
     *             --resource-group
     *             [--no-wait]
     */
    ext_aks-preview_az_aks_stop(): void {
    }

    /**
     * Update a managed Kubernetes cluster properties, such as enable/disable cluster-autoscaler.
     *
     * Syntax: 
     *
     * az aks update --name
     *               --resource-group
     *               [--aad-admin-group-object-ids]
     *               [--aad-tenant-id]
     *               [--aks-custom-headers]
     *               [--api-server-authorized-ip-ranges]
     *               [--attach-acr]
     *               [--cluster-autoscaler-profile]
     *               [--detach-acr]
     *               [--disable-cluster-autoscaler]
     *               [--disable-pod-security-policy]
     *               [--enable-aad]
     *               [--enable-cluster-autoscaler]
     *               [--enable-pod-security-policy]
     *               [--load-balancer-idle-timeout]
     *               [--load-balancer-managed-outbound-ip-count]
     *               [--load-balancer-outbound-ip-prefixes]
     *               [--load-balancer-outbound-ips]
     *               [--load-balancer-outbound-ports]
     *               [--max-count]
     *               [--min-count]
     *               [--no-wait]
     *               [--update-cluster-autoscaler]
     *               [--uptime-sla]
     */
    ext_aks-preview_az_aks_update(): void {
    }

    /**
     * Upgrade a managed Kubernetes cluster to a newer version.
     *
     * Syntax: 
     *
     * az aks upgrade --name
     *                --resource-group
     *                [--control-plane-only]
     *                [--kubernetes-version]
     *                [--no-wait]
     *                [--node-image-only]
     *                [--yes]
     */
    ext_aks-preview_az_aks_upgrade(): void {
    }

    /**
     * Wait for a managed Kubernetes cluster to reach a desired state.
     *
     * Syntax: 
     *
     * az aks wait --name
     *             --resource-group
     *             [--created]
     *             [--custom]
     *             [--deleted]
     *             [--exists]
     *             [--interval]
     *             [--timeout]
     *             [--updated]
     */
    ext_aks-preview_az_aks_wait(): void {
    }
}

/** */
class ext_aks-preview_az {
}

/** */
class ext_alertsmanagement_az {
}

/** Commands to manage action rule. */
class ext_alertsmanagement_az_monitor_action_rule {
    /**
     * Create an action rule.
     *
     * Syntax: 
     *
     * az monitor action-rule create --name
     *                               --resource-group
     *                               --rule-type {ActionGroup, Diagnostics, Suppression}
     *                               [--alert-context]
     *                               [--alert-description]
     *                               [--alert-rule]
     *                               [--description]
     *                               [--location]
     *                               [--monitor-condition]
     *                               [--monitor-service]
     *                               [--scope]
     *                               [--scope-type {Resource, ResourceGroup}]
     *                               [--severity]
     *                               [--status {Disabled, Enabled}]
     *                               [--suppression-end-date]
     *                               [--suppression-end-time]
     *                               [--suppression-recurrence]
     *                               [--suppression-recurrence-type {Always, Daily, Monthly, Once, Weekly}]
     *                               [--suppression-start-date]
     *                               [--suppression-start-time]
     *                               [--tags]
     *                               [--target-resource-type]
     */
    ext_alertsmanagement_az_monitor_action_rule_create(): void {
    }

    /**
     * Delete an action rule.
     *
     * Syntax: 
     *
     * az monitor action-rule delete --name
     *                               --resource-group
     */
    ext_alertsmanagement_az_monitor_action_rule_delete(): void {
    }

    /**
     * List all action rules of the subscription, created in given resource group and given input filters.
     *
     * Syntax: 
     *
     * az monitor action-rule list [--action-group]
     *                             [--alert-rule-id]
     *                             [--description]
     *                             [--impacted-scope]
     *                             [--monitor-service]
     *                             [--name]
     *                             [--resource-group]
     *                             [--severity]
     *                             [--target-resource]
     *                             [--target-resource-group]
     *                             [--target-resource-type]
     */
    ext_alertsmanagement_az_monitor_action_rule_list(): void {
    }

    /**
     * Get an action rule.
     *
     * Syntax: 
     *
     * az monitor action-rule show --name
     *                             --resource-group
     */
    ext_alertsmanagement_az_monitor_action_rule_show(): void {
    }

    /**
     * Update an action rule.
     *
     * Syntax: 
     *
     * az monitor action-rule update --name
     *                               --resource-group
     *                               [--add]
     *                               [--force-string]
     *                               [--location]
     *                               [--remove]
     *                               [--set]
     *                               [--status {Disabled, Enabled}]
     *                               [--tags]
     */
    ext_alertsmanagement_az_monitor_action_rule_update(): void {
    }
}

/** Manage the Azure Monitor Service. */
class ext_alertsmanagement_az_monitor {
}

/** Manage Azure CLI Aliases. */
class ext_alias_az_alias {
    /**
     * Create an alias.
     *
     * Syntax: 
     *
     * az alias create --command
     *                 --name
     */
    ext_alias_az_alias_create(): void {
    }

    /**
     * Export all registered aliases to a given path, as an INI configuration file. If no export path is specified, the alias configuration file is exported to the current working directory.
     *
     * Syntax: 
     *
     * az alias export [--exclude]
     *                 [--path]
     */
    ext_alias_az_alias_export(): void {
    }

    /**
     * Import aliases from an INI configuration file or an URL.
     *
     * Syntax: 
     *
     * az alias import --source
     */
    ext_alias_az_alias_import(): void {
    }

    /**
     * List the registered aliases.
     *
     * Syntax: 
     *
     * az alias list
     */
    ext_alias_az_alias_list(): void {
    }

    /**
     * Remove one or more aliases. Aliases to be removed are space-delimited.
     *
     * Syntax: 
     *
     * az alias remove --name
     */
    ext_alias_az_alias_remove(): void {
    }

    /**
     * Remove all registered aliases.
     *
     * Syntax: 
     *
     * az alias remove-all [--yes]
     */
    ext_alias_az_alias_remove_all(): void {
    }
}

/** */
class ext_alias_az {
}

/** */
class ext_application-insights_az {
}

/** Operations on API keys associated with an Application Insights component. */
class ext_application-insights_az_monitor_app_insights_api_key {
    /**
     * Create a new API key for use with an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights api-key create --api-key
     *                                        --app
     *                                        --resource-group
     *                                        [--read-properties]
     *                                        [--write-properties]
     */
    ext_application-insights_az_monitor_app_insights_api_key_create(): void {
    }

    /**
     * Delete an API key from an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights api-key delete --api-key
     *                                        --app
     *                                        --resource-group
     */
    ext_application-insights_az_monitor_app_insights_api_key_delete(): void {
    }

    /**
     * Get all keys or a specific API key associated with an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights api-key show --app
     *                                      --resource-group
     *                                      [--api-key]
     */
    ext_application-insights_az_monitor_app_insights_api_key_show(): void {
    }
}

/** Manage an Application Insights component billing features. */
class ext_application-insights_az_monitor_app_insights_component_billing {
    /**
     * Show the billing features of an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component billing show --app
     *                                                --resource-group
     */
    ext_application-insights_az_monitor_app_insights_component_billing_show(): void {
    }

    /**
     * Update the billing features of an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component billing update --app
     *                                                  --resource-group
     *                                                  [--cap]
     *                                                  [--stop {false, true}]
     */
    ext_application-insights_az_monitor_app_insights_component_billing_update(): void {
    }
}

/** Manage linked storage account for an Application Insights component. */
class ext_application-insights_az_monitor_app_insights_component_linked_storage {
    /**
     * Link a storage account with an Application Insights component.
     *
     * Syntax: 
     *
     * az monitor app-insights component linked-storage link --app
     *                                                       --resource-group
     *                                                       --storage-account
     */
    ext_application-insights_az_monitor_app_insights_component_linked_storage_link(): void {
    }

    /**
     * Show the details of linked storage account for an Application Insights component.
     *
     * Syntax: 
     *
     * az monitor app-insights component linked-storage show --app
     *                                                       --resource-group
     */
    ext_application-insights_az_monitor_app_insights_component_linked_storage_show(): void {
    }

    /**
     * Unlink a storage account with an Application Insights component.
     *
     * Syntax: 
     *
     * az monitor app-insights component linked-storage unlink --app
     *                                                         --resource-group
     */
    ext_application-insights_az_monitor_app_insights_component_linked_storage_unlink(): void {
    }

    /**
     * Update the linked storage account for an Application Insights component.
     *
     * Syntax: 
     *
     * az monitor app-insights component linked-storage update --app
     *                                                         --resource-group
     *                                                         --storage-account
     */
    ext_application-insights_az_monitor_app_insights_component_linked_storage_update(): void {
    }
}

/** Manage an Application Insights component or its subcomponents. */
class ext_application-insights_az_monitor_app_insights_component {
    /**
     * Create a new Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component create --app
     *                                          --location
     *                                          --resource-group
     *                                          [--application-type]
     *                                          [--ingestion-access {Disabled, Enabled}]
     *                                          [--kind]
     *                                          [--query-access {Disabled, Enabled}]
     *                                          [--retention-time]
     *                                          [--tags]
     *                                          [--workspace]
     */
    ext_application-insights_az_monitor_app_insights_component_create(): void {
    }

    /**
     * Delete a new Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component delete --app
     *                                          --resource-group
     */
    ext_application-insights_az_monitor_app_insights_component_delete(): void {
    }

    /**
     * Get an Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component show [--app]
     *                                        [--resource-group]
     */
    ext_application-insights_az_monitor_app_insights_component_show(): void {
    }

    /**
     * Update properties on an existing Application Insights resource. The primary value which can be updated is kind, which customizes the UI experience.
     *
     * Syntax: 
     *
     * az monitor app-insights component update --app
     *                                          --resource-group
     *                                          [--ingestion-access {Disabled, Enabled}]
     *                                          [--kind]
     *                                          [--query-access {Disabled, Enabled}]
     *                                          [--retention-time]
     *                                          [--workspace]
     */
    ext_application-insights_az_monitor_app_insights_component_update(): void {
    }

    /**
     * Update tags on an existing Application Insights resource.
     *
     * Syntax: 
     *
     * az monitor app-insights component update-tags --app
     *                                               --resource-group
     *                                               --tags
     */
    ext_application-insights_az_monitor_app_insights_component_update_tags(): void {
    }
}

/** Retrieve events from an application. */
class ext_application-insights_az_monitor_app_insights_events {
    /**
     * List events by type or view a single event from an application, specified by type and ID.
     *
     * Syntax: 
     *
     * az monitor app-insights events show --app
     *                                     --type
     *                                     [--end-time]
     *                                     [--event]
     *                                     [--offset]
     *                                     [--resource-group]
     *                                     [--start-time]
     */
    ext_application-insights_az_monitor_app_insights_events_show(): void {
    }
}

/** Retrieve metrics from an application. */
class ext_application-insights_az_monitor_app_insights_metrics {
    /**
     * Get the metadata for metrics on a particular application.
     *
     * Syntax: 
     *
     * az monitor app-insights metrics get-metadata --app
     *                                              [--resource-group]
     */
    ext_application-insights_az_monitor_app_insights_metrics_get_metadata(): void {
    }

    /**
     * View the value of a single metric.
     *
     * Syntax: 
     *
     * az monitor app-insights metrics show --app
     *                                      --metrics
     *                                      [--aggregation]
     *                                      [--end-time]
     *                                      [--filter]
     *                                      [--interval]
     *                                      [--offset]
     *                                      [--orderby]
     *                                      [--resource-group]
     *                                      [--segment]
     *                                      [--start-time]
     *                                      [--top]
     */
    ext_application-insights_az_monitor_app_insights_metrics_show(): void {
    }
}

/** Commands for querying data in Application Insights applications. */
class ext_application-insights_az_monitor_app_insights {
    /**
     * Execute a query over data in your application.
     *
     * Syntax: 
     *
     * az monitor app-insights query --analytics-query
     *                               --apps
     *                               [--end-time]
     *                               [--offset]
     *                               [--resource-group]
     *                               [--start-time]
     */
    ext_application-insights_az_monitor_app_insights_query(): void {
    }
}

/** Manage the Azure Monitor Service. */
class ext_application-insights_az_monitor {
}

/** Manage the policies. */
class ext_attestation_az_attestation_policy {
    /**
     * Resets the attestation policy for the specified tenant and reverts to the default policy.
     *
     * Syntax: 
     *
     * az attestation policy reset --policy-jws
     *                             --tee {CyResComponent, OpenEnclave, SgxEnclave, VSMEnclave}
     *                             [--attestation-base-url]
     *                             [--name]
     *                             [--resource-group]
     */
    ext_attestation_az_attestation_policy_reset(): void {
    }

    /**
     * Sets the policy for a given kind of TEE.
     *
     * Syntax: 
     *
     * az attestation policy set --new-attestation-policy
     *                           --tee {CyResComponent, OpenEnclave, SgxEnclave, VSMEnclave}
     *                           [--attestation-base-url]
     *                           [--name]
     *                           [--resource-group]
     */
    ext_attestation_az_attestation_policy_set(): void {
    }

    /**
     * Retrieves the current policy for a given kind of TEE.
     *
     * Syntax: 
     *
     * az attestation policy show --tee {CyResComponent, OpenEnclave, SgxEnclave, VSMEnclave}
     *                            [--attestation-base-url]
     *                            [--name]
     *                            [--resource-group]
     */
    ext_attestation_az_attestation_policy_show(): void {
    }
}

/** Manage the trusted policy signers. */
class ext_attestation_az_attestation_signer {
    /**
     * Adds a new attestation policy certificate to the set of policy management certificates.
     *
     * Syntax: 
     *
     * az attestation signer add --signer
     *                           [--attestation-base-url]
     *                           [--name]
     *                           [--resource-group]
     */
    ext_attestation_az_attestation_signer_add(): void {
    }

    /**
     * Retrieves the set of certificates used to express policy for the current tenant.
     *
     * Syntax: 
     *
     * az attestation signer list [--attestation-base-url]
     *                            [--name]
     *                            [--resource-group]
     */
    ext_attestation_az_attestation_signer_list(): void {
    }

    /**
     * Removes the specified policy management certificate. Note that the final policy management certificate cannot be removed.
     *
     * Syntax: 
     *
     * az attestation signer remove --signer
     *                              [--attestation-base-url]
     *                              [--name]
     *                              [--resource-group]
     */
    ext_attestation_az_attestation_signer_remove(): void {
    }
}

/** Attestation. */
class ext_attestation_az_attestation {
    /**
     * Creates or updates an attestation.
     *
     * Syntax: 
     *
     * az attestation create --name
     *                       --resource-group
     *                       [--attestation-policy]
     *                       [--certs-input-path]
     *                       [--location]
     *                       [--tags]
     */
    ext_attestation_az_attestation_create(): void {
    }

    /**
     * Deletes an attestation.
     *
     * Syntax: 
     *
     * az attestation delete --name
     *                       --resource-group
     *                       [--yes]
     */
    ext_attestation_az_attestation_delete(): void {
    }

    /**
     * Returns a list of attestation in a subscription or resource group.
     *
     * Syntax: 
     *
     * az attestation list [--resource-group]
     */
    ext_attestation_az_attestation_list(): void {
    }

    /**
     * Gets the status of an attestation.
     *
     * Syntax: 
     *
     * az attestation show --name
     *                     --resource-group
     */
    ext_attestation_az_attestation_show(): void {
    }
}

/** */
class ext_attestation_az {
}

/** Manage Batch input files. */
class ext_azure-batch-cli-extensions_az_batch_file {
    /**
     * Download a specified file or directory of files to the specified storage path.
     *
     * Syntax: 
     *
     * az batch file download --file-group
     *                        --local-path
     *                        [--account-endpoint]
     *                        [--account-key]
     *                        [--account-name]
     *                        [--overwrite]
     *                        [--remote-path]
     *                        [--resource-group]
     */
    ext_azure-batch-cli-extensions_az_batch_file_download(): void {
    }

    /**
     * Upload a specified file or directory of files to the specified storage path.
     *
     * Syntax: 
     *
     * az batch file upload --file-group
     *                      --local-path
     *                      [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--flatten]
     *                      [--remote-path]
     *                      [--resource-group]
     */
    ext_azure-batch-cli-extensions_az_batch_file_upload(): void {
    }
}

/** Manage Batch jobs. */
class ext_azure-batch-cli-extensions_az_batch_job {
    /**
     * Add a job and associated task(s) to a Batch account.
     *
     * Syntax: 
     *
     * az batch job create [--account-endpoint]
     *                     [--account-key]
     *                     [--account-name]
     *                     [--id]
     *                     [--job-manager-task-command-line]
     *                     [--job-manager-task-environment-settings]
     *                     [--job-manager-task-id]
     *                     [--job-manager-task-resource-files]
     *                     [--job-max-task-retry-count]
     *                     [--job-max-wall-clock-time]
     *                     [--json-file]
     *                     [--metadata]
     *                     [--parameters]
     *                     [--pool-id]
     *                     [--priority]
     *                     [--resource-group]
     *                     [--template]
     *                     [--uses-task-dependencies]
     */
    ext_azure-batch-cli-extensions_az_batch_job_create(): void {
    }
}

/** Manage Batch pools. */
class ext_azure-batch-cli-extensions_az_batch_pool {
    /**
     * Create a Batch pool in an account. When creating a pool, choose arguments from either Cloud Services Configuration or Virtual Machine Configuration.
     *
     * Syntax: 
     *
     * az batch pool create [--account-endpoint]
     *                      [--account-key]
     *                      [--account-name]
     *                      [--application-licenses]
     *                      [--application-package-references]
     *                      [--auto-scale-formula]
     *                      [--certificate-references]
     *                      [--disk-encryption-targets]
     *                      [--enable-inter-node-communication]
     *                      [--id]
     *                      [--image]
     *                      [--json-file]
     *                      [--metadata]
     *                      [--node-agent-sku-id]
     *                      [--os-family]
     *                      [--parameters]
     *                      [--resize-timeout]
     *                      [--resource-group]
     *                      [--start-task-command-line]
     *                      [--start-task-resource-files]
     *                      [--start-task-wait-for-success]
     *                      [--target-dedicated-nodes]
     *                      [--target-low-priority-nodes]
     *                      [--template]
     *                      [--vm-size]
     */
    ext_azure-batch-cli-extensions_az_batch_pool_create(): void {
    }
}

/** Manage Azure Batch. */
class ext_azure-batch-cli-extensions_az_batch {
}

/** */
class ext_azure-batch-cli-extensions_az {
}

/** */
class ext_azure-cli-iot-ext_az {
}

/** Manage Azure IoT Central applications. */
class ext_azure-cli-iot-ext_az_iot_central_app {
    /**
     * Monitor device telemetry & messages sent to the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iot central app monitor-events --app-id
     *                                   [--central-api-uri]
     *                                   [--cg]
     *                                   [--device-id]
     *                                   [--enqueued-time]
     *                                   [--properties {all, anno, app, sys}]
     *                                   [--repair {false, true}]
     *                                   [--timeout]
     *                                   [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_central_app_monitor_events(): void {
    }
}

/** Manage IoT Central device twins. */
class ext_azure-cli-iot-ext_az_iot_central_device_twin {
    /**
     * Get the device twin from IoT Hub.
     *
     * Syntax: 
     *
     * az iot central device-twin show --app-id
     *                                 --device-id
     *                                 [--central-api-uri]
     */
    ext_azure-cli-iot-ext_az_iot_central_device_twin_show(): void {
    }
}

/** Manage Azure IoT Central assets. */
class ext_azure-cli-iot-ext_az_iot_central {
}

/** Cloud-to-device messaging commands. */
class ext_azure-cli-iot-ext_az_iot_device_c2d_message {
    /**
     * Abandon a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message abandon --device-id
     *                                   --etag
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_c2d_message_abandon(): void {
    }

    /**
     * Complete a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message complete --device-id
     *                                    --etag
     *                                    [--hub-name]
     *                                    [--login]
     *                                    [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_c2d_message_complete(): void {
    }

    /**
     * Receive a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message receive --device-id
     *                                   [--hub-name]
     *                                   [--lock-timeout]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_c2d_message_receive(): void {
    }

    /**
     * Reject or deadletter a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message reject --device-id
     *                                  --etag
     *                                  [--hub-name]
     *                                  [--login]
     *                                  [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_c2d_message_reject(): void {
    }

    /**
     * Send a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message send --device-id
     *                                [--ack {full, negative, positive}]
     *                                [--ce]
     *                                [--cid]
     *                                [--content-type]
     *                                [--da]
     *                                [--expiry]
     *                                [--hub-name]
     *                                [--login]
     *                                [--message-id]
     *                                [--properties]
     *                                [--repair {false, true}]
     *                                [--resource-group]
     *                                [--uid]
     *                                [--wait {false, true}]
     *                                [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_device_c2d_message_send(): void {
    }
}

/** Leverage device-to-cloud and cloud-to-device messaging capabilities. */
class ext_azure-cli-iot-ext_az_iot_device {
    /**
     * Send an mqtt device-to-cloud message. The command supports sending messages with application and system properties.
     *
     * Syntax: 
     *
     * az iot device send-d2c-message --device-id
     *                                [--da]
     *                                [--hub-name]
     *                                [--login]
     *                                [--mc]
     *                                [--properties]
     *                                [--qos {0, 1}]
     *                                [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_send_d2c_message(): void {
    }

    /**
     * Simulate a device in an Azure IoT Hub.
     *
     * While the device simulation is running, the device will automatically receive
     * and acknowledge cloud-to-device (c2d) messages. For mqtt simulation, all c2d messages will
     * be acknowledged with completion. For http simulation c2d acknowledgement is based on user
     * selection which can be complete, reject or abandon.
     *
     * Note: The command by default will set content-type to application/json and content-encoding
     * to utf-8. This can be overriden.
     *
     * Syntax: 
     *
     * az iot device simulate --device-id
     *                        [--da]
     *                        [--hub-name]
     *                        [--login]
     *                        [--mc]
     *                        [--mi]
     *                        [--properties]
     *                        [--proto {http, mqtt}]
     *                        [--receive-settle {abandon, complete, reject}]
     *                        [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_simulate(): void {
    }

    /**
     * Upload a local file as a device to a pre-configured blob storage container.
     *
     * Syntax: 
     *
     * az iot device upload-file --content-type
     *                           --device-id
     *                           --file-path
     *                           [--hub-name]
     *                           [--login]
     *                           [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_device_upload_file(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service. */
class ext_azure-cli-iot-ext_az_iot_dps_enrollment_group {
    /**
     * Create an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group create --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     *                                    [--allocation-policy {geolatency, hashed, static}]
     *                                    [--ca-name]
     *                                    [--certificate-path]
     *                                    [--hn]
     *                                    [--ih]
     *                                    [--initial-twin-properties]
     *                                    [--initial-twin-tags]
     *                                    [--pk]
     *                                    [--provisioning-status {disabled, enabled}]
     *                                    [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                                    [--scn]
     *                                    [--scp]
     *                                    [--secondary-key]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_group_create(): void {
    }

    /**
     * Delete an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group delete --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_group_delete(): void {
    }

    /**
     * List enrollments groups in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group list --dps-name
     *                                  --resource-group
     *                                  [--top]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_group_list(): void {
    }

    /**
     * Get the details of an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group show --dps-name
     *                                  --enrollment-id
     *                                  --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_group_show(): void {
    }

    /**
     * Update an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group update --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     *                                    [--allocation-policy {geolatency, hashed, static}]
     *                                    [--ca-name]
     *                                    [--certificate-path]
     *                                    [--etag]
     *                                    [--hn]
     *                                    [--ih]
     *                                    [--initial-twin-properties]
     *                                    [--initial-twin-tags]
     *                                    [--pk]
     *                                    [--provisioning-status {disabled, enabled}]
     *                                    [--rc {false, true}]
     *                                    [--remove-secondary-certificate {false, true}]
     *                                    [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                                    [--scn]
     *                                    [--scp]
     *                                    [--secondary-key]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_group_update(): void {
    }
}

/** Manage enrollments in an Azure IoT Hub Device Provisioning Service. */
class ext_azure-cli-iot-ext_az_iot_dps_enrollment {
    /**
     * Create a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment create --at {symmetricKey, tpm, x509}
     *                              --dps-name
     *                              --enrollment-id
     *                              --resource-group
     *                              [--allocation-policy {geolatency, hashed, static}]
     *                              [--certificate-path]
     *                              [--device-id]
     *                              [--ek]
     *                              [--hn]
     *                              [--ih]
     *                              [--initial-twin-properties]
     *                              [--initial-twin-tags]
     *                              [--pk]
     *                              [--provisioning-status {disabled, enabled}]
     *                              [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                              [--scp]
     *                              [--secondary-key]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_create(): void {
    }

    /**
     * Delete a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment delete --dps-name
     *                              --enrollment-id
     *                              --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_delete(): void {
    }

    /**
     * List device enrollments in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment list --dps-name
     *                            --resource-group
     *                            [--top]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_list(): void {
    }

    /**
     * Get device enrollment details in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment show --dps-name
     *                            --enrollment-id
     *                            --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_show(): void {
    }

    /**
     * Update a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment update --dps-name
     *                              --enrollment-id
     *                              --resource-group
     *                              [--allocation-policy {geolatency, hashed, static}]
     *                              [--certificate-path]
     *                              [--device-id]
     *                              [--ek]
     *                              [--etag]
     *                              [--hn]
     *                              [--ih]
     *                              [--initial-twin-properties]
     *                              [--initial-twin-tags]
     *                              [--pk]
     *                              [--provisioning-status {disabled, enabled}]
     *                              [--rc {false, true}]
     *                              [--remove-secondary-certificate {false, true}]
     *                              [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                              [--scp]
     *                              [--secondary-key]
     */
    ext_azure-cli-iot-ext_az_iot_dps_enrollment_update(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service registrations. */
class ext_azure-cli-iot-ext_az_iot_dps_registration {
    /**
     * Delete a device registration in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps registration delete --dps-name
     *                                --registration-id
     *                                --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_registration_delete(): void {
    }

    /**
     * List device registration state in an Azure IoT Hub Device Provisioning Service enrollment group.
     *
     * Syntax: 
     *
     * az iot dps registration list --dps-name
     *                              --enrollment-id
     *                              --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_registration_list(): void {
    }

    /**
     * Get the device registration state in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps registration show --dps-name
     *                              --registration-id
     *                              --resource-group
     */
    ext_azure-cli-iot-ext_az_iot_dps_registration_show(): void {
    }
}

/** Manage entities in an Azure IoT Hub Device Provisioning Service. Augmented with the IoT extension. */
class ext_azure-cli-iot-ext_az_iot_dps {
}

/** Manage digital twin of an IoT Plug and Play device. */
class ext_azure-cli-iot-ext_az_iot_dt {
    /**
     * Executes a command on an IoT Plug and Play device.
     *
     * Syntax: 
     *
     * az iot dt invoke-command --cn
     *                          --device-id
     *                          --interface
     *                          [--command-payload]
     *                          [--hub-name]
     *                          [--login]
     *                          [--resource-group]
     *                          [--timeout]
     */
    ext_azure-cli-iot-ext_az_iot_dt_invoke_command(): void {
    }

    /**
     * List commands of an IoT Plug and Play devices interface(s).
     *
     * Syntax: 
     *
     * az iot dt list-commands --device-id
     *                         --source {device, private, public}
     *                         [--endpoint]
     *                         [--hub-name]
     *                         [--interface]
     *                         [--login]
     *                         [--repo-id]
     *                         [--repo-login]
     *                         [--resource-group]
     *                         [--schema]
     */
    ext_azure-cli-iot-ext_az_iot_dt_list_commands(): void {
    }

    /**
     * List interfaces of a target IoT Plug and Play device.
     *
     * Syntax: 
     *
     * az iot dt list-interfaces --device-id
     *                           [--hub-name]
     *                           [--login]
     *                           [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_dt_list_interfaces(): void {
    }

    /**
     * List properties of a target IoT Plug and Play device interface(s).
     *
     * Syntax: 
     *
     * az iot dt list-properties --device-id
     *                           --source {device, private, public}
     *                           [--endpoint]
     *                           [--hub-name]
     *                           [--interface]
     *                           [--login]
     *                           [--repo-id]
     *                           [--repo-login]
     *                           [--resource-group]
     *                           [--schema]
     */
    ext_azure-cli-iot-ext_az_iot_dt_list_properties(): void {
    }

    /**
     * Monitor Digital Twin events.
     *
     * Syntax: 
     *
     * az iot dt monitor-events [--cg]
     *                          [--content-type]
     *                          [--device-id]
     *                          [--device-query]
     *                          [--enqueued-time]
     *                          [--hub-name]
     *                          [--interface]
     *                          [--login]
     *                          [--properties {all, anno, app, sys}]
     *                          [--repair {false, true}]
     *                          [--resource-group]
     *                          [--timeout]
     *                          [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_dt_monitor_events(): void {
    }

    /**
     * Update an IoT Plug and Play device interfaces writable property.
     *
     * Syntax: 
     *
     * az iot dt update-property --device-id
     *                           --interface-payload
     *                           [--hub-name]
     *                           [--login]
     *                           [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_dt_update_property(): void {
    }
}

/** Manage IoT Edge deployments at scale. */
class ext_azure-cli-iot-ext_az_iot_edge_deployment {
    /**
     * Create an IoT Edge deployment in a target IoT Hub.
     *
     * Syntax: 
     *
     * az iot edge deployment create --config-id
     *                               --content
     *                               [--hub-name]
     *                               [--lab]
     *                               [--layered {false, true}]
     *                               [--login]
     *                               [--metrics]
     *                               [--pri]
     *                               [--resource-group]
     *                               [--target-condition]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_create(): void {
    }

    /**
     * Delete an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment delete --config-id
     *                               [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_delete(): void {
    }

    /**
     * List IoT Edge deployments in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot edge deployment list [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     *                             [--top]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_list(): void {
    }

    /**
     * Get the details of an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment show --config-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_show(): void {
    }

    /**
     * Evaluate a target system metric defined in an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment show-metric --config-id
     *                                    --metric-id
     *                                    [--hub-name]
     *                                    [--login]
     *                                    [--metric-type {system, user}]
     *                                    [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_show_metric(): void {
    }

    /**
     * Update specified properties of an IoT Edge deployment.
     *
     * Use --set followed by property assignments for updating a deployment.
     *
     * Note: IoT Edge deployment content is immutable. Deployment properties that can be
     * updated are 'labels', 'metrics', 'priority' and 'targetCondition'.
     *
     * Syntax: 
     *
     * az iot edge deployment update --config-id
     *                               [--add]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     */
    ext_azure-cli-iot-ext_az_iot_edge_deployment_update(): void {
    }
}

/** Manage IoT solutions on the Edge. */
class ext_azure-cli-iot-ext_az_iot_edge {
    /**
     * Set edge modules on a single device.
     *
     * Syntax: 
     *
     * az iot edge set-modules --content
     *                         --device-id
     *                         [--hub-name]
     *                         [--login]
     *                         [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_edge_set_modules(): void {
    }
}

/** Manage IoT automatic device management configuration at scale. */
class ext_azure-cli-iot-ext_az_iot_hub_configuration {
    /**
     * Create an IoT automatic device management configuration in a target IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub configuration create --config-id
     *                                 --content
     *                                 [--hub-name]
     *                                 [--lab]
     *                                 [--login]
     *                                 [--metrics]
     *                                 [--pri]
     *                                 [--resource-group]
     *                                 [--target-condition]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_create(): void {
    }

    /**
     * Delete an IoT device configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration delete --config-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_delete(): void {
    }

    /**
     * List IoT automatic device management configurations in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub configuration list [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     *                               [--top]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_list(): void {
    }

    /**
     * Get the details of an IoT automatic device management configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration show --config-id
     *                               [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_show(): void {
    }

    /**
     * Evaluate a target user or system metric defined in an IoT device configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration show-metric --config-id
     *                                      --metric-id
     *                                      [--hub-name]
     *                                      [--login]
     *                                      [--metric-type {system, user}]
     *                                      [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_show_metric(): void {
    }

    /**
     * Update specified properties of an IoT automatic device management configuration.
     *
     * Use --set followed by property assignments for updating a configuration.
     *
     * Note: Configuration content is immutable. Configuration properties that can be
     * updated are 'labels', 'metrics', 'priority' and 'targetCondition'.
     *
     * Syntax: 
     *
     * az iot hub configuration update --config-id
     *                                 [--add]
     *                                 [--force-string]
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     */
    ext_azure-cli-iot-ext_az_iot_hub_configuration_update(): void {
    }
}

/** Manage IoT devices. */
class ext_azure-cli-iot-ext_az_iot_hub_device_identity {
    /**
     * Add specified comma-separated list of non edge device ids as children of specified edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity add-children --child-list
     *                                         --device-id
     *                                         [--force]
     *                                         [--hub-name]
     *                                         [--login]
     *                                         [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_add_children(): void {
    }

    /**
     * Create a device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub device-identity create --device-id
     *                                   [--add-children]
     *                                   [--am {shared_private_key, x509_ca, x509_thumbprint}]
     *                                   [--edge-enabled {false, true}]
     *                                   [--force]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--od]
     *                                   [--pd]
     *                                   [--primary-thumbprint]
     *                                   [--resource-group]
     *                                   [--secondary-thumbprint]
     *                                   [--sta {disabled, enabled}]
     *                                   [--star]
     *                                   [--valid-days]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_create(): void {
    }

    /**
     * Delete an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity delete --device-id
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_delete(): void {
    }

    /**
     * Export all device identities from an IoT Hub to an Azure Storage blob container.
     *
     * Syntax: 
     *
     * az iot hub device-identity export --bcu
     *                                   --hub-name
     *                                   [--ik {false, true}]
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_export(): void {
    }

    /**
     * Get the parent device of the specified device.
     *
     * Syntax: 
     *
     * az iot hub device-identity get-parent --device-id
     *                                       [--hub-name]
     *                                       [--login]
     *                                       [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_get_parent(): void {
    }

    /**
     * Import device identities to an IoT Hub from a blob.
     *
     * Syntax: 
     *
     * az iot hub device-identity import --hub-name
     *                                   --ibcu
     *                                   --obcu
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_import(): void {
    }

    /**
     * List devices in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub device-identity list [--edge-enabled {false, true}]
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     *                                 [--top]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_list(): void {
    }

    /**
     * Print comma-separated list of assigned child devices.
     *
     * Syntax: 
     *
     * az iot hub device-identity list-children --device-id
     *                                          [--hub-name]
     *                                          [--login]
     *                                          [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_list_children(): void {
    }

    /**
     * Remove non edge devices as children from specified edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity remove-children --device-id
     *                                            [--child-list]
     *                                            [--hub-name]
     *                                            [--login]
     *                                            [--remove-all]
     *                                            [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_remove_children(): void {
    }

    /**
     * Set the parent device of the specified non-edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity set-parent --device-id
     *                                       --parent-device-id
     *                                       [--force]
     *                                       [--hub-name]
     *                                       [--login]
     *                                       [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_set_parent(): void {
    }

    /**
     * Get the details of an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity show --device-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_show(): void {
    }

    /**
     * Show a given IoT Hub device connection string.
     *
     * Syntax: 
     *
     * az iot hub device-identity show-connection-string --device-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_show_connection_string(): void {
    }

    /**
     * Update an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity update --device-id
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--set]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_identity_update(): void {
    }
}

/** Manage IoT device twin configuration. */
class ext_azure-cli-iot-ext_az_iot_hub_device_twin {
    /**
     * Replace device twin definition with target json.
     *
     * Syntax: 
     *
     * az iot hub device-twin replace --device-id
     *                                --json
     *                                [--hub-name]
     *                                [--login]
     *                                [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_twin_replace(): void {
    }

    /**
     * Get a device twin definition.
     *
     * Syntax: 
     *
     * az iot hub device-twin show --device-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_twin_show(): void {
    }

    /**
     * Update device twin definition.
     *
     * Syntax: 
     *
     * az iot hub device-twin update --device-id
     *                               [--add]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     */
    ext_azure-cli-iot-ext_az_iot_hub_device_twin_update(): void {
    }
}

/** Manage distributed settings per-device. */
class ext_azure-cli-iot-ext_az_iot_hub_distributed_tracing {
    /**
     * Get the distributed tracing settings for a device.
     *
     * Syntax: 
     *
     * az iot hub distributed-tracing show --device-id
     *                                     --hub-name
     *                                     [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_distributed_tracing_show(): void {
    }

    /**
     * Update the distributed tracing options for a device.
     *
     * Syntax: 
     *
     * az iot hub distributed-tracing update --device-id
     *                                       --hub-name
     *                                       --sampling-mode {off, on}
     *                                       --sampling-rate
     *                                       [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_distributed_tracing_update(): void {
    }
}

/** Manage IoT Hub jobs (v2). */
class ext_azure-cli-iot-ext_az_iot_hub_job {
    /**
     * Cancel an IoT Hub job.
     *
     * Syntax: 
     *
     * az iot hub job cancel --job-id
     *                       [--hub-name]
     *                       [--login]
     *                       [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_job_cancel(): void {
    }

    /**
     * Create and schedule an IoT Hub job for execution.
     *
     * Syntax: 
     *
     * az iot hub job create --job-id
     *                       --job-type {scheduleDeviceMethod, scheduleUpdateTwin}
     *                       [--duration]
     *                       [--hub-name]
     *                       [--interval]
     *                       [--login]
     *                       [--mct]
     *                       [--method-name]
     *                       [--method-payload]
     *                       [--method-response-timeout]
     *                       [--patch]
     *                       [--query-condition]
     *                       [--resource-group]
     *                       [--start]
     *                       [--ttl]
     *                       [--wait {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_hub_job_create(): void {
    }

    /**
     * List the historical jobs of an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub job list [--hub-name]
     *                     [--job-status {cancelled, completed, enqueued, failed, queued, running, scheduled, unknown}]
     *                     [--job-type {export, import, scheduleDeviceMethod, scheduleUpdateTwin}]
     *                     [--login]
     *                     [--resource-group]
     *                     [--top]
     */
    ext_azure-cli-iot-ext_az_iot_hub_job_list(): void {
    }

    /**
     * Show details of an existing IoT Hub job.
     *
     * Syntax: 
     *
     * az iot hub job show --job-id
     *                     [--hub-name]
     *                     [--login]
     *                     [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_job_show(): void {
    }
}

/** Manage IoT device modules. */
class ext_azure-cli-iot-ext_az_iot_hub_module_identity {
    /**
     * Create a module on a target IoT device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity create --device-id
     *                                   --module-id
     *                                   [--am {shared_private_key, x509_ca, x509_thumbprint}]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--od]
     *                                   [--primary-thumbprint]
     *                                   [--resource-group]
     *                                   [--secondary-thumbprint]
     *                                   [--valid-days]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_create(): void {
    }

    /**
     * Delete a device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity delete --device-id
     *                                   --module-id
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_delete(): void {
    }

    /**
     * List modules located on an IoT device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity list --device-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     *                                 [--top]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_list(): void {
    }

    /**
     * Get the details of an IoT device module in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity show --device-id
     *                                 --module-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_show(): void {
    }

    /**
     * Show a target IoT device module connection string.
     *
     * Syntax: 
     *
     * az iot hub module-identity show-connection-string --device-id
     *                                                   --module-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_show_connection_string(): void {
    }

    /**
     * Update an IoT Hub device module.
     *
     * Syntax: 
     *
     * az iot hub module-identity update --device-id
     *                                   --module-id
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--set]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_identity_update(): void {
    }
}

/** Manage IoT device module twin configuration. */
class ext_azure-cli-iot-ext_az_iot_hub_module_twin {
    /**
     * Replace a module twin definition with target json.
     *
     * Syntax: 
     *
     * az iot hub module-twin replace --device-id
     *                                --json
     *                                --module-id
     *                                [--hub-name]
     *                                [--login]
     *                                [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_twin_replace(): void {
    }

    /**
     * Show a module twin definition.
     *
     * Syntax: 
     *
     * az iot hub module-twin show --device-id
     *                             --module-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_twin_show(): void {
    }

    /**
     * Update module twin definition.
     *
     * Syntax: 
     *
     * az iot hub module-twin update --device-id
     *                               --module-id
     *                               [--add]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     */
    ext_azure-cli-iot-ext_az_iot_hub_module_twin_update(): void {
    }
}

/** Manage entities in an Azure IoT Hub. */
class ext_azure-cli-iot-ext_az_iot_hub {
    /**
     * Generate a SAS token for a target IoT Hub, device or module.
     *
     * Syntax: 
     *
     * az iot hub generate-sas-token [--device-id]
     *                               [--du]
     *                               [--hub-name]
     *                               [--key-type {primary, secondary}]
     *                               [--login]
     *                               [--module-id]
     *                               [--pn]
     *                               [--resource-group]
     */
    ext_azure-cli-iot-ext_az_iot_hub_generate_sas_token(): void {
    }

    /**
     * Invoke a device method.
     *
     * Syntax: 
     *
     * az iot hub invoke-device-method --device-id
     *                                 --method-name
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--method-payload]
     *                                 [--resource-group]
     *                                 [--timeout]
     */
    ext_azure-cli-iot-ext_az_iot_hub_invoke_device_method(): void {
    }

    /**
     * Invoke an Edge module method.
     *
     * Syntax: 
     *
     * az iot hub invoke-module-method --device-id
     *                                 --method-name
     *                                 --module-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--method-payload]
     *                                 [--resource-group]
     *                                 [--timeout]
     */
    ext_azure-cli-iot-ext_az_iot_hub_invoke_module_method(): void {
    }

    /**
     * Monitor device telemetry & messages sent to an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub monitor-events [--cg]
     *                           [--content-type]
     *                           [--device-id]
     *                           [--device-query]
     *                           [--enqueued-time]
     *                           [--hub-name]
     *                           [--login]
     *                           [--properties {all, anno, app, sys}]
     *                           [--repair {false, true}]
     *                           [--resource-group]
     *                           [--timeout]
     *                           [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_hub_monitor_events(): void {
    }

    /**
     * Monitor feedback sent by devices to acknowledge cloud-to-device (C2D) messages.
     *
     * Syntax: 
     *
     * az iot hub monitor-feedback [--device-id]
     *                             [--hub-name]
     *                             [--login]
     *                             [--repair {false, true}]
     *                             [--resource-group]
     *                             [--wait-on-msg]
     *                             [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iot_hub_monitor_feedback(): void {
    }

    /**
     * Query an IoT Hub using a powerful SQL-like language.
     *
     * Syntax: 
     *
     * az iot hub query --query-command
     *                  [--hub-name]
     *                  [--login]
     *                  [--resource-group]
     *                  [--top]
     */
    ext_azure-cli-iot-ext_az_iot_hub_query(): void {
    }
}

/** Manage device capability models in an IoT Plug and Play model repository. */
class ext_azure-cli-iot-ext_az_iot_pnp_capability_model {
    /**
     * Create a capability-model in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp capability-model create --def
     *                                    [--endpoint]
     *                                    [--login]
     *                                    [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_create(): void {
    }

    /**
     * Delete the capability-model in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp capability-model delete --model
     *                                    [--endpoint]
     *                                    [--login]
     *                                    [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_delete(): void {
    }

    /**
     * List all capability-model.
     *
     * Syntax: 
     *
     * az iot pnp capability-model list [--endpoint]
     *                                  [--login]
     *                                  [--repo-id]
     *                                  [--search]
     *                                  [--top]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_list(): void {
    }

    /**
     * Publish the capability-model to public repository.
     *
     * Syntax: 
     *
     * az iot pnp capability-model publish --model
     *                                     [--endpoint]
     *                                     [--login]
     *                                     [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_publish(): void {
    }

    /**
     * Get the details of a capability-model.
     *
     * Syntax: 
     *
     * az iot pnp capability-model show --model
     *                                  [--endpoint]
     *                                  [--expand]
     *                                  [--login]
     *                                  [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_show(): void {
    }

    /**
     * Update the capability-model in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp capability-model update --def
     *                                    [--endpoint]
     *                                    [--login]
     *                                    [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_capability_model_update(): void {
    }
}

/** Manage interfaces in an IoT Plug and Play model repository. */
class ext_azure-cli-iot-ext_az_iot_pnp_interface {
    /**
     * Create an interface in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp interface create --def
     *                             [--endpoint]
     *                             [--login]
     *                             [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_create(): void {
    }

    /**
     * Delete an interface in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp interface delete --interface
     *                             [--endpoint]
     *                             [--login]
     *                             [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_delete(): void {
    }

    /**
     * List all interfaces.
     *
     * Syntax: 
     *
     * az iot pnp interface list [--endpoint]
     *                           [--login]
     *                           [--repo-id]
     *                           [--search]
     *                           [--top]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_list(): void {
    }

    /**
     * Publish an interface to public repository.
     *
     * Syntax: 
     *
     * az iot pnp interface publish --interface
     *                              [--endpoint]
     *                              [--login]
     *                              [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_publish(): void {
    }

    /**
     * Get the details of an interface.
     *
     * Syntax: 
     *
     * az iot pnp interface show --interface
     *                           [--endpoint]
     *                           [--login]
     *                           [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_show(): void {
    }

    /**
     * Update an interface in the company repository.
     *
     * Syntax: 
     *
     * az iot pnp interface update --def
     *                             [--endpoint]
     *                             [--login]
     *                             [--repo-id]
     */
    ext_azure-cli-iot-ext_az_iot_pnp_interface_update(): void {
    }
}

/** Manage entities of an IoT Plug and Play model repository. */
class ext_azure-cli-iot-ext_az_iot_pnp {
}

/**
 * This extension is deprecated and scheduled for removal.
 * Please remove 'azure-cli-iot-ext' and install the 'azure-iot' extension instead.
 * <a href="https://docs.microsoft.com/en-us/cli/azure/ext/azure-iot/?view=azure-cli-latest">https://docs.microsoft.com/en-us/cli/azure/ext/azure-iot/?view=azure-cli-latest</a>.
 */
class ext_azure-cli-iot-ext_az_iot {
}

/** Manage IoT Central applications. */
class ext_azure-cli-iot-ext_az_iotcentral_app {
    /**
     * Monitor device telemetry & messages sent to the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iotcentral app monitor-events --app-id
     *                                  [--central-api-uri]
     *                                  [--cg]
     *                                  [--device-id]
     *                                  [--enqueued-time]
     *                                  [--properties {all, anno, app, sys}]
     *                                  [--repair {false, true}]
     *                                  [--timeout]
     *                                  [--yes {false, true}]
     */
    ext_azure-cli-iot-ext_az_iotcentral_app_monitor_events(): void {
    }
}

/** Manage IoT Central device twins. */
class ext_azure-cli-iot-ext_az_iotcentral_device_twin {
    /**
     * Get the device twin from IoT Hub.
     *
     * Syntax: 
     *
     * az iotcentral device-twin show --app-id
     *                                --device-id
     *                                [--central-api-uri]
     */
    ext_azure-cli-iot-ext_az_iotcentral_device_twin_show(): void {
    }
}

/**
 * This extension is deprecated and scheduled for removal.
 * Please remove 'azure-cli-iot-ext' and install the 'azure-iot' extension instead.
 * <a href="https://docs.microsoft.com/en-us/cli/azure/ext/azure-iot/?view=azure-cli-latest">https://docs.microsoft.com/en-us/cli/azure/ext/azure-iot/?view=azure-cli-latest</a>.
 */
class ext_azure-cli-iot-ext_az_iotcentral {
}

/** */
class ext_azure-cli-ml_az {
}

/** AzureML compute target identity commands. */
class ext_azure-cli-ml_az_ml_computetarget_amlcompute_identity {
    /**
     * Assign identity to an AzureML compute target.
     *
     * Syntax: 
     *
     * az ml computetarget amlcompute identity assign --identities
     *                                                --name
     *                                                [--path]
     *                                                [--resource-group]
     *                                                [--subscription-id]
     *                                                [--workspace-name]
     *                                                [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_amlcompute_identity_assign(): void {
    }

    /**
     * Remove identity from an AzureML compute target.
     *
     * Syntax: 
     *
     * az ml computetarget amlcompute identity remove --identities
     *                                                --name
     *                                                [--path]
     *                                                [--resource-group]
     *                                                [--subscription-id]
     *                                                [--workspace-name]
     *                                                [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_amlcompute_identity_remove(): void {
    }

    /**
     * Display identities of an AzureML compute target.
     *
     * Syntax: 
     *
     * az ml computetarget amlcompute identity show --name
     *                                              [--path]
     *                                              [--resource-group]
     *                                              [--subscription-id]
     *                                              [--workspace-name]
     *                                              [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_amlcompute_identity_show(): void {
    }
}

/** */
class ext_azure-cli-ml_az_ml_computetarget_amlcompute {
}

/** Attach subgroup commands. */
class ext_azure-cli-ml_az_ml_computetarget_attach {
    /**
     * Attach an AKS cluster to the workspace.
     *
     * Syntax: 
     *
     * az ml computetarget attach aks --compute-resource-id
     *                                --name
     *                                [--resource-group]
     *                                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_computetarget_attach_aks(): void {
    }

    /**
     * Attach a remote machine without Docker as a compute target to the workspace.
     *
     * Syntax: 
     *
     * az ml computetarget attach remote --address
     *                                   --name
     *                                   --ssh-port
     *                                   --username
     *                                   [--password]
     *                                   [--private-key-file]
     *                                   [--private-key-passphrase]
     *                                   [--resource-group]
     *                                   [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_computetarget_attach_remote(): void {
    }
}

/** AzureML compute instance commands. */
class ext_azure-cli-ml_az_ml_computetarget_computeinstance {
    /**
     * Restart a compute instance.
     *
     * Syntax: 
     *
     * az ml computetarget computeinstance restart --name
     *                                             [--no-wait]
     *                                             [--path]
     *                                             [--resource-group]
     *                                             [--subscription-id]
     *                                             [--workspace-name]
     *                                             [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_computeinstance_restart(): void {
    }

    /**
     * Start a compute instance.
     *
     * Syntax: 
     *
     * az ml computetarget computeinstance start --name
     *                                           [--no-wait]
     *                                           [--path]
     *                                           [--resource-group]
     *                                           [--subscription-id]
     *                                           [--workspace-name]
     *                                           [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_computeinstance_start(): void {
    }

    /**
     * Stop a compute instance.
     *
     * Syntax: 
     *
     * az ml computetarget computeinstance stop --name
     *                                          [--no-wait]
     *                                          [--path]
     *                                          [--resource-group]
     *                                          [--subscription-id]
     *                                          [--workspace-name]
     *                                          [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_computeinstance_stop(): void {
    }
}

/** Create a compute target (aks or amlcompute or computeinstance). */
class ext_azure-cli-ml_az_ml_computetarget_create {
    /**
     * Create an AKS compute target.
     *
     * Syntax: 
     *
     * az ml computetarget create aks --name
     *                                [--agent-count]
     *                                [--cluster-purpose]
     *                                [--dns-service-ip]
     *                                [--docker-bridge-cidr]
     *                                [--load-balancer-subnet]
     *                                [--load-balancer-type]
     *                                [--location]
     *                                [--no-wait]
     *                                [--path]
     *                                [--resource-group]
     *                                [--service-cidr]
     *                                [--ssl-cert-file]
     *                                [--ssl-cname]
     *                                [--ssl-key-file]
     *                                [--ssl-leaf-domain-label]
     *                                [--ssl-overwrite-domain]
     *                                [--subnet-name]
     *                                [--subscription-id]
     *                                [--vm-size]
     *                                [--vnet-name]
     *                                [--vnet-resourcegroup-name]
     *                                [--workspace-name]
     *                                [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_create_aks(): void {
    }

    /**
     * Create an AzureML compute target.
     *
     * Syntax: 
     *
     * az ml computetarget create amlcompute --max-nodes
     *                                       --name
     *                                       --vm-size
     *                                       [--admin-user-password]
     *                                       [--admin-user-ssh-key]
     *                                       [--admin-username]
     *                                       [--assign-identity]
     *                                       [--description]
     *                                       [--idle-seconds-before-scaledown]
     *                                       [--min-nodes]
     *                                       [--no-wait]
     *                                       [--path]
     *                                       [--remote-login-port-public-access]
     *                                       [--resource-group]
     *                                       [--subnet-name]
     *                                       [--subscription-id]
     *                                       [--tag]
     *                                       [--vm-priority]
     *                                       [--vnet-name]
     *                                       [--vnet-resourcegroup-name]
     *                                       [--workspace-name]
     *                                       [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_create_amlcompute(): void {
    }

    /**
     * Create an AzureML compute instance target.
     *
     * Syntax: 
     *
     * az ml computetarget create computeinstance --name
     *                                            --vm-size
     *                                            [--admin-user-ssh-public-key]
     *                                            [--description]
     *                                            [--no-wait]
     *                                            [--path]
     *                                            [--resource-group]
     *                                            [--ssh-public-access]
     *                                            [--subnet-name]
     *                                            [--subscription-id]
     *                                            [--tag]
     *                                            [--vnet-name]
     *                                            [--vnet-resourcegroup-name]
     *                                            [--workspace-name]
     *                                            [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_create_computeinstance(): void {
    }

    /**
     * Create a data factory compute target.
     *
     * Syntax: 
     *
     * az ml computetarget create datafactory --name
     *                                        [--location]
     *                                        [--no-wait]
     *                                        [--path]
     *                                        [--resource-group]
     *                                        [--subscription-id]
     *                                        [--workspace-name]
     *                                        [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_create_datafactory(): void {
    }
}

/** Update a compute target (aks or amlcompute). */
class ext_azure-cli-ml_az_ml_computetarget_update {
    /**
     * Update an AKS compute target.
     *
     * Syntax: 
     *
     * az ml computetarget update aks --name
     *                                [--load-balancer-subnet]
     *                                [--load-balancer-type]
     *                                [--no-wait]
     *                                [--path]
     *                                [--resource-group]
     *                                [--ssl-cert-file]
     *                                [--ssl-cname]
     *                                [--ssl-disable]
     *                                [--ssl-key-file]
     *                                [--ssl-leaf-domain-label]
     *                                [--ssl-overwrite-domain]
     *                                [--ssl-renew]
     *                                [--subscription-id]
     *                                [--workspace-name]
     *                                [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_update_aks(): void {
    }

    /**
     * Update an AzureML compute target.
     *
     * Syntax: 
     *
     * az ml computetarget update amlcompute --name
     *                                       [--idle-seconds-before-scaledown]
     *                                       [--max-nodes]
     *                                       [--min-nodes]
     *                                       [--path]
     *                                       [--resource-group]
     *                                       [--subscription-id]
     *                                       [--workspace-name]
     *                                       [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_update_amlcompute(): void {
    }
}

/** Computetarget subgroup commands. */
class ext_azure-cli-ml_az_ml_computetarget {
    /**
     * Delete a compute target (aks or amlcompute or computeinstance).
     *
     * Syntax: 
     *
     * az ml computetarget delete --name
     *                            [--path]
     *                            [--resource-group]
     *                            [--subscription-id]
     *                            [--workspace-name]
     *                            [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_delete(): void {
    }

    /**
     * Detach a compute target (aks or remote) from a workspace.
     *
     * Syntax: 
     *
     * az ml computetarget detach --name
     *                            [--path]
     *                            [--resource-group]
     *                            [--subscription-id]
     *                            [--workspace-name]
     *                            [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_detach(): void {
    }

    /**
     * Get credentials for a compute target (aks or remote).
     *
     * Syntax: 
     *
     * az ml computetarget get-credentials --name
     *                                     [--path]
     *                                     [--resource-group]
     *                                     [--subscription-id]
     *                                     [--workspace-name]
     *                                     [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_get_credentials(): void {
    }

    /**
     * List all the compute targets attached to a workspace.
     *
     * Syntax: 
     *
     * az ml computetarget list [--path]
     *                          [--resource-group]
     *                          [--subscription-id]
     *                          [--workspace-name]
     *                          [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_list(): void {
    }

    /**
     * Show details of a specific compute target.
     *
     * Syntax: 
     *
     * az ml computetarget show --name
     *                          [--path]
     *                          [--resource-group]
     *                          [--subscription-id]
     *                          [--workspace-name]
     *                          [-v]
     */
    ext_azure-cli-ml_az_ml_computetarget_show(): void {
    }
}

/** Commands for managing datasets in Azure Machine Learning Workspace. */
class ext_azure-cli-ml_az_ml_dataset {
    /**
     * Archive an active or deprecated dataset.
     *
     * Syntax: 
     *
     * az ml dataset archive [--id]
     *                       [--name]
     *                       [--output-metadata-file]
     *                       [--path]
     *                       [--resource-group]
     *                       [--subscription-id]
     *                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_archive(): void {
    }

    /**
     * Deprecate an active dataset in a workspace by another dataset.
     *
     * Syntax: 
     *
     * az ml dataset deprecate --deprecate-by-id
     *                         [--id]
     *                         [--name]
     *                         [--output-metadata-file]
     *                         [--path]
     *                         [--resource-group]
     *                         [--subscription-id]
     *                         [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_deprecate(): void {
    }

    /**
     * List all datasets in the workspace.
     *
     * Syntax: 
     *
     * az ml dataset list [--output-metadata-file]
     *                    [--path]
     *                    [--resource-group]
     *                    [--subscription-id]
     *                    [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_list(): void {
    }

    /**
     * Reactivate an archived or deprecated dataset.
     *
     * Syntax: 
     *
     * az ml dataset reactivate [--id]
     *                          [--name]
     *                          [--output-metadata-file]
     *                          [--path]
     *                          [--resource-group]
     *                          [--subscription-id]
     *                          [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_reactivate(): void {
    }

    /**
     * Register a new dataset from the specified file.
     *
     * Syntax: 
     *
     * az ml dataset register [--file]
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--show-template]
     *                        [--skip-validation]
     *                        [--subscription-id]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_register(): void {
    }

    /**
     * Get details of a dataset by its id or registration name.
     *
     * Syntax: 
     *
     * az ml dataset show [--id]
     *                    [--name]
     *                    [--output-metadata-file]
     *                    [--path]
     *                    [--resource-group]
     *                    [--subscription-id]
     *                    [--version]
     *                    [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_show(): void {
    }

    /**
     * Unregister all versions under the specified registration name.
     *
     * Syntax: 
     *
     * az ml dataset unregister [--name]
     *                          [--output-metadata-file]
     *                          [--path]
     *                          [--resource-group]
     *                          [--subscription-id]
     *                          [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_dataset_unregister(): void {
    }
}

/** Commands for managing and using datastores with the Azure ML Workspace. */
class ext_azure-cli-ml_az_ml_datastore {
    /**
     * Attach an ADLS datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-adls --client-id
     *                             --client-secret
     *                             --name
     *                             --store-name
     *                             --tenant-id
     *                             [--adls-resource-group]
     *                             [--adls-subscription-id]
     *                             [--authority-url]
     *                             [--include-secret]
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--resource-group]
     *                             [--resource-url]
     *                             [--subscription-id]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_adls(): void {
    }

    /**
     * Attach a ADLS Gen2 datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-adls-gen2 --account-name
     *                                  --client-id
     *                                  --client-secret
     *                                  --file-system
     *                                  --name
     *                                  --tenant-id
     *                                  [--authority-url]
     *                                  [--endpoint]
     *                                  [--include-secret]
     *                                  [--output-metadata-file]
     *                                  [--path]
     *                                  [--protocol]
     *                                  [--resource-group]
     *                                  [--resource-url]
     *                                  [--subscription-id]
     *                                  [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_adls_gen2(): void {
    }

    /**
     * Attach a blob storage datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-blob --account-name
     *                             --container-name
     *                             --name
     *                             [--account-key]
     *                             [--endpoint]
     *                             [--grant-workspace-msi-access]
     *                             [--include-secret]
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--protocol]
     *                             [--resource-group]
     *                             [--sas-token]
     *                             [--storage-account-resource-group]
     *                             [--storage-account-subscription-id]
     *                             [--subscription-id]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_blob(): void {
    }

    /**
     * Attach a Databricks File System datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-dbfs --name
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--resource-group]
     *                             [--subscription-id]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_dbfs(): void {
    }

    /**
     * Attach a file share datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-file --account-name
     *                             --name
     *                             --share-name
     *                             [--account-key]
     *                             [--endpoint]
     *                             [--include-secret]
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--protocol]
     *                             [--resource-group]
     *                             [--sas-token]
     *                             [--subscription-id]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_file(): void {
    }

    /**
     * Attach an Azure MySQL datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-mysqldb --database-name
     *                                --name
     *                                --password
     *                                --server-name
     *                                --user-id
     *                                [--endpoint]
     *                                [--include-secret]
     *                                [--output-metadata-file]
     *                                [--path]
     *                                [--port]
     *                                [--resource-group]
     *                                [--subscription-id]
     *                                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_mysqldb(): void {
    }

    /**
     * Attach an Azure PostgreSQL datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-psqldb --database-name
     *                               --name
     *                               --password
     *                               --server-name
     *                               --user-id
     *                               [--endpoint]
     *                               [--enforce-ssl]
     *                               [--include-secret]
     *                               [--output-metadata-file]
     *                               [--path]
     *                               [--port]
     *                               [--resource-group]
     *                               [--subscription-id]
     *                               [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_psqldb(): void {
    }

    /**
     * Attach an Azure SQL datastore.
     *
     * Syntax: 
     *
     * az ml datastore attach-sqldb --database-name
     *                              --name
     *                              --server-name
     *                              [--authority-url]
     *                              [--client-id]
     *                              [--client-secret]
     *                              [--endpoint]
     *                              [--include-secret]
     *                              [--output-metadata-file]
     *                              [--password]
     *                              [--path]
     *                              [--resource-group]
     *                              [--resource-url]
     *                              [--subscription-id]
     *                              [--tenant-id]
     *                              [--username]
     *                              [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_attach_sqldb(): void {
    }

    /**
     * Detach a datastore by name.
     *
     * Syntax: 
     *
     * az ml datastore detach --name
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_detach(): void {
    }

    /**
     * Download files from a Datastore.
     *
     * Syntax: 
     *
     * az ml datastore download --name
     *                          --target-path
     *                          [--hide-progress]
     *                          [--output-metadata-file]
     *                          [--overwrite]
     *                          [--path]
     *                          [--prefix]
     *                          [--resource-group]
     *                          [--subscription-id]
     *                          [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_download(): void {
    }

    /**
     * List datastores in the workspace.
     *
     * Syntax: 
     *
     * az ml datastore list [--include-secret]
     *                      [--output-metadata-file]
     *                      [--path]
     *                      [--resource-group]
     *                      [--subscription-id]
     *                      [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_list(): void {
    }

    /**
     * Set the workspace default datastore by name.
     *
     * Syntax: 
     *
     * az ml datastore set-default --name
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--resource-group]
     *                             [--subscription-id]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_set_default(): void {
    }

    /**
     * Show a single datastore by name.
     *
     * Syntax: 
     *
     * az ml datastore show --name
     *                      [--include-secret]
     *                      [--output-metadata-file]
     *                      [--path]
     *                      [--resource-group]
     *                      [--subscription-id]
     *                      [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_show(): void {
    }

    /**
     * Show the workspace default datastore.
     *
     * Syntax: 
     *
     * az ml datastore show-default [--include-secret]
     *                              [--output-metadata-file]
     *                              [--path]
     *                              [--resource-group]
     *                              [--subscription-id]
     *                              [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_show_default(): void {
    }

    /**
     * Upload files to a Datastore.
     *
     * Syntax: 
     *
     * az ml datastore upload --name
     *                        --src-path
     *                        [--hide-progress]
     *                        [--output-metadata-file]
     *                        [--overwrite]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--target-path]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_datastore_upload(): void {
    }
}

/** Manage operationalized realtime endpoints. */
class ext_azure-cli-ml_az_ml_endpoint_realtime {
    /**
     * Create a version for realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime create-version --name
     *                                        --version-name
     *                                        [--add-property]
     *                                        [--add-tag]
     *                                        [--ar]
     *                                        [--as]
     *                                        [--at]
     *                                        [--autoscale-max-replicas]
     *                                        [--autoscale-min-replicas]
     *                                        [--cc]
     *                                        [--cf]
     *                                        [--collect-model-data]
     *                                        [--cvt]
     *                                        [--dc]
     *                                        [--description]
     *                                        [--ed]
     *                                        [--entry-script]
     *                                        [--environment-name]
     *                                        [--environment-version]
     *                                        [--failure-threshold]
     *                                        [--gb]
     *                                        [--gc]
     *                                        [--ic]
     *                                        [--id]
     *                                        [--is-default]
     *                                        [--max-request-wait-time]
     *                                        [--model]
     *                                        [--model-metadata-file]
     *                                        [--no-wait]
     *                                        [--nr]
     *                                        [--path]
     *                                        [--period-seconds]
     *                                        [--replica-max-concurrent-requests]
     *                                        [--resource-group]
     *                                        [--scoring-timeout-ms]
     *                                        [--sd]
     *                                        [--st]
     *                                        [--subscription-id]
     *                                        [--timeout-seconds]
     *                                        [--tp]
     *                                        [--workspace-name]
     *                                        [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_create_version(): void {
    }

    /**
     * Delete a realtime endpoint and its version from the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime delete --name
     *                                [--path]
     *                                [--resource-group]
     *                                [--subscription-id]
     *                                [--workspace-name]
     *                                [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_delete(): void {
    }

    /**
     * Delete a version for realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime delete-version --name
     *                                        --version-name
     *                                        [--no-wait]
     *                                        [--path]
     *                                        [--resource-group]
     *                                        [--subscription-id]
     *                                        [--workspace-name]
     *                                        [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_delete_version(): void {
    }

    /**
     * Get a token to issue requests a realtime endpoint.
     *
     * Syntax: 
     *
     * az ml endpoint realtime get-access-token --name
     *                                          [--path]
     *                                          [--resource-group]
     *                                          [--subscription-id]
     *                                          [--workspace-name]
     *                                          [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_get_access_token(): void {
    }

    /**
     * Get keys to issue requests against a realtime endpoint.
     *
     * Syntax: 
     *
     * az ml endpoint realtime get-keys --name
     *                                  [--path]
     *                                  [--resource-group]
     *                                  [--subscription-id]
     *                                  [--workspace-name]
     *                                  [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_get_keys(): void {
    }

    /**
     * Get logs for a realtime endpoint.
     *
     * Syntax: 
     *
     * az ml endpoint realtime get-logs --name
     *                                  [--init]
     *                                  [--num_lines]
     *                                  [--path]
     *                                  [--resource-group]
     *                                  [--subscription-id]
     *                                  [--workspace-name]
     *                                  [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_get_logs(): void {
    }

    /**
     * List realtime endpoints in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime list [--compute-type]
     *                              [--model-id]
     *                              [--model-name]
     *                              [--path]
     *                              [--property]
     *                              [--resource-group]
     *                              [--subscription-id]
     *                              [--tag]
     *                              [--workspace-name]
     *                              [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_list(): void {
    }

    /**
     * Regenerate keys for a realtime endpoint.
     *
     * Syntax: 
     *
     * az ml endpoint realtime regen-key --key
     *                                   --name
     *                                   [--path]
     *                                   [--resource-group]
     *                                   [--set-key]
     *                                   [--subscription-id]
     *                                   [--workspace-name]
     *                                   [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_regen_key(): void {
    }

    /**
     * Run a realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime run --name
     *                             [--input-data]
     *                             [--path]
     *                             [--resource-group]
     *                             [--subscription-id]
     *                             [--workspace-name]
     *                             [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_run(): void {
    }

    /**
     * Show details for a realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime show --name
     *                              [--path]
     *                              [--resource-group]
     *                              [--subscription-id]
     *                              [--workspace-name]
     *                              [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_show(): void {
    }

    /**
     * Update a realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime update --name
     *                                [--add-property]
     *                                [--add-tag]
     *                                [--ae]
     *                                [--ai]
     *                                [--description]
     *                                [--no-wait]
     *                                [--path]
     *                                [--remove-tag]
     *                                [--resource-group]
     *                                [--subscription-id]
     *                                [--token-auth-enabled]
     *                                [--workspace-name]
     *                                [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_update(): void {
    }

    /**
     * Update a version for realtime endpoint in the workspace.
     *
     * Syntax: 
     *
     * az ml endpoint realtime update-version --name
     *                                        --version-name
     *                                        [--add-property]
     *                                        [--add-tag]
     *                                        [--ar]
     *                                        [--as]
     *                                        [--at]
     *                                        [--autoscale-max-replicas]
     *                                        [--autoscale-min-replicas]
     *                                        [--cc]
     *                                        [--cf]
     *                                        [--collect-model-data]
     *                                        [--cvt]
     *                                        [--dc]
     *                                        [--description]
     *                                        [--ed]
     *                                        [--entry-script]
     *                                        [--environment-name]
     *                                        [--environment-version]
     *                                        [--failure-threshold]
     *                                        [--gb]
     *                                        [--gc]
     *                                        [--ic]
     *                                        [--id]
     *                                        [--is-default]
     *                                        [--max-request-wait-time]
     *                                        [--model]
     *                                        [--model-metadata-file]
     *                                        [--no-wait]
     *                                        [--nr]
     *                                        [--path]
     *                                        [--period-seconds]
     *                                        [--replica-max-concurrent-requests]
     *                                        [--resource-group]
     *                                        [--scoring-timeout-ms]
     *                                        [--sd]
     *                                        [--st]
     *                                        [--subscription-id]
     *                                        [--timeout-seconds]
     *                                        [--tp]
     *                                        [--workspace-name]
     *                                        [-v]
     */
    ext_azure-cli-ml_az_ml_endpoint_realtime_update_version(): void {
    }
}

/** Manage machine learning endpoints. */
class ext_azure-cli-ml_az_ml_endpoint {
}

/** Commands to manage environments. */
class ext_azure-cli-ml_az_ml_environment {
    /**
     * Download an environment definition to a specified directory.
     *
     * Syntax: 
     *
     * az ml environment download --directory
     *                            --name
     *                            [--output-metadata-file]
     *                            [--overwrite]
     *                            [--path]
     *                            [--resource-group]
     *                            [--subscription-id]
     *                            [--version]
     *                            [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_environment_download(): void {
    }

    /**
     * List environments in a workspace.
     *
     * Syntax: 
     *
     * az ml environment list [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_environment_list(): void {
    }

    /**
     * Register an environment definition from a specified directory.
     *
     * Syntax: 
     *
     * az ml environment register --directory
     *                            [--output-metadata-file]
     *                            [--path]
     *                            [--resource-group]
     *                            [--subscription-id]
     *                            [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_environment_register(): void {
    }

    /**
     * Scaffold the files for a default environment definition in the specified directory.
     *
     * Syntax: 
     *
     * az ml environment scaffold --directory
     *                            --name
     *                            [--output-metadata-file]
     *                            [--path]
     *                            [--resource-group]
     *                            [--subscription-id]
     *                            [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_environment_scaffold(): void {
    }

    /**
     * Show an environment by name and optionally version.
     *
     * Syntax: 
     *
     * az ml environment show --name
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--version]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_environment_show(): void {
    }
}

/** Commands to manage experiments. */
class ext_azure-cli-ml_az_ml_experiment {
    /**
     * List experiments in a workspace.
     *
     * Syntax: 
     *
     * az ml experiment list [--output-metadata-file]
     *                       [--path]
     *                       [--resource-group]
     *                       [--subscription-id]
     *                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_experiment_list(): void {
    }
}

/** Folder subgroup commands. */
class ext_azure-cli-ml_az_ml_folder {
    /**
     * Attach a folder to an AzureML workspace and optionally a specific experiment to use by default. If experiment name is not specified, it defaults to the folder name.
     *
     * Syntax: 
     *
     * az ml folder attach [--experiment-name]
     *                     [--output-metadata-file]
     *                     [--path]
     *                     [--resource-group]
     *                     [--subscription-id]
     *                     [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_folder_attach(): void {
    }
}

/** Manage machine learning models. */
class ext_azure-cli-ml_az_ml_model {
    /**
     * Delete a model from the workspace.
     *
     * Syntax: 
     *
     * az ml model delete --model-id
     *                    [--path]
     *                    [--resource-group]
     *                    [--subscription-id]
     *                    [--workspace-name]
     *                    [-v]
     */
    ext_azure-cli-ml_az_ml_model_delete(): void {
    }

    /**
     * Deploy model(s) from the workspace.
     *
     * Syntax: 
     *
     * az ml model deploy --name
     *                    [--ae]
     *                    [--ai]
     *                    [--ar]
     *                    [--as]
     *                    [--at]
     *                    [--autoscale-max-replicas]
     *                    [--autoscale-min-replicas]
     *                    [--base-image]
     *                    [--base-image-registry]
     *                    [--cc]
     *                    [--cf]
     *                    [--collect-model-data]
     *                    [--compute-target]
     *                    [--compute-type]
     *                    [--cuda-version]
     *                    [--dc]
     *                    [--description]
     *                    [--dn]
     *                    [--ds]
     *                    [--ed]
     *                    [--eg]
     *                    [--entry-script]
     *                    [--environment-name]
     *                    [--environment-version]
     *                    [--failure-threshold]
     *                    [--gb]
     *                    [--gc]
     *                    [--ic]
     *                    [--id]
     *                    [--key-name]
     *                    [--key-version]
     *                    [--kp]
     *                    [--ks]
     *                    [--lo]
     *                    [--max-request-wait-time]
     *                    [--model]
     *                    [--model-metadata-file]
     *                    [--namespace]
     *                    [--no-wait]
     *                    [--nr]
     *                    [--overwrite]
     *                    [--path]
     *                    [--period-seconds]
     *                    [--pi]
     *                    [--po]
     *                    [--property]
     *                    [--replica-max-concurrent-requests]
     *                    [--resource-group]
     *                    [--rt]
     *                    [--sc]
     *                    [--scoring-timeout-ms]
     *                    [--sd]
     *                    [--se]
     *                    [--sk]
     *                    [--sp]
     *                    [--st]
     *                    [--subnet-name]
     *                    [--subscription-id]
     *                    [--tag]
     *                    [--timeout-seconds]
     *                    [--token-auth-enabled]
     *                    [--tp]
     *                    [--vault-base-url]
     *                    [--version-name]
     *                    [--vnet-name]
     *                    [--workspace-name]
     *                    [-v]
     */
    ext_azure-cli-ml_az_ml_model_deploy(): void {
    }

    /**
     * Download a model from the workspace.
     *
     * Syntax: 
     *
     * az ml model download --model-id
     *                      --target-dir
     *                      [--overwrite]
     *                      [--path]
     *                      [--resource-group]
     *                      [--subscription-id]
     *                      [--workspace-name]
     *                      [-v]
     */
    ext_azure-cli-ml_az_ml_model_download(): void {
    }

    /**
     * List models in the workspace.
     *
     * Syntax: 
     *
     * az ml model list [--dataset-id]
     *                  [--latest]
     *                  [--model-name]
     *                  [--path]
     *                  [--property]
     *                  [--resource-group]
     *                  [--run-id]
     *                  [--subscription-id]
     *                  [--tag]
     *                  [--workspace-name]
     *                  [-v]
     */
    ext_azure-cli-ml_az_ml_model_list(): void {
    }

    /**
     * Package a model in the workspace.
     *
     * Syntax: 
     *
     * az ml model package [--cf]
     *                     [--ed]
     *                     [--entry-script]
     *                     [--environment-name]
     *                     [--environment-version]
     *                     [--ic]
     *                     [--il]
     *                     [--image-name]
     *                     [--model]
     *                     [--model-metadata-file]
     *                     [--no-wait]
     *                     [--output-path]
     *                     [--path]
     *                     [--resource-group]
     *                     [--rt]
     *                     [--sd]
     *                     [--subscription-id]
     *                     [--workspace-name]
     *                     [-v]
     */
    ext_azure-cli-ml_az_ml_model_package(): void {
    }

    /**
     * Profile model(s) in the workspace.
     *
     * Syntax: 
     *
     * az ml model profile --name
     *                     [--base-image]
     *                     [--base-image-registry]
     *                     [--cc]
     *                     [--cf]
     *                     [--description]
     *                     [--ed]
     *                     [--entry-script]
     *                     [--environment-name]
     *                     [--environment-version]
     *                     [--gb]
     *                     [--ic]
     *                     [--idi]
     *                     [--model]
     *                     [--model-metadata-file]
     *                     [--output-metadata-file]
     *                     [--resource-group]
     *                     [--sd]
     *                     [--subscription-id]
     *                     [--workspace-name]
     *                     [-v]
     */
    ext_azure-cli-ml_az_ml_model_profile(): void {
    }

    /**
     * Register a model to the workspace.
     *
     * Syntax: 
     *
     * az ml model register --name
     *                      [--asset-path]
     *                      [--cc]
     *                      [--description]
     *                      [--experiment-name]
     *                      [--gb]
     *                      [--gc]
     *                      [--model-framework]
     *                      [--model-framework-version]
     *                      [--model-path]
     *                      [--output-metadata-file]
     *                      [--path]
     *                      [--property]
     *                      [--resource-group]
     *                      [--run-id]
     *                      [--run-metadata-file]
     *                      [--sample-input-dataset-id]
     *                      [--sample-output-dataset-id]
     *                      [--subscription-id]
     *                      [--tag]
     *                      [--workspace-name]
     *                      [-v]
     */
    ext_azure-cli-ml_az_ml_model_register(): void {
    }

    /**
     * Show a model in the workspace.
     *
     * Syntax: 
     *
     * az ml model show [--model-id]
     *                  [--model-name]
     *                  [--path]
     *                  [--resource-group]
     *                  [--run-id]
     *                  [--subscription-id]
     *                  [--version]
     *                  [--workspace-name]
     *                  [-v]
     */
    ext_azure-cli-ml_az_ml_model_show(): void {
    }

    /**
     * Update a model in the workspace.
     *
     * Syntax: 
     *
     * az ml model update --model-id
     *                    [--add-property]
     *                    [--add-tag]
     *                    [--cc]
     *                    [--description]
     *                    [--gb]
     *                    [--gc]
     *                    [--path]
     *                    [--remove-tag]
     *                    [--resource-group]
     *                    [--sample-input-dataset-id]
     *                    [--sample-output-dataset-id]
     *                    [--subscription-id]
     *                    [--workspace-name]
     *                    [-v]
     */
    ext_azure-cli-ml_az_ml_model_update(): void {
    }
}

/** Pipeline subgroup commands. */
class ext_azure-cli-ml_az_ml_pipeline {
    /**
     * Generate yml definition describing the pipeline run.
     *
     * Syntax: 
     *
     * az ml pipeline clone --path
     *                      --pipeline-run-id
     *                      [--output-file]
     *                      [--resource-group]
     *                      [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_clone(): void {
    }

    /**
     * Create a pipeline draft from an existing pipeline.
     *
     * Syntax: 
     *
     * az ml pipeline clone-draft [--experiment-name]
     *                            [--pipeline-draft-id]
     *                            [--pipeline-id]
     *                            [--pipeline-run-id]
     *                            [--resource-group]
     *                            [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_clone_draft(): void {
    }

    /**
     * Create a pipeline from a yaml definition.
     *
     * Syntax: 
     *
     * az ml pipeline create --name
     *                       --pipeline-yaml
     *                       [--continue]
     *                       [--description]
     *                       [--output-file]
     *                       [--resource-group]
     *                       [--version]
     *                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_create(): void {
    }

    /**
     * Create a pipeline draft from a yml definition.
     *
     * Syntax: 
     *
     * az ml pipeline create-draft --experiment_name
     *                             --name
     *                             --pipeline-yaml
     *                             [--continue]
     *                             [--description]
     *                             [--parameters]
     *                             [--properties]
     *                             [--resource-group]
     *                             [--tags]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_create_draft(): void {
    }

    /**
     * Create a schedule.
     *
     * Syntax: 
     *
     * az ml pipeline create-schedule --experiment-name
     *                                --name
     *                                --pipeline-id
     *                                [--resource-group]
     *                                [--schedule-yaml]
     *                                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_create_schedule(): void {
    }

    /**
     * Delete a pipeline draft.
     *
     * Syntax: 
     *
     * az ml pipeline delete-draft --pipeline-draft-id
     *                             [--resource-group]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_delete_draft(): void {
    }

    /**
     * Disable a pipeline from running.
     *
     * Syntax: 
     *
     * az ml pipeline disable --pipeline-id
     *                        [--output-file]
     *                        [--resource-group]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_disable(): void {
    }

    /**
     * Disable a schedule from running.
     *
     * Syntax: 
     *
     * az ml pipeline disable-schedule --schedule-id
     *                                 [--resource-group]
     *                                 [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_disable_schedule(): void {
    }

    /**
     * Enable a pipeline and allow it to run.
     *
     * Syntax: 
     *
     * az ml pipeline enable --pipeline-id
     *                       [--output-file]
     *                       [--resource-group]
     *                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_enable(): void {
    }

    /**
     * Enable a schedule and allow it to run.
     *
     * Syntax: 
     *
     * az ml pipeline enable-schedule --schedule-id
     *                                [--resource-group]
     *                                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_enable_schedule(): void {
    }

    /**
     * Generate yml definition describing the pipeline.
     *
     * Syntax: 
     *
     * az ml pipeline get --path
     *                    [--pipeline-draft-id]
     *                    [--pipeline-id]
     *                    [--resource-group]
     *                    [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_get(): void {
    }

    /**
     * Show last pipeline run for a schedule.
     *
     * Syntax: 
     *
     * az ml pipeline last-pipeline-run --schedule-id
     *                                  [--resource-group]
     *                                  [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_last_pipeline_run(): void {
    }

    /**
     * List all pipelines and respective schedules in the workspace.
     *
     * Syntax: 
     *
     * az ml pipeline list [--output-file]
     *                     [--resource-group]
     *                     [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_list(): void {
    }

    /**
     * List pipeline drafts in the workspace.
     *
     * Syntax: 
     *
     * az ml pipeline list-drafts [--resource-group]
     *                            [--tags]
     *                            [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_list_drafts(): void {
    }

    /**
     * List the step runs generated from a pipeline run.
     *
     * Syntax: 
     *
     * az ml pipeline list-steps --run
     *                           [--output-file]
     *                           [--resource-group]
     *                           [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_list_steps(): void {
    }

    /**
     * List pipeline runs generated from a schedule.
     *
     * Syntax: 
     *
     * az ml pipeline pipeline-runs-list --schedule-id
     *                                   [--resource-group]
     *                                   [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_pipeline_runs_list(): void {
    }

    /**
     * Publish a pipeline draft as a published pipeline.
     *
     * Syntax: 
     *
     * az ml pipeline publish-draft --pipeline-draft-id
     *                              [--resource-group]
     *                              [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_publish_draft(): void {
    }

    /**
     * Show details of a pipeline and respective schedules.
     *
     * Syntax: 
     *
     * az ml pipeline show --pipeline-id
     *                     [--output-file]
     *                     [--resource-group]
     *                     [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_show(): void {
    }

    /**
     * Show details of a pipeline draft.
     *
     * Syntax: 
     *
     * az ml pipeline show-draft --pipeline-draft-id
     *                           [--resource-group]
     *                           [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_show_draft(): void {
    }

    /**
     * Show details of a schedule.
     *
     * Syntax: 
     *
     * az ml pipeline show-schedule --schedule-id
     *                              [--resource-group]
     *                              [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_show_schedule(): void {
    }

    /**
     * Submit a run from the pipeline draft.
     *
     * Syntax: 
     *
     * az ml pipeline submit-draft --pipeline-draft-id
     *                             [--resource-group]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_submit_draft(): void {
    }

    /**
     * Update a pipeline draft.
     *
     * Syntax: 
     *
     * az ml pipeline update-draft [--continue]
     *                             [--description]
     *                             [--experiment_name]
     *                             [--name]
     *                             [--parameters]
     *                             [--pipeline-draft-id]
     *                             [--pipeline-yaml]
     *                             [--resource-group]
     *                             [--tags]
     *                             [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_update_draft(): void {
    }

    /**
     * Update a schedule.
     *
     * Syntax: 
     *
     * az ml pipeline update-schedule --schedule-id
     *                                [--name]
     *                                [--resource-group]
     *                                [--schedule-yaml]
     *                                [--status]
     *                                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_pipeline_update_schedule(): void {
    }
}

/** Commands for submitting, updating, and monitoring runs. */
class ext_azure-cli-ml_az_ml_run {
    /**
     * Cancel run.
     *
     * Syntax: 
     *
     * az ml run cancel --run
     *                  [--experiment-name]
     *                  [--output-metadata-file]
     *                  [--path]
     *                  [--resource-group]
     *                  [--subscription-id]
     *                  [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_cancel(): void {
    }

    /**
     * Download log files.
     *
     * Syntax: 
     *
     * az ml run download-logs --output-dir
     *                         --run
     *                         [--experiment-name]
     *                         [--output-metadata-file]
     *                         [--path]
     *                         [--resource-group]
     *                         [--subscription-id]
     *                         [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_download_logs(): void {
    }

    /**
     * List runs.
     *
     * Syntax: 
     *
     * az ml run list [--compute-target-name]
     *                [--experiment-name]
     *                [--last]
     *                [--minimal]
     *                [--output-metadata-file]
     *                [--parent-run-id]
     *                [--path]
     *                [--pipeline-run-id]
     *                [--resource-group]
     *                [--status {Completed, Failed, Finalizing, Preparing, Provisioning, Queued, Running, Starting}]
     *                [--subscription-id]
     *                [--tags]
     *                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_list(): void {
    }

    /**
     * Monitor the logs for an existing run.
     *
     * Syntax: 
     *
     * az ml run monitor-logs --run
     *                        [--experiment-name]
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_monitor_logs(): void {
    }

    /**
     * Monitor an existing run using tensorboard.
     *
     * Syntax: 
     *
     * az ml run monitor-tensorboard --run
     *                               [--experiment-name]
     *                               [--local-directory]
     *                               [--output-metadata-file]
     *                               [--path]
     *                               [--resource-group]
     *                               [--subscription-id]
     *                               [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_monitor_tensorboard(): void {
    }

    /**
     * Show run.
     *
     * Syntax: 
     *
     * az ml run show --run
     *                [--experiment-name]
     *                [--output-metadata-file]
     *                [--path]
     *                [--resource-group]
     *                [--subscription-id]
     *                [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_show(): void {
    }

    /**
     * Submit a hyper parameter sweep using run config.
     *
     * Syntax: 
     *
     * az ml run submit-hyperdrive --hyperdrive-configuration-name
     *                             [--async]
     *                             [--conda-dependencies]
     *                             [--ct]
     *                             [--experiment-name]
     *                             [--output-metadata-file]
     *                             [--path]
     *                             [--resource-group]
     *                             [--run-configuration-name]
     *                             [--source-directory]
     *                             [--subscription-id]
     *                             [--workspace-name]
     *                             [<USER_SCRIPT_AND_ARGUMENTS>]
     */
    ext_azure-cli-ml_az_ml_run_submit_hyperdrive(): void {
    }

    /**
     * Submit a pipeline for execution, from a published pipeline ID or pipeline YAML file.
     *
     * Syntax: 
     *
     * az ml run submit-pipeline [--datapaths]
     *                           [--experiment-name]
     *                           [--output-metadata-file]
     *                           [--output_file]
     *                           [--parameters]
     *                           [--path]
     *                           [--pipeline-id]
     *                           [--pipeline-yaml]
     *                           [--resource-group]
     *                           [--subscription-id]
     *                           [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_submit_pipeline(): void {
    }

    /**
     * Submit a script for execution.
     *
     * Syntax: 
     *
     * az ml run submit-script [--async]
     *                         [--conda-dependencies]
     *                         [--ct]
     *                         [--experiment-name]
     *                         [--output-metadata-file]
     *                         [--path]
     *                         [--resource-group]
     *                         [--run-configuration-name]
     *                         [--source-directory]
     *                         [--subscription-id]
     *                         [--workspace-name]
     *                         [<USER_SCRIPT_AND_ARGUMENTS>]
     */
    ext_azure-cli-ml_az_ml_run_submit_script(): void {
    }

    /**
     * Update the run by adding tags.
     *
     * Syntax: 
     *
     * az ml run update --run
     *                  [--add-tag]
     *                  [--experiment-name]
     *                  [--output-metadata-file]
     *                  [--path]
     *                  [--resource-group]
     *                  [--subscription-id]
     *                  [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_run_update(): void {
    }
}

/** Manage operationalized services. */
class ext_azure-cli-ml_az_ml_service {
    /**
     * Delete a service from the workspace.
     *
     * Syntax: 
     *
     * az ml service delete --name
     *                      [--path]
     *                      [--resource-group]
     *                      [--subscription-id]
     *                      [--workspace-name]
     *                      [-v]
     */
    ext_azure-cli-ml_az_ml_service_delete(): void {
    }

    /**
     * Get a token to issue requests a service.
     *
     * Syntax: 
     *
     * az ml service get-access-token --name
     *                                [--path]
     *                                [--resource-group]
     *                                [--subscription-id]
     *                                [--workspace-name]
     *                                [-v]
     */
    ext_azure-cli-ml_az_ml_service_get_access_token(): void {
    }

    /**
     * Get keys to issue requests against a service.
     *
     * Syntax: 
     *
     * az ml service get-keys --name
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     *                        [-v]
     */
    ext_azure-cli-ml_az_ml_service_get_keys(): void {
    }

    /**
     * Get logs for a service.
     *
     * Syntax: 
     *
     * az ml service get-logs --name
     *                        [--init]
     *                        [--num_lines]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     *                        [-v]
     */
    ext_azure-cli-ml_az_ml_service_get_logs(): void {
    }

    /**
     * List services in the workspace.
     *
     * Syntax: 
     *
     * az ml service list [--compute-type]
     *                    [--image-digest]
     *                    [--model-id]
     *                    [--model-name]
     *                    [--path]
     *                    [--property]
     *                    [--resource-group]
     *                    [--subscription-id]
     *                    [--tag]
     *                    [--workspace-name]
     *                    [-v]
     */
    ext_azure-cli-ml_az_ml_service_list(): void {
    }

    /**
     * Regenerate keys for a service.
     *
     * Syntax: 
     *
     * az ml service regen-key --key
     *                         --name
     *                         [--path]
     *                         [--resource-group]
     *                         [--set-key]
     *                         [--subscription-id]
     *                         [--workspace-name]
     *                         [-v]
     */
    ext_azure-cli-ml_az_ml_service_regen_key(): void {
    }

    /**
     * Run a service in the workspace.
     *
     * Syntax: 
     *
     * az ml service run --name
     *                   [--input-data]
     *                   [--path]
     *                   [--resource-group]
     *                   [--subscription-id]
     *                   [--workspace-name]
     *                   [-v]
     */
    ext_azure-cli-ml_az_ml_service_run(): void {
    }

    /**
     * Show details for a service in the workspace.
     *
     * Syntax: 
     *
     * az ml service show --name
     *                    [--path]
     *                    [--resource-group]
     *                    [--subscription-id]
     *                    [--workspace-name]
     *                    [-v]
     */
    ext_azure-cli-ml_az_ml_service_show(): void {
    }

    /**
     * Update a service in the workspace.
     *
     * Syntax: 
     *
     * az ml service update --name
     *                      [--add-property]
     *                      [--add-tag]
     *                      [--ae]
     *                      [--ai]
     *                      [--ar]
     *                      [--as]
     *                      [--at]
     *                      [--autoscale-max-replicas]
     *                      [--autoscale-min-replicas]
     *                      [--base-image]
     *                      [--base-image-registry]
     *                      [--cc]
     *                      [--cf]
     *                      [--collect-model-data]
     *                      [--cuda-version]
     *                      [--dc]
     *                      [--description]
     *                      [--dn]
     *                      [--ds]
     *                      [--ed]
     *                      [--eg]
     *                      [--entry-script]
     *                      [--environment-name]
     *                      [--environment-version]
     *                      [--failure-threshold]
     *                      [--gb]
     *                      [--gc]
     *                      [--ic]
     *                      [--id]
     *                      [--kp]
     *                      [--ks]
     *                      [--lo]
     *                      [--max-request-wait-time]
     *                      [--model]
     *                      [--model-metadata-file]
     *                      [--no-wait]
     *                      [--nr]
     *                      [--path]
     *                      [--period-seconds]
     *                      [--po]
     *                      [--remove-tag]
     *                      [--replica-max-concurrent-requests]
     *                      [--resource-group]
     *                      [--rt]
     *                      [--sc]
     *                      [--scoring-timeout-ms]
     *                      [--sd]
     *                      [--se]
     *                      [--sk]
     *                      [--sp]
     *                      [--st]
     *                      [--subscription-id]
     *                      [--timeout-seconds]
     *                      [--token-auth-enabled]
     *                      [--workspace-name]
     *                      [-v]
     */
    ext_azure-cli-ml_az_ml_service_update(): void {
    }
}

/** Workspace private endpoint subgroup commands. */
class ext_azure-cli-ml_az_ml_workspace_private_endpoint {
    /**
     * Add private endpoint to a workspace.
     *
     * Syntax: 
     *
     * az ml workspace private-endpoint add [--output-metadata-file]
     *                                      [--path]
     *                                      [--pe-auto-approval]
     *                                      [--pe-location]
     *                                      [--pe-name]
     *                                      [--pe-resource-group]
     *                                      [--pe-subnet-name]
     *                                      [--pe-subscription-id]
     *                                      [--pe-vnet-name]
     *                                      [--resource-group]
     *                                      [--subscription-id]
     *                                      [--tags]
     *                                      [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_private_endpoint_add(): void {
    }

    /**
     * Delete the specified private endpoint Connection in the workspace.
     *
     * Syntax: 
     *
     * az ml workspace private-endpoint delete [--output-metadata-file]
     *                                         [--pe-connection-name]
     *                                         [--resource-group]
     *                                         [--subscription-id]
     *                                         [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_private_endpoint_delete(): void {
    }

    /**
     * List all private endpoints in a workspace.
     *
     * Syntax: 
     *
     * az ml workspace private-endpoint list [--output-metadata-file]
     *                                       [--path]
     *                                       [--resource-group]
     *                                       [--subscription-id]
     *                                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_private_endpoint_list(): void {
    }
}

/** Workspace subgroup commands. */
class ext_azure-cli-ml_az_ml_workspace {
    /**
     * Create a workspace.
     *
     * Syntax: 
     *
     * az ml workspace create --workspace-name
     *                        [--adb-workspace]
     *                        [--application-insights]
     *                        [--cmk-keyvault]
     *                        [--container-registry]
     *                        [--exist-ok]
     *                        [--friendly-name]
     *                        [--hbi-workspace]
     *                        [--keyvault]
     *                        [--location]
     *                        [--pe-auto-approval]
     *                        [--pe-name]
     *                        [--pe-resource-group]
     *                        [--pe-subnet-name]
     *                        [--pe-subscription-id]
     *                        [--pe-vnet-name]
     *                        [--resource-cmk-uri]
     *                        [--resource-group]
     *                        [--sku]
     *                        [--storage-account]
     *                        [--tags]
     *                        [--yes]
     */
    ext_azure-cli-ml_az_ml_workspace_create(): void {
    }

    /**
     * Delete a workspace.
     *
     * Syntax: 
     *
     * az ml workspace delete [--all-resources]
     *                        [--no-wait]
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_delete(): void {
    }

    /**
     * List workspaces.
     *
     * Syntax: 
     *
     * az ml workspace list [--resource-group]
     */
    ext_azure-cli-ml_az_ml_workspace_list(): void {
    }

    /**
     * List workspace keys for dependent resources such as storage, acr, and app insights.
     *
     * Syntax: 
     *
     * az ml workspace list-keys [--output-metadata-file]
     *                           [--path]
     *                           [--resource-group]
     *                           [--subscription-id]
     *                           [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_list_keys(): void {
    }

    /**
     * Share a workspace with another user with a given role.
     *
     * Syntax: 
     *
     * az ml workspace share --role
     *                       --user
     *                       [--output-metadata-file]
     *                       [--path]
     *                       [--resource-group]
     *                       [--subscription-id]
     *                       [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_share(): void {
    }

    /**
     * Show a workspace.
     *
     * Syntax: 
     *
     * az ml workspace show [--output-metadata-file]
     *                      [--path]
     *                      [--resource-group]
     *                      [--subscription-id]
     *                      [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_show(): void {
    }

    /**
     * Sync workspace keys for dependent resources such as storage, acr, and app insights.
     *
     * Syntax: 
     *
     * az ml workspace sync-keys [--output-metadata-file]
     *                           [--path]
     *                           [--resource-group]
     *                           [--subscription-id]
     *                           [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_sync_keys(): void {
    }

    /**
     * Update a workspace.
     *
     * Syntax: 
     *
     * az ml workspace update [--description]
     *                        [--friendly-name]
     *                        [--image-build-compute]
     *                        [--output-metadata-file]
     *                        [--path]
     *                        [--resource-group]
     *                        [--subscription-id]
     *                        [--tags]
     *                        [--workspace-name]
     */
    ext_azure-cli-ml_az_ml_workspace_update(): void {
    }
}

/** Azureml._cli commands. */
class ext_azure-cli-ml_az_ml {
}

/** Manage Universal Packages. */
class ext_azure-devops_az_artifacts_universal {
    /**
     * Download a package.
     *
     * Syntax: 
     *
     * az artifacts universal download --feed
     *                                 --name
     *                                 --path
     *                                 --version
     *                                 [--detect {false, true}]
     *                                 [--file-filter]
     *                                 [--org]
     *                                 [--project]
     *                                 [--scope {organization, project}]
     */
    ext_azure-devops_az_artifacts_universal_download(): void {
    }

    /**
     * Publish a package to a feed.
     *
     * Syntax: 
     *
     * az artifacts universal publish --feed
     *                                --name
     *                                --path
     *                                --version
     *                                [--description]
     *                                [--detect {false, true}]
     *                                [--org]
     *                                [--project]
     *                                [--scope {organization, project}]
     */
    ext_azure-devops_az_artifacts_universal_publish(): void {
    }
}

/** Manage Azure Artifacts. */
class ext_azure-devops_az_artifacts {
}

/** Manage areas for a project. */
class ext_azure-devops_az_boards_area_project {
    /**
     * Create area.
     *
     * Syntax: 
     *
     * az boards area project create --name
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--path]
     *                               [--project]
     */
    ext_azure-devops_az_boards_area_project_create(): void {
    }

    /**
     * Delete area.
     *
     * Syntax: 
     *
     * az boards area project delete --path
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--yes]
     */
    ext_azure-devops_az_boards_area_project_delete(): void {
    }

    /**
     * List areas for a project.
     *
     * Syntax: 
     *
     * az boards area project list [--depth]
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--path]
     *                             [--project]
     */
    ext_azure-devops_az_boards_area_project_list(): void {
    }

    /**
     * Show area details for a project.
     *
     * Syntax: 
     *
     * az boards area project show --id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--project]
     */
    ext_azure-devops_az_boards_area_project_show(): void {
    }

    /**
     * Update area.
     *
     * Syntax: 
     *
     * az boards area project update --path
     *                               [--child-id]
     *                               [--detect {false, true}]
     *                               [--name]
     *                               [--org]
     *                               [--project]
     */
    ext_azure-devops_az_boards_area_project_update(): void {
    }
}

/** Manage areas for a team. */
class ext_azure-devops_az_boards_area_team {
    /**
     * Add area to a team.
     *
     * Syntax: 
     *
     * az boards area team add --path
     *                         --team
     *                         [--detect {false, true}]
     *                         [--include-sub-areas {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--set-as-default]
     */
    ext_azure-devops_az_boards_area_team_add(): void {
    }

    /**
     * List areas for a team.
     *
     * Syntax: 
     *
     * az boards area team list --team
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--project]
     */
    ext_azure-devops_az_boards_area_team_list(): void {
    }

    /**
     * Remove area from a team.
     *
     * Syntax: 
     *
     * az boards area team remove --path
     *                            --team
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_boards_area_team_remove(): void {
    }

    /**
     * Update team area.
     *
     * Syntax: 
     *
     * az boards area team update --path
     *                            --team
     *                            [--detect {false, true}]
     *                            [--include-sub-areas {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--set-as-default]
     */
    ext_azure-devops_az_boards_area_team_update(): void {
    }
}

/** Manage area paths. */
class ext_azure-devops_az_boards_area {
}

/** Manage iterations for a project. */
class ext_azure-devops_az_boards_iteration_project {
    /**
     * Create iteration.
     *
     * Syntax: 
     *
     * az boards iteration project create --name
     *                                    [--detect {false, true}]
     *                                    [--finish-date]
     *                                    [--org]
     *                                    [--path]
     *                                    [--project]
     *                                    [--start-date]
     */
    ext_azure-devops_az_boards_iteration_project_create(): void {
    }

    /**
     * Delete iteration.
     *
     * Syntax: 
     *
     * az boards iteration project delete --path
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     *                                    [--yes]
     */
    ext_azure-devops_az_boards_iteration_project_delete(): void {
    }

    /**
     * List iterations for a project.
     *
     * Syntax: 
     *
     * az boards iteration project list [--depth]
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--path]
     *                                  [--project]
     */
    ext_azure-devops_az_boards_iteration_project_list(): void {
    }

    /**
     * Show iteration details for a project.
     *
     * Syntax: 
     *
     * az boards iteration project show --id
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     */
    ext_azure-devops_az_boards_iteration_project_show(): void {
    }

    /**
     * Update project iteration.
     *
     * Syntax: 
     *
     * az boards iteration project update --path
     *                                    [--child-id]
     *                                    [--detect {false, true}]
     *                                    [--finish-date]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     *                                    [--start-date]
     */
    ext_azure-devops_az_boards_iteration_project_update(): void {
    }
}

/** Manage iterations for a team. */
class ext_azure-devops_az_boards_iteration_team {
    /**
     * Add iteration to a team.
     *
     * Syntax: 
     *
     * az boards iteration team add --id
     *                              --team
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--project]
     */
    ext_azure-devops_az_boards_iteration_team_add(): void {
    }

    /**
     * List iterations for a team.
     *
     * Syntax: 
     *
     * az boards iteration team list --team
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--timeframe]
     */
    ext_azure-devops_az_boards_iteration_team_list(): void {
    }

    /**
     * List work-items for an iteration.
     *
     * Syntax: 
     *
     * az boards iteration team list-work-items --id
     *                                          --team
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     */
    ext_azure-devops_az_boards_iteration_team_list_work_items(): void {
    }

    /**
     * Remove iteration from a team.
     *
     * Syntax: 
     *
     * az boards iteration team remove --id
     *                                 --team
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     */
    ext_azure-devops_az_boards_iteration_team_remove(): void {
    }

    /**
     * Set backlog iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team set-backlog-iteration --id
     *                                                --team
     *                                                [--detect {false, true}]
     *                                                [--org]
     *                                                [--project]
     */
    ext_azure-devops_az_boards_iteration_team_set_backlog_iteration(): void {
    }

    /**
     * Set default iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team set-default-iteration --team
     *                                                [--default-iteration-macro]
     *                                                [--detect {false, true}]
     *                                                [--id]
     *                                                [--org]
     *                                                [--project]
     */
    ext_azure-devops_az_boards_iteration_team_set_default_iteration(): void {
    }

    /**
     * Show backlog iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team show-backlog-iteration --team
     *                                                 [--detect {false, true}]
     *                                                 [--org]
     *                                                 [--project]
     */
    ext_azure-devops_az_boards_iteration_team_show_backlog_iteration(): void {
    }

    /**
     * Show default iteration for a team.
     *
     * Syntax: 
     *
     * az boards iteration team show-default-iteration --team
     *                                                 [--detect {false, true}]
     *                                                 [--org]
     *                                                 [--project]
     */
    ext_azure-devops_az_boards_iteration_team_show_default_iteration(): void {
    }
}

/** Manage iterations. */
class ext_azure-devops_az_boards_iteration {
}

/** Manage work item relations. */
class ext_azure-devops_az_boards_work_item_relation {
    /**
     * Add relation(s) to work item.
     *
     * Syntax: 
     *
     * az boards work-item relation add --id
     *                                  --relation-type
     *                                  --target-id
     *                                  [--detect {false, true}]
     *                                  [--org]
     */
    ext_azure-devops_az_boards_work_item_relation_add(): void {
    }

    /**
     * List work item relations supported in the organization.
     *
     * Syntax: 
     *
     * az boards work-item relation list-type [--detect {false, true}]
     *                                        [--org]
     */
    ext_azure-devops_az_boards_work_item_relation_list_type(): void {
    }

    /**
     * Remove relation(s) from work item.
     *
     * Syntax: 
     *
     * az boards work-item relation remove --id
     *                                     --relation-type
     *                                     --target-id
     *                                     [--detect {false, true}]
     *                                     [--org]
     *                                     [--yes]
     */
    ext_azure-devops_az_boards_work_item_relation_remove(): void {
    }

    /**
     * Get work item, fill relations with friendly name.
     *
     * Syntax: 
     *
     * az boards work-item relation show --id
     *                                   [--detect {false, true}]
     *                                   [--org]
     */
    ext_azure-devops_az_boards_work_item_relation_show(): void {
    }
}

/** Manage work items. */
class ext_azure-devops_az_boards_work_item {
    /**
     * Create a work item.
     *
     * Syntax: 
     *
     * az boards work-item create --title
     *                            --type
     *                            [--area]
     *                            [--assigned-to]
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--discussion]
     *                            [--fields]
     *                            [--iteration]
     *                            [--open]
     *                            [--org]
     *                            [--project]
     *                            [--reason]
     */
    ext_azure-devops_az_boards_work_item_create(): void {
    }

    /**
     * Delete a work item.
     *
     * Syntax: 
     *
     * az boards work-item delete --id
     *                            [--destroy]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--yes]
     */
    ext_azure-devops_az_boards_work_item_delete(): void {
    }

    /**
     * Show details for a work item.
     *
     * Syntax: 
     *
     * az boards work-item show --id
     *                          [--as-of]
     *                          [--detect {false, true}]
     *                          [--expand {all, fields, links, none, relations}]
     *                          [--fields]
     *                          [--open]
     *                          [--org]
     */
    ext_azure-devops_az_boards_work_item_show(): void {
    }

    /**
     * Update work items.
     *
     * Syntax: 
     *
     * az boards work-item update --id
     *                            [--area]
     *                            [--assigned-to]
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--discussion]
     *                            [--fields]
     *                            [--iteration]
     *                            [--open]
     *                            [--org]
     *                            [--reason]
     *                            [--state]
     *                            [--title]
     */
    ext_azure-devops_az_boards_work_item_update(): void {
    }
}

/** Manage Azure Boards. */
class ext_azure-devops_az_boards {
    /**
     * Query for a list of work items.
     *
     * Syntax: 
     *
     * az boards query [--detect {false, true}]
     *                 [--id]
     *                 [--org]
     *                 [--path]
     *                 [--project]
     *                 [--wiql]
     */
    ext_azure-devops_az_boards_query(): void {
    }
}

/** Manage organization banner. */
class ext_azure-devops_az_devops_admin_banner {
    /**
     * Add a new banner and immediately show it.
     *
     * Syntax: 
     *
     * az devops admin banner add --message
     *                            [--detect {false, true}]
     *                            [--expiration]
     *                            [--id]
     *                            [--org]
     *                            [--type {error, info, warning}]
     */
    ext_azure-devops_az_devops_admin_banner_add(): void {
    }

    /**
     * List banners.
     *
     * Syntax: 
     *
     * az devops admin banner list [--detect {false, true}]
     *                             [--org]
     */
    ext_azure-devops_az_devops_admin_banner_list(): void {
    }

    /**
     * Remove a banner.
     *
     * Syntax: 
     *
     * az devops admin banner remove --id
     *                               [--detect {false, true}]
     *                               [--org]
     */
    ext_azure-devops_az_devops_admin_banner_remove(): void {
    }

    /**
     * Show details for a banner.
     *
     * Syntax: 
     *
     * az devops admin banner show --id
     *                             [--detect {false, true}]
     *                             [--org]
     */
    ext_azure-devops_az_devops_admin_banner_show(): void {
    }

    /**
     * Update the message, level, or expiration date for a banner.
     *
     * Syntax: 
     *
     * az devops admin banner update --id
     *                               [--detect {false, true}]
     *                               [--expiration]
     *                               [--message]
     *                               [--org]
     *                               [--type {error, info, warning}]
     */
    ext_azure-devops_az_devops_admin_banner_update(): void {
    }
}

/** Manage administration operations. */
class ext_azure-devops_az_devops_admin {
}

/** Manage extensions. */
class ext_azure-devops_az_devops_extension {
    /**
     * Disable an extension.
     *
     * Syntax: 
     *
     * az devops extension disable --extension-id
     *                             --publisher-id
     *                             [--detect {false, true}]
     *                             [--org]
     */
    ext_azure-devops_az_devops_extension_disable(): void {
    }

    /**
     * Enable an extension.
     *
     * Syntax: 
     *
     * az devops extension enable --extension-id
     *                            --publisher-id
     *                            [--detect {false, true}]
     *                            [--org]
     */
    ext_azure-devops_az_devops_extension_enable(): void {
    }

    /**
     * Install an extension.
     *
     * Syntax: 
     *
     * az devops extension install --extension-id
     *                             --publisher-id
     *                             [--detect {false, true}]
     *                             [--org]
     */
    ext_azure-devops_az_devops_extension_install(): void {
    }

    /**
     * List extensions installed in an organization.
     *
     * Syntax: 
     *
     * az devops extension list [--detect {false, true}]
     *                          [--include-built-in {false, true}]
     *                          [--include-disabled {false, true}]
     *                          [--org]
     */
    ext_azure-devops_az_devops_extension_list(): void {
    }

    /**
     * Search extensions from marketplace.
     *
     * Syntax: 
     *
     * az devops extension search --search-query
     */
    ext_azure-devops_az_devops_extension_search(): void {
    }

    /**
     * Get detail of single extension.
     *
     * Syntax: 
     *
     * az devops extension show --extension-id
     *                          --publisher-id
     *                          [--detect {false, true}]
     *                          [--org]
     */
    ext_azure-devops_az_devops_extension_show(): void {
    }

    /**
     * Uninstall an extension.
     *
     * Syntax: 
     *
     * az devops extension uninstall --extension-id
     *                               --publisher-id
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--yes]
     */
    ext_azure-devops_az_devops_extension_uninstall(): void {
    }
}

/** Manage team projects. */
class ext_azure-devops_az_devops_project {
    /**
     * Create a team project.
     *
     * Syntax: 
     *
     * az devops project create --name
     *                          [--description]
     *                          [--detect {false, true}]
     *                          [--open]
     *                          [--org]
     *                          [--process]
     *                          [--source-control {git, tfvc}]
     *                          [--visibility {private, public}]
     */
    ext_azure-devops_az_devops_project_create(): void {
    }

    /**
     * Delete team project.
     *
     * Syntax: 
     *
     * az devops project delete --id
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--yes]
     */
    ext_azure-devops_az_devops_project_delete(): void {
    }

    /**
     * List team projects.
     *
     * Syntax: 
     *
     * az devops project list [--continuation-token]
     *                        [--detect {false, true}]
     *                        [--get-default-team-image-url {false, true}]
     *                        [--org]
     *                        [--skip]
     *                        [--state-filter {all, createPending, deleted, deleting, new, unchanged, wellFormed}]
     *                        [--top]
     */
    ext_azure-devops_az_devops_project_list(): void {
    }

    /**
     * Show team project.
     *
     * Syntax: 
     *
     * az devops project show --project
     *                        [--detect {false, true}]
     *                        [--open]
     *                        [--org]
     */
    ext_azure-devops_az_devops_project_show(): void {
    }
}

/** Manage memberships for security groups. */
class ext_azure-devops_az_devops_security_group_membership {
    /**
     * Add membership.
     *
     * Syntax: 
     *
     * az devops security group membership add --group-id
     *                                         --member-id
     *                                         [--detect {false, true}]
     *                                         [--org]
     */
    ext_azure-devops_az_devops_security_group_membership_add(): void {
    }

    /**
     * List memberships for a group or user.
     *
     * Syntax: 
     *
     * az devops security group membership list --id
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--relationship {memberof, members}]
     */
    ext_azure-devops_az_devops_security_group_membership_list(): void {
    }

    /**
     * Remove membership.
     *
     * Syntax: 
     *
     * az devops security group membership remove --group-id
     *                                            --member-id
     *                                            [--detect {false, true}]
     *                                            [--org]
     *                                            [--yes]
     */
    ext_azure-devops_az_devops_security_group_membership_remove(): void {
    }
}

/** Manage security groups. */
class ext_azure-devops_az_devops_security_group {
    /**
     * Create a new Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group create [--description]
     *                                 [--detect {false, true}]
     *                                 [--email-id]
     *                                 [--groups]
     *                                 [--name]
     *                                 [--org]
     *                                 [--origin-id]
     *                                 [--project]
     *                                 [--scope {organization, project}]
     */
    ext_azure-devops_az_devops_security_group_create(): void {
    }

    /**
     * Delete an Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group delete --id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--yes]
     */
    ext_azure-devops_az_devops_security_group_delete(): void {
    }

    /**
     * List all the groups in a project or organization.
     *
     * Syntax: 
     *
     * az devops security group list [--continuation-token]
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--scope {organization, project}]
     *                               [--subject-types]
     */
    ext_azure-devops_az_devops_security_group_list(): void {
    }

    /**
     * Show group details.
     *
     * Syntax: 
     *
     * az devops security group show --id
     *                               [--detect {false, true}]
     *                               [--org]
     */
    ext_azure-devops_az_devops_security_group_show(): void {
    }

    /**
     * Update name AND/OR description for an Azure DevOps group.
     *
     * Syntax: 
     *
     * az devops security group update --id
     *                                 [--description]
     *                                 [--detect {false, true}]
     *                                 [--name]
     *                                 [--org]
     */
    ext_azure-devops_az_devops_security_group_update(): void {
    }
}

/** Manage security namespaces. */
class ext_azure-devops_az_devops_security_permission_namespace {
    /**
     * List all available namespaces for an organization.
     *
     * Syntax: 
     *
     * az devops security permission namespace list [--detect {false, true}]
     *                                              [--local-only]
     *                                              [--org]
     */
    ext_azure-devops_az_devops_security_permission_namespace_list(): void {
    }

    /**
     * Show details of permissions available in each namespace.
     *
     * Syntax: 
     *
     * az devops security permission namespace show --id
     *                                              [--detect {false, true}]
     *                                              [--org]
     */
    ext_azure-devops_az_devops_security_permission_namespace_show(): void {
    }
}

/** Manage security permissions. */
class ext_azure-devops_az_devops_security_permission {
    /**
     * List tokens for given user/group and namespace.
     *
     * Syntax: 
     *
     * az devops security permission list --id
     *                                    --subject
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--recurse]
     *                                    [--token]
     */
    ext_azure-devops_az_devops_security_permission_list(): void {
    }

    /**
     * Reset permission for given permission bit(s).
     *
     * Syntax: 
     *
     * az devops security permission reset --id
     *                                     --permission-bit
     *                                     --subject
     *                                     --token
     *                                     [--detect {false, true}]
     *                                     [--org]
     */
    ext_azure-devops_az_devops_security_permission_reset(): void {
    }

    /**
     * Clear all permissions of this token for a user/group.
     *
     * Syntax: 
     *
     * az devops security permission reset-all --id
     *                                         --subject
     *                                         --token
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--yes]
     */
    ext_azure-devops_az_devops_security_permission_reset_all(): void {
    }

    /**
     * Show permissions for given token, namespace and user/group.
     *
     * Syntax: 
     *
     * az devops security permission show --id
     *                                    --subject
     *                                    --token
     *                                    [--detect {false, true}]
     *                                    [--org]
     */
    ext_azure-devops_az_devops_security_permission_show(): void {
    }

    /**
     * Assign allow or deny permission to given user/group.
     *
     * Syntax: 
     *
     * az devops security permission update --id
     *                                      --subject
     *                                      --token
     *                                      [--allow-bit]
     *                                      [--deny-bit]
     *                                      [--detect {false, true}]
     *                                      [--merge {false, true}]
     *                                      [--org]
     */
    ext_azure-devops_az_devops_security_permission_update(): void {
    }
}

/** Manage security related operations. */
class ext_azure-devops_az_devops_security {
}

/** Manage Azure RM service endpoints/connections. */
class ext_azure-devops_az_devops_service_endpoint_azurerm {
    /**
     * Create an Azure RM type service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint azurerm create --azure-rm-service-principal-id
     *                                           --azure-rm-subscription-id
     *                                           --azure-rm-subscription-name
     *                                           --azure-rm-tenant-id
     *                                           --name
     *                                           [--azure-rm-service-principal-certificate-path]
     *                                           [--detect {false, true}]
     *                                           [--org]
     *                                           [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_azurerm_create(): void {
    }
}

/** Manage GitHub service endpoints/connections. */
class ext_azure-devops_az_devops_service_endpoint_github {
    /**
     * Create a GitHub service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint github create --github-url
     *                                          --name
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_github_create(): void {
    }
}

/** Manage service endpoints/connections. */
class ext_azure-devops_az_devops_service_endpoint {
    /**
     * Create a service endpoint using configuration file.
     *
     * Syntax: 
     *
     * az devops service-endpoint create --service-endpoint-configuration
     *                                   [--detect {false, true}]
     *                                   [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                                   [--org]
     *                                   [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_create(): void {
    }

    /**
     * Deletes service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint delete --id
     *                                   [--deep]
     *                                   [--detect {false, true}]
     *                                   [--org]
     *                                   [--project]
     *                                   [--yes]
     */
    ext_azure-devops_az_devops_service_endpoint_delete(): void {
    }

    /**
     * List service endpoints in a project.
     *
     * Syntax: 
     *
     * az devops service-endpoint list [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_list(): void {
    }

    /**
     * Get the details of a service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint show --id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_show(): void {
    }

    /**
     * Update a service endpoint.
     *
     * Syntax: 
     *
     * az devops service-endpoint update --id
     *                                   [--detect {false, true}]
     *                                   [--enable-for-all {false, true}]
     *                                   [--org]
     *                                   [--project]
     */
    ext_azure-devops_az_devops_service_endpoint_update(): void {
    }
}

/** Manage teams. */
class ext_azure-devops_az_devops_team {
    /**
     * Create a team.
     *
     * Syntax: 
     *
     * az devops team create --name
     *                       [--description]
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     */
    ext_azure-devops_az_devops_team_create(): void {
    }

    /**
     * Delete a team.
     *
     * Syntax: 
     *
     * az devops team delete --id
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     *                       [--yes]
     */
    ext_azure-devops_az_devops_team_delete(): void {
    }

    /**
     * List all teams in a project.
     *
     * Syntax: 
     *
     * az devops team list [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--skip]
     *                     [--top]
     */
    ext_azure-devops_az_devops_team_list(): void {
    }

    /**
     * List members of a team.
     *
     * Syntax: 
     *
     * az devops team list-member --team
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--skip]
     *                            [--top]
     */
    ext_azure-devops_az_devops_team_list_member(): void {
    }

    /**
     * Show team details.
     *
     * Syntax: 
     *
     * az devops team show --team
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     */
    ext_azure-devops_az_devops_team_show(): void {
    }

    /**
     * Update a team's name and/or description.
     *
     * Syntax: 
     *
     * az devops team update --team
     *                       [--description]
     *                       [--detect {false, true}]
     *                       [--name]
     *                       [--org]
     *                       [--project]
     */
    ext_azure-devops_az_devops_team_update(): void {
    }
}

/** Manage users. */
class ext_azure-devops_az_devops_user {
    /**
     * Add user.
     *
     * Syntax: 
     *
     * az devops user add --email-id
     *                    --license-type {advanced, earlyAdopter, express, professional, stakeholder}
     *                    [--detect {false, true}]
     *                    [--org]
     *                    [--send-email-invite {false, true}]
     */
    ext_azure-devops_az_devops_user_add(): void {
    }

    /**
     * List users in an organization [except for users which are added via AAD groups].
     *
     * Syntax: 
     *
     * az devops user list [--detect {false, true}]
     *                     [--org]
     *                     [--skip]
     *                     [--top]
     */
    ext_azure-devops_az_devops_user_list(): void {
    }

    /**
     * Remove user from an organization.
     *
     * Syntax: 
     *
     * az devops user remove --user
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--yes]
     */
    ext_azure-devops_az_devops_user_remove(): void {
    }

    /**
     * Show user details.
     *
     * Syntax: 
     *
     * az devops user show --user
     *                     [--detect {false, true}]
     *                     [--org]
     */
    ext_azure-devops_az_devops_user_show(): void {
    }

    /**
     * Update license type for a user.
     *
     * Syntax: 
     *
     * az devops user update --license-type {advanced, earlyAdopter, express, professional, stakeholder}
     *                       --user
     *                       [--detect {false, true}]
     *                       [--org]
     */
    ext_azure-devops_az_devops_user_update(): void {
    }
}

/** Manage wiki pages. */
class ext_azure-devops_az_devops_wiki_page {
    /**
     * Add a new page.
     *
     * Syntax: 
     *
     * az devops wiki page create --path
     *                            --wiki
     *                            [--comment]
     *                            [--content]
     *                            [--detect {false, true}]
     *                            [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                            [--file-path]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_devops_wiki_page_create(): void {
    }

    /**
     * Delete a page.
     *
     * Syntax: 
     *
     * az devops wiki page delete --path
     *                            --wiki
     *                            [--comment]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--yes]
     */
    ext_azure-devops_az_devops_wiki_page_delete(): void {
    }

    /**
     * Get the content of a page or open a page.
     *
     * Syntax: 
     *
     * az devops wiki page show --path
     *                          --wiki
     *                          [--detect {false, true}]
     *                          [--include-content]
     *                          [--open]
     *                          [--org]
     *                          [--project]
     *                          [--version]
     */
    ext_azure-devops_az_devops_wiki_page_show(): void {
    }

    /**
     * Edit a page.
     *
     * Syntax: 
     *
     * az devops wiki page update --path
     *                            --version
     *                            --wiki
     *                            [--comment]
     *                            [--content]
     *                            [--detect {false, true}]
     *                            [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                            [--file-path]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_devops_wiki_page_update(): void {
    }
}

/** Manage wikis. */
class ext_azure-devops_az_devops_wiki {
    /**
     * Create a wiki.
     *
     * Syntax: 
     *
     * az devops wiki create [--detect {false, true}]
     *                       [--mapped-path]
     *                       [--name]
     *                       [--org]
     *                       [--project]
     *                       [--repository]
     *                       [--type {codewiki, projectwiki}]
     *                       [--version]
     */
    ext_azure-devops_az_devops_wiki_create(): void {
    }

    /**
     * Delete a wiki.
     *
     * Syntax: 
     *
     * az devops wiki delete --wiki
     *                       [--detect {false, true}]
     *                       [--org]
     *                       [--project]
     *                       [--yes]
     */
    ext_azure-devops_az_devops_wiki_delete(): void {
    }

    /**
     * List all the wikis in a project or organization.
     *
     * Syntax: 
     *
     * az devops wiki list [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--scope {organization, project}]
     */
    ext_azure-devops_az_devops_wiki_list(): void {
    }

    /**
     * Show details of a wiki.
     *
     * Syntax: 
     *
     * az devops wiki show --wiki
     *                     [--detect {false, true}]
     *                     [--open]
     *                     [--org]
     *                     [--project]
     */
    ext_azure-devops_az_devops_wiki_show(): void {
    }
}

/** Manage Azure DevOps organization level operations. */
class ext_azure-devops_az_devops {
    /**
     * Configure the Azure DevOps CLI or view your configuration.
     *
     * Syntax: 
     *
     * az devops configure [--defaults]
     *                     [--list]
     *                     [--use-git-aliases {false, true}]
     */
    ext_azure-devops_az_devops_configure(): void {
    }

    /**
     * Displays information on how to provide feedback to the Azure DevOps CLI team.
     *
     * Syntax: 
     *
     * az devops feedback
     */
    ext_azure-devops_az_devops_feedback(): void {
    }

    /**
     * This command will invoke request for any DevOps area and resource. Please use only json output as the response of this command is not fixed. Helpful docs - <a href="https://docs.microsoft.com/en-us/rest/api/azure/devops/">https://docs.microsoft.com/en-us/rest/api/azure/devops/</a>.
     *
     * Syntax: 
     *
     * az devops invoke [--accept-media-type]
     *                  [--api-version]
     *                  [--area]
     *                  [--detect {false, true}]
     *                  [--encoding {ascii, utf-16be, utf-16le, utf-8}]
     *                  [--http-method {DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT}]
     *                  [--in-file]
     *                  [--media-type]
     *                  [--org]
     *                  [--out-file]
     *                  [--query-parameters]
     *                  [--resource]
     *                  [--route-parameters]
     */
    ext_azure-devops_az_devops_invoke(): void {
    }

    /**
     * Set the credential (PAT) to use for a particular organization.
     *
     * Syntax: 
     *
     * az devops login [--org]
     */
    ext_azure-devops_az_devops_login(): void {
    }

    /**
     * Clear the credential for all or a particular organization.
     *
     * Syntax: 
     *
     * az devops logout [--org]
     */
    ext_azure-devops_az_devops_logout(): void {
    }
}

/** */
class ext_azure-devops_az {
}

/** Manage agents. */
class ext_azure-devops_az_pipelines_agent {
    /**
     * Get a list of agents in a pool.
     *
     * Syntax: 
     *
     * az pipelines agent list --pool-id
     *                         [--agent-name]
     *                         [--demands]
     *                         [--detect {false, true}]
     *                         [--include-assigned-request {false, true}]
     *                         [--include-capabilities {false, true}]
     *                         [--include-last-completed-request {false, true}]
     *                         [--org]
     */
    ext_azure-devops_az_pipelines_agent_list(): void {
    }

    /**
     * Show agent details.
     *
     * Syntax: 
     *
     * az pipelines agent show --agent-id
     *                         --pool-id
     *                         [--detect {false, true}]
     *                         [--include-assigned-request {false, true}]
     *                         [--include-capabilities {false, true}]
     *                         [--include-last-completed-request {false, true}]
     *                         [--org]
     */
    ext_azure-devops_az_pipelines_agent_show(): void {
    }
}

/** Manage build definitions. */
class ext_azure-devops_az_pipelines_build_definition {
    /**
     * List build definitions.
     *
     * Syntax: 
     *
     * az pipelines build definition list [--detect {false, true}]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     *                                    [--repository]
     *                                    [--repository-type {bitbucket, git, github, githubenterprise, svn, tfsgit, tfsversioncontrol}]
     *                                    [--top]
     */
    ext_azure-devops_az_pipelines_build_definition_list(): void {
    }

    /**
     * Get the details of a build definition.
     *
     * Syntax: 
     *
     * az pipelines build definition show [--detect {false, true}]
     *                                    [--id]
     *                                    [--name]
     *                                    [--open]
     *                                    [--org]
     *                                    [--project]
     */
    ext_azure-devops_az_pipelines_build_definition_show(): void {
    }
}

/** Manage build tags. */
class ext_azure-devops_az_pipelines_build_tag {
    /**
     * Add tag(s) for a build.
     *
     * Syntax: 
     *
     * az pipelines build tag add --build-id
     *                            --tags
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_pipelines_build_tag_add(): void {
    }

    /**
     * Delete a build tag.
     *
     * Syntax: 
     *
     * az pipelines build tag delete --build-id
     *                               --tag
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     */
    ext_azure-devops_az_pipelines_build_tag_delete(): void {
    }

    /**
     * Get tags for a build.
     *
     * Syntax: 
     *
     * az pipelines build tag list --build-id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--project]
     */
    ext_azure-devops_az_pipelines_build_tag_list(): void {
    }
}

/** Manage builds. */
class ext_azure-devops_az_pipelines_build {
    /**
     * List build results.
     *
     * Syntax: 
     *
     * az pipelines build list [--branch]
     *                         [--definition-ids]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--reason {all, batchedCI, buildCompletion, checkInShelveset, individualCI, manual, pullRequest, schedule, triggered, userCreated, validateShelveset}]
     *                         [--requested-for]
     *                         [--result {canceled, failed, none, partiallySucceeded, succeeded}]
     *                         [--status {all, cancelling, completed, inProgress, none, notStarted, postponed}]
     *                         [--tags]
     *                         [--top]
     */
    ext_azure-devops_az_pipelines_build_list(): void {
    }

    /**
     * Request (queue) a build.
     *
     * Syntax: 
     *
     * az pipelines build queue [--branch]
     *                          [--commit-id]
     *                          [--definition-id]
     *                          [--definition-name]
     *                          [--detect {false, true}]
     *                          [--open]
     *                          [--org]
     *                          [--project]
     *                          [--queue-id]
     *                          [--variables]
     */
    ext_azure-devops_az_pipelines_build_queue(): void {
    }

    /**
     * Get the details of a build.
     *
     * Syntax: 
     *
     * az pipelines build show --id
     *                         [--detect {false, true}]
     *                         [--open]
     *                         [--org]
     *                         [--project]
     */
    ext_azure-devops_az_pipelines_build_show(): void {
    }
}

/** Manage folders for organizing pipelines. */
class ext_azure-devops_az_pipelines_folder {
    /**
     * Create a folder.
     *
     * Syntax: 
     *
     * az pipelines folder create --path
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_pipelines_folder_create(): void {
    }

    /**
     * Delete a folder.
     *
     * Syntax: 
     *
     * az pipelines folder delete --path
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--yes]
     */
    ext_azure-devops_az_pipelines_folder_delete(): void {
    }

    /**
     * List all folders.
     *
     * Syntax: 
     *
     * az pipelines folder list [--detect {false, true}]
     *                          [--org]
     *                          [--path]
     *                          [--project]
     *                          [--query-order {Asc, Desc, None}]
     */
    ext_azure-devops_az_pipelines_folder_list(): void {
    }

    /**
     * Update a folder name or description.
     *
     * Syntax: 
     *
     * az pipelines folder update --path
     *                            [--detect {false, true}]
     *                            [--new-description]
     *                            [--new-path]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_pipelines_folder_update(): void {
    }
}

/** Manage agent pools. */
class ext_azure-devops_az_pipelines_pool {
    /**
     * List agent pools.
     *
     * Syntax: 
     *
     * az pipelines pool list [--action {manage, none, use}]
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--pool-name]
     *                        [--pool-type {automation, deployment}]
     */
    ext_azure-devops_az_pipelines_pool_list(): void {
    }

    /**
     * Show agent pool details.
     *
     * Syntax: 
     *
     * az pipelines pool show --id
     *                        [--action {manage, none, use}]
     *                        [--detect {false, true}]
     *                        [--org]
     */
    ext_azure-devops_az_pipelines_pool_show(): void {
    }
}

/** Manage agent queues. */
class ext_azure-devops_az_pipelines_queue {
    /**
     * List agent queues.
     *
     * Syntax: 
     *
     * az pipelines queue list [--action {manage, none, use}]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--queue-name]
     */
    ext_azure-devops_az_pipelines_queue_list(): void {
    }

    /**
     * Show details of agent queue.
     *
     * Syntax: 
     *
     * az pipelines queue show --id
     *                         [--action {manage, none, use}]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     */
    ext_azure-devops_az_pipelines_queue_show(): void {
    }
}

/** Manage release definitions. */
class ext_azure-devops_az_pipelines_release_definition {
    /**
     * List release definitions.
     *
     * Syntax: 
     *
     * az pipelines release definition list [--artifact-source-id]
     *                                      [--artifact-type {build, externaltfsbuild, git, github, jenkins, tfvc}]
     *                                      [--detect {false, true}]
     *                                      [--name]
     *                                      [--org]
     *                                      [--project]
     *                                      [--top]
     */
    ext_azure-devops_az_pipelines_release_definition_list(): void {
    }

    /**
     * Get the details of a release definition.
     *
     * Syntax: 
     *
     * az pipelines release definition show [--detect {false, true}]
     *                                      [--id]
     *                                      [--name]
     *                                      [--open]
     *                                      [--org]
     *                                      [--project]
     */
    ext_azure-devops_az_pipelines_release_definition_show(): void {
    }
}

/** Manage releases. */
class ext_azure-devops_az_pipelines_release {
    /**
     * Request (create) a release.
     *
     * Syntax: 
     *
     * az pipelines release create [--artifact-metadata-list]
     *                             [--definition-id]
     *                             [--definition-name]
     *                             [--description]
     *                             [--detect {false, true}]
     *                             [--open]
     *                             [--org]
     *                             [--project]
     */
    ext_azure-devops_az_pipelines_release_create(): void {
    }

    /**
     * List release results.
     *
     * Syntax: 
     *
     * az pipelines release list [--definition-id]
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--project]
     *                           [--source-branch]
     *                           [--status]
     *                           [--top]
     */
    ext_azure-devops_az_pipelines_release_list(): void {
    }

    /**
     * Get the details of a release.
     *
     * Syntax: 
     *
     * az pipelines release show --id
     *                           [--detect {false, true}]
     *                           [--open]
     *                           [--org]
     *                           [--project]
     */
    ext_azure-devops_az_pipelines_release_show(): void {
    }
}

/** Manage pipeline run artifacts. */
class ext_azure-devops_az_pipelines_runs_artifact {
    /**
     * Download a pipeline artifact.
     *
     * Syntax: 
     *
     * az pipelines runs artifact download --artifact-name
     *                                     --path
     *                                     --run-id
     *                                     [--detect {false, true}]
     *                                     [--org]
     *                                     [--project]
     */
    ext_azure-devops_az_pipelines_runs_artifact_download(): void {
    }

    /**
     * List artifacts associated with a run.
     *
     * Syntax: 
     *
     * az pipelines runs artifact list --run-id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     */
    ext_azure-devops_az_pipelines_runs_artifact_list(): void {
    }

    /**
     * Upload a pipeline artifact.
     *
     * Syntax: 
     *
     * az pipelines runs artifact upload --artifact-name
     *                                   --path
     *                                   --run-id
     *                                   [--detect {false, true}]
     *                                   [--org]
     *                                   [--project]
     */
    ext_azure-devops_az_pipelines_runs_artifact_upload(): void {
    }
}

/** Manage pipeline run tags. */
class ext_azure-devops_az_pipelines_runs_tag {
    /**
     * Add tag(s) for a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs tag add --run-id
     *                           --tags
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--project]
     */
    ext_azure-devops_az_pipelines_runs_tag_add(): void {
    }

    /**
     * Delete a pipeline run tag.
     *
     * Syntax: 
     *
     * az pipelines runs tag delete --run-id
     *                              --tag
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--project]
     */
    ext_azure-devops_az_pipelines_runs_tag_delete(): void {
    }

    /**
     * Get tags for a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs tag list --run-id
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     */
    ext_azure-devops_az_pipelines_runs_tag_list(): void {
    }
}

/** Manage pipeline runs. */
class ext_azure-devops_az_pipelines_runs {
    /**
     * List the pipeline runs in a project.
     *
     * Syntax: 
     *
     * az pipelines runs list [--branch]
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--pipeline-ids]
     *                        [--project]
     *                        [--query-order {FinishTimeAsc, FinishTimeDesc, QueueTimeAsc, QueueTimeDesc, StartTimeAsc, StartTimeDesc}]
     *                        [--reason {all, batchedCI, buildCompletion, checkInShelveset, individualCI, manual, pullRequest, schedule, triggered, userCreated, validateShelveset}]
     *                        [--requested-for]
     *                        [--result {canceled, failed, none, partiallySucceeded, succeeded}]
     *                        [--status {all, cancelling, completed, inProgress, none, notStarted, postponed}]
     *                        [--tags]
     *                        [--top]
     */
    ext_azure-devops_az_pipelines_runs_list(): void {
    }

    /**
     * Show details of a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs show --id
     *                        [--detect {false, true}]
     *                        [--open]
     *                        [--org]
     *                        [--project]
     */
    ext_azure-devops_az_pipelines_runs_show(): void {
    }
}

/** Manage variables in a variable group. */
class ext_azure-devops_az_pipelines_variable_group_variable {
    /**
     * Add a variable to a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable create --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--org]
     *                                             [--project]
     *                                             [--secret {false, true}]
     *                                             [--value]
     */
    ext_azure-devops_az_pipelines_variable_group_variable_create(): void {
    }

    /**
     * Delete a variable from variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable delete --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--org]
     *                                             [--project]
     *                                             [--yes]
     */
    ext_azure-devops_az_pipelines_variable_group_variable_delete(): void {
    }

    /**
     * List the variables in a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable list --group-id
     *                                           [--detect {false, true}]
     *                                           [--org]
     *                                           [--project]
     */
    ext_azure-devops_az_pipelines_variable_group_variable_list(): void {
    }

    /**
     * Update a variable in a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable update --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--new-name]
     *                                             [--org]
     *                                             [--project]
     *                                             [--prompt-value {false, true}]
     *                                             [--secret {false, true}]
     *                                             [--value]
     */
    ext_azure-devops_az_pipelines_variable_group_variable_update(): void {
    }
}

/** Manage variable groups. */
class ext_azure-devops_az_pipelines_variable_group {
    /**
     * Create a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group create --name
     *                                    --variables
     *                                    [--authorize {false, true}]
     *                                    [--description]
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     */
    ext_azure-devops_az_pipelines_variable_group_create(): void {
    }

    /**
     * Delete a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group delete --group-id
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     *                                    [--yes]
     */
    ext_azure-devops_az_pipelines_variable_group_delete(): void {
    }

    /**
     * List variable groups.
     *
     * Syntax: 
     *
     * az pipelines variable-group list [--action {manage, none, use}]
     *                                  [--continuation-token]
     *                                  [--detect {false, true}]
     *                                  [--group-name]
     *                                  [--org]
     *                                  [--project]
     *                                  [--query-order {Asc, Desc}]
     *                                  [--top]
     */
    ext_azure-devops_az_pipelines_variable_group_list(): void {
    }

    /**
     * Show variable group details.
     *
     * Syntax: 
     *
     * az pipelines variable-group show --group-id
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     */
    ext_azure-devops_az_pipelines_variable_group_show(): void {
    }

    /**
     * Update a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group update --group-id
     *                                    [--authorize {false, true}]
     *                                    [--description]
     *                                    [--detect {false, true}]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     */
    ext_azure-devops_az_pipelines_variable_group_update(): void {
    }
}

/** Manage pipeline variables. */
class ext_azure-devops_az_pipelines_variable {
    /**
     * Add a variable to a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable create --name
     *                              [--allow-override {false, true}]
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--secret {false, true}]
     *                              [--value]
     */
    ext_azure-devops_az_pipelines_variable_create(): void {
    }

    /**
     * Delete a variable from pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable delete --name
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--yes]
     */
    ext_azure-devops_az_pipelines_variable_delete(): void {
    }

    /**
     * List the variables in a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable list [--detect {false, true}]
     *                            [--org]
     *                            [--pipeline-id]
     *                            [--pipeline-name]
     *                            [--project]
     */
    ext_azure-devops_az_pipelines_variable_list(): void {
    }

    /**
     * Update a variable in a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable update --name
     *                              [--allow-override {false, true}]
     *                              [--detect {false, true}]
     *                              [--new-name]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--prompt-value {false, true}]
     *                              [--secret {false, true}]
     *                              [--value]
     */
    ext_azure-devops_az_pipelines_variable_update(): void {
    }
}

/** Manage Azure Pipelines. */
class ext_azure-devops_az_pipelines {
    /**
     * Create a new Azure Pipeline (YAML based).
     *
     * Syntax: 
     *
     * az pipelines create --name
     *                     [--branch]
     *                     [--description]
     *                     [--detect {false, true}]
     *                     [--folder-path]
     *                     [--org]
     *                     [--project]
     *                     [--queue-id]
     *                     [--repository]
     *                     [--repository-type {github, tfsgit}]
     *                     [--service-connection]
     *                     [--skip-first-run {false, true}]
     *                     [--yaml-path]
     */
    ext_azure-devops_az_pipelines_create(): void {
    }

    /**
     * Delete a pipeline.
     *
     * Syntax: 
     *
     * az pipelines delete --id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--yes]
     */
    ext_azure-devops_az_pipelines_delete(): void {
    }

    /**
     * List pipelines.
     *
     * Syntax: 
     *
     * az pipelines list [--detect {false, true}]
     *                   [--folder-path]
     *                   [--name]
     *                   [--org]
     *                   [--project]
     *                   [--query-order {ModifiedAsc, ModifiedDesc, NameAsc, NameDesc, None}]
     *                   [--repository]
     *                   [--repository-type {bitbucket, git, github, githubenterprise, svn, tfsgit, tfsversioncontrol}]
     *                   [--top]
     */
    ext_azure-devops_az_pipelines_list(): void {
    }

    /**
     * Queue (run) a pipeline.
     *
     * Syntax: 
     *
     * az pipelines run [--branch]
     *                  [--commit-id]
     *                  [--detect {false, true}]
     *                  [--folder-path]
     *                  [--id]
     *                  [--name]
     *                  [--open]
     *                  [--org]
     *                  [--project]
     *                  [--variables]
     */
    ext_azure-devops_az_pipelines_run(): void {
    }

    /**
     * Get the details of a pipeline.
     *
     * Syntax: 
     *
     * az pipelines show [--detect {false, true}]
     *                   [--folder-path]
     *                   [--id]
     *                   [--name]
     *                   [--open]
     *                   [--org]
     *                   [--project]
     */
    ext_azure-devops_az_pipelines_show(): void {
    }

    /**
     * Update a pipeline.
     *
     * Syntax: 
     *
     * az pipelines update [--branch]
     *                     [--description]
     *                     [--detect {false, true}]
     *                     [--id]
     *                     [--name]
     *                     [--new-folder-path]
     *                     [--new-name]
     *                     [--org]
     *                     [--project]
     *                     [--queue-id]
     *                     [--yaml-path]
     */
    ext_azure-devops_az_pipelines_update(): void {
    }
}

/** Manage Git repositories import. */
class ext_azure-devops_az_repos_import {
    /**
     * Create a git import request.
     *
     * Syntax: 
     *
     * az repos import create --git-source-url
     *                        [--detect {false, true}]
     *                        [--git-service-endpoint-id]
     *                        [--org]
     *                        [--project]
     *                        [--repository]
     *                        [--requires-authorization]
     *                        [--user-name]
     */
    ext_azure-devops_az_repos_import_create(): void {
    }
}

/** Manage approver count policy. */
class ext_azure-devops_az_repos_policy_approver_count {
    /**
     * Create approver count policy.
     *
     * Syntax: 
     *
     * az repos policy approver-count create --allow-downvotes {false, true}
     *                                       --blocking {false, true}
     *                                       --branch
     *                                       --creator-vote-counts {false, true}
     *                                       --enabled {false, true}
     *                                       --minimum-approver-count
     *                                       --repository-id
     *                                       --reset-on-source-push {false, true}
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--org]
     *                                       [--project]
     */
    ext_azure-devops_az_repos_policy_approver_count_create(): void {
    }

    /**
     * Update approver count policy.
     *
     * Syntax: 
     *
     * az repos policy approver-count update --id
     *                                       [--allow-downvotes {false, true}]
     *                                       [--blocking {false, true}]
     *                                       [--branch]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--creator-vote-counts {false, true}]
     *                                       [--detect {false, true}]
     *                                       [--enabled {false, true}]
     *                                       [--minimum-approver-count]
     *                                       [--org]
     *                                       [--project]
     *                                       [--repository-id]
     *                                       [--reset-on-source-push {false, true}]
     */
    ext_azure-devops_az_repos_policy_approver_count_update(): void {
    }
}

/** Manage build policy. */
class ext_azure-devops_az_repos_policy_build {
    /**
     * Create build policy.
     *
     * Syntax: 
     *
     * az repos policy build create --blocking {false, true}
     *                              --branch
     *                              --build-definition-id
     *                              --display-name
     *                              --enabled {false, true}
     *                              --manual-queue-only {false, true}
     *                              --queue-on-source-update-only {false, true}
     *                              --repository-id
     *                              --valid-duration
     *                              [--branch-match-type {exact, prefix}]
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--path-filter]
     *                              [--project]
     */
    ext_azure-devops_az_repos_policy_build_create(): void {
    }

    /**
     * Update build policy.
     *
     * Syntax: 
     *
     * az repos policy build update --id
     *                              [--blocking {false, true}]
     *                              [--branch]
     *                              [--branch-match-type {exact, prefix}]
     *                              [--build-definition-id]
     *                              [--detect {false, true}]
     *                              [--display-name]
     *                              [--enabled {false, true}]
     *                              [--manual-queue-only {false, true}]
     *                              [--org]
     *                              [--path-filter]
     *                              [--project]
     *                              [--queue-on-source-update-only {false, true}]
     *                              [--repository-id]
     *                              [--valid-duration]
     */
    ext_azure-devops_az_repos_policy_build_update(): void {
    }
}

/** Manage case enforcement policy. */
class ext_azure-devops_az_repos_policy_case_enforcement {
    /**
     * Create case enforcement policy.
     *
     * Syntax: 
     *
     * az repos policy case-enforcement create --blocking {false, true}
     *                                         --enabled {false, true}
     *                                         --repository-id
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--project]
     */
    ext_azure-devops_az_repos_policy_case_enforcement_create(): void {
    }

    /**
     * Update case enforcement policy.
     *
     * Syntax: 
     *
     * az repos policy case-enforcement update --id
     *                                         [--blocking {false, true}]
     *                                         [--detect {false, true}]
     *                                         [--enabled {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--repository-id]
     */
    ext_azure-devops_az_repos_policy_case_enforcement_update(): void {
    }
}

/** Manage comment required policy. */
class ext_azure-devops_az_repos_policy_comment_required {
    /**
     * Create comment resolution required policy.
     *
     * Syntax: 
     *
     * az repos policy comment-required create --blocking {false, true}
     *                                         --branch
     *                                         --enabled {false, true}
     *                                         --repository-id
     *                                         [--branch-match-type {exact, prefix}]
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--project]
     */
    ext_azure-devops_az_repos_policy_comment_required_create(): void {
    }

    /**
     * Update comment resolution required policy.
     *
     * Syntax: 
     *
     * az repos policy comment-required update --id
     *                                         [--blocking {false, true}]
     *                                         [--branch]
     *                                         [--branch-match-type {exact, prefix}]
     *                                         [--detect {false, true}]
     *                                         [--enabled {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--repository-id]
     */
    ext_azure-devops_az_repos_policy_comment_required_update(): void {
    }
}

/** Manage file size policy. */
class ext_azure-devops_az_repos_policy_file_size {
    /**
     * Create file size policy.
     *
     * Syntax: 
     *
     * az repos policy file-size create --blocking {false, true}
     *                                  --enabled {false, true}
     *                                  --maximum-git-blob-size
     *                                  --repository-id
     *                                  --use-uncompressed-size {false, true}
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     */
    ext_azure-devops_az_repos_policy_file_size_create(): void {
    }

    /**
     * Update file size policy.
     *
     * Syntax: 
     *
     * az repos policy file-size update --id
     *                                  [--blocking {false, true}]
     *                                  [--detect {false, true}]
     *                                  [--enabled {false, true}]
     *                                  [--maximum-git-blob-size]
     *                                  [--org]
     *                                  [--project]
     *                                  [--repository-id]
     *                                  [--use-uncompressed-size {false, true}]
     */
    ext_azure-devops_az_repos_policy_file_size_update(): void {
    }
}

/** Manage merge strategy policy. */
class ext_azure-devops_az_repos_policy_merge_strategy {
    /**
     * Create merge strategy policy.
     *
     * Syntax: 
     *
     * az repos policy merge-strategy create --blocking {false, true}
     *                                       --branch
     *                                       --enabled {false, true}
     *                                       --repository-id
     *                                       [--allow-no-fast-forward {false, true}]
     *                                       [--allow-rebase {false, true}]
     *                                       [--allow-rebase-merge {false, true}]
     *                                       [--allow-squash {false, true}]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--org]
     *                                       [--project]
     *                                       [--use-squash-merge {false, true}]
     */
    ext_azure-devops_az_repos_policy_merge_strategy_create(): void {
    }

    /**
     * Update merge strategy policy.
     *
     * Syntax: 
     *
     * az repos policy merge-strategy update --id
     *                                       [--allow-no-fast-forward {false, true}]
     *                                       [--allow-rebase {false, true}]
     *                                       [--allow-rebase-merge {false, true}]
     *                                       [--allow-squash {false, true}]
     *                                       [--blocking {false, true}]
     *                                       [--branch]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--enabled {false, true}]
     *                                       [--org]
     *                                       [--project]
     *                                       [--repository-id]
     *                                       [--use-squash-merge {false, true}]
     */
    ext_azure-devops_az_repos_policy_merge_strategy_update(): void {
    }
}

/** Manage required reviewer policy. */
class ext_azure-devops_az_repos_policy_required_reviewer {
    /**
     * Create required reviewer policy.
     *
     * Syntax: 
     *
     * az repos policy required-reviewer create --blocking {false, true}
     *                                          --branch
     *                                          --enabled {false, true}
     *                                          --message
     *                                          --repository-id
     *                                          --required-reviewer-ids
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--path-filter]
     *                                          [--project]
     */
    ext_azure-devops_az_repos_policy_required_reviewer_create(): void {
    }

    /**
     * Update required reviewer policy.
     *
     * Syntax: 
     *
     * az repos policy required-reviewer update --id
     *                                          [--blocking {false, true}]
     *                                          [--branch]
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--enabled {false, true}]
     *                                          [--message]
     *                                          [--org]
     *                                          [--path-filter]
     *                                          [--project]
     *                                          [--repository-id]
     *                                          [--required-reviewer-ids]
     */
    ext_azure-devops_az_repos_policy_required_reviewer_update(): void {
    }
}

/** Manage work item linking policy. */
class ext_azure-devops_az_repos_policy_work_item_linking {
    /**
     * Create work item linking policy.
     *
     * Syntax: 
     *
     * az repos policy work-item-linking create --blocking {false, true}
     *                                          --branch
     *                                          --enabled {false, true}
     *                                          --repository-id
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     */
    ext_azure-devops_az_repos_policy_work_item_linking_create(): void {
    }

    /**
     * Update work item linking policy.
     *
     * Syntax: 
     *
     * az repos policy work-item-linking update --id
     *                                          [--blocking {false, true}]
     *                                          [--branch]
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--enabled {false, true}]
     *                                          [--org]
     *                                          [--project]
     *                                          [--repository-id]
     */
    ext_azure-devops_az_repos_policy_work_item_linking_update(): void {
    }
}

/** Manage branch policy. */
class ext_azure-devops_az_repos_policy {
    /**
     * Create a policy using a configuration file.
     *
     * Syntax: 
     *
     * az repos policy create --config
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     */
    ext_azure-devops_az_repos_policy_create(): void {
    }

    /**
     * Delete a policy.
     *
     * Syntax: 
     *
     * az repos policy delete --id
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     *                        [--yes]
     */
    ext_azure-devops_az_repos_policy_delete(): void {
    }

    /**
     * List all policies in a project.
     *
     * Syntax: 
     *
     * az repos policy list [--branch]
     *                      [--detect {false, true}]
     *                      [--org]
     *                      [--project]
     *                      [--repository-id]
     */
    ext_azure-devops_az_repos_policy_list(): void {
    }

    /**
     * Show policy details.
     *
     * Syntax: 
     *
     * az repos policy show --id
     *                      [--detect {false, true}]
     *                      [--org]
     *                      [--project]
     */
    ext_azure-devops_az_repos_policy_show(): void {
    }

    /**
     * Update a policy using a configuration file.
     *
     * Syntax: 
     *
     * az repos policy update --config
     *                        --id
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     */
    ext_azure-devops_az_repos_policy_update(): void {
    }
}

/** Manage pull request policy. */
class ext_azure-devops_az_repos_pr_policy {
    /**
     * List policies of a pull request.
     *
     * Syntax: 
     *
     * az repos pr policy list --id
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--skip]
     *                         [--top]
     */
    ext_azure-devops_az_repos_pr_policy_list(): void {
    }

    /**
     * Queue an evaluation of a policy for a pull request.
     *
     * Syntax: 
     *
     * az repos pr policy queue --evaluation-id
     *                          --id
     *                          [--detect {false, true}]
     *                          [--org]
     */
    ext_azure-devops_az_repos_pr_policy_queue(): void {
    }
}

/** Manage pull request reviewers. */
class ext_azure-devops_az_repos_pr_reviewer {
    /**
     * Add one or more reviewers to a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer add --id
     *                          --reviewers
     *                          [--detect {false, true}]
     *                          [--org]
     */
    ext_azure-devops_az_repos_pr_reviewer_add(): void {
    }

    /**
     * List reviewers of a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer list --id
     *                           [--detect {false, true}]
     *                           [--org]
     */
    ext_azure-devops_az_repos_pr_reviewer_list(): void {
    }

    /**
     * Remove one or more reviewers from a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer remove --id
     *                             --reviewers
     *                             [--detect {false, true}]
     *                             [--org]
     */
    ext_azure-devops_az_repos_pr_reviewer_remove(): void {
    }
}

/** Manage work items associated with pull requests. */
class ext_azure-devops_az_repos_pr_work_item {
    /**
     * Link one or more work items to a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item add --id
     *                           --work-items
     *                           [--detect {false, true}]
     *                           [--org]
     */
    ext_azure-devops_az_repos_pr_work_item_add(): void {
    }

    /**
     * List linked work items for a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item list --id
     *                            [--detect {false, true}]
     *                            [--org]
     */
    ext_azure-devops_az_repos_pr_work_item_list(): void {
    }

    /**
     * Unlink one or more work items from a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item remove --id
     *                              --work-items
     *                              [--detect {false, true}]
     *                              [--org]
     */
    ext_azure-devops_az_repos_pr_work_item_remove(): void {
    }
}

/** Manage pull requests. */
class ext_azure-devops_az_repos_pr {
    /**
     * Checkout the PR source branch locally, if no local changes are present.
     *
     * Syntax: 
     *
     * az repos pr checkout --id
     *                      [--remote-name]
     */
    ext_azure-devops_az_repos_pr_checkout(): void {
    }

    /**
     * Create a pull request.
     *
     * Syntax: 
     *
     * az repos pr create [--auto-complete {false, true}]
     *                    [--bypass-policy {false, true}]
     *                    [--bypass-policy-reason]
     *                    [--delete-source-branch {false, true}]
     *                    [--description]
     *                    [--detect {false, true}]
     *                    [--draft {false, true}]
     *                    [--merge-commit-message]
     *                    [--open]
     *                    [--org]
     *                    [--project]
     *                    [--repository]
     *                    [--reviewers]
     *                    [--source-branch]
     *                    [--squash {false, true}]
     *                    [--target-branch]
     *                    [--title]
     *                    [--transition-work-items {false, true}]
     *                    [--work-items]
     */
    ext_azure-devops_az_repos_pr_create(): void {
    }

    /**
     * List pull requests.
     *
     * Syntax: 
     *
     * az repos pr list [--creator]
     *                  [--detect {false, true}]
     *                  [--include-links]
     *                  [--org]
     *                  [--project]
     *                  [--repository]
     *                  [--reviewer]
     *                  [--skip]
     *                  [--source-branch]
     *                  [--status {abandoned, active, all, completed}]
     *                  [--target-branch]
     *                  [--top]
     */
    ext_azure-devops_az_repos_pr_list(): void {
    }

    /**
     * Vote on a pull request.
     *
     * Syntax: 
     *
     * az repos pr set-vote --id
     *                      --vote {approve, approve-with-suggestions, reject, reset, wait-for-author}
     *                      [--detect {false, true}]
     *                      [--org]
     */
    ext_azure-devops_az_repos_pr_set_vote(): void {
    }

    /**
     * Get the details of a pull request.
     *
     * Syntax: 
     *
     * az repos pr show --id
     *                  [--detect {false, true}]
     *                  [--open]
     *                  [--org]
     */
    ext_azure-devops_az_repos_pr_show(): void {
    }

    /**
     * Update a pull request.
     *
     * Syntax: 
     *
     * az repos pr update --id
     *                    [--auto-complete {false, true}]
     *                    [--bypass-policy {false, true}]
     *                    [--bypass-policy-reason]
     *                    [--delete-source-branch {false, true}]
     *                    [--description]
     *                    [--detect {false, true}]
     *                    [--draft {false, true}]
     *                    [--merge-commit-message]
     *                    [--org]
     *                    [--squash {false, true}]
     *                    [--status {abandoned, active, completed}]
     *                    [--title]
     *                    [--transition-work-items {false, true}]
     */
    ext_azure-devops_az_repos_pr_update(): void {
    }
}

/** Manage Git references. */
class ext_azure-devops_az_repos_ref {
    /**
     * Create a reference.
     *
     * Syntax: 
     *
     * az repos ref create --name
     *                     --object-id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     */
    ext_azure-devops_az_repos_ref_create(): void {
    }

    /**
     * Delete a reference.
     *
     * Syntax: 
     *
     * az repos ref delete --name
     *                     --object-id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     */
    ext_azure-devops_az_repos_ref_delete(): void {
    }

    /**
     * List the references.
     *
     * Syntax: 
     *
     * az repos ref list [--detect {false, true}]
     *                   [--filter]
     *                   [--org]
     *                   [--project]
     *                   [--repository]
     */
    ext_azure-devops_az_repos_ref_list(): void {
    }

    /**
     * Lock a reference.
     *
     * Syntax: 
     *
     * az repos ref lock --name
     *                   [--detect {false, true}]
     *                   [--org]
     *                   [--project]
     *                   [--repository]
     */
    ext_azure-devops_az_repos_ref_lock(): void {
    }

    /**
     * Unlock a reference.
     *
     * Syntax: 
     *
     * az repos ref unlock --name
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     */
    ext_azure-devops_az_repos_ref_unlock(): void {
    }
}

/** Manage Azure Repos. */
class ext_azure-devops_az_repos {
    /**
     * Create a Git repository in a team project.
     *
     * Syntax: 
     *
     * az repos create --name
     *                 [--detect {false, true}]
     *                 [--open]
     *                 [--org]
     *                 [--project]
     */
    ext_azure-devops_az_repos_create(): void {
    }

    /**
     * Delete a Git repository in a team project.
     *
     * Syntax: 
     *
     * az repos delete --id
     *                 [--detect {false, true}]
     *                 [--org]
     *                 [--project]
     *                 [--yes]
     */
    ext_azure-devops_az_repos_delete(): void {
    }

    /**
     * List Git repositories of a team project.
     *
     * Syntax: 
     *
     * az repos list [--detect {false, true}]
     *               [--org]
     *               [--project]
     */
    ext_azure-devops_az_repos_list(): void {
    }

    /**
     * Get the details of a Git repository.
     *
     * Syntax: 
     *
     * az repos show --repository
     *               [--detect {false, true}]
     *               [--open]
     *               [--org]
     *               [--project]
     */
    ext_azure-devops_az_repos_show(): void {
    }

    /**
     * Update the Git repository.
     *
     * Syntax: 
     *
     * az repos update --repository
     *                 [--default-branch]
     *                 [--detect {false, true}]
     *                 [--name]
     *                 [--org]
     *                 [--project]
     */
    ext_azure-devops_az_repos_update(): void {
    }
}

/** */
class ext_azure-firewall_az {
}

/** Manage and configure Azure Firewall application rule collections. */
class ext_azure-firewall_az_network_firewall_application_rule_collection {
    /**
     * Delete an Azure Firewall application rule collection.
     *
     * Syntax: 
     *
     * az network firewall application-rule collection delete --collection-name
     *                                                        --firewall-name
     *                                                        --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_collection_delete(): void {
    }

    /**
     * List Azure Firewall application rule collections.
     *
     * Syntax: 
     *
     * az network firewall application-rule collection list --firewall-name
     *                                                      --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_collection_list(): void {
    }

    /**
     * Get the details of an Azure Firewall application rule collection.
     *
     * Syntax: 
     *
     * az network firewall application-rule collection show --collection-name
     *                                                      --firewall-name
     *                                                      --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_collection_show(): void {
    }
}

/** Manage and configure Azure Firewall application rules. */
class ext_azure-firewall_az_network_firewall_application_rule {
    /**
     * Create an Azure Firewall application rule.
     *
     * Syntax: 
     *
     * az network firewall application-rule create --collection-name
     *                                             --firewall-name
     *                                             --name
     *                                             --protocols
     *                                             --resource-group
     *                                             [--action {Allow, Deny}]
     *                                             [--description]
     *                                             [--fqdn-tags]
     *                                             [--priority]
     *                                             [--source-addresses]
     *                                             [--source-ip-groups]
     *                                             [--target-fqdns]
     */
    ext_azure-firewall_az_network_firewall_application_rule_create(): void {
    }

    /**
     * Delete an Azure Firewall application rule.
     *
     * Syntax: 
     *
     * az network firewall application-rule delete --collection-name
     *                                             --firewall-name
     *                                             --name
     *                                             --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_delete(): void {
    }

    /**
     * List Azure Firewall application rules.
     *
     * Syntax: 
     *
     * az network firewall application-rule list --collection-name
     *                                           --firewall-name
     *                                           --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_list(): void {
    }

    /**
     * Get the details of an Azure Firewall application rule.
     *
     * Syntax: 
     *
     * az network firewall application-rule show --collection-name
     *                                           --firewall-name
     *                                           --name
     *                                           --resource-group
     */
    ext_azure-firewall_az_network_firewall_application_rule_show(): void {
    }
}

/** Manage and configure Azure Firewall IP configurations. */
class ext_azure-firewall_az_network_firewall_ip_config {
    /**
     * Create an Azure Firewall IP configuration.
     *
     * Syntax: 
     *
     * az network firewall ip-config create --firewall-name
     *                                      --name
     *                                      --public-ip-address
     *                                      --resource-group
     *                                      [--m-name]
     *                                      [--m-public-ip-address]
     *                                      [--m-vnet-name]
     *                                      [--vnet-name]
     */
    ext_azure-firewall_az_network_firewall_ip_config_create(): void {
    }

    /**
     * Delete an Azure Firewall IP configuration.
     *
     * Syntax: 
     *
     * az network firewall ip-config delete --firewall-name
     *                                      --name
     *                                      --resource-group
     */
    ext_azure-firewall_az_network_firewall_ip_config_delete(): void {
    }

    /**
     * List Azure Firewall IP configurations.
     *
     * Syntax: 
     *
     * az network firewall ip-config list --firewall-name
     *                                    --resource-group
     */
    ext_azure-firewall_az_network_firewall_ip_config_list(): void {
    }

    /**
     * Get the details of an Azure Firewall IP configuration.
     *
     * Syntax: 
     *
     * az network firewall ip-config show --firewall-name
     *                                    --name
     *                                    --resource-group
     */
    ext_azure-firewall_az_network_firewall_ip_config_show(): void {
    }
}

/** Manage and configure Azure Firewall Management IP configurations. */
class ext_azure-firewall_az_network_firewall_management_ip_config {
    /**
     * Get the details of an Azure Firewall Management IP configuration.
     *
     * Syntax: 
     *
     * az network firewall management-ip-config show --firewall-name
     *                                               --resource-group
     */
    ext_azure-firewall_az_network_firewall_management_ip_config_show(): void {
    }

    /**
     * Update an Azure Firewall Management IP configuration.
     *
     * Syntax: 
     *
     * az network firewall management-ip-config update --firewall-name
     *                                                 --resource-group
     *                                                 [--add]
     *                                                 [--force-string]
     *                                                 [--public-ip-address]
     *                                                 [--remove]
     *                                                 [--set]
     *                                                 [--vnet-name]
     */
    ext_azure-firewall_az_network_firewall_management_ip_config_update(): void {
    }
}

/** Manage and configure Azure Firewall NAT rules. */
class ext_azure-firewall_az_network_firewall_nat_rule_collection {
    /**
     * Delete an Azure Firewall NAT rule collection.
     *
     * Syntax: 
     *
     * az network firewall nat-rule collection delete --collection-name
     *                                                --firewall-name
     *                                                --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_collection_delete(): void {
    }

    /**
     * List Azure Firewall NAT rule collections.
     *
     * Syntax: 
     *
     * az network firewall nat-rule collection list --firewall-name
     *                                              --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_collection_list(): void {
    }

    /**
     * Get the details of an Azure Firewall NAT rule collection.
     *
     * Syntax: 
     *
     * az network firewall nat-rule collection show --collection-name
     *                                              --firewall-name
     *                                              --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_collection_show(): void {
    }
}

/** Manage and configure Azure Firewall NAT rules. */
class ext_azure-firewall_az_network_firewall_nat_rule {
    /**
     * Create an Azure Firewall NAT rule.
     *
     * Syntax: 
     *
     * az network firewall nat-rule create --collection-name
     *                                     --destination-addresses
     *                                     --destination-ports
     *                                     --firewall-name
     *                                     --name
     *                                     --protocols {Any, ICMP, TCP, UDP}
     *                                     --resource-group
     *                                     --translated-port
     *                                     [--action {Dnat, Snat}]
     *                                     [--description]
     *                                     [--priority]
     *                                     [--source-addresses]
     *                                     [--source-ip-groups]
     *                                     [--translated-address]
     *                                     [--translated-fqdn]
     */
    ext_azure-firewall_az_network_firewall_nat_rule_create(): void {
    }

    /**
     * Delete an Azure Firewall NAT rule.
     *
     * Syntax: 
     *
     * az network firewall nat-rule delete --collection-name
     *                                     --firewall-name
     *                                     --name
     *                                     --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_delete(): void {
    }

    /**
     * List Azure Firewall NAT rules.
     *
     * Syntax: 
     *
     * az network firewall nat-rule list --collection-name
     *                                   --firewall-name
     *                                   --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_list(): void {
    }

    /**
     * Get the details of an Azure Firewall NAT rule.
     *
     * Syntax: 
     *
     * az network firewall nat-rule show --collection-name
     *                                   --firewall-name
     *                                   --name
     *                                   --resource-group
     */
    ext_azure-firewall_az_network_firewall_nat_rule_show(): void {
    }
}

/** Manage and configure Azure Firewall network rule collections. */
class ext_azure-firewall_az_network_firewall_network_rule_collection {
    /**
     * Delete an Azure Firewall network rule collection.
     *
     * Syntax: 
     *
     * az network firewall network-rule collection delete --collection-name
     *                                                    --firewall-name
     *                                                    --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_collection_delete(): void {
    }

    /**
     * List Azure Firewall network rule collections.
     *
     * Syntax: 
     *
     * az network firewall network-rule collection list --firewall-name
     *                                                  --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_collection_list(): void {
    }

    /**
     * Get the details of an Azure Firewall network rule collection.
     *
     * Syntax: 
     *
     * az network firewall network-rule collection show --collection-name
     *                                                  --firewall-name
     *                                                  --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_collection_show(): void {
    }
}

/** Manage and configure Azure Firewall network rules. */
class ext_azure-firewall_az_network_firewall_network_rule {
    /**
     * Create an Azure Firewall network rule.
     *
     * Syntax: 
     *
     * az network firewall network-rule create --collection-name
     *                                         --destination-ports
     *                                         --firewall-name
     *                                         --name
     *                                         --protocols {Any, ICMP, TCP, UDP}
     *                                         --resource-group
     *                                         [--action {Allow, Deny}]
     *                                         [--description]
     *                                         [--destination-addresses]
     *                                         [--destination-fqdns]
     *                                         [--destination-ip-groups]
     *                                         [--priority]
     *                                         [--source-addresses]
     *                                         [--source-ip-groups]
     */
    ext_azure-firewall_az_network_firewall_network_rule_create(): void {
    }

    /**
     * Delete an Azure Firewall network rule. If you want to delete the last rule in a collection, please delete the collection instead.
     *
     * Syntax: 
     *
     * az network firewall network-rule delete --collection-name
     *                                         --firewall-name
     *                                         --name
     *                                         --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_delete(): void {
    }

    /**
     * List Azure Firewall network rules.
     *
     * Syntax: 
     *
     * az network firewall network-rule list --collection-name
     *                                       --firewall-name
     *                                       --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_list(): void {
    }

    /**
     * Get the details of an Azure Firewall network rule.
     *
     * Syntax: 
     *
     * az network firewall network-rule show --collection-name
     *                                       --firewall-name
     *                                       --name
     *                                       --resource-group
     */
    ext_azure-firewall_az_network_firewall_network_rule_show(): void {
    }
}

/** Manage and configure the rule of a filter collection in the rule collection group of Azure firewall policy. */
class ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_rule {
    /**
     * Add a rule into an Azure firewall policy rule collection.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection rule add --collection-name
     *                                                                      --name
     *                                                                      --policy-name
     *                                                                      --resource-group
     *                                                                      --rule-collection-group-name
     *                                                                      --rule-type {ApplicationRule, NatRule, NetworkRule}
     *                                                                      [--description]
     *                                                                      [--destination-addresses]
     *                                                                      [--destination-ip-groups]
     *                                                                      [--destination-ports]
     *                                                                      [--fqdn-tags]
     *                                                                      [--ip-protocols {Any, ICMP, TCP, UDP}]
     *                                                                      [--protocols]
     *                                                                      [--source-addresses]
     *                                                                      [--source-ip-groups]
     *                                                                      [--target-fqdns]
     *                                                                      [--translated-address]
     *                                                                      [--translated-port]
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_rule_add(): void {
    }

    /**
     * Remove a rule from an Azure firewall policy rule collection.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection rule remove --collection-name
     *                                                                         --name
     *                                                                         --policy-name
     *                                                                         --resource-group
     *                                                                         --rule-collection-group-name
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_rule_remove(): void {
    }
}

/** Manage and configure Azure firewall policy rule collections in the rule collection group. */
class ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection {
    /**
     * Add a filter collection into an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection add-filter-collection --collection-priority
     *                                                                                   --name
     *                                                                                   --policy-name
     *                                                                                   --resource-group
     *                                                                                   --rule-collection-group-name
     *                                                                                   [--action {Allow, Deny}]
     *                                                                                   [--description]
     *                                                                                   [--destination-addresses]
     *                                                                                   [--destination-ip-groups]
     *                                                                                   [--destination-ports]
     *                                                                                   [--fqdn-tags]
     *                                                                                   [--ip-protocols {Any, ICMP, TCP, UDP}]
     *                                                                                   [--protocols]
     *                                                                                   [--rule-name]
     *                                                                                   [--rule-type {ApplicationRule, NatRule, NetworkRule}]
     *                                                                                   [--source-addresses]
     *                                                                                   [--source-ip-groups]
     *                                                                                   [--target-fqdns]
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_add_filter_collection(): void {
    }

    /**
     * Add a NAT collection into an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection add-nat-collection --collection-priority
     *                                                                                --name
     *                                                                                --policy-name
     *                                                                                --resource-group
     *                                                                                --rule-collection-group-name
     *                                                                                [--action {DNAT, SNAT}]
     *                                                                                [--description]
     *                                                                                [--destination-addresses]
     *                                                                                [--destination-ports]
     *                                                                                [--ip-protocols {Any, ICMP, TCP, UDP}]
     *                                                                                [--rule-name]
     *                                                                                [--source-addresses]
     *                                                                                [--source-ip-groups]
     *                                                                                [--translated-address]
     *                                                                                [--translated-port]
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_add_nat_collection(): void {
    }

    /**
     * List all rule collections of an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection list --policy-name
     *                                                                  --resource-group
     *                                                                  --rule-collection-group-name
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_list(): void {
    }

    /**
     * Remove a rule collection from an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group collection remove --name
     *                                                                    --policy-name
     *                                                                    --resource-group
     *                                                                    --rule-collection-group-name
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_collection_remove(): void {
    }
}

/** Manage and configure Azure firewall policy rule collection group. */
class ext_azure-firewall_az_network_firewall_policy_rule_collection_group {
    /**
     * Create an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group create --name
     *                                                         --policy-name
     *                                                         --priority
     *                                                         --resource-group
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_create(): void {
    }

    /**
     * Delete an Azure Firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group delete --name
     *                                                         --policy-name
     *                                                         --resource-group
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_delete(): void {
    }

    /**
     * List all Azure firewall policy rule collection groups.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group list --policy-name
     *                                                       --resource-group
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_list(): void {
    }

    /**
     * Show an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group show --name
     *                                                       --policy-name
     *                                                       --resource-group
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_show(): void {
    }

    /**
     * Update an Azure firewall policy rule collection group.
     *
     * Syntax: 
     *
     * az network firewall policy rule-collection-group update --name
     *                                                         --policy-name
     *                                                         --resource-group
     *                                                         [--add]
     *                                                         [--force-string]
     *                                                         [--priority]
     *                                                         [--remove]
     *                                                         [--set]
     *                                                         [--tags]
     */
    ext_azure-firewall_az_network_firewall_policy_rule_collection_group_update(): void {
    }
}

/** Manage and configure Azure firewall policy. */
class ext_azure-firewall_az_network_firewall_policy {
    /**
     * Create an Azure firewall policy.
     *
     * Syntax: 
     *
     * az network firewall policy create --name
     *                                   --resource-group
     *                                   [--base-policy]
     *                                   [--dns-servers]
     *                                   [--enable-dns-proxy {false, true}]
     *                                   [--fqdns]
     *                                   [--ip-addresses]
     *                                   [--location]
     *                                   [--require-dns-proxy-for-network-rules {false, true}]
     *                                   [--tags]
     *                                   [--threat-intel-mode {Alert, Deny, Off}]
     */
    ext_azure-firewall_az_network_firewall_policy_create(): void {
    }

    /**
     * Delete an Azure firewall policy.
     *
     * Syntax: 
     *
     * az network firewall policy delete --name
     *                                   --resource-group
     */
    ext_azure-firewall_az_network_firewall_policy_delete(): void {
    }

    /**
     * List all Azure firewall policies.
     *
     * Syntax: 
     *
     * az network firewall policy list [--resource-group]
     */
    ext_azure-firewall_az_network_firewall_policy_list(): void {
    }

    /**
     * Show an Azure firewall policy.
     *
     * Syntax: 
     *
     * az network firewall policy show --name
     *                                 --resource-group
     *                                 [--expand]
     */
    ext_azure-firewall_az_network_firewall_policy_show(): void {
    }

    /**
     * Update an Azure firewall policy.
     *
     * Syntax: 
     *
     * az network firewall policy update --name
     *                                   --resource-group
     *                                   [--add]
     *                                   [--dns-servers]
     *                                   [--enable-dns-proxy {false, true}]
     *                                   [--force-string]
     *                                   [--fqdns]
     *                                   [--ip-addresses]
     *                                   [--remove]
     *                                   [--require-dns-proxy-for-network-rules {false, true}]
     *                                   [--set]
     *                                   [--tags]
     *                                   [--threat-intel-mode {Alert, Deny, Off}]
     */
    ext_azure-firewall_az_network_firewall_policy_update(): void {
    }
}

/** Manage and configure Azure Firewall Threat Intelligence Allow List. */
class ext_azure-firewall_az_network_firewall_threat_intel_allowlist {
    /**
     * Create an Azure Firewall Threat Intelligence Allow List.
     *
     * Syntax: 
     *
     * az network firewall threat-intel-allowlist create --name
     *                                                   --resource-group
     *                                                   [--fqdns]
     *                                                   [--ip-addresses]
     */
    ext_azure-firewall_az_network_firewall_threat_intel_allowlist_create(): void {
    }

    /**
     * Delete an Azure Firewall Threat Intelligence Allow List.
     *
     * Syntax: 
     *
     * az network firewall threat-intel-allowlist delete --name
     *                                                   --resource-group
     */
    ext_azure-firewall_az_network_firewall_threat_intel_allowlist_delete(): void {
    }

    /**
     * Get the details of an Azure Firewall Threat Intelligence Allow List.
     *
     * Syntax: 
     *
     * az network firewall threat-intel-allowlist show --name
     *                                                 --resource-group
     */
    ext_azure-firewall_az_network_firewall_threat_intel_allowlist_show(): void {
    }

    /**
     * Update Azure Firewall Threat Intelligence Allow List.
     *
     * Syntax: 
     *
     * az network firewall threat-intel-allowlist update --name
     *                                                   --resource-group
     *                                                   [--add]
     *                                                   [--force-string]
     *                                                   [--fqdns]
     *                                                   [--ip-addresses]
     *                                                   [--remove]
     *                                                   [--set]
     */
    ext_azure-firewall_az_network_firewall_threat_intel_allowlist_update(): void {
    }
}

/** Manage and configure Azure Firewalls. */
class ext_azure-firewall_az_network_firewall {
    /**
     * Create an Azure Firewall.
     *
     * Syntax: 
     *
     * az network firewall create --name
     *                            --resource-group
     *                            [--allow-active-ftp {false, true}]
     *                            [--count]
     *                            [--dns-servers]
     *                            [--enable-dns-proxy {false, true}]
     *                            [--firewall-policy]
     *                            [--location]
     *                            [--private-ranges]
     *                            [--require-dns-proxy-for-network-rules {false, true}]
     *                            [--sku {AZFW_Hub, AZFW_VNet}]
     *                            [--tags]
     *                            [--threat-intel-mode {Alert, Deny, Off}]
     *                            [--vhub]
     *                            [--zones {1, 2, 3}]
     */
    ext_azure-firewall_az_network_firewall_create(): void {
    }

    /**
     * Delete an Azure Firewall.
     *
     * Syntax: 
     *
     * az network firewall delete --name
     *                            --resource-group
     */
    ext_azure-firewall_az_network_firewall_delete(): void {
    }

    /**
     * List Azure Firewalls.
     *
     * Syntax: 
     *
     * az network firewall list [--resource-group]
     */
    ext_azure-firewall_az_network_firewall_list(): void {
    }

    /**
     * Gets all the Azure Firewall FQDN Tags in a subscription.
     *
     * Syntax: 
     *
     * az network firewall list-fqdn-tags
     */
    ext_azure-firewall_az_network_firewall_list_fqdn_tags(): void {
    }

    /**
     * Get the details of an Azure Firewall.
     *
     * Syntax: 
     *
     * az network firewall show --name
     *                          --resource-group
     */
    ext_azure-firewall_az_network_firewall_show(): void {
    }

    /**
     * Update an Azure Firewall.
     *
     * Syntax: 
     *
     * az network firewall update --name
     *                            --resource-group
     *                            [--add]
     *                            [--allow-active-ftp {false, true}]
     *                            [--count]
     *                            [--dns-servers]
     *                            [--enable-dns-proxy {false, true}]
     *                            [--firewall-policy]
     *                            [--force-string]
     *                            [--private-ranges]
     *                            [--public-ips]
     *                            [--remove]
     *                            [--require-dns-proxy-for-network-rules {false, true}]
     *                            [--set]
     *                            [--tags]
     *                            [--threat-intel-mode {Alert, Deny, Off}]
     *                            [--vhub]
     *                            [--zones {1, 2, 3}]
     */
    ext_azure-firewall_az_network_firewall_update(): void {
    }
}

/** Manage Azure Network resources. */
class ext_azure-firewall_az_network {
}

/** Add egress endpoints to a Digital Twins instance. */
class ext_azure-iot_az_dt_endpoint_create {
    /**
     * Adds an EventGrid Topic endpoint to a Digital Twins instance. Requires pre-created resource.
     *
     * Syntax: 
     *
     * az dt endpoint create eventgrid --dt-name
     *                                 --egg
     *                                 --egt
     *                                 --en
     *                                 [--egs]
     *                                 [--resource-group]
     *                                 [--tags]
     */
    ext_azure-iot_az_dt_endpoint_create_eventgrid(): void {
    }

    /**
     * Adds an EventHub endpoint to a Digital Twins instance. Requires pre-created resource.
     *
     * Syntax: 
     *
     * az dt endpoint create eventhub --dt-name
     *                                --eh
     *                                --ehg
     *                                --ehn
     *                                --ehp
     *                                --en
     *                                [--ehs]
     *                                [--resource-group]
     *                                [--tags]
     */
    ext_azure-iot_az_dt_endpoint_create_eventhub(): void {
    }

    /**
     * Adds a ServiceBus Topic endpoint to a Digital Twins instance. Requires pre-created resource.
     *
     * Syntax: 
     *
     * az dt endpoint create servicebus --dt-name
     *                                  --en
     *                                  --sbg
     *                                  --sbn
     *                                  --sbp
     *                                  --sbt
     *                                  [--resource-group]
     *                                  [--sbs]
     *                                  [--tags]
     */
    ext_azure-iot_az_dt_endpoint_create_servicebus(): void {
    }
}

/** Manage and configure Digital Twins instance endpoints. */
class ext_azure-iot_az_dt_endpoint {
    /**
     * Remove an endpoint from a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt endpoint delete --dt-name
     *                       --en
     *                       [--resource-group]
     */
    ext_azure-iot_az_dt_endpoint_delete(): void {
    }

    /**
     * List all egress endpoints configured on a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt endpoint list --dt-name
     *                     [--resource-group]
     */
    ext_azure-iot_az_dt_endpoint_list(): void {
    }

    /**
     * Show details of an endpoint configured on a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt endpoint show --dt-name
     *                     --en
     *                     [--resource-group]
     */
    ext_azure-iot_az_dt_endpoint_show(): void {
    }
}

/** Manage DTDL models and definitions on a Digital Twins instance. */
class ext_azure-iot_az_dt_model {
    /**
     * Uploads one or more models. When any error occurs, no models are uploaded.
     *
     * Syntax: 
     *
     * az dt model create --dt-name
     *                    [--fd]
     *                    [--models]
     *                    [--resource-group]
     */
    ext_azure-iot_az_dt_model_create(): void {
    }

    /**
     * Delete a model. A model can only be deleted if no other models reference it.
     *
     * Syntax: 
     *
     * az dt model delete --dt-name
     *                    --dtmi
     *                    [--resource-group]
     */
    ext_azure-iot_az_dt_model_delete(): void {
    }

    /**
     * List model metadata, definitions and dependencies.
     *
     * Syntax: 
     *
     * az dt model list --dt-name
     *                  [--def {false, true}]
     *                  [--dependencies-for]
     *                  [--resource-group]
     */
    ext_azure-iot_az_dt_model_list(): void {
    }

    /**
     * Retrieve a target model or model definition.
     *
     * Syntax: 
     *
     * az dt model show --dt-name
     *                  --dtmi
     *                  [--def {false, true}]
     *                  [--resource-group]
     */
    ext_azure-iot_az_dt_model_show(): void {
    }

    /**
     * Updates the metadata for a model. Currently a model can only be decommisioned.
     *
     * Syntax: 
     *
     * az dt model update --dt-name
     *                    --dtmi
     *                    [--decommission {false, true}]
     *                    [--resource-group]
     */
    ext_azure-iot_az_dt_model_update(): void {
    }
}

/** Manage RBAC role assignments for a Digital Twins instance. */
class ext_azure-iot_az_dt_role_assignment {
    /**
     * Assign a user, group or service principal to a role against a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt role-assignment create --assignee
     *                              --dt-name
     *                              --role
     *                              [--resource-group]
     */
    ext_azure-iot_az_dt_role_assignment_create(): void {
    }

    /**
     * Remove a user, group or service principal role assignment from a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt role-assignment delete --dt-name
     *                              [--assignee]
     *                              [--resource-group]
     *                              [--role]
     */
    ext_azure-iot_az_dt_role_assignment_delete(): void {
    }

    /**
     * List the existing role assignments of a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt role-assignment list --dt-name
     *                            [--include-inherited {false, true}]
     *                            [--resource-group]
     *                            [--role]
     */
    ext_azure-iot_az_dt_role_assignment_list(): void {
    }
}

/** Manage and configure event routes. */
class ext_azure-iot_az_dt_route {
    /**
     * Add an event route to a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt route create --dt-name
     *                    --en
     *                    --rn
     *                    [--filter]
     *                    [--resource-group]
     */
    ext_azure-iot_az_dt_route_create(): void {
    }

    /**
     * Remove an event route from a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt route delete --dt-name
     *                    --rn
     *                    [--resource-group]
     */
    ext_azure-iot_az_dt_route_delete(): void {
    }

    /**
     * List the configured event routes of a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt route list --dt-name
     *                  [--resource-group]
     */
    ext_azure-iot_az_dt_route_list(): void {
    }

    /**
     * Show details of an event route configured on a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt route show --dt-name
     *                  --rn
     *                  [--resource-group]
     */
    ext_azure-iot_az_dt_route_show(): void {
    }
}

/** Show and update the digital twin components of a Digital Twins instance. */
class ext_azure-iot_az_dt_twin_component {
    /**
     * Show details of a digital twin component.
     *
     * Syntax: 
     *
     * az dt twin component show --component
     *                           --dt-name
     *                           --twin-id
     *                           [--resource-group]
     */
    ext_azure-iot_az_dt_twin_component_show(): void {
    }

    /**
     * Update a digital twin component via JSON patch specification.
     *
     * Syntax: 
     *
     * az dt twin component update --component
     *                             --dt-name
     *                             --json-patch
     *                             --twin-id
     *                             [--resource-group]
     */
    ext_azure-iot_az_dt_twin_component_update(): void {
    }
}

/** Manage and configure the digital twin relationships of a Digital Twins instance. */
class ext_azure-iot_az_dt_twin_relationship {
    /**
     * Create a relationship between source and target digital twins.
     *
     * Syntax: 
     *
     * az dt twin relationship create --dt-name
     *                                --kind
     *                                --relationship-id
     *                                --source
     *                                --target
     *                                [--properties]
     *                                [--resource-group]
     */
    ext_azure-iot_az_dt_twin_relationship_create(): void {
    }

    /**
     * Delete a digital twin relationship on a Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt twin relationship delete --dt-name
     *                                --relationship-id
     *                                --source
     *                                [--resource-group]
     */
    ext_azure-iot_az_dt_twin_relationship_delete(): void {
    }

    /**
     * List the relationships of a digital twin.
     *
     * Syntax: 
     *
     * az dt twin relationship list --dt-name
     *                              --source
     *                              [--incoming {false, true}]
     *                              [--kind]
     *                              [--resource-group]
     */
    ext_azure-iot_az_dt_twin_relationship_list(): void {
    }

    /**
     * Show details of a digital twin relationship.
     *
     * Syntax: 
     *
     * az dt twin relationship show --dt-name
     *                              --relationship-id
     *                              --source
     *                              [--resource-group]
     */
    ext_azure-iot_az_dt_twin_relationship_show(): void {
    }

    /**
     * Updates the properties of a relationship between two digital twins via JSON patch specification.
     *
     * Syntax: 
     *
     * az dt twin relationship update --dt-name
     *                                --json-patch
     *                                --relationship-id
     *                                --source
     *                                [--resource-group]
     */
    ext_azure-iot_az_dt_twin_relationship_update(): void {
    }
}

/** Test and validate the event routes and endpoints of a Digital Twins instance. */
class ext_azure-iot_az_dt_twin_telemetry {
    /**
     * Sends telemetry on behalf of a digital twin. If component path is provided the emitted telemetry is on behalf of the component.
     *
     * Syntax: 
     *
     * az dt twin telemetry send --dt-name
     *                           --twin-id
     *                           [--component]
     *                           [--dt-id]
     *                           [--resource-group]
     *                           [--telemetry]
     */
    ext_azure-iot_az_dt_twin_telemetry_send(): void {
    }
}

/** Manage and configure the digital twins of a Digital Twins instance. */
class ext_azure-iot_az_dt_twin {
    /**
     * Create a digital twin on an instance.
     *
     * Syntax: 
     *
     * az dt twin create --dt-name
     *                   --dtmi
     *                   --twin-id
     *                   [--properties]
     *                   [--resource-group]
     */
    ext_azure-iot_az_dt_twin_create(): void {
    }

    /**
     * Remove a digital twin. All relationships referencing this twin must already be deleted.
     *
     * Syntax: 
     *
     * az dt twin delete --dt-name
     *                   --twin-id
     *                   [--resource-group]
     */
    ext_azure-iot_az_dt_twin_delete(): void {
    }

    /**
     * Query the digital twins of an instance. Allows traversing relationships and filtering by property values.
     *
     * Syntax: 
     *
     * az dt twin query --dt-name
     *                  --query-command
     *                  [--cost {false, true}]
     *                  [--resource-group]
     */
    ext_azure-iot_az_dt_twin_query(): void {
    }

    /**
     * Show the details of a digital twin.
     *
     * Syntax: 
     *
     * az dt twin show --dt-name
     *                 --twin-id
     *                 [--resource-group]
     */
    ext_azure-iot_az_dt_twin_show(): void {
    }

    /**
     * Update an instance digital twin via JSON patch specification.
     *
     * Syntax: 
     *
     * az dt twin update --dt-name
     *                   --json-patch
     *                   --twin-id
     *                   [--resource-group]
     */
    ext_azure-iot_az_dt_twin_update(): void {
    }
}

/** Manage Azure Digital Twins solutions & infrastructure. */
class ext_azure-iot_az_dt {
    /**
     * Create a new Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt create --dt-name
     *              --resource-group
     *              [--location]
     *              [--tags]
     */
    ext_azure-iot_az_dt_create(): void {
    }

    /**
     * Delete an existing Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt delete --dt-name
     *              [--resource-group]
     */
    ext_azure-iot_az_dt_delete(): void {
    }

    /**
     * List the collection of Digital Twins instances by subscription or resource group.
     *
     * Syntax: 
     *
     * az dt list [--resource-group]
     */
    ext_azure-iot_az_dt_list(): void {
    }

    /**
     * Show an existing Digital Twins instance.
     *
     * Syntax: 
     *
     * az dt show --dt-name
     *            [--resource-group]
     */
    ext_azure-iot_az_dt_show(): void {
    }
}

/** */
class ext_azure-iot_az {
}

/** Create and Manage API tokens. */
class ext_azure-iot_az_iot_central_api_token {
    /**
     * Create a new API token in the application.
     *
     * Syntax: 
     *
     * az iot central api-token create --app-id
     *                                 --role {admin, builder, operator}
     *                                 --tkid
     *                                 [--central-api-uri]
     *                                 [--token]
     */
    ext_azure-iot_az_iot_central_api_token_create(): void {
    }

    /**
     * Delete an API token from the application.
     *
     * Syntax: 
     *
     * az iot central api-token delete --app-id
     *                                 --tkid
     *                                 [--central-api-uri]
     *                                 [--token]
     */
    ext_azure-iot_az_iot_central_api_token_delete(): void {
    }

    /**
     * Get a list of all token meta data (e.g. Role as a GUID and expiration).
     *
     * Syntax: 
     *
     * az iot central api-token list --app-id
     *                               [--central-api-uri]
     *                               [--token]
     */
    ext_azure-iot_az_iot_central_api_token_list(): void {
    }

    /**
     * Get token meta data (e.g. role as a GUID, expiration).
     *
     * Syntax: 
     *
     * az iot central api-token show --app-id
     *                               --tkid
     *                               [--central-api-uri]
     *                               [--token]
     */
    ext_azure-iot_az_iot_central_api_token_show(): void {
    }
}

/** Manage IoT Central device twins. */
class ext_azure-iot_az_iot_central_app_device_twin {
    /**
     * Get the device twin from IoT Hub.
     *
     * Syntax: 
     *
     * az iot central app device-twin show --app-id
     *                                     --device-id
     *                                     [--central-api-uri]
     *                                     [--token]
     */
    ext_azure-iot_az_iot_central_app_device_twin_show(): void {
    }
}

/** Manage IoT Central applications. */
class ext_azure-iot_az_iot_central_app {
    /**
     * Monitor device telemetry & messages sent to the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iot central app monitor-events --app-id
     *                                   [--central-api-uri]
     *                                   [--cg]
     *                                   [--device-id]
     *                                   [--enqueued-time]
     *                                   [--module-id]
     *                                   [--properties {all, anno, app, sys}]
     *                                   [--repair {false, true}]
     *                                   [--timeout]
     *                                   [--token]
     *                                   [--yes {false, true}]
     */
    ext_azure-iot_az_iot_central_app_monitor_events(): void {
    }
}

/** Run device commands. */
class ext_azure-iot_az_iot_central_device_command {
    /**
     * Get most recent command-response request and response payload.
     *
     * Syntax: 
     *
     * az iot central device command history --app-id
     *                                       --cn
     *                                       --device-id
     *                                       --interface-id
     *                                       [--central-api-uri]
     *                                       [--token]
     */
    ext_azure-iot_az_iot_central_device_command_history(): void {
    }

    /**
     * Run a command on a device and view associated response. Does NOT monitor property updates that the command may perform.
     *
     * Syntax: 
     *
     * az iot central device command run --app-id
     *                                   --cn
     *                                   --content
     *                                   --device-id
     *                                   --interface-id
     *                                   [--central-api-uri]
     *                                   [--token]
     */
    ext_azure-iot_az_iot_central_device_command_run(): void {
    }
}

/** Manage IoT Central device twins. */
class ext_azure-iot_az_iot_central_device_twin {
    /**
     * Get the device twin from IoT Hub.
     *
     * Syntax: 
     *
     * az iot central device twin show --app-id
     *                                 --device-id
     *                                 [--central-api-uri]
     *                                 [--token]
     */
    ext_azure-iot_az_iot_central_device_twin_show(): void {
    }
}

/** Manage and configure IoT Central device templates. */
class ext_azure-iot_az_iot_central_device_template {
    /**
     * Create a device template in IoT Central.
     *
     * Syntax: 
     *
     * az iot central device-template create --app-id
     *                                       --content
     *                                       --device-template-id
     *                                       [--central-api-uri]
     *                                       [--token]
     */
    ext_azure-iot_az_iot_central_device_template_create(): void {
    }

    /**
     * Delete a device template from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device-template delete --app-id
     *                                       --device-template-id
     *                                       [--central-api-uri]
     *                                       [--token]
     */
    ext_azure-iot_az_iot_central_device_template_delete(): void {
    }

    /**
     * Get a device template from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device-template show --app-id
     *                                     --device-template-id
     *                                     [--central-api-uri]
     *                                     [--token]
     */
    ext_azure-iot_az_iot_central_device_template_show(): void {
    }
}

/** Manage and configure IoT Central devices. */
class ext_azure-iot_az_iot_central_device {
    /**
     * Generate a derived device SAS key.
     *
     * Syntax: 
     *
     * az iot central device compute-device-key --device-id
     *                                          --pk
     */
    ext_azure-iot_az_iot_central_device_compute_device_key(): void {
    }

    /**
     * Create a device in IoT Central.
     *
     * Syntax: 
     *
     * az iot central device create --app-id
     *                              --device-id
     *                              [--central-api-uri]
     *                              [--device-name]
     *                              [--instance-of]
     *                              [--simulated {false, true}]
     *                              [--token]
     */
    ext_azure-iot_az_iot_central_device_create(): void {
    }

    /**
     * Delete a device from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device delete --app-id
     *                              --device-id
     *                              [--central-api-uri]
     *                              [--token]
     */
    ext_azure-iot_az_iot_central_device_delete(): void {
    }

    /**
     * Get registration info on device(s) from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device registration-info --app-id
     *                                         --device-id
     *                                         [--central-api-uri]
     *                                         [--token]
     */
    ext_azure-iot_az_iot_central_device_registration_info(): void {
    }

    /**
     * Get a device from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device show --app-id
     *                            --device-id
     *                            [--central-api-uri]
     *                            [--token]
     */
    ext_azure-iot_az_iot_central_device_show(): void {
    }

    /**
     * Get device credentials from IoT Central.
     *
     * Syntax: 
     *
     * az iot central device show-credentials --app-id
     *                                        --device-id
     *                                        [--central-api-uri]
     *                                        [--token]
     */
    ext_azure-iot_az_iot_central_device_show_credentials(): void {
    }
}

/** Perform application and device level diagnostics. */
class ext_azure-iot_az_iot_central_diagnostics {
    /**
     * Monitor device telemetry & messages sent to the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iot central diagnostics monitor-events --app-id
     *                                           [--central-api-uri]
     *                                           [--cg]
     *                                           [--device-id]
     *                                           [--enqueued-time]
     *                                           [--module-id]
     *                                           [--properties {all, anno, app, sys}]
     *                                           [--repair {false, true}]
     *                                           [--timeout]
     *                                           [--token]
     *                                           [--yes {false, true}]
     */
    ext_azure-iot_az_iot_central_diagnostics_monitor_events(): void {
    }

    /**
     * Monitor desired and reported properties sent to/from the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iot central diagnostics monitor-properties --app-id
     *                                               --device-id
     *                                               [--central-api-uri]
     *                                               [--token]
     */
    ext_azure-iot_az_iot_central_diagnostics_monitor_properties(): void {
    }

    /**
     * Provides a registration summary of all the devices in an app.
     *
     * Syntax: 
     *
     * az iot central diagnostics registration-summary --app-id
     *                                                 [--central-api-uri]
     *                                                 [--token]
     */
    ext_azure-iot_az_iot_central_diagnostics_registration_summary(): void {
    }

    /**
     * Validate messages sent to the IoT Hub for an IoT Central app.
     *
     * Syntax: 
     *
     * az iot central diagnostics validate-messages --app-id
     *                                              [--central-api-uri]
     *                                              [--cg]
     *                                              [--device-id]
     *                                              [--dr]
     *                                              [--enqueued-time]
     *                                              [--max-messages]
     *                                              [--minimum-severity {error, info, warning}]
     *                                              [--module-id]
     *                                              [--properties {all, anno, app, sys}]
     *                                              [--repair {false, true}]
     *                                              [--style {csv, json, scroll}]
     *                                              [--timeout]
     *                                              [--token]
     *                                              [--yes {false, true}]
     */
    ext_azure-iot_az_iot_central_diagnostics_validate_messages(): void {
    }

    /**
     * Validate reported properties sent to IoT Central app.
     *
     * Syntax: 
     *
     * az iot central diagnostics validate-properties --app-id
     *                                                --device-id
     *                                                [--central-api-uri]
     *                                                [--minimum-severity {error, info, warning}]
     *                                                [--token]
     */
    ext_azure-iot_az_iot_central_diagnostics_validate_properties(): void {
    }
}

/** Manage and configure IoT Central users. */
class ext_azure-iot_az_iot_central_user {
    /**
     * Add a user to the application.
     *
     * Syntax: 
     *
     * az iot central user create --app-id
     *                            --assignee
     *                            --role {admin, builder, operator}
     *                            [--central-api-uri]
     *                            [--email]
     *                            [--object-id]
     *                            [--tenant-id]
     *                            [--token]
     */
    ext_azure-iot_az_iot_central_user_create(): void {
    }

    /**
     * Delete a user from the application.
     *
     * Syntax: 
     *
     * az iot central user delete --app-id
     *                            --assignee
     *                            [--central-api-uri]
     *                            [--token]
     */
    ext_azure-iot_az_iot_central_user_delete(): void {
    }

    /**
     * Get list of users in an application.
     *
     * Syntax: 
     *
     * az iot central user list --app-id
     *                          [--central-api-uri]
     *                          [--token]
     */
    ext_azure-iot_az_iot_central_user_list(): void {
    }

    /**
     * Get the details of a user by ID.
     *
     * Syntax: 
     *
     * az iot central user show --app-id
     *                          --assignee
     *                          [--central-api-uri]
     *                          [--token]
     */
    ext_azure-iot_az_iot_central_user_show(): void {
    }
}

/** Manage IoT Central resources. */
class ext_azure-iot_az_iot_central {
}

/** Cloud-to-device messaging commands. */
class ext_azure-iot_az_iot_device_c2d_message {
    /**
     * Abandon a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message abandon --device-id
     *                                   --etag
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_device_c2d_message_abandon(): void {
    }

    /**
     * Complete a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message complete --device-id
     *                                    --etag
     *                                    [--hub-name]
     *                                    [--login]
     *                                    [--resource-group]
     */
    ext_azure-iot_az_iot_device_c2d_message_complete(): void {
    }

    /**
     * Purge cloud-to-device message queue for a target device.
     *
     * Syntax: 
     *
     * az iot device c2d-message purge --device-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-iot_az_iot_device_c2d_message_purge(): void {
    }

    /**
     * Receive a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message receive --device-id
     *                                   [--abandon {false, true}]
     *                                   [--complete {false, true}]
     *                                   [--hub-name]
     *                                   [--lock-timeout]
     *                                   [--login]
     *                                   [--reject {false, true}]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_device_c2d_message_receive(): void {
    }

    /**
     * Reject or deadletter a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message reject --device-id
     *                                  --etag
     *                                  [--hub-name]
     *                                  [--login]
     *                                  [--resource-group]
     */
    ext_azure-iot_az_iot_device_c2d_message_reject(): void {
    }

    /**
     * Send a cloud-to-device message.
     *
     * Syntax: 
     *
     * az iot device c2d-message send --device-id
     *                                [--ack {full, negative, positive}]
     *                                [--ce]
     *                                [--cid]
     *                                [--content-type]
     *                                [--da]
     *                                [--expiry]
     *                                [--hub-name]
     *                                [--login]
     *                                [--message-id]
     *                                [--properties]
     *                                [--repair {false, true}]
     *                                [--resource-group]
     *                                [--uid]
     *                                [--wait {false, true}]
     *                                [--yes {false, true}]
     */
    ext_azure-iot_az_iot_device_c2d_message_send(): void {
    }
}

/** Leverage device-to-cloud and cloud-to-device messaging capabilities. */
class ext_azure-iot_az_iot_device {
    /**
     * Send an mqtt device-to-cloud message. The command supports sending messages with application and system properties.
     *
     * Syntax: 
     *
     * az iot device send-d2c-message --device-id
     *                                [--da]
     *                                [--hub-name]
     *                                [--login]
     *                                [--mc]
     *                                [--properties]
     *                                [--qos {0, 1}]
     *                                [--resource-group]
     */
    ext_azure-iot_az_iot_device_send_d2c_message(): void {
    }

    /**
     * Simulate a device in an Azure IoT Hub.
     *
     * While the device simulation is running, the device will automatically receive
     * and acknowledge cloud-to-device (c2d) messages. For mqtt simulation, all c2d messages will
     * be acknowledged with completion. For http simulation c2d acknowledgement is based on user
     * selection which can be complete, reject or abandon.
     *
     * Note: The command by default will set content-type to application/json and content-encoding
     * to utf-8. This can be overriden.
     *
     * Syntax: 
     *
     * az iot device simulate --device-id
     *                        [--da]
     *                        [--hub-name]
     *                        [--login]
     *                        [--mc]
     *                        [--mi]
     *                        [--properties]
     *                        [--proto {http, mqtt}]
     *                        [--receive-settle {abandon, complete, reject}]
     *                        [--resource-group]
     */
    ext_azure-iot_az_iot_device_simulate(): void {
    }

    /**
     * Upload a local file as a device to a pre-configured blob storage container.
     *
     * Syntax: 
     *
     * az iot device upload-file --content-type
     *                           --device-id
     *                           --file-path
     *                           [--hub-name]
     *                           [--login]
     *                           [--resource-group]
     */
    ext_azure-iot_az_iot_device_upload_file(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service. */
class ext_azure-iot_az_iot_dps_enrollment_group {
    /**
     * Create an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group create --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     *                                    [--allocation-policy {custom, geolatency, hashed, static}]
     *                                    [--api-version]
     *                                    [--ca-name]
     *                                    [--certificate-path]
     *                                    [--edge-enabled {false, true}]
     *                                    [--hn]
     *                                    [--ih]
     *                                    [--initial-twin-properties]
     *                                    [--initial-twin-tags]
     *                                    [--pk]
     *                                    [--provisioning-status {disabled, enabled}]
     *                                    [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                                    [--scn]
     *                                    [--scp]
     *                                    [--secondary-key]
     *                                    [--webhook-url]
     */
    ext_azure-iot_az_iot_dps_enrollment_group_create(): void {
    }

    /**
     * Delete an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group delete --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     */
    ext_azure-iot_az_iot_dps_enrollment_group_delete(): void {
    }

    /**
     * List enrollments groups in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group list --dps-name
     *                                  --resource-group
     *                                  [--top]
     */
    ext_azure-iot_az_iot_dps_enrollment_group_list(): void {
    }

    /**
     * Get the details of an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group show --dps-name
     *                                  --enrollment-id
     *                                  --resource-group
     *                                  [--keys {false, true}]
     */
    ext_azure-iot_az_iot_dps_enrollment_group_show(): void {
    }

    /**
     * Update an enrollment group in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment-group update --dps-name
     *                                    --enrollment-id
     *                                    --resource-group
     *                                    [--allocation-policy {custom, geolatency, hashed, static}]
     *                                    [--api-version]
     *                                    [--ca-name]
     *                                    [--certificate-path]
     *                                    [--edge-enabled {false, true}]
     *                                    [--etag]
     *                                    [--hn]
     *                                    [--ih]
     *                                    [--initial-twin-properties]
     *                                    [--initial-twin-tags]
     *                                    [--pk]
     *                                    [--provisioning-status {disabled, enabled}]
     *                                    [--rc {false, true}]
     *                                    [--remove-secondary-certificate {false, true}]
     *                                    [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                                    [--scn]
     *                                    [--scp]
     *                                    [--secondary-key]
     *                                    [--webhook-url]
     */
    ext_azure-iot_az_iot_dps_enrollment_group_update(): void {
    }
}

/** Manage enrollments in an Azure IoT Hub Device Provisioning Service. */
class ext_azure-iot_az_iot_dps_enrollment {
    /**
     * Create a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment create --at {symmetricKey, tpm, x509}
     *                              --dps-name
     *                              --enrollment-id
     *                              --resource-group
     *                              [--allocation-policy {custom, geolatency, hashed, static}]
     *                              [--api-version]
     *                              [--certificate-path]
     *                              [--device-id]
     *                              [--edge-enabled {false, true}]
     *                              [--ek]
     *                              [--hn]
     *                              [--ih]
     *                              [--initial-twin-properties]
     *                              [--initial-twin-tags]
     *                              [--pk]
     *                              [--provisioning-status {disabled, enabled}]
     *                              [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                              [--scp]
     *                              [--secondary-key]
     *                              [--webhook-url]
     */
    ext_azure-iot_az_iot_dps_enrollment_create(): void {
    }

    /**
     * Delete a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment delete --dps-name
     *                              --enrollment-id
     *                              --resource-group
     */
    ext_azure-iot_az_iot_dps_enrollment_delete(): void {
    }

    /**
     * List device enrollments in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment list --dps-name
     *                            --resource-group
     *                            [--top]
     */
    ext_azure-iot_az_iot_dps_enrollment_list(): void {
    }

    /**
     * Get device enrollment details in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment show --dps-name
     *                            --enrollment-id
     *                            --resource-group
     *                            [--keys {false, true}]
     */
    ext_azure-iot_az_iot_dps_enrollment_show(): void {
    }

    /**
     * Update a device enrollment in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps enrollment update --dps-name
     *                              --enrollment-id
     *                              --resource-group
     *                              [--allocation-policy {custom, geolatency, hashed, static}]
     *                              [--api-version]
     *                              [--certificate-path]
     *                              [--device-id]
     *                              [--edge-enabled {false, true}]
     *                              [--ek]
     *                              [--etag]
     *                              [--hn]
     *                              [--ih]
     *                              [--initial-twin-properties]
     *                              [--initial-twin-tags]
     *                              [--pk]
     *                              [--provisioning-status {disabled, enabled}]
     *                              [--rc {false, true}]
     *                              [--remove-secondary-certificate {false, true}]
     *                              [--reprovision-policy {never, reprovisionandmigratedata, reprovisionandresetdata}]
     *                              [--scp]
     *                              [--secondary-key]
     *                              [--webhook-url]
     */
    ext_azure-iot_az_iot_dps_enrollment_update(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service registrations. */
class ext_azure-iot_az_iot_dps_registration {
    /**
     * Delete a device registration in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps registration delete --dps-name
     *                                --registration-id
     *                                --resource-group
     */
    ext_azure-iot_az_iot_dps_registration_delete(): void {
    }

    /**
     * List device registration state in an Azure IoT Hub Device Provisioning Service enrollment group.
     *
     * Syntax: 
     *
     * az iot dps registration list --dps-name
     *                              --enrollment-id
     *                              --resource-group
     */
    ext_azure-iot_az_iot_dps_registration_list(): void {
    }

    /**
     * Get the device registration state in an Azure IoT Hub Device Provisioning Service.
     *
     * Syntax: 
     *
     * az iot dps registration show --dps-name
     *                              --registration-id
     *                              --resource-group
     */
    ext_azure-iot_az_iot_dps_registration_show(): void {
    }
}

/** Manage entities in an Azure IoT Hub Device Provisioning Service. Augmented with the IoT extension. */
class ext_azure-iot_az_iot_dps {
    /**
     * Generate a derived device SAS key.
     *
     * Syntax: 
     *
     * az iot dps compute-device-key --key
     *                               --registration-id
     */
    ext_azure-iot_az_iot_dps_compute_device_key(): void {
    }
}

/** Manage IoT Edge deployments at scale. */
class ext_azure-iot_az_iot_edge_deployment {
    /**
     * Create an IoT Edge deployment in a target IoT Hub.
     *
     * Syntax: 
     *
     * az iot edge deployment create --content
     *                               --deployment-id
     *                               [--hub-name]
     *                               [--lab]
     *                               [--layered {false, true}]
     *                               [--login]
     *                               [--metrics]
     *                               [--pri]
     *                               [--resource-group]
     *                               [--target-condition]
     */
    ext_azure-iot_az_iot_edge_deployment_create(): void {
    }

    /**
     * Delete an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment delete --deployment-id
     *                               [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     */
    ext_azure-iot_az_iot_edge_deployment_delete(): void {
    }

    /**
     * List IoT Edge deployments in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot edge deployment list [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     *                             [--top]
     */
    ext_azure-iot_az_iot_edge_deployment_list(): void {
    }

    /**
     * Get the details of an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment show --deployment-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-iot_az_iot_edge_deployment_show(): void {
    }

    /**
     * Evaluate a target system metric defined in an IoT Edge deployment.
     *
     * Syntax: 
     *
     * az iot edge deployment show-metric --deployment-id
     *                                    --metric-id
     *                                    [--hub-name]
     *                                    [--login]
     *                                    [--metric-type {system, user}]
     *                                    [--resource-group]
     */
    ext_azure-iot_az_iot_edge_deployment_show_metric(): void {
    }

    /**
     * Update specified properties of an IoT Edge deployment.
     *
     * Use --set followed by property assignments for updating a deployment.
     *
     * Note: IoT Edge deployment content is immutable. Deployment properties that can be
     * updated are 'labels', 'metrics', 'priority' and 'targetCondition'.
     *
     * Syntax: 
     *
     * az iot edge deployment update --deployment-id
     *                               [--add]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     */
    ext_azure-iot_az_iot_edge_deployment_update(): void {
    }
}

/** Manage IoT solutions on the Edge. */
class ext_azure-iot_az_iot_edge {
    /**
     * Set edge modules on a single device.
     *
     * Syntax: 
     *
     * az iot edge set-modules --content
     *                         --device-id
     *                         [--hub-name]
     *                         [--login]
     *                         [--resource-group]
     */
    ext_azure-iot_az_iot_edge_set_modules(): void {
    }
}

/** Manage IoT automatic device management configuration at scale. */
class ext_azure-iot_az_iot_hub_configuration {
    /**
     * Create an IoT automatic device management configuration in a target IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub configuration create --config-id
     *                                 --content
     *                                 [--hub-name]
     *                                 [--lab]
     *                                 [--login]
     *                                 [--metrics]
     *                                 [--pri]
     *                                 [--resource-group]
     *                                 [--target-condition]
     */
    ext_azure-iot_az_iot_hub_configuration_create(): void {
    }

    /**
     * Delete an IoT device configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration delete --config-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-iot_az_iot_hub_configuration_delete(): void {
    }

    /**
     * List IoT automatic device management configurations in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub configuration list [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     *                               [--top]
     */
    ext_azure-iot_az_iot_hub_configuration_list(): void {
    }

    /**
     * Get the details of an IoT automatic device management configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration show --config-id
     *                               [--hub-name]
     *                               [--login]
     *                               [--resource-group]
     */
    ext_azure-iot_az_iot_hub_configuration_show(): void {
    }

    /**
     * Evaluate a target user or system metric defined in an IoT device configuration.
     *
     * Syntax: 
     *
     * az iot hub configuration show-metric --config-id
     *                                      --metric-id
     *                                      [--hub-name]
     *                                      [--login]
     *                                      [--metric-type {system, user}]
     *                                      [--resource-group]
     */
    ext_azure-iot_az_iot_hub_configuration_show_metric(): void {
    }

    /**
     * Update specified properties of an IoT automatic device management configuration.
     *
     * Use --set followed by property assignments for updating a configuration.
     *
     * Note: Configuration content is immutable. Configuration properties that can be
     * updated are 'labels', 'metrics', 'priority' and 'targetCondition'.
     *
     * Syntax: 
     *
     * az iot hub configuration update --config-id
     *                                 [--add]
     *                                 [--force-string]
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     */
    ext_azure-iot_az_iot_hub_configuration_update(): void {
    }
}

/** Manage IoT Hub connection strings. */
class ext_azure-iot_az_iot_hub_connection_string {
    /**
     * Show the connection strings for an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub connection-string show [--all]
     *                                   [--default-eventhub {false, true}]
     *                                   [--hub-name]
     *                                   [--key-type {primary, secondary}]
     *                                   [--pn]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_connection_string_show(): void {
    }
}

/** Manage IoT device's connection string. */
class ext_azure-iot_az_iot_hub_device_identity_connection_string {
    /**
     * Show a given IoT Hub device connection string.
     *
     * Syntax: 
     *
     * az iot hub device-identity connection-string show --device-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_connection_string_show(): void {
    }
}

/** Manage IoT devices. */
class ext_azure-iot_az_iot_hub_device_identity {
    /**
     * Add specified comma-separated list of non edge device ids as children of specified edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity add-children --child-list
     *                                         --device-id
     *                                         [--force]
     *                                         [--hub-name]
     *                                         [--login]
     *                                         [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_add_children(): void {
    }

    /**
     * Create a device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub device-identity create --device-id
     *                                   [--add-children]
     *                                   [--am {shared_private_key, x509_ca, x509_thumbprint}]
     *                                   [--edge-enabled {false, true}]
     *                                   [--force]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--od]
     *                                   [--pd]
     *                                   [--primary-thumbprint]
     *                                   [--resource-group]
     *                                   [--secondary-thumbprint]
     *                                   [--sta {disabled, enabled}]
     *                                   [--star]
     *                                   [--valid-days]
     */
    ext_azure-iot_az_iot_hub_device_identity_create(): void {
    }

    /**
     * Delete an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity delete --device-id
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_delete(): void {
    }

    /**
     * Export all device identities from an IoT Hub to an Azure Storage blob container. For inline blob container SAS uri input, please review the input rules of your environment.
     *
     * Syntax: 
     *
     * az iot hub device-identity export --bcu
     *                                   --hub-name
     *                                   [--auth-type {identity, key}]
     *                                   [--ik {false, true}]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_export(): void {
    }

    /**
     * Get the parent device of the specified device.
     *
     * Syntax: 
     *
     * az iot hub device-identity get-parent --device-id
     *                                       [--hub-name]
     *                                       [--login]
     *                                       [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_get_parent(): void {
    }

    /**
     * Import device identities to an IoT Hub from a blob. For inline blob container SAS uri input, please review the input rules of your environment.
     *
     * Syntax: 
     *
     * az iot hub device-identity import --hub-name
     *                                   --ibcu
     *                                   --obcu
     *                                   [--auth-type {identity, key}]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_import(): void {
    }

    /**
     * List devices in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub device-identity list [--edge-enabled {false, true}]
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     *                                 [--top]
     */
    ext_azure-iot_az_iot_hub_device_identity_list(): void {
    }

    /**
     * Print comma-separated list of assigned child devices.
     *
     * Syntax: 
     *
     * az iot hub device-identity list-children --device-id
     *                                          [--hub-name]
     *                                          [--login]
     *                                          [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_list_children(): void {
    }

    /**
     * Remove non edge devices as children from specified edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity remove-children --device-id
     *                                            [--child-list]
     *                                            [--hub-name]
     *                                            [--login]
     *                                            [--remove-all]
     *                                            [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_remove_children(): void {
    }

    /**
     * Set the parent device of the specified non-edge device.
     *
     * Syntax: 
     *
     * az iot hub device-identity set-parent --device-id
     *                                       --parent-device-id
     *                                       [--force]
     *                                       [--hub-name]
     *                                       [--login]
     *                                       [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_set_parent(): void {
    }

    /**
     * Get the details of an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity show --device-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_show(): void {
    }

    /**
     * Show a given IoT Hub device connection string.
     *
     * Syntax: 
     *
     * az iot hub device-identity show-connection-string --device-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_identity_show_connection_string(): void {
    }

    /**
     * Update an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot hub device-identity update --device-id
     *                                   [--add]
     *                                   [--am {shared_private_key, x509_ca, x509_thumbprint}]
     *                                   [--edge-enabled {false, true}]
     *                                   [--force-string]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--pk]
     *                                   [--primary-thumbprint]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--secondary-key]
     *                                   [--secondary-thumbprint]
     *                                   [--set]
     *                                   [--sta {disabled, enabled}]
     *                                   [--star]
     */
    ext_azure-iot_az_iot_hub_device_identity_update(): void {
    }
}

/** Manage IoT device twin configuration. */
class ext_azure-iot_az_iot_hub_device_twin {
    /**
     * Replace device twin definition with target json.
     *
     * Syntax: 
     *
     * az iot hub device-twin replace --device-id
     *                                --json
     *                                [--hub-name]
     *                                [--login]
     *                                [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_twin_replace(): void {
    }

    /**
     * Get a device twin definition.
     *
     * Syntax: 
     *
     * az iot hub device-twin show --device-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-iot_az_iot_hub_device_twin_show(): void {
    }

    /**
     * Update device twin desired properties and tags.
     *
     * Syntax: 
     *
     * az iot hub device-twin update --device-id
     *                               [--add]
     *                               [--desired]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--tags]
     */
    ext_azure-iot_az_iot_hub_device_twin_update(): void {
    }
}

/** Manage distributed settings per-device. */
class ext_azure-iot_az_iot_hub_distributed_tracing {
    /**
     * Get the distributed tracing settings for a device.
     *
     * Syntax: 
     *
     * az iot hub distributed-tracing show --device-id
     *                                     --hub-name
     *                                     [--login]
     *                                     [--resource-group]
     */
    ext_azure-iot_az_iot_hub_distributed_tracing_show(): void {
    }

    /**
     * Update the distributed tracing options for a device.
     *
     * Syntax: 
     *
     * az iot hub distributed-tracing update --device-id
     *                                       --hub-name
     *                                       --sampling-mode {off, on}
     *                                       --sampling-rate
     *                                       [--login]
     *                                       [--resource-group]
     */
    ext_azure-iot_az_iot_hub_distributed_tracing_update(): void {
    }
}

/** Manage IoT Hub jobs (v2). */
class ext_azure-iot_az_iot_hub_job {
    /**
     * Cancel an IoT Hub job.
     *
     * Syntax: 
     *
     * az iot hub job cancel --job-id
     *                       [--hub-name]
     *                       [--login]
     *                       [--resource-group]
     */
    ext_azure-iot_az_iot_hub_job_cancel(): void {
    }

    /**
     * Create and schedule an IoT Hub job for execution.
     *
     * Syntax: 
     *
     * az iot hub job create --job-id
     *                       --job-type {scheduleDeviceMethod, scheduleUpdateTwin}
     *                       [--duration]
     *                       [--hub-name]
     *                       [--interval]
     *                       [--login]
     *                       [--mct]
     *                       [--method-name]
     *                       [--method-payload]
     *                       [--method-response-timeout]
     *                       [--patch]
     *                       [--query-condition]
     *                       [--resource-group]
     *                       [--start]
     *                       [--ttl]
     *                       [--wait {false, true}]
     */
    ext_azure-iot_az_iot_hub_job_create(): void {
    }

    /**
     * List the historical jobs of an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub job list [--hub-name]
     *                     [--job-status {cancelled, completed, enqueued, failed, queued, running, scheduled, unknown}]
     *                     [--job-type {export, import, scheduleDeviceMethod, scheduleUpdateTwin}]
     *                     [--login]
     *                     [--resource-group]
     *                     [--top]
     */
    ext_azure-iot_az_iot_hub_job_list(): void {
    }

    /**
     * Show details of an existing IoT Hub job.
     *
     * Syntax: 
     *
     * az iot hub job show --job-id
     *                     [--hub-name]
     *                     [--login]
     *                     [--resource-group]
     */
    ext_azure-iot_az_iot_hub_job_show(): void {
    }
}

/** Manage IoT device module's connection string. */
class ext_azure-iot_az_iot_hub_module_identity_connection_string {
    /**
     * Show a target IoT device module connection string.
     *
     * Syntax: 
     *
     * az iot hub module-identity connection-string show --device-id
     *                                                   --module-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_identity_connection_string_show(): void {
    }
}

/** Manage IoT device modules. */
class ext_azure-iot_az_iot_hub_module_identity {
    /**
     * Create a module on a target IoT device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity create --device-id
     *                                   --module-id
     *                                   [--am {shared_private_key, x509_ca, x509_thumbprint}]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--od]
     *                                   [--primary-thumbprint]
     *                                   [--resource-group]
     *                                   [--secondary-thumbprint]
     *                                   [--valid-days]
     */
    ext_azure-iot_az_iot_hub_module_identity_create(): void {
    }

    /**
     * Delete a device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity delete --device-id
     *                                   --module-id
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_identity_delete(): void {
    }

    /**
     * List modules located on an IoT device in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity list --device-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     *                                 [--top]
     */
    ext_azure-iot_az_iot_hub_module_identity_list(): void {
    }

    /**
     * Get the details of an IoT device module in an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub module-identity show --device-id
     *                                 --module-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_identity_show(): void {
    }

    /**
     * Show a target IoT device module connection string.
     *
     * Syntax: 
     *
     * az iot hub module-identity show-connection-string --device-id
     *                                                   --module-id
     *                                                   [--hub-name]
     *                                                   [--key-type {primary, secondary}]
     *                                                   [--login]
     *                                                   [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_identity_show_connection_string(): void {
    }

    /**
     * Update an IoT Hub device module.
     *
     * Syntax: 
     *
     * az iot hub module-identity update --device-id
     *                                   --module-id
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--hub-name]
     *                                   [--login]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--set]
     */
    ext_azure-iot_az_iot_hub_module_identity_update(): void {
    }
}

/** Manage IoT device module twin configuration. */
class ext_azure-iot_az_iot_hub_module_twin {
    /**
     * Replace a module twin definition with target json.
     *
     * Syntax: 
     *
     * az iot hub module-twin replace --device-id
     *                                --json
     *                                --module-id
     *                                [--hub-name]
     *                                [--login]
     *                                [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_twin_replace(): void {
    }

    /**
     * Show a module twin definition.
     *
     * Syntax: 
     *
     * az iot hub module-twin show --device-id
     *                             --module-id
     *                             [--hub-name]
     *                             [--login]
     *                             [--resource-group]
     */
    ext_azure-iot_az_iot_hub_module_twin_show(): void {
    }

    /**
     * Update module twin desired properties and tags.
     *
     * Syntax: 
     *
     * az iot hub module-twin update --device-id
     *                               --module-id
     *                               [--add]
     *                               [--desired]
     *                               [--force-string]
     *                               [--hub-name]
     *                               [--login]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--tags]
     */
    ext_azure-iot_az_iot_hub_module_twin_update(): void {
    }
}

/** Manage entities in an Azure IoT Hub. */
class ext_azure-iot_az_iot_hub {
    /**
     * Generate a SAS token for a target IoT Hub, device or module.
     *
     * Syntax: 
     *
     * az iot hub generate-sas-token [--device-id]
     *                               [--du]
     *                               [--hub-name]
     *                               [--key-type {primary, secondary}]
     *                               [--login]
     *                               [--module-id]
     *                               [--pn]
     *                               [--resource-group]
     */
    ext_azure-iot_az_iot_hub_generate_sas_token(): void {
    }

    /**
     * Invoke a device method.
     *
     * Syntax: 
     *
     * az iot hub invoke-device-method --device-id
     *                                 --method-name
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--method-payload]
     *                                 [--resource-group]
     *                                 [--timeout]
     */
    ext_azure-iot_az_iot_hub_invoke_device_method(): void {
    }

    /**
     * Invoke an Edge module method.
     *
     * Syntax: 
     *
     * az iot hub invoke-module-method --device-id
     *                                 --method-name
     *                                 --module-id
     *                                 [--hub-name]
     *                                 [--login]
     *                                 [--method-payload]
     *                                 [--resource-group]
     *                                 [--timeout]
     */
    ext_azure-iot_az_iot_hub_invoke_module_method(): void {
    }

    /**
     * Monitor device telemetry & messages sent to an IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub monitor-events [--cg]
     *                           [--content-type]
     *                           [--device-id]
     *                           [--device-query]
     *                           [--enqueued-time]
     *                           [--hub-name]
     *                           [--interface]
     *                           [--login]
     *                           [--module-id]
     *                           [--properties {all, anno, app, sys}]
     *                           [--repair {false, true}]
     *                           [--resource-group]
     *                           [--timeout]
     *                           [--yes {false, true}]
     */
    ext_azure-iot_az_iot_hub_monitor_events(): void {
    }

    /**
     * Monitor feedback sent by devices to acknowledge cloud-to-device (C2D) messages.
     *
     * Syntax: 
     *
     * az iot hub monitor-feedback [--device-id]
     *                             [--hub-name]
     *                             [--login]
     *                             [--repair {false, true}]
     *                             [--resource-group]
     *                             [--wait-on-msg]
     *                             [--yes {false, true}]
     */
    ext_azure-iot_az_iot_hub_monitor_feedback(): void {
    }

    /**
     * Query an IoT Hub using a powerful SQL-like language.
     *
     * Syntax: 
     *
     * az iot hub query --query-command
     *                  [--hub-name]
     *                  [--login]
     *                  [--resource-group]
     *                  [--top]
     */
    ext_azure-iot_az_iot_hub_query(): void {
    }
}

/** Create, view, and publish device models in your company repository. */
class ext_azure-iot_az_iot_pnp_model {
    /**
     * Create a new device model in your company repository.
     *
     * Syntax: 
     *
     * az iot pnp model create --model
     *                         [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_model_create(): void {
    }

    /**
     * List or search for models in the PnP model repository.
     *
     * Syntax: 
     *
     * az iot pnp model list [--keyword]
     *                       [--model-state {Created, Listed}]
     *                       [--model-type {Interface, Undetermined}]
     *                       [--pnp-dns-suffix]
     *                       [--pub]
     *                       [--shared {false, true}]
     *                       [--top]
     */
    ext_azure-iot_az_iot_pnp_model_list(): void {
    }

    /**
     * Publish a device model located in your company repository.
     *
     * Syntax: 
     *
     * az iot pnp model publish --dtmi
     *                          [--pnp-dns-suffix]
     *                          [--yes {false, true}]
     */
    ext_azure-iot_az_iot_pnp_model_publish(): void {
    }

    /**
     * View a device model by ID.
     *
     * Syntax: 
     *
     * az iot pnp model show --dtmi
     *                       [--def {false, true}]
     *                       [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_model_show(): void {
    }
}

/** Create and view Azure IoT Plug-and-Play tenant repositories. */
class ext_azure-iot_az_iot_pnp_repo {
    /**
     * Create a new PnP company repository for your tenant.
     *
     * Syntax: 
     *
     * az iot pnp repo create [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_repo_create(): void {
    }

    /**
     * List PnP repositories for your tenant.
     *
     * Syntax: 
     *
     * az iot pnp repo list [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_repo_list(): void {
    }
}

/** Manage and configure PnP repository and model role assignments. */
class ext_azure-iot_az_iot_pnp_role_assignment {
    /**
     * Creates a role assignment for a user or service principal to a specific resource.
     *
     * Syntax: 
     *
     * az iot pnp role-assignment create --resource-id
     *                                   --resource-type {Model, Tenant}
     *                                   --role {ModelAdministrator, ModelReader, ModelsCreator, ModelsPublisher, TenantAdministrator}
     *                                   --subject-id
     *                                   --subject-type {ServicePrincipal, User}
     *                                   [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_role_assignment_create(): void {
    }

    /**
     * Deletes a role assignment for a user or service principal to a specific resource.
     *
     * Syntax: 
     *
     * az iot pnp role-assignment delete --resource-id
     *                                   --resource-type {Model, Tenant}
     *                                   --role {ModelAdministrator, ModelReader, ModelsCreator, ModelsPublisher, TenantAdministrator}
     *                                   --subject-id
     *                                   [--pnp-dns-suffix]
     */
    ext_azure-iot_az_iot_pnp_role_assignment_delete(): void {
    }

    /**
     * Lists role assignments for a specific tenant or model. Can be filtered by subject-id.
     *
     * Syntax: 
     *
     * az iot pnp role-assignment list --resource-id
     *                                 --resource-type {Model, Tenant}
     *                                 [--pnp-dns-suffix]
     *                                 [--subject-id]
     */
    ext_azure-iot_az_iot_pnp_role_assignment_list(): void {
    }
}

/** Manipulate and interact with the digital twin of an IoT Hub device. */
class ext_azure-iot_az_iot_pnp_twin {
    /**
     * Invoke a root or component level command of a digital twin device.
     *
     * Syntax: 
     *
     * az iot pnp twin invoke-command --cn
     *                                --device-id
     *                                [--component-path]
     *                                [--hub-name]
     *                                [--login]
     *                                [--payload]
     *                                [--resource-group]
     *                                [--timeout]
     */
    ext_azure-iot_az_iot_pnp_twin_invoke_command(): void {
    }

    /**
     * Show the digital twin of an IoT Hub device.
     *
     * Syntax: 
     *
     * az iot pnp twin show --device-id
     *                      [--hub-name]
     *                      [--login]
     *                      [--resource-group]
     */
    ext_azure-iot_az_iot_pnp_twin_show(): void {
    }

    /**
     * Update the read-write properties of a digital twin device via JSON patch specification.
     *
     * Syntax: 
     *
     * az iot pnp twin update --device-id
     *                        --json-patch
     *                        [--hub-name]
     *                        [--login]
     *                        [--resource-group]
     */
    ext_azure-iot_az_iot_pnp_twin_update(): void {
    }
}

/** Manage Azure IoT Plug-and-Play repositories and models. */
class ext_azure-iot_az_iot_pnp {
}

/** Manage product certification requirements. */
class ext_azure-iot_az_iot_product_requirement {
    /**
     * Discover information about provisioning attestation methods that are supported for each badge type.
     *
     * Syntax: 
     *
     * az iot product requirement list [--badge-type {IotDevice, IotEdgeCompatible, Pnp}]
     *                                 [--base-url]
     */
    ext_azure-iot_az_iot_product_requirement_list(): void {
    }
}

/** Manage product testing certification test cases. */
class ext_azure-iot_az_iot_product_test_case {
    /**
     * List the test cases of a product certification test.
     *
     * Syntax: 
     *
     * az iot product test case list --test-id
     *                               [--base-url]
     */
    ext_azure-iot_az_iot_product_test_case_list(): void {
    }

    /**
     * Update the product certification test case data.
     *
     * Syntax: 
     *
     * az iot product test case update --cf
     *                                 --test-id
     *                                 [--base-url]
     */
    ext_azure-iot_az_iot_product_test_case_update(): void {
    }
}

/** Manage product testing certification test runs. */
class ext_azure-iot_az_iot_product_test_run {
    /**
     * Show the status of a testing run.
     *
     * Syntax: 
     *
     * az iot product test run show --test-id
     *                              [--base-url]
     *                              [--interval]
     *                              [--run-id]
     *                              [--wait {false, true}]
     */
    ext_azure-iot_az_iot_product_test_run_show(): void {
    }

    /**
     * Submit a completed test run to the partner/product service.
     *
     * Syntax: 
     *
     * az iot product test run submit --run-id
     *                                --test-id
     *                                [--base-url]
     */
    ext_azure-iot_az_iot_product_test_run_submit(): void {
    }
}

/** Manage product testing certification tasks. */
class ext_azure-iot_az_iot_product_test_task {
    /**
     * Queue a new testing task. Only one testing task can be running at a time.
     *
     * Syntax: 
     *
     * az iot product test task create --test-id
     *                                 [--base-url]
     *                                 [--interval]
     *                                 [--type {GenerateTestCases, QueueTestRun}]
     *                                 [--wait {false, true}]
     */
    ext_azure-iot_az_iot_product_test_task_create(): void {
    }

    /**
     * Cancel a running task matching the specified --task-id.
     *
     * Syntax: 
     *
     * az iot product test task delete --task-id
     *                                 --test-id
     *                                 [--base-url]
     */
    ext_azure-iot_az_iot_product_test_task_delete(): void {
    }

    /**
     * Show the status of a testing task. Use --running for current running task or --task-id.
     *
     * Syntax: 
     *
     * az iot product test task show --test-id
     *                               [--base-url]
     *                               [--running {false, true}]
     *                               [--task-id]
     */
    ext_azure-iot_az_iot_product_test_task_show(): void {
    }
}

/** Manage device tests for product certification. */
class ext_azure-iot_az_iot_product_test {
    /**
     * Create a new product test for product certification.
     *
     * Syntax: 
     *
     * az iot product test create [--at {ConnectionString, SymmetricKey, TPM, X509}]
     *                            [--badge-type {IotDevice, IotEdgeCompatible, Pnp}]
     *                            [--base-url]
     *                            [--certificate-path]
     *                            [--cf]
     *                            [--connection-string]
     *                            [--device-type {DevKit, FinishedProduct}]
     *                            [--ek]
     *                            [--models]
     *                            [--product-id]
     *                            [--skip-provisioning]
     *                            [--validation-type {Certification, Test}]
     */
    ext_azure-iot_az_iot_product_test_create(): void {
    }

    /**
     * Search product repository for testing data.
     *
     * Syntax: 
     *
     * az iot product test search [--base-url]
     *                            [--certificate-name]
     *                            [--product-id]
     *                            [--registration-id]
     */
    ext_azure-iot_az_iot_product_test_search(): void {
    }

    /**
     * View product test data.
     *
     * Syntax: 
     *
     * az iot product test show --test-id
     *                          [--base-url]
     */
    ext_azure-iot_az_iot_product_test_show(): void {
    }

    /**
     * Update the product certification test data.
     *
     * Syntax: 
     *
     * az iot product test update --test-id
     *                            [--at {ConnectionString, SymmetricKey, TPM, X509}]
     *                            [--badge-type {IotDevice, IotEdgeCompatible, Pnp}]
     *                            [--base-url]
     *                            [--certificate-path]
     *                            [--cf]
     *                            [--connection-string]
     *                            [--ek]
     *                            [--models]
     */
    ext_azure-iot_az_iot_product_test_update(): void {
    }
}

/** Manage device testing for product certification. */
class ext_azure-iot_az_iot_product {
}

/** Manage Internet of Things (IoT) assets. Augmented with the IoT extension. */
class ext_azure-iot_az_iot {
}

/** Blockchain consortium. */
class ext_blockchain_az_blockchain_consortium {
    /**
     * List the available consortiums for a subscription.
     *
     * Syntax: 
     *
     * az blockchain consortium list --location
     */
    ext_blockchain_az_blockchain_consortium_list(): void {
    }
}

/** Blockchain member. */
class ext_blockchain_az_blockchain_member {
    /**
     * Create a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member create --name
     *                             --resource-group
     *                             [--consortium]
     *                             [--consortium-management-account-password]
     *                             [--firewall-rules]
     *                             [--location]
     *                             [--no-wait]
     *                             [--password]
     *                             [--protocol {Corda, NotSpecified, Parity, Quorum}]
     *                             [--sku {Basic, Standard}]
     *                             [--tags]
     *                             [--validator-nodes-sku]
     */
    ext_blockchain_az_blockchain_member_create(): void {
    }

    /**
     * Delete a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member delete --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--yes]
     */
    ext_blockchain_az_blockchain_member_delete(): void {
    }

    /**
     * List the blockchain members.
     *
     * Syntax: 
     *
     * az blockchain member list [--resource-group]
     */
    ext_blockchain_az_blockchain_member_list(): void {
    }

    /**
     * List the API keys for a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member list-api-key --name
     *                                   --resource-group
     */
    ext_blockchain_az_blockchain_member_list_api_key(): void {
    }

    /**
     * List the consortium members for a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member list-consortium-member --name
     *                                             --resource-group
     */
    ext_blockchain_az_blockchain_member_list_consortium_member(): void {
    }

    /**
     * Regenerate the API keys for a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member regenerate-api-key --name
     *                                         --resource-group
     *                                         [--key-name {key1, key2}]
     */
    ext_blockchain_az_blockchain_member_regenerate_api_key(): void {
    }

    /**
     * Show the details about a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member show --name
     *                           --resource-group
     */
    ext_blockchain_az_blockchain_member_show(): void {
    }

    /**
     * Update a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain member update --name
     *                             --resource-group
     *                             [--consortium-management-account-password]
     *                             [--firewall-rules]
     *                             [--password]
     *                             [--tags]
     */
    ext_blockchain_az_blockchain_member_update(): void {
    }

    /**
     * Wait until a blockchain member is created or deleted.
     *
     * Syntax: 
     *
     * az blockchain member wait --name
     *                           --resource-group
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--timeout]
     *                           [--updated]
     */
    ext_blockchain_az_blockchain_member_wait(): void {
    }
}

/** Blockchain transaction-node. */
class ext_blockchain_az_blockchain_transaction_node {
    /**
     * Create a transaction node.
     *
     * Syntax: 
     *
     * az blockchain transaction-node create --member-name
     *                                       --name
     *                                       --resource-group
     *                                       [--firewall-rules]
     *                                       [--location]
     *                                       [--no-wait]
     *                                       [--password]
     */
    ext_blockchain_az_blockchain_transaction_node_create(): void {
    }

    /**
     * Delete the transaction node.
     *
     * Syntax: 
     *
     * az blockchain transaction-node delete --member-name
     *                                       --name
     *                                       --resource-group
     *                                       [--no-wait]
     *                                       [--yes]
     */
    ext_blockchain_az_blockchain_transaction_node_delete(): void {
    }

    /**
     * List the transaction nodes for a blockchain member.
     *
     * Syntax: 
     *
     * az blockchain transaction-node list --member-name
     *                                     --resource-group
     */
    ext_blockchain_az_blockchain_transaction_node_list(): void {
    }

    /**
     * List the API keys for the transaction node.
     *
     * Syntax: 
     *
     * az blockchain transaction-node list-api-key --member-name
     *                                             --name
     *                                             --resource-group
     */
    ext_blockchain_az_blockchain_transaction_node_list_api_key(): void {
    }

    /**
     * Regenerate the API keys for the blockchain member.
     *
     * Syntax: 
     *
     * az blockchain transaction-node regenerate-api-key --member-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--key-name {key1, key2}]
     *                                                   [--value]
     */
    ext_blockchain_az_blockchain_transaction_node_regenerate_api_key(): void {
    }

    /**
     * Show the details of the transaction node.
     *
     * Syntax: 
     *
     * az blockchain transaction-node show --member-name
     *                                     --name
     *                                     --resource-group
     */
    ext_blockchain_az_blockchain_transaction_node_show(): void {
    }

    /**
     * Update the transaction node.
     *
     * Syntax: 
     *
     * az blockchain transaction-node update --member-name
     *                                       --name
     *                                       --resource-group
     *                                       [--firewall-rules]
     *                                       [--password]
     */
    ext_blockchain_az_blockchain_transaction_node_update(): void {
    }

    /**
     * Wait until the transaction node is created or deleted.
     *
     * Syntax: 
     *
     * az blockchain transaction-node wait --member-name
     *                                     --name
     *                                     --resource-group
     *                                     [--created]
     *                                     [--custom]
     *                                     [--deleted]
     *                                     [--exists]
     *                                     [--interval]
     *                                     [--timeout]
     *                                     [--updated]
     */
    ext_blockchain_az_blockchain_transaction_node_wait(): void {
    }
}

/** */
class ext_blockchain_az_blockchain {
}

/** */
class ext_blockchain_az {
}

/** Commands to manage blueprint policy assignment artifact. */
class ext_blueprint_az_blueprint_artifact_policy {
    /**
     * Create blueprint policy artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact policy create --artifact-name
     *                                     --blueprint-name
     *                                     --policy-definition-id
     *                                     [--depends-on]
     *                                     [--description]
     *                                     [--display-name]
     *                                     [--management-group]
     *                                     [--parameters]
     *                                     [--resource-group-art]
     *                                     [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_policy_create(): void {
    }

    /**
     * Update blueprint policy artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact policy update --artifact-name
     *                                     --blueprint-name
     *                                     [--depends-on]
     *                                     [--description]
     *                                     [--display-name]
     *                                     [--management-group]
     *                                     [--parameters]
     *                                     [--resource-group-art]
     *                                     [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_policy_update(): void {
    }
}

/** Commands to manage blueprint role assignment artifact. */
class ext_blueprint_az_blueprint_artifact_role {
    /**
     * Create blueprint role artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact role create --artifact-name
     *                                   --blueprint-name
     *                                   --principal-ids
     *                                   --role-definition-id
     *                                   [--depends-on]
     *                                   [--description]
     *                                   [--display-name]
     *                                   [--management-group]
     *                                   [--resource-group-art]
     *                                   [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_role_create(): void {
    }

    /**
     * Update blueprint role artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact role update --artifact-name
     *                                   --blueprint-name
     *                                   [--depends-on]
     *                                   [--description]
     *                                   [--display-name]
     *                                   [--management-group]
     *                                   [--resource-group-art]
     *                                   [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_role_update(): void {
    }
}

/** Commands to manage blueprint ARM template artifact. */
class ext_blueprint_az_blueprint_artifact_template {
    /**
     * Create blueprint arm artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact template create --artifact-name
     *                                       --blueprint-name
     *                                       --template
     *                                       [--depends-on]
     *                                       [--description]
     *                                       [--display-name]
     *                                       [--management-group]
     *                                       [--parameters]
     *                                       [--resource-group-art]
     *                                       [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_template_create(): void {
    }

    /**
     * Update blueprint arm artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact template update --artifact-name
     *                                       --blueprint-name
     *                                       [--depends-on]
     *                                       [--description]
     *                                       [--display-name]
     *                                       [--management-group]
     *                                       [--parameters]
     *                                       [--resource-group-art]
     *                                       [--subscription]
     *                                       [--template]
     */
    ext_blueprint_az_blueprint_artifact_template_update(): void {
    }
}

/** Commands to manage blueprint artifact. */
class ext_blueprint_az_blueprint_artifact {
    /**
     * Delete a blueprint artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact delete --blueprint-name
     *                              --name
     *                              [--management-group]
     *                              [--subscription]
     *                              [--yes]
     */
    ext_blueprint_az_blueprint_artifact_delete(): void {
    }

    /**
     * List artifacts for a given blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint artifact list --blueprint-name
     *                            [--management-group]
     *                            [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_list(): void {
    }

    /**
     * Get a blueprint artifact.
     *
     * Syntax: 
     *
     * az blueprint artifact show --blueprint-name
     *                            --name
     *                            [--management-group]
     *                            [--subscription]
     */
    ext_blueprint_az_blueprint_artifact_show(): void {
    }
}

/** Commands to manage blueprint assignment. */
class ext_blueprint_az_blueprint_assignment {
    /**
     * Create a blueprint assignment.
     *
     * Syntax: 
     *
     * az blueprint assignment create --name
     *                                [--blueprint-version]
     *                                [--description]
     *                                [--display-name]
     *                                [--identity-type {None, SystemAssigned, UserAssigned}]
     *                                [--location]
     *                                [--locks-excluded-principals]
     *                                [--locks-mode {AllResourcesDoNotDelete, AllResourcesReadOnly, None}]
     *                                [--management-group]
     *                                [--parameters]
     *                                [--principal-id]
     *                                [--resource-group-value]
     *                                [--subscription]
     *                                [--tenant-id]
     *                                [--user-assigned-identities]
     */
    ext_blueprint_az_blueprint_assignment_create(): void {
    }

    /**
     * Delete a blueprint assignment.
     *
     * Syntax: 
     *
     * az blueprint assignment delete --name
     *                                [--management-group]
     *                                [--subscription]
     *                                [--yes]
     */
    ext_blueprint_az_blueprint_assignment_delete(): void {
    }

    /**
     * List blueprint assignments within a subscription.
     *
     * Syntax: 
     *
     * az blueprint assignment list [--management-group]
     *                              [--subscription]
     */
    ext_blueprint_az_blueprint_assignment_list(): void {
    }

    /**
     * Get a blueprint assignment.
     *
     * Syntax: 
     *
     * az blueprint assignment show --name
     *                              [--management-group]
     *                              [--subscription]
     */
    ext_blueprint_az_blueprint_assignment_show(): void {
    }

    /**
     * Update a blueprint assignment.
     *
     * Syntax: 
     *
     * az blueprint assignment update --name
     *                                [--blueprint-version]
     *                                [--description]
     *                                [--display-name]
     *                                [--identity-type {None, SystemAssigned, UserAssigned}]
     *                                [--location]
     *                                [--locks-excluded-principals]
     *                                [--locks-mode {AllResourcesDoNotDelete, AllResourcesReadOnly, None}]
     *                                [--management-group]
     *                                [--parameters]
     *                                [--principal-id]
     *                                [--resource-group-value]
     *                                [--subscription]
     *                                [--tenant-id]
     *                                [--user-assigned-identities]
     */
    ext_blueprint_az_blueprint_assignment_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Blueprint Assignment is met.
     *
     * Syntax: 
     *
     * az blueprint assignment wait --name
     *                              [--created]
     *                              [--custom]
     *                              [--deleted]
     *                              [--exists]
     *                              [--interval]
     *                              [--management-group]
     *                              [--subscription]
     *                              [--timeout]
     *                              [--updated]
     */
    ext_blueprint_az_blueprint_assignment_wait(): void {
    }

    /**
     * Get Blueprint Servie Principal Name objectId.
     *
     * Syntax: 
     *
     * az blueprint assignment who --name
     *                             [--management-group]
     *                             [--subscription]
     */
    ext_blueprint_az_blueprint_assignment_who(): void {
    }
}

/** Commands to manage blueprint resource group artifact. */
class ext_blueprint_az_blueprint_resource_group {
    /**
     * Add a resource group artifact to the blueprint.
     *
     * Syntax: 
     *
     * az blueprint resource-group add --blueprint-name
     *                                 [--artifact-name]
     *                                 [--depends-on]
     *                                 [--description]
     *                                 [--display-name]
     *                                 [--management-group]
     *                                 [--rg-location]
     *                                 [--rg-name]
     *                                 [--subscription]
     *                                 [--tags]
     */
    ext_blueprint_az_blueprint_resource_group_add(): void {
    }

    /**
     * List blueprint resource group artifact.
     *
     * Syntax: 
     *
     * az blueprint resource-group list --blueprint-name
     *                                  [--management-group]
     *                                  [--subscription]
     */
    ext_blueprint_az_blueprint_resource_group_list(): void {
    }

    /**
     * Remove a blueprint resource group artifact.
     *
     * Syntax: 
     *
     * az blueprint resource-group remove --artifact-name
     *                                    --blueprint-name
     *                                    [--management-group]
     *                                    [--subscription]
     *                                    [--yes]
     */
    ext_blueprint_az_blueprint_resource_group_remove(): void {
    }

    /**
     * Show blueprint resource group artifact.
     *
     * Syntax: 
     *
     * az blueprint resource-group show --artifact-name
     *                                  --blueprint-name
     *                                  [--management-group]
     *                                  [--subscription]
     */
    ext_blueprint_az_blueprint_resource_group_show(): void {
    }

    /**
     * Update blueprint resource group artifact.
     *
     * Syntax: 
     *
     * az blueprint resource-group update --artifact-name
     *                                    --blueprint-name
     *                                    [--depends-on]
     *                                    [--description]
     *                                    [--display-name]
     *                                    [--management-group]
     *                                    [--rg-location]
     *                                    [--rg-name]
     *                                    [--subscription]
     *                                    [--tags]
     */
    ext_blueprint_az_blueprint_resource_group_update(): void {
    }
}

/** Commands to manage published blueprint artifacts. */
class ext_blueprint_az_blueprint_version_artifact {
    /**
     * List artifacts for a version of a published blueprint.
     *
     * Syntax: 
     *
     * az blueprint version artifact list --blueprint-name
     *                                    --version
     *                                    [--management-group]
     *                                    [--subscription]
     */
    ext_blueprint_az_blueprint_version_artifact_list(): void {
    }

    /**
     * Show an artifact for a published blueprint.
     *
     * Syntax: 
     *
     * az blueprint version artifact show --artifact-name
     *                                    --blueprint-name
     *                                    --version
     *                                    [--management-group]
     *                                    [--subscription]
     */
    ext_blueprint_az_blueprint_version_artifact_show(): void {
    }
}

/** Commands to manage published blueprint versions. */
class ext_blueprint_az_blueprint_version {
    /**
     * Delete a published version of a blueprint.
     *
     * Syntax: 
     *
     * az blueprint version delete --blueprint-name
     *                             --version
     *                             [--management-group]
     *                             [--subscription]
     *                             [--yes]
     */
    ext_blueprint_az_blueprint_version_delete(): void {
    }

    /**
     * List published versions of given blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint version list --blueprint-name
     *                           [--management-group]
     *                           [--subscription]
     */
    ext_blueprint_az_blueprint_version_list(): void {
    }

    /**
     * Get a published version of a blueprint.
     *
     * Syntax: 
     *
     * az blueprint version show --blueprint-name
     *                           --version
     *                           [--management-group]
     *                           [--subscription]
     */
    ext_blueprint_az_blueprint_version_show(): void {
    }
}

/** Commands to manage blueprint. */
class ext_blueprint_az_blueprint {
    /**
     * Create a blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint create --name
     *                     [--description]
     *                     [--display-name]
     *                     [--management-group]
     *                     [--parameters]
     *                     [--subscription]
     *                     [--target-scope {managementGroup, subscription}]
     */
    ext_blueprint_az_blueprint_create(): void {
    }

    /**
     * Delete a blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint delete --name
     *                     [--management-group]
     *                     [--subscription]
     *                     [--yes]
     */
    ext_blueprint_az_blueprint_delete(): void {
    }

    /**
     * Import a blueprint definition and artifacts from a directoy of json files.
     *
     * Syntax: 
     *
     * az blueprint import --input-path
     *                     --name
     *                     [--management-group]
     *                     [--subscription]
     *                     [--yes]
     */
    ext_blueprint_az_blueprint_import(): void {
    }

    /**
     * List blueprint definitions.
     *
     * Syntax: 
     *
     * az blueprint list [--management-group]
     *                   [--subscription]
     */
    ext_blueprint_az_blueprint_list(): void {
    }

    /**
     * Publish a new version of the blueprint definition with the latest artifacts. Published blueprint definitions are immutable.
     *
     * Syntax: 
     *
     * az blueprint publish --blueprint-name
     *                      --version
     *                      [--change-notes]
     *                      [--management-group]
     *                      [--subscription]
     */
    ext_blueprint_az_blueprint_publish(): void {
    }

    /**
     * Get a blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint show --name
     *                   [--management-group]
     *                   [--subscription]
     */
    ext_blueprint_az_blueprint_show(): void {
    }

    /**
     * Update a blueprint definition.
     *
     * Syntax: 
     *
     * az blueprint update --name
     *                     [--add]
     *                     [--description]
     *                     [--force-string]
     *                     [--management-group]
     *                     [--parameters]
     *                     [--remove]
     *                     [--set]
     *                     [--subscription]
     */
    ext_blueprint_az_blueprint_update(): void {
    }
}

/** */
class ext_blueprint_az {
}

/** Information on available regions. */
class ext_codespaces_az_codespace_location {
    /**
     * List available regions.
     *
     * Syntax: 
     *
     * az codespace location list
     */
    ext_codespaces_az_codespace_location_list(): void {
    }

    /**
     * Show details of a region.
     *
     * Syntax: 
     *
     * az codespace location show --name
     */
    ext_codespaces_az_codespace_location_show(): void {
    }
}

/** Manage Codespace plans. */
class ext_codespaces_az_codespace_plan {
    /**
     * Create a Codespace plan.
     *
     * Syntax: 
     *
     * az codespace plan create --name
     *                          --resource-group
     *                          [--default-instance-type]
     *                          [--default-suspend-after {120, 30, 5, 60}]
     *                          [--location]
     *                          [--subnet]
     *                          [--tags]
     */
    ext_codespaces_az_codespace_plan_create(): void {
    }

    /**
     * Delete a Codespace plan.
     *
     * Syntax: 
     *
     * az codespace plan delete --name
     *                          --resource-group
     *                          [--yes]
     */
    ext_codespaces_az_codespace_plan_delete(): void {
    }

    /**
     * List Codespace plans.
     *
     * Syntax: 
     *
     * az codespace plan list [--resource-group]
     */
    ext_codespaces_az_codespace_plan_list(): void {
    }

    /**
     * Show details of a Codespace plan.
     *
     * Syntax: 
     *
     * az codespace plan show --name
     *                        --resource-group
     */
    ext_codespaces_az_codespace_plan_show(): void {
    }
}

/** Manage plan secrets. */
class ext_codespaces_az_codespace_secret {
    /**
     * Create a plan secret.
     *
     * Syntax: 
     *
     * az codespace secret create --name
     *                            --plan
     *                            --value
     *                            [--filters]
     *                            [--note]
     *                            [--resource-group]
     */
    ext_codespaces_az_codespace_secret_create(): void {
    }

    /**
     * Delete a plan secret.
     *
     * Syntax: 
     *
     * az codespace secret delete --id
     *                            --plan
     *                            [--resource-group]
     */
    ext_codespaces_az_codespace_secret_delete(): void {
    }

    /**
     * List plan secrets.
     *
     * Syntax: 
     *
     * az codespace secret list --plan
     *                          [--resource-group]
     */
    ext_codespaces_az_codespace_secret_list(): void {
    }

    /**
     * Update a plan secret.
     *
     * Syntax: 
     *
     * az codespace secret update --id
     *                            --plan
     *                            [--filters]
     *                            [--name]
     *                            [--note]
     *                            [--resource-group]
     *                            [--value]
     */
    ext_codespaces_az_codespace_secret_update(): void {
    }
}

/** Manage Visual Studio Codespaces. */
class ext_codespaces_az_codespace {
    /**
     * Create a Codespace.
     *
     * Syntax: 
     *
     * az codespace create --name
     *                     --plan
     *                     [--dotfiles-command]
     *                     [--dotfiles-path]
     *                     [--dotfiles-repo]
     *                     [--git-repo]
     *                     [--git-user-email]
     *                     [--git-user-name]
     *                     [--instance-type]
     *                     [--resource-group]
     *                     [--suspend-after {120, 30, 5, 60}]
     */
    ext_codespaces_az_codespace_create(): void {
    }

    /**
     * Delete a Codespace.
     *
     * Syntax: 
     *
     * az codespace delete --plan
     *                     [--id]
     *                     [--name]
     *                     [--resource-group]
     *                     [--yes]
     */
    ext_codespaces_az_codespace_delete(): void {
    }

    /**
     * List Codespaces.
     *
     * Syntax: 
     *
     * az codespace list --plan
     *                   [--all]
     *                   [--resource-group]
     */
    ext_codespaces_az_codespace_list(): void {
    }

    /**
     * Open a Codespace in the web browser.
     *
     * Syntax: 
     *
     * az codespace open --plan
     *                   [--id]
     *                   [--name]
     *                   [--resource-group]
     *                   [--yes]
     */
    ext_codespaces_az_codespace_open(): void {
    }

    /**
     * Resume a Codespace.
     *
     * Syntax: 
     *
     * az codespace resume --plan
     *                     [--id]
     *                     [--name]
     *                     [--resource-group]
     */
    ext_codespaces_az_codespace_resume(): void {
    }

    /**
     * Set configuration for codespace commands.
     *
     * Syntax: 
     *
     * az codespace set-config [--clear]
     *                         [--domain]
     *                         [--rp]
     */
    ext_codespaces_az_codespace_set_config(): void {
    }

    /**
     * Show details of a Codespace.
     *
     * Syntax: 
     *
     * az codespace show --plan
     *                   [--id]
     *                   [--name]
     *                   [--resource-group]
     */
    ext_codespaces_az_codespace_show(): void {
    }

    /**
     * Show current configuration for codespace commands.
     *
     * Syntax: 
     *
     * az codespace show-config
     */
    ext_codespaces_az_codespace_show_config(): void {
    }

    /**
     * Suspend a Codespace.
     *
     * Syntax: 
     *
     * az codespace suspend --plan
     *                      [--id]
     *                      [--name]
     *                      [--resource-group]
     */
    ext_codespaces_az_codespace_suspend(): void {
    }

    /**
     * Update a Codespace.
     *
     * Syntax: 
     *
     * az codespace update --plan
     *                     [--id]
     *                     [--instance-type]
     *                     [--name]
     *                     [--resource-group]
     *                     [--suspend-after {120, 30, 5, 60}]
     */
    ext_codespaces_az_codespace_update(): void {
    }
}

/** */
class ext_codespaces_az {
}

/** Commands to manage connected kubernetes clusters. */
class ext_connectedk8s_az_connectedk8s {
    /**
     * Onboard a connected kubernetes cluster to azure.
     *
     * Syntax: 
     *
     * az connectedk8s connect --name
     *                         --resource-group
     *                         [--kube-config]
     *                         [--kube-context]
     *                         [--location]
     *                         [--no-wait]
     *                         [--proxy-http]
     *                         [--proxy-https]
     *                         [--proxy-skip-range]
     *                         [--tags]
     */
    ext_connectedk8s_az_connectedk8s_connect(): void {
    }

    /**
     * Delete a connected kubernetes cluster along with connected cluster agents.
     *
     * Syntax: 
     *
     * az connectedk8s delete --name
     *                        --resource-group
     *                        [--kube-config]
     *                        [--kube-context]
     *                        [--no-wait]
     *                        [--yes]
     */
    ext_connectedk8s_az_connectedk8s_delete(): void {
    }

    /**
     * List connected kubernetes clusters.
     *
     * Syntax: 
     *
     * az connectedk8s list [--resource-group]
     */
    ext_connectedk8s_az_connectedk8s_list(): void {
    }

    /**
     * Show details of a connected kubernetes cluster.
     *
     * Syntax: 
     *
     * az connectedk8s show --name
     *                      --resource-group
     */
    ext_connectedk8s_az_connectedk8s_show(): void {
    }

    /**
     * Update properties of the onboarded agents.
     *
     * Syntax: 
     *
     * az connectedk8s update --name
     *                        --resource-group
     *                        [--kube-config]
     *                        [--kube-context]
     *                        [--proxy-http]
     *                        [--proxy-https]
     *                        [--proxy-skip-range]
     */
    ext_connectedk8s_az_connectedk8s_update(): void {
    }
}

/** */
class ext_connectedk8s_az {
}

/** Connectedmachine machine-extension. */
class ext_connectedmachine_az_connectedmachine_machine_extension {
    /**
     * The operation to create or update the extension.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension create --extension-name
     *                                              --location
     *                                              --machine-name
     *                                              --resource-group
     *                                              [--auto-upgrade-minor {false, true}]
     *                                              [--force-update-tag]
     *                                              [--no-wait]
     *                                              [--protected-settings]
     *                                              [--publisher]
     *                                              [--settings]
     *                                              [--tags]
     *                                              [--type]
     *                                              [--type-handler-version]
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_create(): void {
    }

    /**
     * The operation to delete the extension.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension delete --extension-name
     *                                              --machine-name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--yes]
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_delete(): void {
    }

    /**
     * The operation to get all extensions of a non-Azure machine.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension list --machine-name
     *                                            --resource-group
     *                                            [--expand]
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_list(): void {
    }

    /**
     * The operation to get the extension.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension show --extension-name
     *                                            --machine-name
     *                                            --resource-group
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_show(): void {
    }

    /**
     * The operation to update the extension.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension update --extension-name
     *                                              --machine-name
     *                                              --resource-group
     *                                              [--auto-upgrade-minor {false, true}]
     *                                              [--force-update-tag]
     *                                              [--no-wait]
     *                                              [--protected-settings]
     *                                              [--publisher]
     *                                              [--settings]
     *                                              [--tags]
     *                                              [--type]
     *                                              [--type-handler-version]
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the connectedmachine machine-extension is met.
     *
     * Syntax: 
     *
     * az connectedmachine machine-extension wait --extension-name
     *                                            --machine-name
     *                                            --resource-group
     *                                            [--created]
     *                                            [--custom]
     *                                            [--deleted]
     *                                            [--exists]
     *                                            [--interval]
     *                                            [--timeout]
     *                                            [--updated]
     */
    ext_connectedmachine_az_connectedmachine_machine_extension_wait(): void {
    }
}

/** Connectedmachine machine. */
class ext_connectedmachine_az_connectedmachine_machine {
    /**
     * The operation to remove a hybrid machine identity in Azure.
     *
     * Syntax: 
     *
     * az connectedmachine machine delete --machine-name
     *                                    --resource-group
     *                                    [--yes]
     */
    ext_connectedmachine_az_connectedmachine_machine_delete(): void {
    }

    /**
     * Lists all the hybrid machines in the specified subscription.
     *
     * Syntax: 
     *
     * az connectedmachine machine list [--resource-group]
     */
    ext_connectedmachine_az_connectedmachine_machine_list(): void {
    }

    /**
     * Retrieves information about the model view or the instance view of a hybrid machine.
     *
     * Syntax: 
     *
     * az connectedmachine machine show --machine-name
     *                                  --resource-group
     */
    ext_connectedmachine_az_connectedmachine_machine_show(): void {
    }
}

/** */
class ext_connectedmachine_az_connectedmachine {
}

/** */
class ext_connectedmachine_az {
}

/** Costmanagement export. */
class ext_costmanagement_az_costmanagement_export {
    /**
     * The operation to create an export.
     *
     * Syntax: 
     *
     * az costmanagement export create --name
     *                                 --scope
     *                                 --storage-account-id
     *                                 --storage-container
     *                                 --timeframe {BillingMonthToDate, Custom, MonthToDate, TheLastBillingMonth, TheLastMonth, WeekToDate}
     *                                 [--dataset-configuration]
     *                                 [--dataset-grouping]
     *                                 [--recurrence {Annually, Daily, Monthly, Weekly}]
     *                                 [--recurrence-period]
     *                                 [--schedule-status {Active, Inactive}]
     *                                 [--storage-directory]
     *                                 [--time-period]
     *                                 [--type {ActualCost, AmortizedCost, Usage}]
     */
    ext_costmanagement_az_costmanagement_export_create(): void {
    }

    /**
     * The operation to delete an export.
     *
     * Syntax: 
     *
     * az costmanagement export delete --name
     *                                 --scope
     *                                 [--yes]
     */
    ext_costmanagement_az_costmanagement_export_delete(): void {
    }

    /**
     * The operation to list all exports at the given scope.
     *
     * Syntax: 
     *
     * az costmanagement export list --scope
     */
    ext_costmanagement_az_costmanagement_export_list(): void {
    }

    /**
     * The operation to get the execution history of an export for the defined scope by export name.
     *
     * Syntax: 
     *
     * az costmanagement export show --name
     *                               --scope
     */
    ext_costmanagement_az_costmanagement_export_show(): void {
    }

    /**
     * The operation to update an export.
     *
     * Syntax: 
     *
     * az costmanagement export update --name
     *                                 --scope
     *                                 [--dataset-configuration]
     *                                 [--dataset-grouping]
     *                                 [--recurrence {Annually, Daily, Monthly, Weekly}]
     *                                 [--recurrence-period]
     *                                 [--schedule-status {Active, Inactive}]
     *                                 [--storage-account-id]
     *                                 [--storage-container]
     *                                 [--storage-directory]
     *                                 [--time-period]
     *                                 [--timeframe {BillingMonthToDate, Custom, MonthToDate, TheLastBillingMonth, TheLastMonth, WeekToDate}]
     */
    ext_costmanagement_az_costmanagement_export_update(): void {
    }
}

/** Manage cost and billing in Azure. */
class ext_costmanagement_az_costmanagement {
    /**
     * Query the usage data for scope defined.
     *
     * Syntax: 
     *
     * az costmanagement query --scope
     *                         --timeframe {BillingMonthToDate, Custom, MonthToDate, TheLastBillingMonth, TheLastMonth, WeekToDate}
     *                         --type {ActualCost, AmortizedCost, Usage}
     *                         [--dataset-aggregation]
     *                         [--dataset-configuration]
     *                         [--dataset-filter]
     *                         [--dataset-grouping]
     *                         [--time-period]
     */
    ext_costmanagement_az_costmanagement_query(): void {
    }
}

/** */
class ext_costmanagement_az {
}

/** Manage VMware private clouds. */
class ext_csvmware_az_csvmware_private_cloud {
    /**
     * List details of private clouds in a region.
     *
     * Syntax: 
     *
     * az csvmware private-cloud list --location
     */
    ext_csvmware_az_csvmware_private_cloud_list(): void {
    }

    /**
     * Get the details of a private cloud in a region.
     *
     * Syntax: 
     *
     * az csvmware private-cloud show --location
     *                                --name
     */
    ext_csvmware_az_csvmware_private_cloud_show(): void {
    }
}

/** Manage VMware resource pools. */
class ext_csvmware_az_csvmware_resource_pool {
    /**
     * List details of resource pools in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware resource-pool list --location
     *                                --private-cloud
     */
    ext_csvmware_az_csvmware_resource_pool_list(): void {
    }

    /**
     * Get the details of a resource pool in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware resource-pool show --location
     *                                --name
     *                                --private-cloud
     */
    ext_csvmware_az_csvmware_resource_pool_show(): void {
    }
}

/** Manage virtual networks. */
class ext_csvmware_az_csvmware_virtual_network {
    /**
     * List details of available virtual networks in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware virtual-network list --location
     *                                  --private-cloud
     *                                  --resource-pool
     */
    ext_csvmware_az_csvmware_virtual_network_list(): void {
    }

    /**
     * Get the details of a virtual network in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware virtual-network show --location
     *                                  --name
     *                                  --private-cloud
     */
    ext_csvmware_az_csvmware_virtual_network_show(): void {
    }
}

/** Manage VMware virtual machine's disks. */
class ext_csvmware_az_csvmware_vm_disk {
    /**
     * Add disk to a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm disk add --resource-group
     *                         --vm-name
     *                         [--controller]
     *                         [--mode {independent_nonpersistent, independent_persistent, persistent}]
     *                         [--size]
     */
    ext_csvmware_az_csvmware_vm_disk_add(): void {
    }

    /**
     * Delete disks from a VM.
     *
     * Syntax: 
     *
     * az csvmware vm disk delete --disks
     *                            --resource-group
     *                            --vm-name
     */
    ext_csvmware_az_csvmware_vm_disk_delete(): void {
    }

    /**
     * List details of disks available on a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm disk list --resource-group
     *                          --vm-name
     */
    ext_csvmware_az_csvmware_vm_disk_list(): void {
    }

    /**
     * Get the details of a VMware virtual machine's disk.
     *
     * Syntax: 
     *
     * az csvmware vm disk show --name
     *                          --resource-group
     *                          --vm-name
     */
    ext_csvmware_az_csvmware_vm_disk_show(): void {
    }
}

/** Manage VMware virtual machine's Network Interface Cards. */
class ext_csvmware_az_csvmware_vm_nic {
    /**
     * Add NIC to a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm nic add --resource-group
     *                        --virtual-network
     *                        --vm-name
     *                        [--adapter {E1000, E1000E, PCNET32, VMXNET, VMXNET2, VMXNET3}]
     *                        [--power-on-boot {false, true}]
     */
    ext_csvmware_az_csvmware_vm_nic_add(): void {
    }

    /**
     * Delete NICs from a VM.
     *
     * Syntax: 
     *
     * az csvmware vm nic delete --nics
     *                           --resource-group
     *                           --vm-name
     */
    ext_csvmware_az_csvmware_vm_nic_delete(): void {
    }

    /**
     * List details of NICs available on a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm nic list --resource-group
     *                         --vm-name
     */
    ext_csvmware_az_csvmware_vm_nic_list(): void {
    }

    /**
     * Get the details of a VMware virtual machine's NIC.
     *
     * Syntax: 
     *
     * az csvmware vm nic show --name
     *                         --resource-group
     *                         --vm-name
     */
    ext_csvmware_az_csvmware_vm_nic_show(): void {
    }
}

/** Manage VMware virtual machine templates. */
class ext_csvmware_az_csvmware_vm_template {
    /**
     * List details of VMware virtual machines templates in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware vm-template list --location
     *                              --private-cloud
     *                              --resource-pool
     */
    ext_csvmware_az_csvmware_vm_template_list(): void {
    }

    /**
     * Get the details of a VMware virtual machines template in a private cloud.
     *
     * Syntax: 
     *
     * az csvmware vm-template show --location
     *                              --name
     *                              --private-cloud
     */
    ext_csvmware_az_csvmware_vm_template_show(): void {
    }
}

/** Manage VMware virtual machines. */
class ext_csvmware_az_csvmware_vm {
    /**
     * Create a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm create --name
     *                       --private-cloud
     *                       --resource-group
     *                       --resource-pool
     *                       --template
     *                       [--cores]
     *                       [--disk]
     *                       [--expose-to-guest-vm {false, true}]
     *                       [--location]
     *                       [--nic]
     *                       [--ram]
     */
    ext_csvmware_az_csvmware_vm_create(): void {
    }

    /**
     * Delete a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm delete --name
     *                       --resource-group
     */
    ext_csvmware_az_csvmware_vm_delete(): void {
    }

    /**
     * List details of VMware virtual machines in the current subscription. If resource group is specified, only the details of virtual machines in that resource group would be listed.
     *
     * Syntax: 
     *
     * az csvmware vm list [--resource-group]
     */
    ext_csvmware_az_csvmware_vm_list(): void {
    }

    /**
     * Get the details of a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm show --name
     *                     --resource-group
     */
    ext_csvmware_az_csvmware_vm_show(): void {
    }

    /**
     * Start a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm start --name
     *                      --resource-group
     */
    ext_csvmware_az_csvmware_vm_start(): void {
    }

    /**
     * Stop/Reboot/Suspend a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm stop --mode {poweroff, reboot, shutdown, suspend}
     *                     --name
     *                     --resource-group
     */
    ext_csvmware_az_csvmware_vm_stop(): void {
    }

    /**
     * Update the tags field of a VMware virtual machine.
     *
     * Syntax: 
     *
     * az csvmware vm update --name
     *                       --resource-group
     *                       [--add]
     *                       [--force-string]
     *                       [--no-wait]
     *                       [--remove]
     *                       [--set]
     */
    ext_csvmware_az_csvmware_vm_update(): void {
    }
}

/** Manage Azure VMware Solution by CloudSimple. */
class ext_csvmware_az_csvmware {
}

/** */
class ext_csvmware_az {
}

/** Commands to manage custom resource provider. */
class ext_custom-providers_az_custom_providers_resource_provider {
    /**
     * Create or update the custom resource provider.
     *
     * Syntax: 
     *
     * az custom-providers resource-provider create --name
     *                                              --resource-group
     *                                              [--action]
     *                                              [--location]
     *                                              [--no-wait]
     *                                              [--resource-type]
     *                                              [--tags]
     *                                              [--validation]
     */
    ext_custom-providers_az_custom_providers_resource_provider_create(): void {
    }

    /**
     * Delete the custom resource provider.
     *
     * Syntax: 
     *
     * az custom-providers resource-provider delete --name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--yes]
     */
    ext_custom-providers_az_custom_providers_resource_provider_delete(): void {
    }

    /**
     * Get all the custom resource providers within a resource group or in the current subscription.
     *
     * Syntax: 
     *
     * az custom-providers resource-provider list [--resource-group]
     */
    ext_custom-providers_az_custom_providers_resource_provider_list(): void {
    }

    /**
     * Get the properties for the custom resource provider.
     *
     * Syntax: 
     *
     * az custom-providers resource-provider show --name
     *                                            --resource-group
     */
    ext_custom-providers_az_custom_providers_resource_provider_show(): void {
    }

    /**
     * Update the custom resource provider. Only tags can be updated.
     *
     * Syntax: 
     *
     * az custom-providers resource-provider update --name
     *                                              --resource-group
     *                                              [--tags]
     */
    ext_custom-providers_az_custom_providers_resource_provider_update(): void {
    }
}

/** */
class ext_custom-providers_az_custom_providers {
}

/** */
class ext_custom-providers_az {
}

/** Commands to manage databox job. */
class ext_databox_az_databox_job {
    /**
     * Cancel a job.
     *
     * Syntax: 
     *
     * az databox job cancel --name
     *                       --reason
     *                       --resource-group
     *                       [--yes]
     */
    ext_databox_az_databox_job_cancel(): void {
    }

    /**
     * Create a new job with the specified parameters.
     *
     * Syntax: 
     *
     * az databox job create --city
     *                       --contact-name
     *                       --country
     *                       --email-list
     *                       --location
     *                       --name
     *                       --phone
     *                       --postal-code
     *                       --resource-group
     *                       --sku {DataBox, DataBoxDisk, DataBoxHeavy}
     *                       --state-or-province
     *                       --street-address1
     *                       [--company-name]
     *                       [--expected-data-size]
     *                       [--mobile]
     *                       [--resource-group-for-managed-disk]
     *                       [--staging-storage-account]
     *                       [--storage-accounts]
     *                       [--street-address2]
     *                       [--street-address3]
     *                       [--tags]
     */
    ext_databox_az_databox_job_create(): void {
    }

    /**
     * Delete a job.
     *
     * Syntax: 
     *
     * az databox job delete --name
     *                       --resource-group
     *                       [--yes]
     */
    ext_databox_az_databox_job_delete(): void {
    }

    /**
     * List all the jobs available under the given resource group or the given subscription.
     *
     * Syntax: 
     *
     * az databox job list [--resource-group]
     */
    ext_databox_az_databox_job_list(): void {
    }

    /**
     * List the unencrypted secrets related to the job.
     *
     * Syntax: 
     *
     * az databox job list-credentials --name
     *                                 --resource-group
     */
    ext_databox_az_databox_job_list_credentials(): void {
    }

    /**
     * Get information about the specified job.
     *
     * Syntax: 
     *
     * az databox job show --name
     *                     --resource-group
     */
    ext_databox_az_databox_job_show(): void {
    }

    /**
     * Update an existing job with the specified parameters.
     *
     * Syntax: 
     *
     * az databox job update --name
     *                       --resource-group
     *                       [--city]
     *                       [--company-name]
     *                       [--contact-name]
     *                       [--country]
     *                       [--email-list]
     *                       [--mobile]
     *                       [--phone]
     *                       [--postal-code]
     *                       [--state-or-province]
     *                       [--street-address1]
     *                       [--street-address2]
     *                       [--street-address3]
     */
    ext_databox_az_databox_job_update(): void {
    }
}

/** */
class ext_databox_az_databox {
}

/** */
class ext_databox_az {
}

/** Commands to manage databricks workspace vnet peering. */
class ext_databricks_az_databricks_workspace_vnet_peering {
    /**
     * Create a vnet peering for a workspace.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering create --name
     *                                             --remote-vnet
     *                                             --resource-group
     *                                             --workspace-name
     *                                             [--allow-forwarded-traffic {false, true}]
     *                                             [--allow-gateway-transit {false, true}]
     *                                             [--allow-virtual-network-access {false, true}]
     *                                             [--no-wait]
     *                                             [--use-remote-gateways {false, true}]
     */
    ext_databricks_az_databricks_workspace_vnet_peering_create(): void {
    }

    /**
     * Delete the vnet peering.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering delete --name
     *                                             --resource-group
     *                                             --workspace-name
     *                                             [--no-wait]
     */
    ext_databricks_az_databricks_workspace_vnet_peering_delete(): void {
    }

    /**
     * List vnet peerings under a workspace.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering list --resource-group
     *                                           --workspace-name
     */
    ext_databricks_az_databricks_workspace_vnet_peering_list(): void {
    }

    /**
     * Show the vnet peering.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering show --name
     *                                           --resource-group
     *                                           --workspace-name
     */
    ext_databricks_az_databricks_workspace_vnet_peering_show(): void {
    }

    /**
     * Update the vnet peering.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering update --name
     *                                             --resource-group
     *                                             --workspace-name
     *                                             [--allow-forwarded-traffic {false, true}]
     *                                             [--allow-gateway-transit {false, true}]
     *                                             [--allow-virtual-network-access {false, true}]
     *                                             [--no-wait]
     *                                             [--use-remote-gateways {false, true}]
     */
    ext_databricks_az_databricks_workspace_vnet_peering_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Databricks workspace vnet peering is met.
     *
     * Syntax: 
     *
     * az databricks workspace vnet-peering wait --name
     *                                           --resource-group
     *                                           --workspace-name
     *                                           [--created]
     *                                           [--custom]
     *                                           [--deleted]
     *                                           [--exists]
     *                                           [--interval]
     *                                           [--timeout]
     *                                           [--updated]
     */
    ext_databricks_az_databricks_workspace_vnet_peering_wait(): void {
    }
}

/** Commands to manage databricks workspace. */
class ext_databricks_az_databricks_workspace {
    /**
     * Create a new workspace.
     *
     * Syntax: 
     *
     * az databricks workspace create --location
     *                                --name
     *                                --resource-group
     *                                --sku {premium, standard, trial}
     *                                [--managed-resource-group]
     *                                [--no-wait]
     *                                [--prepare-encryption]
     *                                [--private-subnet]
     *                                [--public-subnet]
     *                                [--require-infrastructure-encryption]
     *                                [--tags]
     *                                [--vnet]
     */
    ext_databricks_az_databricks_workspace_create(): void {
    }

    /**
     * Delete the workspace.
     *
     * Syntax: 
     *
     * az databricks workspace delete --name
     *                                --resource-group
     *                                [--no-wait]
     *                                [--yes]
     */
    ext_databricks_az_databricks_workspace_delete(): void {
    }

    /**
     * Get all the workspaces.
     *
     * Syntax: 
     *
     * az databricks workspace list [--resource-group]
     */
    ext_databricks_az_databricks_workspace_list(): void {
    }

    /**
     * Show the workspace.
     *
     * Syntax: 
     *
     * az databricks workspace show --name
     *                              --resource-group
     */
    ext_databricks_az_databricks_workspace_show(): void {
    }

    /**
     * Update the workspace.
     *
     * Syntax: 
     *
     * az databricks workspace update --name
     *                                --resource-group
     *                                [--key-name]
     *                                [--key-source {Default, Microsoft.Keyvault}]
     *                                [--key-vault]
     *                                [--key-version]
     *                                [--no-wait]
     *                                [--prepare-encryption]
     *                                [--tags]
     */
    ext_databricks_az_databricks_workspace_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Databricks workspace is met.
     *
     * Syntax: 
     *
     * az databricks workspace wait --name
     *                              --resource-group
     *                              [--created]
     *                              [--custom]
     *                              [--deleted]
     *                              [--exists]
     *                              [--interval]
     *                              [--timeout]
     *                              [--updated]
     */
    ext_databricks_az_databricks_workspace_wait(): void {
    }
}

/** Manage databricks workspaces. */
class ext_databricks_az_databricks {
}

/** */
class ext_databricks_az {
}

/** Datafactory activity-run. */
class ext_datafactory_az_datafactory_activity_run {
    /**
     * Query activity runs based on input filter conditions.
     *
     * Syntax: 
     *
     * az datafactory activity-run query-by-pipeline-run --factory-name
     *                                                   --last-updated-after
     *                                                   --last-updated-before
     *                                                   --resource-group
     *                                                   --run-id
     *                                                   [--continuation-token]
     *                                                   [--filters]
     *                                                   [--order-by]
     */
    ext_datafactory_az_datafactory_activity_run_query_by_pipeline_run(): void {
    }
}

/** Datafactory dataset. */
class ext_datafactory_az_datafactory_dataset {
    /**
     * Creates or updates a dataset.
     *
     * Syntax: 
     *
     * az datafactory dataset create --factory-name
     *                               --name
     *                               --properties
     *                               --resource-group
     *                               [--if-match]
     */
    ext_datafactory_az_datafactory_dataset_create(): void {
    }

    /**
     * Deletes a dataset.
     *
     * Syntax: 
     *
     * az datafactory dataset delete --factory-name
     *                               --name
     *                               --resource-group
     */
    ext_datafactory_az_datafactory_dataset_delete(): void {
    }

    /**
     * Lists datasets.
     *
     * Syntax: 
     *
     * az datafactory dataset list --factory-name
     *                             --resource-group
     */
    ext_datafactory_az_datafactory_dataset_list(): void {
    }

    /**
     * Gets a dataset.
     *
     * Syntax: 
     *
     * az datafactory dataset show --factory-name
     *                             --name
     *                             --resource-group
     *                             [--if-none-match]
     */
    ext_datafactory_az_datafactory_dataset_show(): void {
    }
}

/** Datafactory factory. */
class ext_datafactory_az_datafactory_factory {
    /**
     * Updates a factory's repo information.
     *
     * Syntax: 
     *
     * az datafactory factory configure-factory-repo --location
     *                                               [--factory-git-hub-configuration]
     *                                               [--factory-resource-id]
     *                                               [--factory-vsts-configuration]
     */
    ext_datafactory_az_datafactory_factory_configure_factory_repo(): void {
    }

    /**
     * Creates or updates a factory.
     *
     * Syntax: 
     *
     * az datafactory factory create --name
     *                               --resource-group
     *                               [--factory-git-hub-configuration]
     *                               [--factory-vsts-configuration]
     *                               [--global-parameters]
     *                               [--if-match]
     *                               [--location]
     *                               [--tags]
     */
    ext_datafactory_az_datafactory_factory_create(): void {
    }

    /**
     * Deletes a factory.
     *
     * Syntax: 
     *
     * az datafactory factory delete --name
     *                               --resource-group
     */
    ext_datafactory_az_datafactory_factory_delete(): void {
    }

    /**
     * Get Data Plane access.
     *
     * Syntax: 
     *
     * az datafactory factory get-data-plane-access --name
     *                                              --resource-group
     *                                              [--access-resource-path]
     *                                              [--expire-time]
     *                                              [--permissions]
     *                                              [--profile-name]
     *                                              [--start-time]
     */
    ext_datafactory_az_datafactory_factory_get_data_plane_access(): void {
    }

    /**
     * Get GitHub Access Token.
     *
     * Syntax: 
     *
     * az datafactory factory get-git-hub-access-token --git-hub-access-code
     *                                                 --git-hub-access-token-base-url
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--git-hub-client-id]
     */
    ext_datafactory_az_datafactory_factory_get_git_hub_access_token(): void {
    }

    /**
     * Lists factories under the specified subscription.
     *
     * Syntax: 
     *
     * az datafactory factory list [--resource-group]
     */
    ext_datafactory_az_datafactory_factory_list(): void {
    }

    /**
     * Gets a factory.
     *
     * Syntax: 
     *
     * az datafactory factory show --name
     *                             --resource-group
     *                             [--if-none-match]
     */
    ext_datafactory_az_datafactory_factory_show(): void {
    }

    /**
     * Updates a factory.
     *
     * Syntax: 
     *
     * az datafactory factory update --name
     *                               --resource-group
     *                               [--tags]
     */
    ext_datafactory_az_datafactory_factory_update(): void {
    }
}

/** Datafactory integration-runtime sub group linked-integration-runtime. */
class ext_datafactory_az_datafactory_integration_runtime_linked_integration_runtime {
    /**
     * Create a linked integration runtime entry in a shared integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime linked-integration-runtime create --factory-name
     *                                                                      --integration-runtime-name
     *                                                                      --resource-group
     *                                                                      [--data-factory-name]
     *                                                                      [--location]
     *                                                                      [--name]
     *                                                                      [--subscription-id]
     */
    ext_datafactory_az_datafactory_integration_runtime_linked_integration_runtime_create(): void {
    }
}

/** Datafactory integration-runtime sub group managed. */
class ext_datafactory_az_datafactory_integration_runtime_managed {
    /**
     * Creates or updates an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime managed create --factory-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--description]
     *                                                   [--if-match]
     *                                                   [--type-properties-compute-properties]
     *                                                   [--type-properties-ssis-properties]
     */
    ext_datafactory_az_datafactory_integration_runtime_managed_create(): void {
    }
}

/** Datafactory integration-runtime sub group self-hosted. */
class ext_datafactory_az_datafactory_integration_runtime_self_hosted {
    /**
     * Creates or updates an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime self-hosted create --factory-name
     *                                                       --name
     *                                                       --resource-group
     *                                                       [--description]
     *                                                       [--if-match]
     *                                                       [--type-properties-linked-info]
     */
    ext_datafactory_az_datafactory_integration_runtime_self_hosted_create(): void {
    }
}

/** Datafactory integration-runtime-node. */
class ext_datafactory_az_datafactory_integration_runtime_node {
    /**
     * Deletes a self-hosted integration runtime node.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime-node delete --factory-name
     *                                                --integration-runtime-name
     *                                                --node-name
     *                                                --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_node_delete(): void {
    }

    /**
     * Get the IP address of self-hosted integration runtime node.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime-node get-ip-address --factory-name
     *                                                        --integration-runtime-name
     *                                                        --node-name
     *                                                        --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_node_get_ip_address(): void {
    }

    /**
     * Gets a self-hosted integration runtime node.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime-node show --factory-name
     *                                              --integration-runtime-name
     *                                              --node-name
     *                                              --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_node_show(): void {
    }

    /**
     * Updates a self-hosted integration runtime node.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime-node update --factory-name
     *                                                --integration-runtime-name
     *                                                --node-name
     *                                                --resource-group
     *                                                [--concurrent-jobs-limit]
     */
    ext_datafactory_az_datafactory_integration_runtime_node_update(): void {
    }
}

/** Datafactory integration-runtime. */
class ext_datafactory_az_datafactory_integration_runtime {
    /**
     * Deletes an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime delete --factory-name
     *                                           --name
     *                                           --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_delete(): void {
    }

    /**
     * Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime get-connection-info --factory-name
     *                                                        --name
     *                                                        --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_get_connection_info(): void {
    }

    /**
     * Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime get-monitoring-data --factory-name
     *                                                        --name
     *                                                        --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_get_monitoring_data(): void {
    }

    /**
     * Gets detailed status information for an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime get-status --factory-name
     *                                               --name
     *                                               --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_get_status(): void {
    }

    /**
     * Lists integration runtimes.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime list --factory-name
     *                                         --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_list(): void {
    }

    /**
     * Retrieves the authentication keys for an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime list-auth-key --factory-name
     *                                                  --name
     *                                                  --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_list_auth_key(): void {
    }

    /**
     * Regenerates the authentication key for an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime regenerate-auth-key --factory-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        [--key-name {authKey1, authKey2}]
     */
    ext_datafactory_az_datafactory_integration_runtime_regenerate_auth_key(): void {
    }

    /**
     * Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime remove-link --factory-name
     *                                                --linked-factory-name
     *                                                --name
     *                                                --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_remove_link(): void {
    }

    /**
     * Gets an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime show --factory-name
     *                                         --name
     *                                         --resource-group
     *                                         [--if-none-match]
     */
    ext_datafactory_az_datafactory_integration_runtime_show(): void {
    }

    /**
     * Starts a ManagedReserved type integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime start --factory-name
     *                                          --name
     *                                          --resource-group
     *                                          [--no-wait]
     */
    ext_datafactory_az_datafactory_integration_runtime_start(): void {
    }

    /**
     * Stops a ManagedReserved type integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime stop --factory-name
     *                                         --name
     *                                         --resource-group
     *                                         [--no-wait]
     */
    ext_datafactory_az_datafactory_integration_runtime_stop(): void {
    }

    /**
     * Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime sync-credentials --factory-name
     *                                                     --name
     *                                                     --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_sync_credentials(): void {
    }

    /**
     * Updates an integration runtime.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime update --factory-name
     *                                           --name
     *                                           --resource-group
     *                                           [--auto-update {Off, On}]
     *                                           [--update-delay-offset]
     */
    ext_datafactory_az_datafactory_integration_runtime_update(): void {
    }

    /**
     * Upgrade self-hosted integration runtime to latest version if availability.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime upgrade --factory-name
     *                                            --name
     *                                            --resource-group
     */
    ext_datafactory_az_datafactory_integration_runtime_upgrade(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datafactory integration-runtime is met.
     *
     * Syntax: 
     *
     * az datafactory integration-runtime wait --factory-name
     *                                         --name
     *                                         --resource-group
     *                                         [--created]
     *                                         [--custom]
     *                                         [--deleted]
     *                                         [--exists]
     *                                         [--if-none-match]
     *                                         [--interval]
     *                                         [--timeout]
     *                                         [--updated]
     */
    ext_datafactory_az_datafactory_integration_runtime_wait(): void {
    }
}

/** Datafactory linked-service. */
class ext_datafactory_az_datafactory_linked_service {
    /**
     * Creates or updates a linked service.
     *
     * Syntax: 
     *
     * az datafactory linked-service create --factory-name
     *                                      --name
     *                                      --properties
     *                                      --resource-group
     *                                      [--if-match]
     */
    ext_datafactory_az_datafactory_linked_service_create(): void {
    }

    /**
     * Deletes a linked service.
     *
     * Syntax: 
     *
     * az datafactory linked-service delete --factory-name
     *                                      --name
     *                                      --resource-group
     */
    ext_datafactory_az_datafactory_linked_service_delete(): void {
    }

    /**
     * Lists linked services.
     *
     * Syntax: 
     *
     * az datafactory linked-service list --factory-name
     *                                    --resource-group
     */
    ext_datafactory_az_datafactory_linked_service_list(): void {
    }

    /**
     * Gets a linked service.
     *
     * Syntax: 
     *
     * az datafactory linked-service show --factory-name
     *                                    --name
     *                                    --resource-group
     *                                    [--if-none-match]
     */
    ext_datafactory_az_datafactory_linked_service_show(): void {
    }
}

/** Datafactory pipeline-run. */
class ext_datafactory_az_datafactory_pipeline_run {
    /**
     * Cancel a pipeline run by its run ID.
     *
     * Syntax: 
     *
     * az datafactory pipeline-run cancel --factory-name
     *                                    --resource-group
     *                                    --run-id
     *                                    [--is-recursive {false, true}]
     */
    ext_datafactory_az_datafactory_pipeline_run_cancel(): void {
    }

    /**
     * Query pipeline runs in the factory based on input filter conditions.
     *
     * Syntax: 
     *
     * az datafactory pipeline-run query-by-factory --factory-name
     *                                              --last-updated-after
     *                                              --last-updated-before
     *                                              --resource-group
     *                                              [--continuation-token]
     *                                              [--filters]
     *                                              [--order-by]
     */
    ext_datafactory_az_datafactory_pipeline_run_query_by_factory(): void {
    }

    /**
     * Get a pipeline run by its run ID.
     *
     * Syntax: 
     *
     * az datafactory pipeline-run show --factory-name
     *                                  --resource-group
     *                                  --run-id
     */
    ext_datafactory_az_datafactory_pipeline_run_show(): void {
    }
}

/** Datafactory pipeline. */
class ext_datafactory_az_datafactory_pipeline {
    /**
     * Creates or updates a pipeline.
     *
     * Syntax: 
     *
     * az datafactory pipeline create --factory-name
     *                                --name
     *                                --pipeline
     *                                --resource-group
     *                                [--if-match]
     */
    ext_datafactory_az_datafactory_pipeline_create(): void {
    }

    /**
     * Creates a run of a pipeline.
     *
     * Syntax: 
     *
     * az datafactory pipeline create-run --factory-name
     *                                    --name
     *                                    --resource-group
     *                                    [--is-recovery {false, true}]
     *                                    [--parameters]
     *                                    [--reference-pipeline-run-id]
     *                                    [--start-activity-name]
     *                                    [--start-from-failure {false, true}]
     */
    ext_datafactory_az_datafactory_pipeline_create_run(): void {
    }

    /**
     * Deletes a pipeline.
     *
     * Syntax: 
     *
     * az datafactory pipeline delete --factory-name
     *                                --name
     *                                --resource-group
     */
    ext_datafactory_az_datafactory_pipeline_delete(): void {
    }

    /**
     * Lists pipelines.
     *
     * Syntax: 
     *
     * az datafactory pipeline list --factory-name
     *                              --resource-group
     */
    ext_datafactory_az_datafactory_pipeline_list(): void {
    }

    /**
     * Gets a pipeline.
     *
     * Syntax: 
     *
     * az datafactory pipeline show --factory-name
     *                              --name
     *                              --resource-group
     *                              [--if-none-match]
     */
    ext_datafactory_az_datafactory_pipeline_show(): void {
    }

    /**
     * Creates or updates a pipeline.
     *
     * Syntax: 
     *
     * az datafactory pipeline update --factory-name
     *                                --name
     *                                --resource-group
     *                                [--activities]
     *                                [--add]
     *                                [--annotations]
     *                                [--concurrency]
     *                                [--description]
     *                                [--folder-name]
     *                                [--force-string]
     *                                [--if-match]
     *                                [--if-none-match]
     *                                [--parameters]
     *                                [--remove]
     *                                [--run-dimensions]
     *                                [--set]
     *                                [--variables]
     */
    ext_datafactory_az_datafactory_pipeline_update(): void {
    }
}

/** Datafactory trigger-run. */
class ext_datafactory_az_datafactory_trigger_run {
    /**
     * Query trigger runs.
     *
     * Syntax: 
     *
     * az datafactory trigger-run query-by-factory --factory-name
     *                                             --last-updated-after
     *                                             --last-updated-before
     *                                             --resource-group
     *                                             [--continuation-token]
     *                                             [--filters]
     *                                             [--order-by]
     */
    ext_datafactory_az_datafactory_trigger_run_query_by_factory(): void {
    }

    /**
     * Rerun single trigger instance by runId.
     *
     * Syntax: 
     *
     * az datafactory trigger-run rerun --factory-name
     *                                  --resource-group
     *                                  --run-id
     *                                  --trigger-name
     */
    ext_datafactory_az_datafactory_trigger_run_rerun(): void {
    }
}

/** Datafactory trigger. */
class ext_datafactory_az_datafactory_trigger {
    /**
     * Creates or updates a trigger.
     *
     * Syntax: 
     *
     * az datafactory trigger create --factory-name
     *                               --name
     *                               --properties
     *                               --resource-group
     *                               [--if-match]
     */
    ext_datafactory_az_datafactory_trigger_create(): void {
    }

    /**
     * Deletes a trigger.
     *
     * Syntax: 
     *
     * az datafactory trigger delete --factory-name
     *                               --name
     *                               --resource-group
     */
    ext_datafactory_az_datafactory_trigger_delete(): void {
    }

    /**
     * Get a trigger's event subscription status.
     *
     * Syntax: 
     *
     * az datafactory trigger get-event-subscription-status --factory-name
     *                                                      --name
     *                                                      --resource-group
     */
    ext_datafactory_az_datafactory_trigger_get_event_subscription_status(): void {
    }

    /**
     * Lists triggers.
     *
     * Syntax: 
     *
     * az datafactory trigger list --factory-name
     *                             --resource-group
     */
    ext_datafactory_az_datafactory_trigger_list(): void {
    }

    /**
     * Query triggers.
     *
     * Syntax: 
     *
     * az datafactory trigger query-by-factory --factory-name
     *                                         --resource-group
     *                                         [--continuation-token]
     *                                         [--parent-trigger-name]
     */
    ext_datafactory_az_datafactory_trigger_query_by_factory(): void {
    }

    /**
     * Gets a trigger.
     *
     * Syntax: 
     *
     * az datafactory trigger show --factory-name
     *                             --name
     *                             --resource-group
     *                             [--if-none-match]
     */
    ext_datafactory_az_datafactory_trigger_show(): void {
    }

    /**
     * Starts a trigger.
     *
     * Syntax: 
     *
     * az datafactory trigger start --factory-name
     *                              --name
     *                              --resource-group
     *                              [--no-wait]
     */
    ext_datafactory_az_datafactory_trigger_start(): void {
    }

    /**
     * Stops a trigger.
     *
     * Syntax: 
     *
     * az datafactory trigger stop --factory-name
     *                             --name
     *                             --resource-group
     *                             [--no-wait]
     */
    ext_datafactory_az_datafactory_trigger_stop(): void {
    }

    /**
     * Subscribe event trigger to events.
     *
     * Syntax: 
     *
     * az datafactory trigger subscribe-to-event --factory-name
     *                                           --name
     *                                           --resource-group
     *                                           [--no-wait]
     */
    ext_datafactory_az_datafactory_trigger_subscribe_to_event(): void {
    }

    /**
     * Unsubscribe event trigger from events.
     *
     * Syntax: 
     *
     * az datafactory trigger unsubscribe-from-event --factory-name
     *                                               --name
     *                                               --resource-group
     *                                               [--no-wait]
     */
    ext_datafactory_az_datafactory_trigger_unsubscribe_from_event(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datafactory trigger is met.
     *
     * Syntax: 
     *
     * az datafactory trigger wait --factory-name
     *                             --name
     *                             --resource-group
     *                             [--created]
     *                             [--custom]
     *                             [--deleted]
     *                             [--exists]
     *                             [--if-none-match]
     *                             [--interval]
     *                             [--timeout]
     *                             [--updated]
     */
    ext_datafactory_az_datafactory_trigger_wait(): void {
    }
}

/** */
class ext_datafactory_az_datafactory {
}

/** */
class ext_datafactory_az {
}

/** Commands to manage datashare accounts. */
class ext_datashare_az_datashare_account {
    /**
     * Create an account.
     *
     * Syntax: 
     *
     * az datashare account create --name
     *                             --resource-group
     *                             [--location]
     *                             [--no-wait]
     *                             [--tags]
     */
    ext_datashare_az_datashare_account_create(): void {
    }

    /**
     * Delete an account.
     *
     * Syntax: 
     *
     * az datashare account delete --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--yes]
     */
    ext_datashare_az_datashare_account_delete(): void {
    }

    /**
     * List datashare accounts.
     *
     * Syntax: 
     *
     * az datashare account list [--resource-group]
     */
    ext_datashare_az_datashare_account_list(): void {
    }

    /**
     * Show an account.
     *
     * Syntax: 
     *
     * az datashare account show --name
     *                           --resource-group
     */
    ext_datashare_az_datashare_account_show(): void {
    }

    /**
     * Patch an account.
     *
     * Syntax: 
     *
     * az datashare account update --name
     *                             --resource-group
     *                             [--tags]
     */
    ext_datashare_az_datashare_account_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare account is met.
     *
     * Syntax: 
     *
     * az datashare account wait --name
     *                           --resource-group
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--timeout]
     *                           [--updated]
     */
    ext_datashare_az_datashare_account_wait(): void {
    }
}

/** Commands for consumers to manage datashare dataset mappings. */
class ext_datashare_az_datashare_consumer_dataset_mapping {
    /**
     * Create a dataSet mapping.
     *
     * Syntax: 
     *
     * az datashare consumer dataset-mapping create --account-name
     *                                              --mapping
     *                                              --name
     *                                              --resource-group
     *                                              --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_dataset_mapping_create(): void {
    }

    /**
     * Delete a dataset mapping in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer dataset-mapping delete --account-name
     *                                              --name
     *                                              --resource-group
     *                                              --share-subscription-name
     *                                              [--yes]
     */
    ext_datashare_az_datashare_consumer_dataset_mapping_delete(): void {
    }

    /**
     * List dataset mappings in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer dataset-mapping list --account-name
     *                                            --resource-group
     *                                            --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_dataset_mapping_list(): void {
    }

    /**
     * Show a dataset mapping in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer dataset-mapping show --account-name
     *                                            --name
     *                                            --resource-group
     *                                            --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_dataset_mapping_show(): void {
    }
}

/** Commands for consumers to manage datashare invitations. */
class ext_datashare_az_datashare_consumer_invitation {
    /**
     * List received invitations.
     *
     * Syntax: 
     *
     * az datashare consumer invitation list
     */
    ext_datashare_az_datashare_consumer_invitation_list(): void {
    }

    /**
     * Reject an invitation.
     *
     * Syntax: 
     *
     * az datashare consumer invitation reject --invitation-id
     *                                         --location
     */
    ext_datashare_az_datashare_consumer_invitation_reject(): void {
    }

    /**
     * Show a received invitation.
     *
     * Syntax: 
     *
     * az datashare consumer invitation show --invitation-id
     *                                       --location
     */
    ext_datashare_az_datashare_consumer_invitation_show(): void {
    }
}

/** Commands for consumers to manage datashare share subscription synchronizations. */
class ext_datashare_az_datashare_consumer_share_subscription_synchronization {
    /**
     * Request to cancel a synchronization.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription synchronization cancel --account-name
     *                                                                 --resource-group
     *                                                                 --share-subscription-name
     *                                                                 --synchronization-id
     *                                                                 [--no-wait]
     */
    ext_datashare_az_datashare_consumer_share_subscription_synchronization_cancel(): void {
    }

    /**
     * List synchronizations of a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription synchronization list --account-name
     *                                                               --resource-group
     *                                                               --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_share_subscription_synchronization_list(): void {
    }

    /**
     * List synchronization details.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription synchronization list-detail --account-name
     *                                                                      --resource-group
     *                                                                      --share-subscription-name
     *                                                                      --synchronization-id
     */
    ext_datashare_az_datashare_consumer_share_subscription_synchronization_list_detail(): void {
    }

    /**
     * Initiate a dataset synchronization.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription synchronization start --account-name
     *                                                                --resource-group
     *                                                                --share-subscription-name
     *                                                                [--no-wait]
     *                                                                [--synchronization-mode {FullSync, Incremental}]
     */
    ext_datashare_az_datashare_consumer_share_subscription_synchronization_start(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare share subscription synchronization is met.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription synchronization wait --account-name
     *                                                               --resource-group
     *                                                               --share-subscription-name
     *                                                               --synchronization-id
     *                                                               [--created]
     *                                                               [--custom]
     *                                                               [--deleted]
     *                                                               [--exists]
     *                                                               [--interval]
     *                                                               [--timeout]
     *                                                               [--updated]
     */
    ext_datashare_az_datashare_consumer_share_subscription_synchronization_wait(): void {
    }
}

/** Commands for consumers to manage datashare share subscriptions. */
class ext_datashare_az_datashare_consumer_share_subscription {
    /**
     * Create a share subscription in an account.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription create --account-name
     *                                                 --invitation-id
     *                                                 --name
     *                                                 --resource-group
     *                                                 --source-share-location
     */
    ext_datashare_az_datashare_consumer_share_subscription_create(): void {
    }

    /**
     * Delete a share subscription in an account.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription delete --account-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--no-wait]
     *                                                 [--yes]
     */
    ext_datashare_az_datashare_consumer_share_subscription_delete(): void {
    }

    /**
     * List share subscriptions in an account.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription list --account-name
     *                                               --resource-group
     */
    ext_datashare_az_datashare_consumer_share_subscription_list(): void {
    }

    /**
     * List source datasets of a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription list-source-dataset --account-name
     *                                                              --resource-group
     *                                                              --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_share_subscription_list_source_dataset(): void {
    }

    /**
     * List synchronization settings set on a share.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription list-source-share-synchronization-setting --account-name
     *                                                                                    --resource-group
     *                                                                                    --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_share_subscription_list_source_share_synchronization_setting(): void {
    }

    /**
     * Show a share subscription in an account.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription show --account-name
     *                                               --name
     *                                               --resource-group
     */
    ext_datashare_az_datashare_consumer_share_subscription_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare share subscription is met.
     *
     * Syntax: 
     *
     * az datashare consumer share-subscription wait --account-name
     *                                               --name
     *                                               --resource-group
     *                                               [--created]
     *                                               [--custom]
     *                                               [--deleted]
     *                                               [--exists]
     *                                               [--interval]
     *                                               [--timeout]
     *                                               [--updated]
     */
    ext_datashare_az_datashare_consumer_share_subscription_wait(): void {
    }
}

/** Commands for consumers to manage datashare consumer triggers. */
class ext_datashare_az_datashare_consumer_trigger {
    /**
     * Create a trigger.
     *
     * Syntax: 
     *
     * az datashare consumer trigger create --account-name
     *                                      --name
     *                                      --recurrence-interval {Day, Hour}
     *                                      --resource-group
     *                                      --share-subscription-name
     *                                      --synchronization-time
     *                                      [--kind {ScheduleBased}]
     *                                      [--no-wait]
     */
    ext_datashare_az_datashare_consumer_trigger_create(): void {
    }

    /**
     * Delete a trigger in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer trigger delete --account-name
     *                                      --name
     *                                      --resource-group
     *                                      --share-subscription-name
     *                                      [--no-wait]
     *                                      [--yes]
     */
    ext_datashare_az_datashare_consumer_trigger_delete(): void {
    }

    /**
     * List triggers in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer trigger list --account-name
     *                                    --resource-group
     *                                    --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_trigger_list(): void {
    }

    /**
     * Show a trigger in a share subscription.
     *
     * Syntax: 
     *
     * az datashare consumer trigger show --account-name
     *                                    --name
     *                                    --resource-group
     *                                    --share-subscription-name
     */
    ext_datashare_az_datashare_consumer_trigger_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare trigger is met.
     *
     * Syntax: 
     *
     * az datashare consumer trigger wait --account-name
     *                                    --name
     *                                    --resource-group
     *                                    --share-subscription-name
     *                                    [--created]
     *                                    [--custom]
     *                                    [--deleted]
     *                                    [--exists]
     *                                    [--interval]
     *                                    [--timeout]
     *                                    [--updated]
     */
    ext_datashare_az_datashare_consumer_trigger_wait(): void {
    }
}

/** Commands for consumers to manage datashare. */
class ext_datashare_az_datashare_consumer {
}

/** Commands for providers to manage datashare datasets. */
class ext_datashare_az_datashare_dataset {
    /**
     * Create a dataset.
     *
     * Syntax: 
     *
     * az datashare dataset create --account-name
     *                             --dataset
     *                             --name
     *                             --resource-group
     *                             --share-name
     */
    ext_datashare_az_datashare_dataset_create(): void {
    }

    /**
     * Delete a dataset in a share.
     *
     * Syntax: 
     *
     * az datashare dataset delete --account-name
     *                             --name
     *                             --resource-group
     *                             --share-name
     *                             [--no-wait]
     *                             [--yes]
     */
    ext_datashare_az_datashare_dataset_delete(): void {
    }

    /**
     * List datasets in a share.
     *
     * Syntax: 
     *
     * az datashare dataset list --account-name
     *                           --resource-group
     *                           --share-name
     */
    ext_datashare_az_datashare_dataset_list(): void {
    }

    /**
     * Show a dataset.
     *
     * Syntax: 
     *
     * az datashare dataset show --account-name
     *                           --name
     *                           --resource-group
     *                           --share-name
     */
    ext_datashare_az_datashare_dataset_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare dataset is met.
     *
     * Syntax: 
     *
     * az datashare dataset wait --account-name
     *                           --name
     *                           --resource-group
     *                           --share-name
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--timeout]
     *                           [--updated]
     */
    ext_datashare_az_datashare_dataset_wait(): void {
    }
}

/** Commands for providers to manage datashare invitations. */
class ext_datashare_az_datashare_invitation {
    /**
     * Create an invitation.
     *
     * Syntax: 
     *
     * az datashare invitation create --account-name
     *                                --name
     *                                --resource-group
     *                                --share-name
     *                                [--target-active-directory-id]
     *                                [--target-email]
     *                                [--target-object-id]
     */
    ext_datashare_az_datashare_invitation_create(): void {
    }

    /**
     * Delete an invitation in a share.
     *
     * Syntax: 
     *
     * az datashare invitation delete --account-name
     *                                --name
     *                                --resource-group
     *                                --share-name
     *                                [--yes]
     */
    ext_datashare_az_datashare_invitation_delete(): void {
    }

    /**
     * List invitations in a share.
     *
     * Syntax: 
     *
     * az datashare invitation list --account-name
     *                              --resource-group
     *                              --share-name
     */
    ext_datashare_az_datashare_invitation_list(): void {
    }

    /**
     * Show an invitation in a share.
     *
     * Syntax: 
     *
     * az datashare invitation show --account-name
     *                              --name
     *                              --resource-group
     *                              --share-name
     */
    ext_datashare_az_datashare_invitation_show(): void {
    }
}

/** Commands for providers to manage datashare share subscriptions. */
class ext_datashare_az_datashare_provider_share_subscription {
    /**
     * List share subscriptions in a provider share.
     *
     * Syntax: 
     *
     * az datashare provider-share-subscription list --account-name
     *                                               --resource-group
     *                                               --share-name
     */
    ext_datashare_az_datashare_provider_share_subscription_list(): void {
    }

    /**
     * Reinstate a share subscription in a provider share.
     *
     * Syntax: 
     *
     * az datashare provider-share-subscription reinstate --account-name
     *                                                    --resource-group
     *                                                    --share-name
     *                                                    --share-subscription
     */
    ext_datashare_az_datashare_provider_share_subscription_reinstate(): void {
    }

    /**
     * Revoke a share subscription in a provider share.
     *
     * Syntax: 
     *
     * az datashare provider-share-subscription revoke --account-name
     *                                                 --resource-group
     *                                                 --share-name
     *                                                 --share-subscription
     *                                                 [--no-wait]
     */
    ext_datashare_az_datashare_provider_share_subscription_revoke(): void {
    }

    /**
     * Show a share subscription in a provider share.
     *
     * Syntax: 
     *
     * az datashare provider-share-subscription show --account-name
     *                                               --resource-group
     *                                               --share-name
     *                                               --share-subscription
     */
    ext_datashare_az_datashare_provider_share_subscription_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare provider share subscription is met.
     *
     * Syntax: 
     *
     * az datashare provider-share-subscription wait --account-name
     *                                               --resource-group
     *                                               --share-name
     *                                               --share-subscription
     *                                               [--created]
     *                                               [--custom]
     *                                               [--deleted]
     *                                               [--exists]
     *                                               [--interval]
     *                                               [--timeout]
     *                                               [--updated]
     */
    ext_datashare_az_datashare_provider_share_subscription_wait(): void {
    }
}

/** Commands for providers to manage datashare synchronization settings. */
class ext_datashare_az_datashare_synchronization_setting {
    /**
     * Create a synchronization setting.
     *
     * Syntax: 
     *
     * az datashare synchronization-setting create --account-name
     *                                             --name
     *                                             --recurrence-interval {Day, Hour}
     *                                             --resource-group
     *                                             --share-name
     *                                             --synchronization-time
     *                                             [--kind {ScheduleBased}]
     */
    ext_datashare_az_datashare_synchronization_setting_create(): void {
    }

    /**
     * Delete a synchronization setting in a share.
     *
     * Syntax: 
     *
     * az datashare synchronization-setting delete --account-name
     *                                             --name
     *                                             --resource-group
     *                                             --share-name
     *                                             [--no-wait]
     *                                             [--yes]
     */
    ext_datashare_az_datashare_synchronization_setting_delete(): void {
    }

    /**
     * List synchronization settings in a share.
     *
     * Syntax: 
     *
     * az datashare synchronization-setting list --account-name
     *                                           --resource-group
     *                                           --share-name
     */
    ext_datashare_az_datashare_synchronization_setting_list(): void {
    }

    /**
     * Show a synchronization setting in a share.
     *
     * Syntax: 
     *
     * az datashare synchronization-setting show --account-name
     *                                           --name
     *                                           --resource-group
     *                                           --share-name
     */
    ext_datashare_az_datashare_synchronization_setting_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare synchronization setting is met.
     *
     * Syntax: 
     *
     * az datashare synchronization-setting wait --account-name
     *                                           --name
     *                                           --resource-group
     *                                           --share-name
     *                                           [--created]
     *                                           [--custom]
     *                                           [--deleted]
     *                                           [--exists]
     *                                           [--interval]
     *                                           [--timeout]
     *                                           [--updated]
     */
    ext_datashare_az_datashare_synchronization_setting_wait(): void {
    }
}

/** Commands to manage datashare synchronization. */
class ext_datashare_az_datashare_synchronization {
    /**
     * List synchronizations of a datashare.
     *
     * Syntax: 
     *
     * az datashare synchronization list --account-name
     *                                   --resource-group
     *                                   --share-name
     */
    ext_datashare_az_datashare_synchronization_list(): void {
    }

    /**
     * List synchronization details.
     *
     * Syntax: 
     *
     * az datashare synchronization list-detail --account-name
     *                                          --resource-group
     *                                          --share-name
     *                                          [--synchronization-id]
     */
    ext_datashare_az_datashare_synchronization_list_detail(): void {
    }
}

/** Commands to manage datashare. */
class ext_datashare_az_datashare {
    /**
     * Create a datashare.
     *
     * Syntax: 
     *
     * az datashare create --account-name
     *                     --name
     *                     --resource-group
     *                     [--description]
     *                     [--share-kind {CopyBased, InPlace}]
     *                     [--terms]
     */
    ext_datashare_az_datashare_create(): void {
    }

    /**
     * Delete a datashare.
     *
     * Syntax: 
     *
     * az datashare delete --account-name
     *                     --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--yes]
     */
    ext_datashare_az_datashare_delete(): void {
    }

    /**
     * List datashares in an account.
     *
     * Syntax: 
     *
     * az datashare list --account-name
     *                   --resource-group
     */
    ext_datashare_az_datashare_list(): void {
    }

    /**
     * Show a datashare.
     *
     * Syntax: 
     *
     * az datashare show --account-name
     *                   --name
     *                   --resource-group
     */
    ext_datashare_az_datashare_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the datashare is met.
     *
     * Syntax: 
     *
     * az datashare wait --account-name
     *                   --name
     *                   --resource-group
     *                   [--created]
     *                   [--custom]
     *                   [--deleted]
     *                   [--exists]
     *                   [--interval]
     *                   [--timeout]
     *                   [--updated]
     */
    ext_datashare_az_datashare_wait(): void {
    }
}

/** */
class ext_datashare_az {
}

/** */
class ext_db-up_az {
}

/** Manage Azure Database for MySQL servers. */
class ext_db-up_az_mysql {
    /**
     * Delete the MySQL server and its cached information.
     *
     * Syntax: 
     *
     * az mysql down [--delete-group]
     *               [--no-wait]
     *               [--resource-group]
     *               [--server-name]
     *               [--yes]
     */
    ext_db-up_az_mysql_down(): void {
    }

    /**
     * Show the connection strings for a MySQL server database.
     *
     * Syntax: 
     *
     * az mysql show-connection-string [--admin-password]
     *                                 [--admin-user]
     *                                 [--database-name]
     *                                 [--server-name]
     */
    ext_db-up_az_mysql_show_connection_string(): void {
    }

    /**
     * Set up an Azure Database for MySQL server and configurations.
     *
     * Syntax: 
     *
     * az mysql up [--admin-password]
     *             [--admin-user]
     *             [--backup-retention]
     *             [--database-name]
     *             [--generate-password]
     *             [--geo-redundant-backup {Disabled, Enabled}]
     *             [--location]
     *             [--resource-group]
     *             [--server-name]
     *             [--sku-name]
     *             [--ssl-enforcement {Disabled, Enabled}]
     *             [--storage-size]
     *             [--tags]
     *             [--version]
     */
    ext_db-up_az_mysql_up(): void {
    }
}

/** Manage Azure Database for PostgreSQL servers. */
class ext_db-up_az_postgres {
    /**
     * Delete the PostgreSQL server and its cached information.
     *
     * Syntax: 
     *
     * az postgres down [--delete-group]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--server-name]
     *                  [--yes]
     */
    ext_db-up_az_postgres_down(): void {
    }

    /**
     * Show the connection strings for a PostgreSQL server database.
     *
     * Syntax: 
     *
     * az postgres show-connection-string [--admin-password]
     *                                    [--admin-user]
     *                                    [--database-name]
     *                                    [--server-name]
     */
    ext_db-up_az_postgres_show_connection_string(): void {
    }

    /**
     * Set up an Azure Database for PostgreSQL server and configurations.
     *
     * Syntax: 
     *
     * az postgres up [--admin-password]
     *                [--admin-user]
     *                [--backup-retention]
     *                [--database-name]
     *                [--generate-password]
     *                [--geo-redundant-backup {Disabled, Enabled}]
     *                [--location]
     *                [--resource-group]
     *                [--server-name]
     *                [--sku-name]
     *                [--ssl-enforcement {Disabled, Enabled}]
     *                [--storage-size]
     *                [--tags]
     *                [--version]
     */
    ext_db-up_az_postgres_up(): void {
    }
}

/** Manage Azure SQL Databases and Data Warehouses. */
class ext_db-up_az_sql {
    /**
     * Delete the SQL server and its cached information.
     *
     * Syntax: 
     *
     * az sql down [--delete-group]
     *             [--no-wait]
     *             [--resource-group]
     *             [--server-name]
     *             [--yes]
     */
    ext_db-up_az_sql_down(): void {
    }

    /**
     * Set up an Azure Database for SQL server and configurations.
     *
     * Syntax: 
     *
     * az sql up [--admin-password]
     *           [--admin-user]
     *           [--database-name]
     *           [--generate-password]
     *           [--location]
     *           [--resource-group]
     *           [--server-name]
     *           [--tags]
     *           [--version]
     */
    ext_db-up_az_sql_up(): void {
    }
}

/** Commands to manage AKS app. */
class ext_deploy-to-azure_az_aks_app {
    /**
     * Deploy to AKS via GitHub actions.
     *
     * Syntax: 
     *
     * az aks app up [--acr]
     *               [--aks-cluster]
     *               [--branch-name]
     *               [--do-not-wait]
     *               [--port]
     *               [--repository]
     */
    ext_deploy-to-azure_az_aks_app_up(): void {
    }
}

/** Manage Azure Kubernetes Services. */
class ext_deploy-to-azure_az_aks {
}

/** Commands to Manage Azure Container Instances App. */
class ext_deploy-to-azure_az_container_app {
    /**
     * Deploy to Azure Container Instances using GitHub Actions.
     *
     * Syntax: 
     *
     * az container app up [--acr]
     *                     [--branch-name]
     *                     [--do-not-wait]
     *                     [--port]
     *                     [--repository]
     */
    ext_deploy-to-azure_az_container_app_up(): void {
    }
}

/** Manage Azure Container Instances. */
class ext_deploy-to-azure_az_container {
}

/** Commands to manage Azure Functions app. */
class ext_deploy-to-azure_az_functionapp_app {
    /**
     * Deploy to Azure Functions via GitHub actions.
     *
     * Syntax: 
     *
     * az functionapp app up [--app-name]
     *                       [--branch-name]
     *                       [--do-not-wait]
     *                       [--repository]
     */
    ext_deploy-to-azure_az_functionapp_app_up(): void {
    }
}

/** Manage function apps. To install the Azure Functions Core tools see <a href="https://github.com/Azure/azure-functions-core-tools">https://github.com/Azure/azure-functions-core-tools</a>. */
class ext_deploy-to-azure_az_functionapp {
}

/** */
class ext_deploy-to-azure_az {
}

/** Desktopvirtualization applicationgroup. */
class ext_desktopvirtualization_az_desktopvirtualization_applicationgroup {
    /**
     * Create or update an applicationGroup.
     *
     * Syntax: 
     *
     * az desktopvirtualization applicationgroup create --application-group-type {Desktop, RemoteApp}
     *                                                  --host-pool-arm-path
     *                                                  --location
     *                                                  --name
     *                                                  --resource-group
     *                                                  [--description]
     *                                                  [--friendly-name]
     *                                                  [--tags]
     */
    ext_desktopvirtualization_az_desktopvirtualization_applicationgroup_create(): void {
    }

    /**
     * Remove an applicationGroup.
     *
     * Syntax: 
     *
     * az desktopvirtualization applicationgroup delete --name
     *                                                  --resource-group
     */
    ext_desktopvirtualization_az_desktopvirtualization_applicationgroup_delete(): void {
    }

    /**
     * List applicationGroups in subscription.
     *
     * Syntax: 
     *
     * az desktopvirtualization applicationgroup list [--filter]
     *                                                [--resource-group]
     */
    ext_desktopvirtualization_az_desktopvirtualization_applicationgroup_list(): void {
    }

    /**
     * Get an application group.
     *
     * Syntax: 
     *
     * az desktopvirtualization applicationgroup show --name
     *                                                --resource-group
     */
    ext_desktopvirtualization_az_desktopvirtualization_applicationgroup_show(): void {
    }

    /**
     * Update an applicationGroup.
     *
     * Syntax: 
     *
     * az desktopvirtualization applicationgroup update --name
     *                                                  --resource-group
     *                                                  [--description]
     *                                                  [--friendly-name]
     *                                                  [--tags]
     */
    ext_desktopvirtualization_az_desktopvirtualization_applicationgroup_update(): void {
    }
}

/** Desktopvirtualization hostpool. */
class ext_desktopvirtualization_az_desktopvirtualization_hostpool {
    /**
     * Create or update a host pool.
     *
     * Syntax: 
     *
     * az desktopvirtualization hostpool create --host-pool-type {Personal, Pooled}
     *                                          --load-balancer-type {BreadthFirst, DepthFirst, Persistent}
     *                                          --location
     *                                          --name
     *                                          --personal-desktop-assignment-type {Automatic, Direct}
     *                                          --resource-group
     *                                          [--custom-rdp-property]
     *                                          [--description]
     *                                          [--friendly-name]
     *                                          [--max-session-limit]
     *                                          [--registration-info]
     *                                          [--ring]
     *                                          [--sso-context]
     *                                          [--tags]
     *                                          [--validation-environment {false, true}]
     *                                          [--vm-template]
     */
    ext_desktopvirtualization_az_desktopvirtualization_hostpool_create(): void {
    }

    /**
     * Remove a host pool.
     *
     * Syntax: 
     *
     * az desktopvirtualization hostpool delete --name
     *                                          --resource-group
     *                                          [--force {false, true}]
     */
    ext_desktopvirtualization_az_desktopvirtualization_hostpool_delete(): void {
    }

    /**
     * List hostPools in subscription.
     *
     * Syntax: 
     *
     * az desktopvirtualization hostpool list [--resource-group]
     */
    ext_desktopvirtualization_az_desktopvirtualization_hostpool_list(): void {
    }

    /**
     * Get a host pool.
     *
     * Syntax: 
     *
     * az desktopvirtualization hostpool show --name
     *                                        --resource-group
     */
    ext_desktopvirtualization_az_desktopvirtualization_hostpool_show(): void {
    }

    /**
     * Update a host pool.
     *
     * Syntax: 
     *
     * az desktopvirtualization hostpool update --name
     *                                          --resource-group
     *                                          [--custom-rdp-property]
     *                                          [--description]
     *                                          [--friendly-name]
     *                                          [--load-balancer-type {BreadthFirst, DepthFirst, Persistent}]
     *                                          [--max-session-limit]
     *                                          [--personal-desktop-assignment-type {Automatic, Direct}]
     *                                          [--registration-info]
     *                                          [--ring]
     *                                          [--sso-context]
     *                                          [--tags]
     *                                          [--validation-environment {false, true}]
     */
    ext_desktopvirtualization_az_desktopvirtualization_hostpool_update(): void {
    }
}

/** Desktopvirtualization workspace. */
class ext_desktopvirtualization_az_desktopvirtualization_workspace {
    /**
     * Create or update a workspace.
     *
     * Syntax: 
     *
     * az desktopvirtualization workspace create --location
     *                                           --name
     *                                           --resource-group
     *                                           [--application-group-references]
     *                                           [--description]
     *                                           [--friendly-name]
     *                                           [--tags]
     */
    ext_desktopvirtualization_az_desktopvirtualization_workspace_create(): void {
    }

    /**
     * Remove a workspace.
     *
     * Syntax: 
     *
     * az desktopvirtualization workspace delete --name
     *                                           --resource-group
     */
    ext_desktopvirtualization_az_desktopvirtualization_workspace_delete(): void {
    }

    /**
     * List workspaces in subscription.
     *
     * Syntax: 
     *
     * az desktopvirtualization workspace list [--resource-group]
     */
    ext_desktopvirtualization_az_desktopvirtualization_workspace_list(): void {
    }

    /**
     * Get a workspace.
     *
     * Syntax: 
     *
     * az desktopvirtualization workspace show --name
     *                                         --resource-group
     */
    ext_desktopvirtualization_az_desktopvirtualization_workspace_show(): void {
    }

    /**
     * Update a workspace.
     *
     * Syntax: 
     *
     * az desktopvirtualization workspace update --name
     *                                           --resource-group
     *                                           [--application-group-references]
     *                                           [--description]
     *                                           [--friendly-name]
     *                                           [--tags]
     */
    ext_desktopvirtualization_az_desktopvirtualization_workspace_update(): void {
    }
}

/** */
class ext_desktopvirtualization_az_desktopvirtualization {
}

/** */
class ext_desktopvirtualization_az {
}

/** Manage Azure Kubernetes Services. */
class ext_dev-spaces_az_aks {
    /**
     * Use Azure Dev Spaces with a managed Kubernetes cluster.
     *
     * Syntax: 
     *
     * az aks use-dev-spaces --name
     *                       --resource-group
     *                       [--endpoint {None, Private, Public}]
     *                       [--space]
     *                       [--update]
     *                       [--yes]
     */
    ext_dev-spaces_az_aks_use_dev_spaces(): void {
    }
}

/** */
class ext_dev-spaces_az {
}

/** Manage Tasks for a Data Migration Service instance's Project. */
class ext_dms-preview_az_dms_project_task {
    /**
     * This command is being deprecated. Use the stop command instead.
     *
     * Syntax: 
     *
     * az dms project task cancel --name
     *                            --project-name
     *                            --resource-group
     *                            --service-name
     *                            [--object-name]
     */
    ext_dms-preview_az_dms_project_task_cancel(): void {
    }

    /**
     * Create and start a migration Task.
     *
     * Syntax: 
     *
     * az dms project task create --database-options-json
     *                            --name
     *                            --project-name
     *                            --resource-group
     *                            --service-name
     *                            --source-connection-json
     *                            --target-connection-json
     *                            --task-type
     *                            [--enable-data-integrity-validation]
     *                            [--enable-query-analysis-validation]
     *                            [--enable-schema-validation]
     *                            [--validate-only]
     *                            [--validated-task-name]
     */
    ext_dms-preview_az_dms_project_task_create(): void {
    }

    /**
     * For an online migration task, complete the migration by performing a cutover.
     *
     * Syntax: 
     *
     * az dms project task cutover --name
     *                             --project-name
     *                             --resource-group
     *                             --service-name
     *                             [--immediate]
     *                             [--object-name]
     */
    ext_dms-preview_az_dms_project_task_cutover(): void {
    }

    /**
     *
     * Syntax: 
     *
     * az dms project task restart --name
     *                             --project-name
     *                             --resource-group
     *                             --service-name
     *                             [--object-name]
     */
    ext_dms-preview_az_dms_project_task_restart(): void {
    }

    /**
     * Stops the task, or stops migration on the specified object (MongoDB migrations only).
     *
     * Syntax: 
     *
     * az dms project task stop --name
     *                          --project-name
     *                          --resource-group
     *                          --service-name
     *                          [--object-name]
     */
    ext_dms-preview_az_dms_project_task_stop(): void {
    }
}

/** Manage Projects for an instance of the Data Migration Service. */
class ext_dms-preview_az_dms_project {
    /**
     * Create a migration Project which can contain multiple Tasks.
     *
     * Syntax: 
     *
     * az dms project create --location
     *                       --name
     *                       --resource-group
     *                       --service-name
     *                       --source-platform
     *                       --target-platform
     *                       [--tags]
     */
    ext_dms-preview_az_dms_project_create(): void {
    }
}

/** Manage service-level tasks for a Database Migration Service instance. */
class ext_dms-preview_az_dms_task {
    /**
     * Cancel a service-level Task if it's currently queued or running.
     *
     * Syntax: 
     *
     * az dms task cancel --name
     *                    --resource-group
     *                    --service-name
     */
    ext_dms-preview_az_dms_task_cancel(): void {
    }

    /**
     * Create and start a service-level task.
     *
     * Syntax: 
     *
     * az dms task create --name
     *                    --resource-group
     *                    --service-name
     *                    --task-options-json
     *                    --task-type
     */
    ext_dms-preview_az_dms_task_create(): void {
    }

    /**
     * Delete a service-level Task.
     *
     * Syntax: 
     *
     * az dms task delete --name
     *                    --resource-group
     *                    --service-name
     *                    [--delete-running-tasks]
     *                    [--yes]
     */
    ext_dms-preview_az_dms_task_delete(): void {
    }

    /**
     * List the service-level Tasks within a DMS instance. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
     *
     * Syntax: 
     *
     * az dms task list --name
     *                  --resource-group
     *                  [--task-type]
     */
    ext_dms-preview_az_dms_task_list(): void {
    }

    /**
     * Show the details of a service-level Task. Use the "--expand" to get more details.
     *
     * Syntax: 
     *
     * az dms task show --name
     *                  --resource-group
     *                  --service-name
     *                  [--expand]
     */
    ext_dms-preview_az_dms_task_show(): void {
    }
}

/** Manage Azure Data Migration Service (DMS) instances. */
class ext_dms-preview_az_dms {
}

/** */
class ext_dms-preview_az {
}

/** Manage shared access keys of a domain. */
class ext_eventgrid_az_eventgrid_domain_key {
    /**
     * List shared access keys of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain key list --name
     *                              --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain key regenerate --key-name
     *                                    --name
     *                                    --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_key_regenerate(): void {
    }
}

/** Manage private endpoint connection resources of a domain. */
class ext_eventgrid_az_eventgrid_domain_private_endpoint_connection {
    /**
     * Approve a private endpoint connection request for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-endpoint-connection approve --domain-name
     *                                                         --name
     *                                                         --resource-group
     *                                                         [--description]
     */
    ext_eventgrid_az_eventgrid_domain_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-endpoint-connection delete --domain-name
     *                                                        --name
     *                                                        --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_private_endpoint_connection_delete(): void {
    }

    /**
     * List the properties of all the private endpoint connections for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-endpoint-connection list --name
     *                                                      --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_private_endpoint_connection_list(): void {
    }

    /**
     * Reject a private endpoint connection request for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-endpoint-connection reject --domain-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        [--description]
     */
    ext_eventgrid_az_eventgrid_domain_private_endpoint_connection_reject(): void {
    }

    /**
     * Display the properties of a private endpoint connection for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-endpoint-connection show --domain-name
     *                                                      --name
     *                                                      --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_private_endpoint_connection_show(): void {
    }
}

/** Manage private link resource of a domain. */
class ext_eventgrid_az_eventgrid_domain_private_link_resource {
    /**
     * List the properties of all the private link resources for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-link-resource list --domain-name
     *                                                --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_private_link_resource_list(): void {
    }

    /**
     * Display the properties of a private link resource for a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain private-link-resource show --domain-name
     *                                                --name
     *                                                --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_private_link_resource_show(): void {
    }
}

/** Manage event domain topics. */
class ext_eventgrid_az_eventgrid_domain_topic {
    /**
     * Create a domain topic under a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic create --domain-name
     *                                  --name
     *                                  --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_topic_create(): void {
    }

    /**
     * Delete a domain topic under a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic delete --domain-name
     *                                  --name
     *                                  --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_topic_delete(): void {
    }

    /**
     * List available topics in a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain topic list --domain-name
     *                                --resource-group
     *                                [--odata-query]
     */
    ext_eventgrid_az_eventgrid_domain_topic_list(): void {
    }

    /**
     * Get the details of a domain topic.
     *
     * Syntax: 
     *
     * az eventgrid domain topic show --domain-name
     *                                --name
     *                                --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_topic_show(): void {
    }
}

/** Manage event domains. */
class ext_eventgrid_az_eventgrid_domain {
    /**
     * Create a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain create --location
     *                            --name
     *                            --resource-group
     *                            [--identity {noidentity, systemassigned}]
     *                            [--inbound-ip-rules]
     *                            [--input-mapping-default-values]
     *                            [--input-mapping-fields]
     *                            [--input-schema {cloudeventschemav1_0, customeventschema, eventgridschema}]
     *                            [--public-network-access {disabled, enabled}]
     *                            [--sku {basic, premium}]
     *                            [--tags]
     */
    ext_eventgrid_az_eventgrid_domain_create(): void {
    }

    /**
     * Delete a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain delete --name
     *                            --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_delete(): void {
    }

    /**
     * List available domains.
     *
     * Syntax: 
     *
     * az eventgrid domain list [--odata-query]
     *                          [--resource-group]
     */
    ext_eventgrid_az_eventgrid_domain_list(): void {
    }

    /**
     * Get the details of a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain show --name
     *                          --resource-group
     */
    ext_eventgrid_az_eventgrid_domain_show(): void {
    }

    /**
     * Update a domain.
     *
     * Syntax: 
     *
     * az eventgrid domain update --name
     *                            --resource-group
     *                            [--identity {noidentity, systemassigned}]
     *                            [--inbound-ip-rules]
     *                            [--public-network-access {disabled, enabled}]
     *                            [--sku {basic, premium}]
     *                            [--tags]
     */
    ext_eventgrid_az_eventgrid_domain_update(): void {
    }
}

/** Manage event subscriptions. */
class ext_eventgrid_az_eventgrid_event_subscription {
    /**
     * Create a new event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription create --name
     *                                        [--advanced-filter]
     *                                        [--azure-active-directory-application-id-or-uri]
     *                                        [--azure-active-directory-tenant-id]
     *                                        [--deadletter-endpoint]
     *                                        [--deadletter-identity {systemassigned}]
     *                                        [--deadletter-identity-endpoint]
     *                                        [--delivery-identity {systemassigned}]
     *                                        [--delivery-identity-endpoint]
     *                                        [--delivery-identity-endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--endpoint]
     *                                        [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                        [--event-ttl]
     *                                        [--expiration-date]
     *                                        [--included-event-types]
     *                                        [--labels]
     *                                        [--max-delivery-attempts]
     *                                        [--max-events-per-batch]
     *                                        [--preferred-batch-size-in-kilobytes]
     *                                        [--source-resource-id]
     *                                        [--subject-begins-with]
     *                                        [--subject-case-sensitive {false, true}]
     *                                        [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription delete --name
     *                                        [--source-resource-id]
     */
    ext_eventgrid_az_eventgrid_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription list [--location]
     *                                      [--odata-query]
     *                                      [--resource-group]
     *                                      [--source-resource-id]
     *                                      [--topic-type-name]
     */
    ext_eventgrid_az_eventgrid_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription show --name
     *                                      [--include-full-endpoint-url {false, true}]
     *                                      [--source-resource-id]
     */
    ext_eventgrid_az_eventgrid_event_subscription_show(): void {
    }

    /**
     * Update an event subscription.
     *
     * Syntax: 
     *
     * az eventgrid event-subscription update --name
     *                                        [--add]
     *                                        [--advanced-filter]
     *                                        [--deadletter-endpoint]
     *                                        [--deadletter-identity {systemassigned}]
     *                                        [--deadletter-identity-endpoint]
     *                                        [--delivery-identity {systemassigned}]
     *                                        [--delivery-identity-endpoint]
     *                                        [--delivery-identity-endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--endpoint]
     *                                        [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                        [--force-string]
     *                                        [--included-event-types]
     *                                        [--labels]
     *                                        [--remove]
     *                                        [--set]
     *                                        [--source-resource-id]
     *                                        [--subject-begins-with]
     *                                        [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_event_subscription_update(): void {
    }
}

/** Manage Azure Event Grid extension topics. */
class ext_eventgrid_az_eventgrid_extension_topic {
    /**
     * Get the details of an extension topic.
     *
     * Syntax: 
     *
     * az eventgrid extension-topic show --scope
     */
    ext_eventgrid_az_eventgrid_extension_topic_show(): void {
    }
}

/** Manage partner event channels. */
class ext_eventgrid_az_eventgrid_partner_namespace_event_channel {
    /**
     * Create an event channel under a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel create --desination-topic-name
     *                                                     --destination-resource-group
     *                                                     --destination-subscription-id
     *                                                     --name
     *                                                     --partner-namespace-name
     *                                                     --resource-group
     *                                                     --source
     *                                                     [--activation-expiration-date]
     *                                                     [--partner-topic-description]
     *                                                     [--publisher-filter]
     */
    ext_eventgrid_az_eventgrid_partner_namespace_event_channel_create(): void {
    }

    /**
     * Delete a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel delete --name
     *                                                     --partner-namespace-name
     *                                                     --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_event_channel_delete(): void {
    }

    /**
     * List available partner event-channels.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel list --partner-namespace-name
     *                                                   --resource-group
     *                                                   [--odata-query]
     */
    ext_eventgrid_az_eventgrid_partner_namespace_event_channel_list(): void {
    }

    /**
     * Get the details of an event channel under a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace event-channel show --name
     *                                                   --partner-namespace-name
     *                                                   --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_event_channel_show(): void {
    }
}

/** Manage shared access keys of a partner namespace. */
class ext_eventgrid_az_eventgrid_partner_namespace_key {
    /**
     * List shared access keys of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace key list --partner-namespace-name
     *                                         --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace key regenerate --key-name
     *                                               --partner-namespace-name
     *                                               --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_key_regenerate(): void {
    }
}

/** Manage partner namespaces. */
class ext_eventgrid_az_eventgrid_partner_namespace {
    /**
     * Create a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace create --location
     *                                       --name
     *                                       --partner-registration-id
     *                                       --resource-group
     *                                       [--tags]
     */
    ext_eventgrid_az_eventgrid_partner_namespace_create(): void {
    }

    /**
     * Delete a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace delete --name
     *                                       --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_delete(): void {
    }

    /**
     * List available partner namespaces.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace list [--odata-query]
     *                                     [--resource-group]
     */
    ext_eventgrid_az_eventgrid_partner_namespace_list(): void {
    }

    /**
     * Get the details of a partner namespace.
     *
     * Syntax: 
     *
     * az eventgrid partner namespace show --name
     *                                     --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_namespace_show(): void {
    }
}

/** Manage partner registrations. */
class ext_eventgrid_az_eventgrid_partner_registration {
    /**
     * Create a new partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration create --name
     *                                          --partner-name
     *                                          --resource-group
     *                                          --resource-type-name
     *                                          [--authorized-subscription-ids]
     *                                          [--customer-service-extension]
     *                                          [--customer-service-number]
     *                                          [--customer-service-uri]
     *                                          [--description]
     *                                          [--display-name]
     *                                          [--logo-uri]
     *                                          [--long-description]
     *                                          [--setup-uri]
     *                                          [--tags]
     */
    ext_eventgrid_az_eventgrid_partner_registration_create(): void {
    }

    /**
     * Delete a partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration delete --name
     *                                          --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_registration_delete(): void {
    }

    /**
     * List all partner registrations in specific resource group or all under the specified azure subscription.
     *
     * Syntax: 
     *
     * az eventgrid partner registration list [--odata-query]
     *                                        [--resource-group]
     */
    ext_eventgrid_az_eventgrid_partner_registration_list(): void {
    }

    /**
     * Get a partner registration.
     *
     * Syntax: 
     *
     * az eventgrid partner registration show --name
     *                                        --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_registration_show(): void {
    }
}

/** Manage event subscriptions of partner topic. */
class ext_eventgrid_az_eventgrid_partner_topic_event_subscription {
    /**
     * Create a new event subscription for a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription create --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     *                                                      [--advanced-filter]
     *                                                      [--azure-active-directory-application-id-or-uri]
     *                                                      [--azure-active-directory-tenant-id]
     *                                                      [--deadletter-endpoint]
     *                                                      [--endpoint]
     *                                                      [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                      [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                                      [--event-ttl]
     *                                                      [--expiration-date]
     *                                                      [--included-event-types]
     *                                                      [--labels]
     *                                                      [--max-delivery-attempts]
     *                                                      [--max-events-per-batch]
     *                                                      [--preferred-batch-size-in-kilobytes]
     *                                                      [--subject-begins-with]
     *                                                      [--subject-case-sensitive {false, true}]
     *                                                      [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_partner_topic_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription delete --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_topic_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions of a specific partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription list --partner-topic-name
     *                                                    --resource-group
     *                                                    [--odata-query]
     */
    ext_eventgrid_az_eventgrid_partner_topic_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription show --name
     *                                                    --partner-topic-name
     *                                                    --resource-group
     *                                                    [--include-full-endpoint-url {false, true}]
     */
    ext_eventgrid_az_eventgrid_partner_topic_event_subscription_show(): void {
    }

    /**
     * Update an event subscription of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic event-subscription update --name
     *                                                      --partner-topic-name
     *                                                      --resource-group
     *                                                      [--advanced-filter]
     *                                                      [--deadletter-endpoint]
     *                                                      [--endpoint]
     *                                                      [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                      [--included-event-types]
     *                                                      [--labels]
     *                                                      [--subject-begins-with]
     *                                                      [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_partner_topic_event_subscription_update(): void {
    }
}

/** Manage partner topics. */
class ext_eventgrid_az_eventgrid_partner_topic {
    /**
     * Activate a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic activate --name
     *                                     --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_topic_activate(): void {
    }

    /**
     * Deactivate a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic deactivate --name
     *                                       --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_topic_deactivate(): void {
    }

    /**
     * Delete a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic delete --name
     *                                   --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_topic_delete(): void {
    }

    /**
     * List available partner topics.
     *
     * Syntax: 
     *
     * az eventgrid partner topic list [--odata-query]
     *                                 [--resource-group]
     */
    ext_eventgrid_az_eventgrid_partner_topic_list(): void {
    }

    /**
     * Get the details of a partner topic.
     *
     * Syntax: 
     *
     * az eventgrid partner topic show --name
     *                                 --resource-group
     */
    ext_eventgrid_az_eventgrid_partner_topic_show(): void {
    }
}

/** Manage partner resources. */
class ext_eventgrid_az_eventgrid_partner {
}

/** Manage event subscriptions of system topic. */
class ext_eventgrid_az_eventgrid_system_topic_event_subscription {
    /**
     * Create a new event subscription for a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription create --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     *                                                     [--advanced-filter]
     *                                                     [--azure-active-directory-application-id-or-uri]
     *                                                     [--azure-active-directory-tenant-id]
     *                                                     [--deadletter-endpoint]
     *                                                     [--endpoint]
     *                                                     [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                     [--event-delivery-schema {cloudeventschemav1_0, custominputschema, eventgridschema}]
     *                                                     [--event-ttl]
     *                                                     [--expiration-date]
     *                                                     [--included-event-types]
     *                                                     [--labels]
     *                                                     [--max-delivery-attempts]
     *                                                     [--max-events-per-batch]
     *                                                     [--preferred-batch-size-in-kilobytes]
     *                                                     [--subject-begins-with]
     *                                                     [--subject-case-sensitive {false, true}]
     *                                                     [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_system_topic_event_subscription_create(): void {
    }

    /**
     * Delete an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription delete --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     */
    ext_eventgrid_az_eventgrid_system_topic_event_subscription_delete(): void {
    }

    /**
     * List event subscriptions of a specific system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription list --resource-group
     *                                                   --system-topic-name
     *                                                   [--odata-query]
     */
    ext_eventgrid_az_eventgrid_system_topic_event_subscription_list(): void {
    }

    /**
     * Get the details of an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription show --name
     *                                                   --resource-group
     *                                                   --system-topic-name
     *                                                   [--include-full-endpoint-url {false, true}]
     */
    ext_eventgrid_az_eventgrid_system_topic_event_subscription_show(): void {
    }

    /**
     * Update an event subscription of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic event-subscription update --name
     *                                                     --resource-group
     *                                                     --system-topic-name
     *                                                     [--advanced-filter]
     *                                                     [--deadletter-endpoint]
     *                                                     [--endpoint]
     *                                                     [--endpoint-type {azurefunction, eventhub, hybridconnection, servicebusqueue, servicebustopic, storagequeue, webhook}]
     *                                                     [--included-event-types]
     *                                                     [--labels]
     *                                                     [--subject-begins-with]
     *                                                     [--subject-ends-with]
     */
    ext_eventgrid_az_eventgrid_system_topic_event_subscription_update(): void {
    }
}

/** Manage system topics. */
class ext_eventgrid_az_eventgrid_system_topic {
    /**
     * Create a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic create --location
     *                                  --name
     *                                  --resource-group
     *                                  --source
     *                                  --topic-type
     *                                  [--tags]
     */
    ext_eventgrid_az_eventgrid_system_topic_create(): void {
    }

    /**
     * Delete a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic delete --name
     *                                  --resource-group
     */
    ext_eventgrid_az_eventgrid_system_topic_delete(): void {
    }

    /**
     * List available system topics.
     *
     * Syntax: 
     *
     * az eventgrid system-topic list [--odata-query]
     *                                [--resource-group]
     */
    ext_eventgrid_az_eventgrid_system_topic_list(): void {
    }

    /**
     * Get the details of a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic show --name
     *                                --resource-group
     */
    ext_eventgrid_az_eventgrid_system_topic_show(): void {
    }

    /**
     * Update a system topic.
     *
     * Syntax: 
     *
     * az eventgrid system-topic update --name
     *                                  --resource-group
     *                                  [--tags]
     */
    ext_eventgrid_az_eventgrid_system_topic_update(): void {
    }
}

/** Manage shared access keys of a topic. */
class ext_eventgrid_az_eventgrid_topic_key {
    /**
     * List shared access keys of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic key list --name
     *                             --resource-group
     */
    ext_eventgrid_az_eventgrid_topic_key_list(): void {
    }

    /**
     * Regenerate a shared access key of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic key regenerate --key-name
     *                                   --name
     *                                   --resource-group
     */
    ext_eventgrid_az_eventgrid_topic_key_regenerate(): void {
    }
}

/** Manage private endpoint connections of a topic. */
class ext_eventgrid_az_eventgrid_topic_private_endpoint_connection {
    /**
     * Approve a private endpoint connection request for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-endpoint-connection approve --name
     *                                                        --resource-group
     *                                                        --topic-name
     *                                                        [--description]
     */
    ext_eventgrid_az_eventgrid_topic_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-endpoint-connection delete --name
     *                                                       --resource-group
     *                                                       --topic-name
     */
    ext_eventgrid_az_eventgrid_topic_private_endpoint_connection_delete(): void {
    }

    /**
     * List the properties of all the private endpoint connections for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-endpoint-connection list --resource-group
     *                                                     --topic-name
     */
    ext_eventgrid_az_eventgrid_topic_private_endpoint_connection_list(): void {
    }

    /**
     * Reject a private endpoint connection request for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-endpoint-connection reject --name
     *                                                       --resource-group
     *                                                       --topic-name
     *                                                       [--description]
     */
    ext_eventgrid_az_eventgrid_topic_private_endpoint_connection_reject(): void {
    }

    /**
     * Display the properties of a private endpoint connection for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-endpoint-connection show --name
     *                                                     --resource-group
     *                                                     --topic-name
     */
    ext_eventgrid_az_eventgrid_topic_private_endpoint_connection_show(): void {
    }
}

/** Manage private link resource of a topic. */
class ext_eventgrid_az_eventgrid_topic_private_link_resource {
    /**
     * List the properties of all the private link resources for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-link-resource list --resource-group
     *                                               --topic-name
     */
    ext_eventgrid_az_eventgrid_topic_private_link_resource_list(): void {
    }

    /**
     * Display the properties of a private link resource for a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic private-link-resource show --name
     *                                               --resource-group
     *                                               --topic-name
     */
    ext_eventgrid_az_eventgrid_topic_private_link_resource_show(): void {
    }
}

/** Get details for topic types. */
class ext_eventgrid_az_eventgrid_topic_type {
    /**
     * List registered topic types.
     *
     * Syntax: 
     *
     * az eventgrid topic-type list
     */
    ext_eventgrid_az_eventgrid_topic_type_list(): void {
    }

    /**
     * List the event types supported by a topic type.
     *
     * Syntax: 
     *
     * az eventgrid topic-type list-event-types --name
     */
    ext_eventgrid_az_eventgrid_topic_type_list_event_types(): void {
    }

    /**
     * Get the details for a topic type.
     *
     * Syntax: 
     *
     * az eventgrid topic-type show --name
     */
    ext_eventgrid_az_eventgrid_topic_type_show(): void {
    }
}

/** Manage Azure Event Grid topics. */
class ext_eventgrid_az_eventgrid_topic {
    /**
     * Create a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic create --location
     *                           --name
     *                           --resource-group
     *                           [--identity {noidentity, systemassigned}]
     *                           [--inbound-ip-rules]
     *                           [--input-mapping-default-values]
     *                           [--input-mapping-fields]
     *                           [--input-schema {cloudeventschemav1_0, customeventschema, eventgridschema}]
     *                           [--public-network-access {disabled, enabled}]
     *                           [--sku {basic, premium}]
     *                           [--tags]
     */
    ext_eventgrid_az_eventgrid_topic_create(): void {
    }

    /**
     * Delete a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic delete --name
     *                           --resource-group
     */
    ext_eventgrid_az_eventgrid_topic_delete(): void {
    }

    /**
     * List available topics.
     *
     * Syntax: 
     *
     * az eventgrid topic list [--odata-query]
     *                         [--resource-group]
     */
    ext_eventgrid_az_eventgrid_topic_list(): void {
    }

    /**
     * Get the details of a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic show --name
     *                         --resource-group
     */
    ext_eventgrid_az_eventgrid_topic_show(): void {
    }

    /**
     * Update a topic.
     *
     * Syntax: 
     *
     * az eventgrid topic update --name
     *                           --resource-group
     *                           [--identity {noidentity, systemassigned}]
     *                           [--inbound-ip-rules]
     *                           [--public-network-access {disabled, enabled}]
     *                           [--sku {basic, premium}]
     *                           [--tags]
     */
    ext_eventgrid_az_eventgrid_topic_update(): void {
    }
}

/** Manage Azure Event Grid topics, domains, domain topics, system topics partner topics, event subscriptions, system topic event subscriptions and partner topic event subscriptions. */
class ext_eventgrid_az_eventgrid {
}

/** */
class ext_eventgrid_az {
}

/** */
class ext_express-route_az {
}

/** Manage ExpressRoute gateway connections. */
class ext_express-route_az_network_express_route_gateway_connection {
    /**
     * Create an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection create --gateway-name
     *                                                    --name
     *                                                    --peering
     *                                                    --resource-group
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--routing-weight]
     */
    ext_express-route_az_network_express_route_gateway_connection_create(): void {
    }

    /**
     * Delete an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection delete --gateway-name
     *                                                    --name
     *                                                    --resource-group
     */
    ext_express-route_az_network_express_route_gateway_connection_delete(): void {
    }

    /**
     * List ExpressRoute gateway connections.
     *
     * Syntax: 
     *
     * az network express-route gateway connection list --gateway-name
     *                                                  --resource-group
     */
    ext_express-route_az_network_express_route_gateway_connection_list(): void {
    }

    /**
     * Get the details of an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection show --gateway-name
     *                                                  --name
     *                                                  --resource-group
     */
    ext_express-route_az_network_express_route_gateway_connection_show(): void {
    }

    /**
     * Update an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection update --gateway-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    [--add]
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--force-string]
     *                                                    [--peering]
     *                                                    [--remove]
     *                                                    [--routing-weight]
     *                                                    [--set]
     */
    ext_express-route_az_network_express_route_gateway_connection_update(): void {
    }
}

/** Manage ExpressRoute gateways. */
class ext_express-route_az_network_express_route_gateway {
    /**
     * Create an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway create --name
     *                                         --resource-group
     *                                         [--location]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--tags]
     *                                         [--virtual-hub]
     */
    ext_express-route_az_network_express_route_gateway_create(): void {
    }

    /**
     * Delete an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway delete --name
     *                                         --resource-group
     */
    ext_express-route_az_network_express_route_gateway_delete(): void {
    }

    /**
     * List ExpressRoute gateways.
     *
     * Syntax: 
     *
     * az network express-route gateway list [--resource-group]
     */
    ext_express-route_az_network_express_route_gateway_list(): void {
    }

    /**
     * Get the details of an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway show --name
     *                                       --resource-group
     */
    ext_express-route_az_network_express_route_gateway_show(): void {
    }

    /**
     * Update settings of an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway update --name
     *                                         --resource-group
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--remove]
     *                                         [--set]
     *                                         [--tags]
     */
    ext_express-route_az_network_express_route_gateway_update(): void {
    }
}

/** View ExpressRoute links. */
class ext_express-route_az_network_express_route_port_link {
    /**
     * List ExpressRoute links.
     *
     * Syntax: 
     *
     * az network express-route port link list --port-name
     *                                         --resource-group
     */
    ext_express-route_az_network_express_route_port_link_list(): void {
    }

    /**
     * Get the details of an ExpressRoute link.
     *
     * Syntax: 
     *
     * az network express-route port link show --name
     *                                         --port-name
     *                                         --resource-group
     */
    ext_express-route_az_network_express_route_port_link_show(): void {
    }
}

/** View ExpressRoute port location information. */
class ext_express-route_az_network_express_route_port_location {
    /**
     * List ExpressRoute port locations.
     *
     * Syntax: 
     *
     * az network express-route port location list
     */
    ext_express-route_az_network_express_route_port_location_list(): void {
    }

    /**
     * Get the details of an ExpressRoute port location.
     *
     * Syntax: 
     *
     * az network express-route port location show --location
     */
    ext_express-route_az_network_express_route_port_location_show(): void {
    }
}

/** Manage ExpressRoute ports. */
class ext_express-route_az_network_express_route_port {
    /**
     * Create an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port create --name
     *                                      --resource-group
     *                                      [--bandwidth]
     *                                      [--encapsulation {Dot1Q, QinQ}]
     *                                      [--location]
     *                                      [--peering-location]
     *                                      [--tags]
     */
    ext_express-route_az_network_express_route_port_create(): void {
    }

    /**
     * Delete an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port delete --name
     *                                      --resource-group
     */
    ext_express-route_az_network_express_route_port_delete(): void {
    }

    /**
     * List ExpressRoute ports.
     *
     * Syntax: 
     *
     * az network express-route port list [--resource-group]
     */
    ext_express-route_az_network_express_route_port_list(): void {
    }

    /**
     * Get the details of an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port show --name
     *                                    --resource-group
     */
    ext_express-route_az_network_express_route_port_show(): void {
    }

    /**
     * Update settings of an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port update --name
     *                                      --resource-group
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--tags]
     */
    ext_express-route_az_network_express_route_port_update(): void {
    }
}

/** Manage dedicated private network fiber connections to Azure. */
class ext_express-route_az_network_express_route {
    /**
     * Create an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route create --bandwidth
     *                                 --name
     *                                 --resource-group
     *                                 [--allow-global-reach {false, true}]
     *                                 [--express-route-port]
     *                                 [--location]
     *                                 [--no-wait]
     *                                 [--peering-location]
     *                                 [--provider]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Premium, Standard}]
     *                                 [--tags]
     */
    ext_express-route_az_network_express_route_create(): void {
    }

    /**
     * List all ExpressRoute circuits for the current subscription.
     *
     * Syntax: 
     *
     * az network express-route list [--resource-group]
     */
    ext_express-route_az_network_express_route_list(): void {
    }

    /**
     * Get the details of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route show --name
     *                               --resource-group
     */
    ext_express-route_az_network_express_route_show(): void {
    }

    /**
     * Update settings of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route update --name
     *                                 --resource-group
     *                                 [--add]
     *                                 [--allow-global-reach {false, true}]
     *                                 [--bandwidth]
     *                                 [--express-route-port]
     *                                 [--force-string]
     *                                 [--no-wait]
     *                                 [--peering-location]
     *                                 [--provider]
     *                                 [--remove]
     *                                 [--set]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Premium, Standard}]
     *                                 [--tags]
     */
    ext_express-route_az_network_express_route_update(): void {
    }
}

/** Manage Azure Network resources. */
class ext_express-route_az_network {
}

/** */
class ext_express-route-cross-connection_az {
}

/** Manage ExpressRoute peering of an ExpressRoute cross-connection. */
class ext_express-route-cross-connection_az_network_cross_connection_peering {
    /**
     * Create peering settings for an ExpressRoute cross-connection.
     *
     * Syntax: 
     *
     * az network cross-connection peering create --cross-connection-name
     *                                            --peer-asn
     *                                            --peering-type {AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering}
     *                                            --primary-peer-subnet
     *                                            --resource-group
     *                                            --secondary-peer-subnet
     *                                            --vlan-id
     *                                            [--advertised-public-prefixes]
     *                                            [--customer-asn]
     *                                            [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                            [--shared-key]
     */
    ext_express-route-cross-connection_az_network_cross_connection_peering_create(): void {
    }

    /**
     * Delete peering settings.
     *
     * Syntax: 
     *
     * az network cross-connection peering delete --cross-connection-name
     *                                            --name
     *                                            --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_peering_delete(): void {
    }

    /**
     * List peering settings of an ExpressRoute cross-connection.
     *
     * Syntax: 
     *
     * az network cross-connection peering list --cross-connection-name
     *                                          --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_peering_list(): void {
    }

    /**
     * Get the details of an express route peering.
     *
     * Syntax: 
     *
     * az network cross-connection peering show --cross-connection-name
     *                                          --name
     *                                          --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_peering_show(): void {
    }

    /**
     * Update peering settings for an ExpressRoute cross-connection.
     *
     * Syntax: 
     *
     * az network cross-connection peering update --cross-connection-name
     *                                            --name
     *                                            --resource-group
     *                                            [--add]
     *                                            [--advertised-public-prefixes]
     *                                            [--customer-asn]
     *                                            [--force-string]
     *                                            [--ip-version {IPv4, IPv6}]
     *                                            [--peer-asn]
     *                                            [--primary-peer-subnet]
     *                                            [--remove]
     *                                            [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                            [--secondary-peer-subnet]
     *                                            [--set]
     *                                            [--shared-key]
     *                                            [--vlan-id]
     */
    ext_express-route-cross-connection_az_network_cross_connection_peering_update(): void {
    }
}

/** Manage customers' ExpressRoute circuits. */
class ext_express-route-cross-connection_az_network_cross_connection {
    /**
     * List all ExpressRoute cross-connections for the current subscription.
     *
     * Syntax: 
     *
     * az network cross-connection list [--resource-group]
     */
    ext_express-route-cross-connection_az_network_cross_connection_list(): void {
    }

    /**
     * Show the current Address Resolution Protocol (ARP) table of an ExpressRoute cross-connection peering.
     *
     * Syntax: 
     *
     * az network cross-connection list-arp-tables --name
     *                                             --path {primary, secondary}
     *                                             --peering-name
     *                                             --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_list_arp_tables(): void {
    }

    /**
     * Show the current routing table of an ExpressRoute cross-connection peering.
     *
     * Syntax: 
     *
     * az network cross-connection list-route-tables --name
     *                                               --path {primary, secondary}
     *                                               --peering-name
     *                                               --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_list_route_tables(): void {
    }

    /**
     * Get the details of an ExpressRoute cross-connection.
     *
     * Syntax: 
     *
     * az network cross-connection show --name
     *                                  --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_show(): void {
    }

    /**
     * Gets the route table summary associated with the express route cross connection in a resource group.
     *
     * Syntax: 
     *
     * az network cross-connection summarize-route-table --name
     *                                                   --path {primary, secondary}
     *                                                   --peering-name
     *                                                   --resource-group
     */
    ext_express-route-cross-connection_az_network_cross_connection_summarize_route_table(): void {
    }

    /**
     * Update settings of an ExpressRoute cross-connection.
     *
     * Syntax: 
     *
     * az network cross-connection update --name
     *                                    --resource-group
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--no-wait]
     *                                    [--notes]
     *                                    [--provisioning-state {NotProvisioned, Provisioned, Provisioning}]
     *                                    [--remove]
     *                                    [--set]
     */
    ext_express-route-cross-connection_az_network_cross_connection_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the ExpressRoute is met.
     *
     * Syntax: 
     *
     * az network cross-connection wait --name
     *                                  --resource-group
     *                                  [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--interval]
     *                                  [--timeout]
     *                                  [--updated]
     */
    ext_express-route-cross-connection_az_network_cross_connection_wait(): void {
    }
}

/** Manage Azure Network resources. */
class ext_express-route-cross-connection_az_network {
}

/** Commands to manage experiments under a profile. */
class ext_footprint_az_footprint_experiment {
    /**
     * Creates or updates a Footprint experiment with the specified properties.
     *
     * Syntax: 
     *
     * az footprint experiment create --experiment-name
     *                                --profile-name
     *                                --resource-group
     *                                [--description]
     */
    ext_footprint_az_footprint_experiment_create(): void {
    }

    /**
     * Deletes an existing Footprint experiment.
     *
     * Syntax: 
     *
     * az footprint experiment delete --experiment-name
     *                                --profile-name
     *                                --resource-group
     *                                [--yes]
     */
    ext_footprint_az_footprint_experiment_delete(): void {
    }

    /**
     * Retrieves the information about all experiments under a Footprint profile.
     *
     * Syntax: 
     *
     * az footprint experiment list --profile-name
     *                              --resource-group
     */
    ext_footprint_az_footprint_experiment_list(): void {
    }

    /**
     * Retrieves the information about a single Footprint experiment.
     *
     * Syntax: 
     *
     * az footprint experiment show --experiment-name
     *                              --profile-name
     *                              --resource-group
     */
    ext_footprint_az_footprint_experiment_show(): void {
    }

    /**
     * Creates or updates a Footprint experiment with the specified properties.
     *
     * Syntax: 
     *
     * az footprint experiment update --experiment-name
     *                                --profile-name
     *                                --resource-group
     *                                [--description]
     */
    ext_footprint_az_footprint_experiment_update(): void {
    }
}

/** Commands to manage measurement endpoint conditions under a measurement endpoint. */
class ext_footprint_az_footprint_measurement_endpoint_condition {
    /**
     * Creates or updates a measurement endpoint condition under a Footprint measurement with the specified properties.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint-condition create --constant
     *                                                    --endpoint-name
     *                                                    --name
     *                                                    --operator {ContainsValue, ContainsValueIgnoreCasing, DoesNotContainValue, DoesNotContainValueIgnoreCasing, IsExactValue, MatchValueIgnoreCasing}
     *                                                    --profile-name
     *                                                    --resource-group
     *                                                    --variable
     */
    ext_footprint_az_footprint_measurement_endpoint_condition_create(): void {
    }

    /**
     * Deletes an existing measurement endpoint condition under a Footprint measurement.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint-condition delete --endpoint-name
     *                                                    --name
     *                                                    --profile-name
     *                                                    --resource-group
     *                                                    [--yes]
     */
    ext_footprint_az_footprint_measurement_endpoint_condition_delete(): void {
    }

    /**
     * Retrieves the information about all measurement endpoint conditions under a Footprint measurement endpoint.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint-condition list --endpoint-name
     *                                                  --profile-name
     *                                                  --resource-group
     */
    ext_footprint_az_footprint_measurement_endpoint_condition_list(): void {
    }

    /**
     * Retrieves the information about a single measurement endpoint condition under a Footprint measurement endpoint.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint-condition show --endpoint-name
     *                                                  --name
     *                                                  --profile-name
     *                                                  --resource-group
     */
    ext_footprint_az_footprint_measurement_endpoint_condition_show(): void {
    }

    /**
     * Creates or updates a measurement endpoint condition under a Footprint measurement with the specified properties.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint-condition update --constant
     *                                                    --endpoint-name
     *                                                    --name
     *                                                    --operator {ContainsValue, ContainsValueIgnoreCasing, DoesNotContainValue, DoesNotContainValueIgnoreCasing, IsExactValue, MatchValueIgnoreCasing}
     *                                                    --profile-name
     *                                                    --resource-group
     *                                                    --variable
     */
    ext_footprint_az_footprint_measurement_endpoint_condition_update(): void {
    }
}

/** Commands to manage measurement endpoints under a profile. */
class ext_footprint_az_footprint_measurement_endpoint {
    /**
     * Creates or updates a single measurement endpoint under a Footprint profile with the specified properties.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint create --endpoint
     *                                          --measurement-endpoint-name
     *                                          --measurement-type
     *                                          --profile-name
     *                                          --resource-group
     *                                          --weight
     *                                          [--description]
     *                                          [--end-time-utc]
     *                                          [--experiment-id]
     *                                          [--metadata]
     *                                          [--object-path]
     *                                          [--sample-rate-cold]
     *                                          [--sample-rate-hot]
     *                                          [--sample-rate-warm]
     *                                          [--start-time-utc]
     */
    ext_footprint_az_footprint_measurement_endpoint_create(): void {
    }

    /**
     * Deletes an existing measurement endpoint under a Footprint profile.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint delete --measurement-endpoint-name
     *                                          --profile-name
     *                                          --resource-group
     *                                          [--yes]
     */
    ext_footprint_az_footprint_measurement_endpoint_delete(): void {
    }

    /**
     * Retrieves the information about all measurement endpoints under a Footprint profile.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint list --profile-name
     *                                        --resource-group
     */
    ext_footprint_az_footprint_measurement_endpoint_list(): void {
    }

    /**
     * Retrieves the information about a single measurement endpoint under a Footprint profile.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint show --measurement-endpoint-name
     *                                        --profile-name
     *                                        --resource-group
     */
    ext_footprint_az_footprint_measurement_endpoint_show(): void {
    }

    /**
     * Creates or updates a single measurement endpoint under a Footprint profile with the specified properties.
     *
     * Syntax: 
     *
     * az footprint measurement-endpoint update --endpoint
     *                                          --measurement-endpoint-name
     *                                          --measurement-type
     *                                          --profile-name
     *                                          --resource-group
     *                                          --weight
     *                                          [--description]
     *                                          [--end-time-utc]
     *                                          [--experiment-id]
     *                                          [--metadata]
     *                                          [--object-path]
     *                                          [--sample-rate-cold]
     *                                          [--sample-rate-hot]
     *                                          [--sample-rate-warm]
     *                                          [--start-time-utc]
     */
    ext_footprint_az_footprint_measurement_endpoint_update(): void {
    }
}

/** Commands to manage Footprint profiles. */
class ext_footprint_az_footprint_profile {
    /**
     * Creates or updates a Footprint profile with the specified properties.
     *
     * Syntax: 
     *
     * az footprint profile create --measurement-count
     *                             --name
     *                             --resource-group
     *                             --start-delay-ms
     *                             [--description]
     *                             [--location]
     *                             [--reporting-endpoints]
     *                             [--sample-rate-cold]
     *                             [--tags]
     */
    ext_footprint_az_footprint_profile_create(): void {
    }

    /**
     * Deletes an existing Footprint profile.
     *
     * Syntax: 
     *
     * az footprint profile delete --name
     *                             --resource-group
     *                             [--yes]
     */
    ext_footprint_az_footprint_profile_delete(): void {
    }

    /**
     * Retrieves the information about all Footprint profiles under a subscription.
     *
     * Syntax: 
     *
     * az footprint profile list [--resource-group]
     */
    ext_footprint_az_footprint_profile_list(): void {
    }

    /**
     * Retrieves the information about a single Footprint profile.
     *
     * Syntax: 
     *
     * az footprint profile show --name
     *                           --resource-group
     */
    ext_footprint_az_footprint_profile_show(): void {
    }

    /**
     * Updates an existing Footprint profile resource.
     *
     * Syntax: 
     *
     * az footprint profile update --name
     *                             --resource-group
     *                             [--tags]
     */
    ext_footprint_az_footprint_profile_update(): void {
    }
}

/** */
class ext_footprint_az_footprint {
}

/** */
class ext_footprint_az {
}

/** */
class ext_front-door_az {
}

/** Manage backends of Front Door backend pools. */
class ext_front-door_az_network_front_door_backend_pool_backend {
    /**
     * Add a backend to a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool backend add --address
     *                                                --front-door-name
     *                                                --pool-name
     *                                                --resource-group
     *                                                [--backend-host-header]
     *                                                [--disabled {false, true}]
     *                                                [--http-port]
     *                                                [--https-port]
     *                                                [--priority]
     *                                                [--private-link-alias]
     *                                                [--private-link-approval-message]
     *                                                [--private-link-location]
     *                                                [--private-link-resource-id]
     *                                                [--weight]
     */
    ext_front-door_az_network_front_door_backend_pool_backend_add(): void {
    }

    /**
     * List backends of a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool backend list --front-door-name
     *                                                 --pool-name
     *                                                 --resource-group
     */
    ext_front-door_az_network_front_door_backend_pool_backend_list(): void {
    }

    /**
     * Remove a backend from a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool backend remove --front-door-name
     *                                                   --index
     *                                                   --pool-name
     *                                                   --resource-group
     */
    ext_front-door_az_network_front_door_backend_pool_backend_remove(): void {
    }
}

/** Manage Front Door backend pools. */
class ext_front-door_az_network_front_door_backend_pool {
    /**
     * Create a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool create --address
     *                                           --front-door-name
     *                                           --load-balancing
     *                                           --name
     *                                           --probe
     *                                           --resource-group
     *                                           [--backend-host-header]
     *                                           [--disabled {false, true}]
     *                                           [--http-port]
     *                                           [--https-port]
     *                                           [--priority]
     *                                           [--weight]
     */
    ext_front-door_az_network_front_door_backend_pool_create(): void {
    }

    /**
     * Delete a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool delete --front-door-name
     *                                           --name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_backend_pool_delete(): void {
    }

    /**
     * List Front Door backend pools.
     *
     * Syntax: 
     *
     * az network front-door backend-pool list --front-door-name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_backend_pool_list(): void {
    }

    /**
     * Get the details of a Front Door backend pool.
     *
     * Syntax: 
     *
     * az network front-door backend-pool show --front-door-name
     *                                         --name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_backend_pool_show(): void {
    }
}

/** Manage Front Door frontend endpoints. */
class ext_front-door_az_network_front_door_frontend_endpoint {
    /**
     * Create a Front Door frontend endpoint.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint create --front-door-name
     *                                                --host-name
     *                                                --name
     *                                                --resource-group
     *                                                [--session-affinity-enabled {Disabled, Enabled}]
     *                                                [--session-affinity-ttl]
     *                                                [--waf-policy]
     */
    ext_front-door_az_network_front_door_frontend_endpoint_create(): void {
    }

    /**
     * Delete a Front Door frontend endpoint.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint delete --front-door-name
     *                                                --name
     *                                                --resource-group
     */
    ext_front-door_az_network_front_door_frontend_endpoint_delete(): void {
    }

    /**
     * Disable HTTPS protocol for a custom domain.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint disable-https --front-door-name
     *                                                       --name
     *                                                       --resource-group
     */
    ext_front-door_az_network_front_door_frontend_endpoint_disable_https(): void {
    }

    /**
     * Enable HTTPS protocol for a custom domain.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint enable-https --front-door-name
     *                                                      --name
     *                                                      --resource-group
     *                                                      [--certificate-source {AzureKeyVault, FrontDoor}]
     *                                                      [--minimum-tls-version {1.0, 1.2}]
     *                                                      [--secret-name]
     *                                                      [--secret-version]
     *                                                      [--vault-id]
     */
    ext_front-door_az_network_front_door_frontend_endpoint_enable_https(): void {
    }

    /**
     * List Front Door frontend endpoints.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint list --front-door-name
     *                                              --resource-group
     */
    ext_front-door_az_network_front_door_frontend_endpoint_list(): void {
    }

    /**
     * Get the details of a Front Door frontend endpoint.
     *
     * Syntax: 
     *
     * az network front-door frontend-endpoint show --front-door-name
     *                                              --name
     *                                              --resource-group
     */
    ext_front-door_az_network_front_door_frontend_endpoint_show(): void {
    }
}

/** Manage Front Door load-balancing settings. */
class ext_front-door_az_network_front_door_load_balancing {
    /**
     * Create Front Door load-balancing settings.
     *
     * Syntax: 
     *
     * az network front-door load-balancing create --front-door-name
     *                                             --name
     *                                             --resource-group
     *                                             --sample-size
     *                                             --successful-samples-required
     *                                             [--additional-latency]
     */
    ext_front-door_az_network_front_door_load_balancing_create(): void {
    }

    /**
     * Delete Front Door load-balancing settings.
     *
     * Syntax: 
     *
     * az network front-door load-balancing delete --front-door-name
     *                                             --name
     *                                             --resource-group
     */
    ext_front-door_az_network_front_door_load_balancing_delete(): void {
    }

    /**
     * List Front Door load-balancing settingss.
     *
     * Syntax: 
     *
     * az network front-door load-balancing list --front-door-name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_load_balancing_list(): void {
    }

    /**
     * Get the details of a Front Door load-balancing settings bundle.
     *
     * Syntax: 
     *
     * az network front-door load-balancing show --front-door-name
     *                                           --name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_load_balancing_show(): void {
    }
}

/** Manage Front Door health probe settings. */
class ext_front-door_az_network_front_door_probe {
    /**
     * Create Front Door health probe settings.
     *
     * Syntax: 
     *
     * az network front-door probe create --front-door-name
     *                                    --interval
     *                                    --name
     *                                    --path
     *                                    --resource-group
     *                                    [--enabled {Disabled, Enabled}]
     *                                    [--probeMethod {GET, HEAD}]
     *                                    [--protocol {Http, Https}]
     */
    ext_front-door_az_network_front_door_probe_create(): void {
    }

    /**
     * Delete Front Door health probe settings.
     *
     * Syntax: 
     *
     * az network front-door probe delete --front-door-name
     *                                    --name
     *                                    --resource-group
     */
    ext_front-door_az_network_front_door_probe_delete(): void {
    }

    /**
     * List Front Door health probe settings.
     *
     * Syntax: 
     *
     * az network front-door probe list --front-door-name
     *                                  --resource-group
     */
    ext_front-door_az_network_front_door_probe_list(): void {
    }

    /**
     * Get the details of a Front Door health probe settings.
     *
     * Syntax: 
     *
     * az network front-door probe show --front-door-name
     *                                  --name
     *                                  --resource-group
     */
    ext_front-door_az_network_front_door_probe_show(): void {
    }

    /**
     * Update Front Door health probe settings.
     *
     * Syntax: 
     *
     * az network front-door probe update --front-door-name
     *                                    --name
     *                                    --resource-group
     *                                    [--enabled {Disabled, Enabled}]
     *                                    [--interval]
     *                                    [--path]
     *                                    [--probeMethod {GET, HEAD}]
     *                                    [--protocol {Http, Https}]
     */
    ext_front-door_az_network_front_door_probe_update(): void {
    }
}

/** Manage Front Door routing rules. */
class ext_front-door_az_network_front_door_routing_rule {
    /**
     * Create a Front Door routing rule.
     *
     * Syntax: 
     *
     * az network front-door routing-rule create --front-door-name
     *                                           --frontend-endpoints
     *                                           --name
     *                                           --resource-group
     *                                           --route-type {Forward, Redirect}
     *                                           [--accepted-protocols]
     *                                           [--backend-pool]
     *                                           [--cache-duration]
     *                                           [--caching {Disabled, Enabled}]
     *                                           [--custom-forwarding-path]
     *                                           [--custom-fragment]
     *                                           [--custom-host]
     *                                           [--custom-path]
     *                                           [--custom-query-string]
     *                                           [--disabled {false, true}]
     *                                           [--dynamic-compression {Disabled, Enabled}]
     *                                           [--forwarding-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                           [--patterns]
     *                                           [--query-parameter-strip-directive {StripAll, StripAllExcept, StripNone, StripOnly}]
     *                                           [--query-parameters]
     *                                           [--redirect-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                           [--redirect-type {Found, Moved, PermanentRedirect, TemporaryRedirect}]
     *                                           [--rules-engine]
     */
    ext_front-door_az_network_front_door_routing_rule_create(): void {
    }

    /**
     * Delete a Front Door routing rule.
     *
     * Syntax: 
     *
     * az network front-door routing-rule delete --front-door-name
     *                                           --name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_routing_rule_delete(): void {
    }

    /**
     * List Front Door routing rules.
     *
     * Syntax: 
     *
     * az network front-door routing-rule list --front-door-name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_routing_rule_list(): void {
    }

    /**
     * Get the details of a Front Door routing rule.
     *
     * Syntax: 
     *
     * az network front-door routing-rule show --front-door-name
     *                                         --name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_routing_rule_show(): void {
    }

    /**
     * Update a Front Door routing rule.
     *
     * Syntax: 
     *
     * az network front-door routing-rule update --front-door-name
     *                                           --name
     *                                           --resource-group
     *                                           [--accepted-protocols]
     *                                           [--add]
     *                                           [--backend-pool]
     *                                           [--cache-duration]
     *                                           [--caching {Disabled, Enabled}]
     *                                           [--custom-forwarding-path]
     *                                           [--custom-fragment]
     *                                           [--custom-host]
     *                                           [--custom-path]
     *                                           [--custom-query-string]
     *                                           [--dynamic-compression {Disabled, Enabled}]
     *                                           [--enabled {Disabled, Enabled}]
     *                                           [--force-string]
     *                                           [--forwarding-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                           [--frontend-endpoints]
     *                                           [--patterns]
     *                                           [--query-parameter-strip-directive {StripAll, StripAllExcept, StripNone, StripOnly}]
     *                                           [--query-parameters]
     *                                           [--redirect-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                           [--redirect-type {Found, Moved, PermanentRedirect, TemporaryRedirect}]
     *                                           [--remove]
     *                                           [--rules-engine]
     *                                           [--set]
     */
    ext_front-door_az_network_front_door_routing_rule_update(): void {
    }
}

/** Manage Rules Engine actions for Front Door. */
class ext_front-door_az_network_front_door_rules_engine_rule_action {
    /**
     * Add an action to a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule action add --action-type {ForwardRouteOverride, RedirectRouteOverride, RequestHeader, ResponseHeader}
     *                                                    --front-door-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    --rules-engine-name
     *                                                    [--backend-pool]
     *                                                    [--cache-duration]
     *                                                    [--caching {Disabled, Enabled}]
     *                                                    [--custom-forwarding-path]
     *                                                    [--custom-fragment]
     *                                                    [--custom-host]
     *                                                    [--custom-path]
     *                                                    [--custom-query-string]
     *                                                    [--dynamic-compression {Disabled, Enabled}]
     *                                                    [--forwarding-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                                    [--header-action {Append, Delete, Overwrite}]
     *                                                    [--header-name]
     *                                                    [--header-value]
     *                                                    [--query-parameter-strip-directive {StripAll, StripAllExcept, StripNone, StripOnly}]
     *                                                    [--query-parameters]
     *                                                    [--redirect-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                                                    [--redirect-type {Found, Moved, PermanentRedirect, TemporaryRedirect}]
     */
    ext_front-door_az_network_front_door_rules_engine_rule_action_add(): void {
    }

    /**
     * Show all actions that apply for a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule action list --front-door-name
     *                                                     --name
     *                                                     --resource-group
     *                                                     --rules-engine-name
     */
    ext_front-door_az_network_front_door_rules_engine_rule_action_list(): void {
    }

    /**
     * Remove an action from a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule action remove --action-type {ForwardRouteOverride, RedirectRouteOverride, RequestHeader, ResponseHeader}
     *                                                       --front-door-name
     *                                                       --name
     *                                                       --resource-group
     *                                                       --rules-engine-name
     *                                                       [--index]
     */
    ext_front-door_az_network_front_door_rules_engine_rule_action_remove(): void {
    }
}

/** Manage Rules Engine match conditions for Front Door. */
class ext_front-door_az_network_front_door_rules_engine_rule_condition {
    /**
     * Add a match condition to a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule condition add --front-door-name
     *                                                       --name
     *                                                       --resource-group
     *                                                       --rules-engine-name
     *                                                       [--match-values]
     *                                                       [--match-variable {IsMobile, PostArgs, QueryString, RemoteAddr, RequestBody, RequestFilename, RequestFilenameExtension, RequestHeader, RequestMethod, RequestPath, RequestScheme, RequestUri}]
     *                                                       [--negate-condition {false, true}]
     *                                                       [--operator {Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual}]
     *                                                       [--selector]
     *                                                       [--transforms {Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode, UrlEncode}]
     */
    ext_front-door_az_network_front_door_rules_engine_rule_condition_add(): void {
    }

    /**
     * Show all match conditions associated with a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule condition list --front-door-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        --rules-engine-name
     */
    ext_front-door_az_network_front_door_rules_engine_rule_condition_list(): void {
    }

    /**
     * Remove a match condition from a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule condition remove --front-door-name
     *                                                          --index
     *                                                          --name
     *                                                          --resource-group
     *                                                          --rules-engine-name
     */
    ext_front-door_az_network_front_door_rules_engine_rule_condition_remove(): void {
    }
}

/** Manage Rules Engine rules. */
class ext_front-door_az_network_front_door_rules_engine_rule {
    /**
     * Create a Rules Engine rule for a Front Door.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule create --action-type {RequestHeader, ResponseHeader}
     *                                                --front-door-name
     *                                                --name
     *                                                --priority
     *                                                --resource-group
     *                                                --rules-engine-name
     *                                                [--header-action {Append, Delete, Overwrite}]
     *                                                [--header-name]
     *                                                [--header-value]
     *                                                [--match-processing-behavior {Continue, Stop}]
     *                                                [--match-values]
     *                                                [--match-variable {IsMobile, PostArgs, QueryString, RemoteAddr, RequestBody, RequestFilename, RequestFilenameExtension, RequestHeader, RequestMethod, RequestPath, RequestScheme, RequestUri}]
     *                                                [--negate-condition {false, true}]
     *                                                [--operator {Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual}]
     *                                                [--selector]
     *                                                [--transforms {Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode, UrlEncode}]
     */
    ext_front-door_az_network_front_door_rules_engine_rule_create(): void {
    }

    /**
     * Delete a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule delete --front-door-name
     *                                                --name
     *                                                --resource-group
     *                                                --rules-engine-name
     */
    ext_front-door_az_network_front_door_rules_engine_rule_delete(): void {
    }

    /**
     * List rules of a Rules Engine configuration.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule list --front-door-name
     *                                              --name
     *                                              --resource-group
     */
    ext_front-door_az_network_front_door_rules_engine_rule_list(): void {
    }

    /**
     * Get the details of a Rules Engine rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule show --front-door-name
     *                                              --name
     *                                              --resource-group
     *                                              --rules-engine-name
     */
    ext_front-door_az_network_front_door_rules_engine_rule_show(): void {
    }

    /**
     * Update Rules Engine configuration of a rule.
     *
     * Syntax: 
     *
     * az network front-door rules-engine rule update --front-door-name
     *                                                --name
     *                                                --resource-group
     *                                                --rules-engine-name
     *                                                [--match-processing-behavior {Continue, Stop}]
     *                                                [--priority]
     */
    ext_front-door_az_network_front_door_rules_engine_rule_update(): void {
    }
}

/** Manage Front Door rules engines. */
class ext_front-door_az_network_front_door_rules_engine {
    /**
     * Deletes an existing Rules Engine Configuration with the specified parameters.
     *
     * Syntax: 
     *
     * az network front-door rules-engine delete --front-door-name
     *                                           --name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_rules_engine_delete(): void {
    }

    /**
     * Lists all of the Rules Engine Configurations within a Front Door.
     *
     * Syntax: 
     *
     * az network front-door rules-engine list --front-door-name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_rules_engine_list(): void {
    }

    /**
     * Gets a Rules Engine Configuration with the specified name within the specified Front Door.
     *
     * Syntax: 
     *
     * az network front-door rules-engine show --front-door-name
     *                                         --name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_rules_engine_show(): void {
    }
}

/** Learn about available managed rule sets. */
class ext_front-door_az_network_front_door_waf_policy_managed_rule_definition {
    /**
     * Show a detailed list of available managed rule sets.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rule-definition list
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rule_definition_list(): void {
    }
}

/** View and alter exclusions on a managed rule set, rule group, or rule within a managed rule set. */
class ext_front-door_az_network_front_door_waf_policy_managed_rules_exclusion {
    /**
     * Add an exclusion on a managed rule set, rule group, or rule within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules exclusion add --match-variable
     *                                                              --operator
     *                                                              --policy-name
     *                                                              --resource-group
     *                                                              --type
     *                                                              --value
     *                                                              [--rule-group-id]
     *                                                              [--rule-id]
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_exclusion_add(): void {
    }

    /**
     * List the exclusions on managed rule set, rule group, or rule within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules exclusion list --policy-name
     *                                                               --resource-group
     *                                                               --type
     *                                                               [--rule-group-id]
     *                                                               [--rule-id]
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_exclusion_list(): void {
    }

    /**
     * Remove an exclusion on a managed rule set, rule group, or rule within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules exclusion remove --match-variable
     *                                                                 --operator
     *                                                                 --policy-name
     *                                                                 --resource-group
     *                                                                 --type
     *                                                                 --value
     *                                                                 [--rule-group-id]
     *                                                                 [--rule-id]
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_exclusion_remove(): void {
    }
}

/** View and alter overrides on managed rules within a managed rule set. */
class ext_front-door_az_network_front_door_waf_policy_managed_rules_override {
    /**
     * Add an override on a managed rule within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules override add --policy-name
     *                                                             --resource-group
     *                                                             --rule-group-id
     *                                                             --rule-id
     *                                                             --type
     *                                                             [--action {Allow, Block, Log, Redirect}]
     *                                                             [--disabled {false, true}]
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_override_add(): void {
    }

    /**
     * List the overrides on managed rules within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules override list --policy-name
     *                                                              --resource-group
     *                                                              --type
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_override_list(): void {
    }

    /**
     * Remove an override on a managed rule within a managed rule set.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules override remove --policy-name
     *                                                                --resource-group
     *                                                                --rule-group-id
     *                                                                --rule-id
     *                                                                --type
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_override_remove(): void {
    }
}

/** Change and view managed rule sets associated with your WAF policy. */
class ext_front-door_az_network_front_door_waf_policy_managed_rules {
    /**
     * Add a managed rule set to a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules add --policy-name
     *                                                    --resource-group
     *                                                    --type
     *                                                    --version
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_add(): void {
    }

    /**
     * Show which managed rule sets are applied to a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules list --policy-name
     *                                                     --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_list(): void {
    }

    /**
     * Remove a managed rule set from a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy managed-rules remove --policy-name
     *                                                       --resource-group
     *                                                       --type
     */
    ext_front-door_az_network_front_door_waf_policy_managed_rules_remove(): void {
    }
}

/** Alter match-conditions associated with a WAF policy custom rule. */
class ext_front-door_az_network_front_door_waf_policy_rule_match_condition {
    /**
     * Add a match-condition to a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule match-condition add --match-variable
     *                                                           --name
     *                                                           --operator
     *                                                           --policy-name
     *                                                           --resource-group
     *                                                           --values
     *                                                           [--negate {false, true}]
     *                                                           [--transforms {Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode, UrlEncode}]
     */
    ext_front-door_az_network_front_door_waf_policy_rule_match_condition_add(): void {
    }

    /**
     * Show all match-conditions associated with a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule match-condition list --name
     *                                                            --policy-name
     *                                                            --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_rule_match_condition_list(): void {
    }

    /**
     * Remove a match-condition from a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule match-condition remove --index
     *                                                              --name
     *                                                              --policy-name
     *                                                              --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_rule_match_condition_remove(): void {
    }
}

/** Manage WAF policy custom rules. */
class ext_front-door_az_network_front_door_waf_policy_rule {
    /**
     * Create a WAF policy custom rule. Use --defer and add a rule match-condition.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule create --action {Allow, Block, Log, Redirect}
     *                                              --name
     *                                              --policy-name
     *                                              --priority
     *                                              --resource-group
     *                                              --rule-type {MatchRule, RateLimitRule}
     *                                              [--disabled {false, true}]
     *                                              [--rate-limit-duration]
     *                                              [--rate-limit-threshold]
     */
    ext_front-door_az_network_front_door_waf_policy_rule_create(): void {
    }

    /**
     * Delete a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule delete --name
     *                                              --policy-name
     *                                              --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_rule_delete(): void {
    }

    /**
     * List WAF policy custom rules.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule list --policy-name
     *                                            --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_rule_list(): void {
    }

    /**
     * Get the details of a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule show --name
     *                                            --policy-name
     *                                            --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_rule_show(): void {
    }

    /**
     * Alter the details of a WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network front-door waf-policy rule update --name
     *                                              --policy-name
     *                                              --resource-group
     *                                              [--action {Allow, Block, Log, Redirect}]
     *                                              [--disabled {false, true}]
     *                                              [--priority]
     *                                              [--rate-limit-duration]
     *                                              [--rate-limit-threshold]
     */
    ext_front-door_az_network_front_door_waf_policy_rule_update(): void {
    }
}

/** Manage WebApplication Firewall (WAF) policies. */
class ext_front-door_az_network_front_door_waf_policy {
    /**
     * Create a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy create --name
     *                                         --resource-group
     *                                         [--custom-block-response-body]
     *                                         [--custom-block-response-status-code]
     *                                         [--disabled {false, true}]
     *                                         [--mode {Detection, Prevention}]
     *                                         [--redirect-url]
     *                                         [--tags]
     */
    ext_front-door_az_network_front_door_waf_policy_create(): void {
    }

    /**
     * Delete a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy delete --name
     *                                         --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_delete(): void {
    }

    /**
     * List WAF policies.
     *
     * Syntax: 
     *
     * az network front-door waf-policy list --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_list(): void {
    }

    /**
     * Get the details of a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy show --name
     *                                       --resource-group
     */
    ext_front-door_az_network_front_door_waf_policy_show(): void {
    }

    /**
     * Update settings of a WAF policy.
     *
     * Syntax: 
     *
     * az network front-door waf-policy update --name
     *                                         --resource-group
     *                                         [--add]
     *                                         [--custom-block-response-body]
     *                                         [--custom-block-response-status-code]
     *                                         [--disabled {false, true}]
     *                                         [--force-string]
     *                                         [--mode {Detection, Prevention}]
     *                                         [--redirect-url]
     *                                         [--remove]
     *                                         [--set]
     *                                         [--tags]
     */
    ext_front-door_az_network_front_door_waf_policy_update(): void {
    }
}

/** Manage Front Doors. */
class ext_front-door_az_network_front_door {
    /**
     * Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.
     *
     * Syntax: 
     *
     * az network front-door check-custom-domain --host-name
     *                                           --name
     *                                           --resource-group
     */
    ext_front-door_az_network_front_door_check_custom_domain(): void {
    }

    /**
     * Create a Front Door.
     *
     * Syntax: 
     *
     * az network front-door create --backend-address
     *                              --name
     *                              --resource-group
     *                              [--accepted-protocols]
     *                              [--backend-host-header]
     *                              [--disabled {false, true}]
     *                              [--enforce-certificate-name-check {Disabled, Enabled}]
     *                              [--forwarding-protocol {HttpOnly, HttpsOnly, MatchRequest}]
     *                              [--friendly-name]
     *                              [--frontend-host-name]
     *                              [--interval]
     *                              [--no-wait]
     *                              [--path]
     *                              [--patterns]
     *                              [--probeMethod {GET, HEAD}]
     *                              [--protocol {Http, Https}]
     *                              [--send-recv-timeout]
     *                              [--tags]
     */
    ext_front-door_az_network_front_door_create(): void {
    }

    /**
     * Delete a Front Door.
     *
     * Syntax: 
     *
     * az network front-door delete --name
     *                              --resource-group
     *                              [--no-wait]
     */
    ext_front-door_az_network_front_door_delete(): void {
    }

    /**
     * List Front Doors.
     *
     * Syntax: 
     *
     * az network front-door list [--resource-group]
     */
    ext_front-door_az_network_front_door_list(): void {
    }

    /**
     * Removes a content from Front Door.
     *
     * Syntax: 
     *
     * az network front-door purge-endpoint --content-paths
     *                                      --name
     *                                      --resource-group
     */
    ext_front-door_az_network_front_door_purge_endpoint(): void {
    }

    /**
     * Get the details of a Front Door.
     *
     * Syntax: 
     *
     * az network front-door show --name
     *                            --resource-group
     */
    ext_front-door_az_network_front_door_show(): void {
    }

    /**
     * Update settings of a Front Door.
     *
     * Syntax: 
     *
     * az network front-door update --name
     *                              --resource-group
     *                              [--add]
     *                              [--enforce-certificate-name-check {Disabled, Enabled}]
     *                              [--force-string]
     *                              [--remove]
     *                              [--send-recv-timeout]
     *                              [--set]
     *                              [--tags]
     */
    ext_front-door_az_network_front_door_update(): void {
    }
}

/** Manage Azure Network resources. */
class ext_front-door_az_network {
}

/** Guestconfig guest-configuration-assignment-report. */
class ext_guestconfig_az_guestconfig_guest_configuration_assignment_report {
    /**
     * List all reports for the guest configuration assignment, latest report first.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment-report list --guest-configuration-assignment-name
     *                                                           --resource-group
     *                                                           --vm-name
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_report_list(): void {
    }

    /**
     * Get a report for the guest configuration assignment, by reportId.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment-report show --guest-configuration-assignment-name
     *                                                           --report-id
     *                                                           --resource-group
     *                                                           --vm-name
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_report_show(): void {
    }
}

/** Guestconfig guest-configuration-assignment. */
class ext_guestconfig_az_guestconfig_guest_configuration_assignment {
    /**
     * Creates an association between a VM and guest configuration.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment create --guest-configuration-assignment-name
     *                                                      --resource-group
     *                                                      --vm-name
     *                                                      [--context]
     *                                                      [--guest-configuration-configuration-parameter]
     *                                                      [--guest-configuration-configuration-setting]
     *                                                      [--guest-configuration-name]
     *                                                      [--guest-configuration-version]
     *                                                      [--latest-assignment-report-assignment]
     *                                                      [--location]
     *                                                      [--name]
     *                                                      [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_create(): void {
    }

    /**
     * Delete a guest configuration assignment.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment delete --name
     *                                                      --resource-group
     *                                                      --vm-name
     *                                                      [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_delete(): void {
    }

    /**
     * List all guest configuration assignments for a virtual machine.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment list --resource-group
     *                                                    --vm-name
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_list(): void {
    }

    /**
     * Get information about a guest configuration assignment.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment show --name
     *                                                    --resource-group
     *                                                    --vm-name
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_show(): void {
    }

    /**
     * Creates an association between a VM and guest configuration.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment update --guest-configuration-assignment-name
     *                                                      --resource-group
     *                                                      --vm-name
     *                                                      [--context]
     *                                                      [--guest-configuration-configuration-parameter]
     *                                                      [--guest-configuration-configuration-setting]
     *                                                      [--guest-configuration-name]
     *                                                      [--guest-configuration-version]
     *                                                      [--latest-assignment-report-assignment]
     *                                                      [--location]
     *                                                      [--name]
     *                                                      [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the guestconfig guest-configuration-assignment is met.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-assignment wait --name
     *                                                    --resource-group
     *                                                    --vm-name
     *                                                    [--created]
     *                                                    [--custom]
     *                                                    [--deleted]
     *                                                    [--exists]
     *                                                    [--interval]
     *                                                    [--timeout]
     *                                                    [--updated]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_assignment_wait(): void {
    }
}

/** Guestconfig guest-configuration-hcrp-assignment-report. */
class ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_report {
    /**
     * List all reports for the guest configuration assignment, latest report first.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment-report list --guest-configuration-assignment-name
     *                                                                --machine-name
     *                                                                --resource-group
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_report_list(): void {
    }

    /**
     * Get a report for the guest configuration assignment, by reportId.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment-report show --guest-configuration-assignment-name
     *                                                                --machine-name
     *                                                                --report-id
     *                                                                --resource-group
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_report_show(): void {
    }
}

/** Guestconfig guest-configuration-hcrp-assignment. */
class ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment {
    /**
     * Creates an association between a ARC machine and guest configuration.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment create --guest-configuration-assignment-name
     *                                                           --machine-name
     *                                                           --resource-group
     *                                                           [--context]
     *                                                           [--guest-configuration-configuration-parameter]
     *                                                           [--guest-configuration-configuration-setting]
     *                                                           [--guest-configuration-name]
     *                                                           [--guest-configuration-version]
     *                                                           [--latest-assignment-report-assignment]
     *                                                           [--location]
     *                                                           [--name]
     *                                                           [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_create(): void {
    }

    /**
     * Delete a guest configuration assignment.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment delete --guest-configuration-assignment-name
     *                                                           --machine-name
     *                                                           --resource-group
     *                                                           [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_delete(): void {
    }

    /**
     * List all guest configuration assignments for an ARC machine.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment list --machine-name
     *                                                         --resource-group
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_list(): void {
    }

    /**
     * Get information about a guest configuration assignment.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment show --guest-configuration-assignment-name
     *                                                         --machine-name
     *                                                         --resource-group
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_show(): void {
    }

    /**
     * Creates an association between a ARC machine and guest configuration.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment update --guest-configuration-assignment-name
     *                                                           --machine-name
     *                                                           --resource-group
     *                                                           [--context]
     *                                                           [--guest-configuration-configuration-parameter]
     *                                                           [--guest-configuration-configuration-setting]
     *                                                           [--guest-configuration-name]
     *                                                           [--guest-configuration-version]
     *                                                           [--latest-assignment-report-assignment]
     *                                                           [--location]
     *                                                           [--name]
     *                                                           [--no-wait]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the guestconfig guest-configuration-hcrp-assignment is met.
     *
     * Syntax: 
     *
     * az guestconfig guest-configuration-hcrp-assignment wait --guest-configuration-assignment-name
     *                                                         --machine-name
     *                                                         --resource-group
     *                                                         [--created]
     *                                                         [--custom]
     *                                                         [--deleted]
     *                                                         [--exists]
     *                                                         [--interval]
     *                                                         [--timeout]
     *                                                         [--updated]
     */
    ext_guestconfig_az_guestconfig_guest_configuration_hcrp_assignment_wait(): void {
    }
}

/** */
class ext_guestconfig_az_guestconfig {
}

/** */
class ext_guestconfig_az {
}

/** Commands to manage resources commonly used for student hacks. */
class ext_hack_az_hack {
    /**
     * Create resources commonly used for a student hack, including a website, database, and artificial intelligence.
     *
     * Syntax: 
     *
     * az hack create --location
     *                --name
     *                --runtime {aspnet, jetty, node, php, python, tomcat}
     *                [--ai]
     *                [--database {cosmosdb, mysql, sql}]
     */
    ext_hack_az_hack_create(): void {
    }

    /**
     * Display settings for created resources, including database name and password, Git url, and website url.
     *
     * Syntax: 
     *
     * az hack show --name
     */
    ext_hack_az_hack_show(): void {
    }
}

/** */
class ext_hack_az {
}

/** Dedicated-hsm to create, update, list, show, and delete HSMs. */
class ext_hardware-security-modules_az_dedicated_hsm {
    /**
     * Create a dedicated HSM in the specified subscription.
     *
     * Syntax: 
     *
     * az dedicated-hsm create --location
     *                         --name
     *                         --resource-group
     *                         [--network-profile-network-interfaces]
     *                         [--no-wait]
     *                         [--sku]
     *                         [--stamp-id]
     *                         [--subnet]
     *                         [--tags]
     *                         [--zones]
     */
    ext_hardware-security-modules_az_dedicated_hsm_create(): void {
    }

    /**
     * Deletes the specified Azure Dedicated HSM.
     *
     * Syntax: 
     *
     * az dedicated-hsm delete --name
     *                         --resource-group
     *                         [--no-wait]
     *                         [--yes]
     */
    ext_hardware-security-modules_az_dedicated_hsm_delete(): void {
    }

    /**
     * The List operation gets information about the dedicated HSMs associated with the subscription.
     *
     * Syntax: 
     *
     * az dedicated-hsm list [--resource-group]
     *                       [--top]
     */
    ext_hardware-security-modules_az_dedicated_hsm_list(): void {
    }

    /**
     * Gets the specified Azure dedicated HSM.
     *
     * Syntax: 
     *
     * az dedicated-hsm show --name
     *                       --resource-group
     */
    ext_hardware-security-modules_az_dedicated_hsm_show(): void {
    }

    /**
     * Update a dedicated HSM in the specified subscription.
     *
     * Syntax: 
     *
     * az dedicated-hsm update --name
     *                         --resource-group
     *                         [--no-wait]
     *                         [--tags]
     */
    ext_hardware-security-modules_az_dedicated_hsm_update(): void {
    }

    /**
     * Waits for operation to complete.
     *
     * Syntax: 
     *
     * az dedicated-hsm wait --name
     *                       --resource-group
     *                       [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--interval]
     *                       [--timeout]
     *                       [--updated]
     */
    ext_hardware-security-modules_az_dedicated_hsm_wait(): void {
    }
}

/** */
class ext_hardware-security-modules_az {
}

/** Healthcareapis operation-result. */
class ext_healthcareapis_az_healthcareapis_operation_result {
    /**
     * Get the operation result for a long running operation.
     *
     * Syntax: 
     *
     * az healthcareapis operation-result show --location-name
     *                                         --operation-result-id
     */
    ext_healthcareapis_az_healthcareapis_operation_result_show(): void {
    }
}

/** Healthcareapis service. */
class ext_healthcareapis_az_healthcareapis_service {
    /**
     * Create or update the metadata of a service instance.
     *
     * Syntax: 
     *
     * az healthcareapis service create --kind {fhir, fhir-R4, fhir-Stu3}
     *                                  --location
     *                                  --resource-group
     *                                  --resource-name
     *                                  [--etag]
     *                                  [--identity]
     *                                  [--no-wait]
     *                                  [--properties]
     *                                  [--tags]
     */
    ext_healthcareapis_az_healthcareapis_service_create(): void {
    }

    /**
     * Delete a service instance.
     *
     * Syntax: 
     *
     * az healthcareapis service delete --resource-group
     *                                  --resource-name
     *                                  [--no-wait]
     */
    ext_healthcareapis_az_healthcareapis_service_delete(): void {
    }

    /**
     * Get all the service instances in a subscription.
     *
     * Syntax: 
     *
     * az healthcareapis service list [--resource-group]
     */
    ext_healthcareapis_az_healthcareapis_service_list(): void {
    }

    /**
     * Get the metadata of a service instance.
     *
     * Syntax: 
     *
     * az healthcareapis service show --resource-group
     *                                --resource-name
     */
    ext_healthcareapis_az_healthcareapis_service_show(): void {
    }

    /**
     * Update the metadata of a service instance.
     *
     * Syntax: 
     *
     * az healthcareapis service update --resource-group
     *                                  --resource-name
     *                                  [--no-wait]
     *                                  [--tags]
     */
    ext_healthcareapis_az_healthcareapis_service_update(): void {
    }
}

/** */
class ext_healthcareapis_az_healthcareapis {
}

/** */
class ext_healthcareapis_az {
}

/** Commands to create hpc cache blob storage target. */
class ext_hpc-cache_az_hpc_cache_blob_storage_target {
    /**
     * Create or update a blob Storage Target. This operation is allowed at any time, but if the Cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the Cache is healthy again.
     *
     * Syntax: 
     *
     * az hpc-cache blob-storage-target add --cache-name
     *                                      --container-name
     *                                      --name
     *                                      --resource-group
     *                                      --storage-account
     *                                      --virtual-namespace-path
     */
    ext_hpc-cache_az_hpc_cache_blob_storage_target_add(): void {
    }

    /**
     * Create or update a blob Storage Target. This operation is allowed at any time, but if the Cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the Cache is healthy again.
     *
     * Syntax: 
     *
     * az hpc-cache blob-storage-target update --cache-name
     *                                         --name
     *                                         --resource-group
     *                                         [--container-name]
     *                                         [--storage-account]
     *                                         [--virtual-namespace-path]
     */
    ext_hpc-cache_az_hpc_cache_blob_storage_target_update(): void {
    }
}

/** Commands to create hpc cache nfs storage target. */
class ext_hpc-cache_az_hpc_cache_nfs_storage_target {
    /**
     * Create or update a nfs Storage Target. This operation is allowed at any time, but if the Cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the Cache is healthy again.
     *
     * Syntax: 
     *
     * az hpc-cache nfs-storage-target add --cache-name
     *                                     --junction
     *                                     --name
     *                                     --nfs3-target
     *                                     --nfs3-usage-model
     *                                     --resource-group
     */
    ext_hpc-cache_az_hpc_cache_nfs_storage_target_add(): void {
    }

    /**
     * Create or update a nfs Storage Target. This operation is allowed at any time, but if the Cache is down or unhealthy, the actual creation/modification of the Storage Target may be delayed until the Cache is healthy again.
     *
     * Syntax: 
     *
     * az hpc-cache nfs-storage-target update --cache-name
     *                                        --name
     *                                        --resource-group
     *                                        [--junction]
     *                                        [--nfs3-target]
     *                                        [--nfs3-usage-model]
     */
    ext_hpc-cache_az_hpc_cache_nfs_storage_target_update(): void {
    }
}

/** Commands to manage hpc cache skus. */
class ext_hpc-cache_az_hpc_cache_skus {
    /**
     * Get the list of StorageCache.Cache SKUs available to this subscription.
     *
     * Syntax: 
     *
     * az hpc-cache skus list
     */
    ext_hpc-cache_az_hpc_cache_skus_list(): void {
    }
}

/** Commands to manage hpc cache storage target. */
class ext_hpc-cache_az_hpc_cache_storage_target {
    /**
     * Return a list of Storage Targets for the specified Cache.
     *
     * Syntax: 
     *
     * az hpc-cache storage-target list --cache-name
     *                                  --resource-group
     */
    ext_hpc-cache_az_hpc_cache_storage_target_list(): void {
    }

    /**
     * Remove a Storage Target from a Cache. This operation is allowed at any time, but if the Cache is down or unhealthy, the actual removal of the Storage Target may be delayed until the Cache is healthy again. Note that if the Cache has data to flush to the Storage Target, the data will be flushed before the Storage Target will be deleted.
     *
     * Syntax: 
     *
     * az hpc-cache storage-target remove --cache-name
     *                                    --name
     *                                    --resource-group
     */
    ext_hpc-cache_az_hpc_cache_storage_target_remove(): void {
    }

    /**
     * Return a Storage Target from a Cache.
     *
     * Syntax: 
     *
     * az hpc-cache storage-target show --cache-name
     *                                  --name
     *                                  --resource-group
     */
    ext_hpc-cache_az_hpc_cache_storage_target_show(): void {
    }
}

/** Commands to manage hpc cache usage model. */
class ext_hpc-cache_az_hpc_cache_usage_model {
    /**
     * Get the list of Cache Usage Models available to this subscription.
     *
     * Syntax: 
     *
     * az hpc-cache usage-model list
     */
    ext_hpc-cache_az_hpc_cache_usage_model_list(): void {
    }
}

/** Commands to manage hpc cache. */
class ext_hpc-cache_az_hpc_cache {
    /**
     * Create or update a Cache.
     *
     * Syntax: 
     *
     * az hpc-cache create --cache-size-gb
     *                     --location
     *                     --name
     *                     --resource-group
     *                     --sku-name
     *                     --subnet
     *                     [--no-wait]
     *                     [--tags]
     */
    ext_hpc-cache_az_hpc_cache_create(): void {
    }

    /**
     * Schedule a Cache for deletion.
     *
     * Syntax: 
     *
     * az hpc-cache delete --name
     *                     --resource-group
     *                     [--no-wait]
     */
    ext_hpc-cache_az_hpc_cache_delete(): void {
    }

    /**
     * Tell a Cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete.
     *
     * Syntax: 
     *
     * az hpc-cache flush --name
     *                    --resource-group
     */
    ext_hpc-cache_az_hpc_cache_flush(): void {
    }

    /**
     * Return all Caches the user has access to under a resource group.
     *
     * Syntax: 
     *
     * az hpc-cache list [--resource-group]
     */
    ext_hpc-cache_az_hpc_cache_list(): void {
    }

    /**
     * Return a Cache.
     *
     * Syntax: 
     *
     * az hpc-cache show --name
     *                   --resource-group
     */
    ext_hpc-cache_az_hpc_cache_show(): void {
    }

    /**
     * Tell a Stopped state Cache to transition to Active state.
     *
     * Syntax: 
     *
     * az hpc-cache start --name
     *                    --resource-group
     *                    [--no-wait]
     */
    ext_hpc-cache_az_hpc_cache_start(): void {
    }

    /**
     * Tell an Active Cache to transition to Stopped state.
     *
     * Syntax: 
     *
     * az hpc-cache stop --name
     *                   --resource-group
     *                   [--no-wait]
     */
    ext_hpc-cache_az_hpc_cache_stop(): void {
    }

    /**
     * Create or update a Cache.
     *
     * Syntax: 
     *
     * az hpc-cache update --name
     *                     --resource-group
     *                     [--cache-size-gb]
     *                     [--location]
     *                     [--sku-name]
     *                     [--subnet]
     *                     [--tags]
     */
    ext_hpc-cache_az_hpc_cache_update(): void {
    }

    /**
     * Upgrade a Cache's firmware if a new version is available. Otherwise, this operation has no effect.
     *
     * Syntax: 
     *
     * az hpc-cache upgrade-firmware --name
     *                               --resource-group
     */
    ext_hpc-cache_az_hpc_cache_upgrade_firmware(): void {
    }

    /**
     * Wait a hpc Cache to specified state.
     *
     * Syntax: 
     *
     * az hpc-cache wait --name
     *                   --resource-group
     *                   [--created]
     *                   [--custom]
     *                   [--deleted]
     *                   [--exists]
     *                   [--interval]
     *                   [--timeout]
     *                   [--updated]
     */
    ext_hpc-cache_az_hpc_cache_wait(): void {
    }
}

/** */
class ext_hpc-cache_az {
}

/** Manage custom virtual machine images. */
class ext_image-copy-extension_az_image {
    /**
     * Copy a managed image (or vm) to other regions. It requires the source disk to be available.
     *
     * Syntax: 
     *
     * az image copy --source-object-name
     *               --source-resource-group
     *               --target-location
     *               --target-resource-group
     *               [--cleanup]
     *               [--export-as-snapshot]
     *               [--parallel-degree]
     *               [--source-type {image, vm}]
     *               [--tags]
     *               [--target-name]
     *               [--target-subscription]
     *               [--temporary-resource-group-name]
     *               [--timeout]
     */
    ext_image-copy-extension_az_image_copy(): void {
    }
}

/** */
class ext_image-copy-extension_az {
}

/** Import-export bit-locker-key. */
class ext_import-export_az_import_export_bit_locker_key {
    /**
     * Returns the BitLocker Keys for all drives in the specified job.
     *
     * Syntax: 
     *
     * az import-export bit-locker-key list --job-name
     *                                      --resource-group
     */
    ext_import-export_az_import_export_bit_locker_key_list(): void {
    }
}

/** Import-export location. */
class ext_import-export_az_import_export_location {
    /**
     * Returns a list of locations to which you can ship the disks associated with an import or export job. A location is a Microsoft data center region.
     *
     * Syntax: 
     *
     * az import-export location list
     */
    ext_import-export_az_import_export_location_list(): void {
    }

    /**
     * Returns the details about a location to which you can ship the disks associated with an import or export job. A location is an Azure region.
     *
     * Syntax: 
     *
     * az import-export location show --location
     */
    ext_import-export_az_import_export_location_show(): void {
    }
}

/** Manage Import Export. */
class ext_import-export_az_import_export {
    /**
     * Creates a new job or updates an existing job in the specified subscription.
     *
     * Syntax: 
     *
     * az import-export create --name
     *                         --resource-group
     *                         [--backup-drive-manifest {false, true}]
     *                         [--cancel-requested {false, true}]
     *                         [--client-tenant-id]
     *                         [--delivery-package]
     *                         [--diagnostics-path]
     *                         [--drive-list]
     *                         [--export]
     *                         [--incomplete-blob-list-uri]
     *                         [--location]
     *                         [--log-level]
     *                         [--percent-complete]
     *                         [--return-address]
     *                         [--return-package]
     *                         [--return-shipping]
     *                         [--shipping-information]
     *                         [--state]
     *                         [--storage-account]
     *                         [--tags]
     *                         [--type]
     */
    ext_import-export_az_import_export_create(): void {
    }

    /**
     * Deletes an existing job. Only jobs in the Creating or Completed states can be deleted.
     *
     * Syntax: 
     *
     * az import-export delete --name
     *                         --resource-group
     */
    ext_import-export_az_import_export_delete(): void {
    }

    /**
     * Returns all active and completed jobs in a subscription.
     *
     * Syntax: 
     *
     * az import-export list [--resource-group]
     */
    ext_import-export_az_import_export_list(): void {
    }

    /**
     * Gets information about an existing job.
     *
     * Syntax: 
     *
     * az import-export show --name
     *                       --resource-group
     */
    ext_import-export_az_import_export_show(): void {
    }

    /**
     * Updates specific properties of a job. You can call this operation to notify the Import/Export service that the hard drives comprising the import or export job have been shipped to the Microsoft data center. It can also be used to cancel an existing job.
     *
     * Syntax: 
     *
     * az import-export update --name
     *                         --resource-group
     *                         [--backup-drive-manifest {false, true}]
     *                         [--cancel-requested {false, true}]
     *                         [--delivery-package]
     *                         [--drive-list]
     *                         [--log-level]
     *                         [--return-address]
     *                         [--return-shipping]
     *                         [--state]
     *                         [--tags]
     */
    ext_import-export_az_import_export_update(): void {
    }
}

/** */
class ext_import-export_az {
}

/** */
class ext_interactive_az {
}

/** */
class ext_internet-analyzer_az {
}

/** Commands to manage preconfigured endpoints. */
class ext_internet-analyzer_az_internet_analyzer_preconfigured_endpoint {
    /**
     * List preconfigured endpoints.
     *
     * Syntax: 
     *
     * az internet-analyzer preconfigured-endpoint list --profile-name
     *                                                  --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_preconfigured_endpoint_list(): void {
    }
}

/** Commands to manage internet analyzer profile. */
class ext_internet-analyzer_az_internet_analyzer_profile {
    /**
     * Create internet analyzer profile.
     *
     * Syntax: 
     *
     * az internet-analyzer profile create --name
     *                                     --resource-group
     *                                     [--enabled-state {Disabled, Enabled}]
     *                                     [--location]
     *                                     [--tags]
     */
    ext_internet-analyzer_az_internet_analyzer_profile_create(): void {
    }

    /**
     * Delete internet analyzer profile.
     *
     * Syntax: 
     *
     * az internet-analyzer profile delete --name
     *                                     --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_profile_delete(): void {
    }

    /**
     * List internet analyzer profiles.
     *
     * Syntax: 
     *
     * az internet-analyzer profile list --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_profile_list(): void {
    }

    /**
     * Show internet analyzer profile.
     *
     * Syntax: 
     *
     * az internet-analyzer profile show --name
     *                                   --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_profile_show(): void {
    }

    /**
     * Update internet analyzer profile.
     *
     * Syntax: 
     *
     * az internet-analyzer profile update --name
     *                                     --resource-group
     *                                     [--enabled-state {Disabled, Enabled}]
     *                                     [--location]
     *                                     [--tags]
     */
    ext_internet-analyzer_az_internet_analyzer_profile_update(): void {
    }
}

/** Commands to manage tests. */
class ext_internet-analyzer_az_internet_analyzer_test {
    /**
     * Create test.
     *
     * Syntax: 
     *
     * az internet-analyzer test create --name
     *                                  --profile-name
     *                                  --resource-group
     *                                  [--description]
     *                                  [--enabled-state {Disabled, Enabled}]
     *                                  [--endpoint-a-endpoint]
     *                                  [--endpoint-a-name]
     *                                  [--endpoint-b-endpoint]
     *                                  [--endpoint-b-name]
     *                                  [--location]
     *                                  [--tags]
     */
    ext_internet-analyzer_az_internet_analyzer_test_create(): void {
    }

    /**
     * Delete test.
     *
     * Syntax: 
     *
     * az internet-analyzer test delete --name
     *                                  --profile-name
     *                                  --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_test_delete(): void {
    }

    /**
     * List tests.
     *
     * Syntax: 
     *
     * az internet-analyzer test list --profile-name
     *                                --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_test_list(): void {
    }

    /**
     * Show test.
     *
     * Syntax: 
     *
     * az internet-analyzer test show --name
     *                                --profile-name
     *                                --resource-group
     */
    ext_internet-analyzer_az_internet_analyzer_test_show(): void {
    }

    /**
     * Update test.
     *
     * Syntax: 
     *
     * az internet-analyzer test update --name
     *                                  --profile-name
     *                                  --resource-group
     *                                  [--description]
     *                                  [--enabled-state {Disabled, Enabled}]
     *                                  [--endpoint-a-endpoint]
     *                                  [--endpoint-a-name]
     *                                  [--endpoint-b-endpoint]
     *                                  [--endpoint-b-name]
     *                                  [--location]
     *                                  [--tags]
     */
    ext_internet-analyzer_az_internet_analyzer_test_update(): void {
    }
}

/** Commands to manage internet analyzer. */
class ext_internet-analyzer_az_internet_analyzer {
    /**
     * Show latency scorecard for a test.
     *
     * Syntax: 
     *
     * az internet-analyzer show-scorecard --aggregation-interval
     *                                     --profile-name
     *                                     --resource-group
     *                                     --test-name
     *                                     [--country]
     *                                     [--end-date-time-utc]
     */
    ext_internet-analyzer_az_internet_analyzer_show_scorecard(): void {
    }

    /**
     * Show timeseries for a test.
     *
     * Syntax: 
     *
     * az internet-analyzer show-timeseries --aggregation-interval
     *                                      --end-date-time-utc
     *                                      --endpoint
     *                                      --profile-name
     *                                      --resource-group
     *                                      --start-date-time-utc
     *                                      --test-name
     *                                      --timeseries-type
     *                                      [--country]
     */
    ext_internet-analyzer_az_internet_analyzer_show_timeseries(): void {
    }
}

/** */
class ext_ip-group_az {
}

/** Commands to manage IpGroup. */
class ext_ip-group_az_network_ip_group {
    /**
     * Create an IpGroup.
     *
     * Syntax: 
     *
     * az network ip-group create --ip-addresses
     *                            --name
     *                            --resource-group
     *                            [--location]
     *                            [--tags]
     */
    ext_ip-group_az_network_ip_group_create(): void {
    }

    /**
     * Delete an IpGroup.
     *
     * Syntax: 
     *
     * az network ip-group delete --name
     *                            --resource-group
     */
    ext_ip-group_az_network_ip_group_delete(): void {
    }

    /**
     * List all of IpGroup.
     *
     * Syntax: 
     *
     * az network ip-group list [--resource-group]
     */
    ext_ip-group_az_network_ip_group_list(): void {
    }

    /**
     * Show details of an IpGroup.
     *
     * Syntax: 
     *
     * az network ip-group show --name
     *                          --resource-group
     *                          [--expand]
     */
    ext_ip-group_az_network_ip_group_show(): void {
    }

    /**
     * Update an IpGroup.
     *
     * Syntax: 
     *
     * az network ip-group update --name
     *                            --resource-group
     *                            [--add]
     *                            [--force-string]
     *                            [--ip-addresses]
     *                            [--remove]
     *                            [--set]
     *                            [--tags]
     */
    ext_ip-group_az_network_ip_group_update(): void {
    }
}

/** Manage Azure Network resources. */
class ext_ip-group_az_network {
}

/** */
class ext_k8sconfiguration_az {
}

/** Commands to manage Kubernetes configuration. */
class ext_k8sconfiguration_az_k8sconfiguration {
    /**
     * Create a Kubernetes configuration.
     *
     * Syntax: 
     *
     * az k8sconfiguration create --cluster-name
     *                            --cluster-type {connectedClusters, managedClusters}
     *                            --name
     *                            --repository-url
     *                            --resource-group
     *                            --scope {cluster, namespace}
     *                            [--enable-helm-operator {false, true}]
     *                            [--helm-operator-params]
     *                            [--helm-operator-version]
     *                            [--operator-instance-name]
     *                            [--operator-namespace]
     *                            [--operator-params]
     *                            [--operator-type]
     */
    ext_k8sconfiguration_az_k8sconfiguration_create(): void {
    }

    /**
     * Delete a Kubernetes configuration.
     *
     * Syntax: 
     *
     * az k8sconfiguration delete --cluster-name
     *                            --cluster-type {connectedClusters, managedClusters}
     *                            --name
     *                            --resource-group
     *                            [--yes]
     */
    ext_k8sconfiguration_az_k8sconfiguration_delete(): void {
    }

    /**
     * List Kubernetes configurations.
     *
     * Syntax: 
     *
     * az k8sconfiguration list --cluster-name
     *                          --cluster-type {connectedClusters, managedClusters}
     *                          --resource-group
     */
    ext_k8sconfiguration_az_k8sconfiguration_list(): void {
    }

    /**
     * Show details of a Kubernetes configuration.
     *
     * Syntax: 
     *
     * az k8sconfiguration show --cluster-name
     *                          --cluster-type {connectedClusters, managedClusters}
     *                          --name
     *                          --resource-group
     */
    ext_k8sconfiguration_az_k8sconfiguration_show(): void {
    }

    /**
     * Update a Kubernetes configuration.
     *
     * Syntax: 
     *
     * az k8sconfiguration update --cluster-name
     *                            --cluster-type {connectedClusters, managedClusters}
     *                            --name
     *                            --resource-group
     *                            [--enable-helm-operator {false, true}]
     *                            [--helm-operator-params]
     *                            [--helm-operator-version]
     *                            [--operator-params]
     *                            [--repository-url]
     */
    ext_k8sconfiguration_az_k8sconfiguration_update(): void {
    }
}

/** */
class ext_keyvault-preview_az {
}

/** Manage contacts for certificate management. */
class ext_keyvault-preview_az_keyvault_certificate_contact {
    /**
     * Add a contact to the specified vault to receive notifications of certificate operations.
     *
     * Syntax: 
     *
     * az keyvault certificate contact add --email
     *                                     --vault-name
     *                                     [--name]
     *                                     [--phone]
     */
    ext_keyvault-preview_az_keyvault_certificate_contact_add(): void {
    }

    /**
     * Remove a certificate contact from the specified vault.
     *
     * Syntax: 
     *
     * az keyvault certificate contact delete --email
     *                                        --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_contact_delete(): void {
    }

    /**
     * Lists the certificate contacts for a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate contact list --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_contact_list(): void {
    }
}

/** Manage admin information for certificate issuers. */
class ext_keyvault-preview_az_keyvault_certificate_issuer_admin {
    /**
     * Add admin details for a specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin add --email
     *                                          --issuer-name
     *                                          --vault-name
     *                                          [--first-name]
     *                                          [--last-name]
     *                                          [--phone]
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_admin_add(): void {
    }

    /**
     * Remove admin details for the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin delete --email
     *                                             --issuer-name
     *                                             --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_admin_delete(): void {
    }

    /**
     * List admins for a specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin list --issuer-name
     *                                           --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_admin_list(): void {
    }
}

/** Manage certificate issuer information. */
class ext_keyvault-preview_az_keyvault_certificate_issuer {
    /**
     * Create a certificate issuer record.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer create --issuer-name
     *                                       --provider-name
     *                                       --vault-name
     *                                       [--account-id]
     *                                       [--disabled {false, true}]
     *                                       [--organization-id]
     *                                       [--password]
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_create(): void {
    }

    /**
     * Deletes the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer delete --issuer-name
     *                                       --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_delete(): void {
    }

    /**
     * List certificate issuers for a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer list --vault-name
     *                                     [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_list(): void {
    }

    /**
     * Lists the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer show --issuer-name
     *                                     --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_show(): void {
    }

    /**
     * Update a certificate issuer record.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer update --issuer-name
     *                                       --vault-name
     *                                       [--account-id]
     *                                       [--enabled {false, true}]
     *                                       [--organization-id]
     *                                       [--password]
     *                                       [--provider-name]
     */
    ext_keyvault-preview_az_keyvault_certificate_issuer_update(): void {
    }
}

/** Manage pending certificate creation operations. */
class ext_keyvault-preview_az_keyvault_certificate_pending {
    /**
     * Deletes the creation operation for a specific certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate pending delete --name
     *                                        --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_pending_delete(): void {
    }

    /**
     * Merges a certificate or a certificate chain with a key pair existing on the server.
     *
     * Syntax: 
     *
     * az keyvault certificate pending merge --file
     *                                       --name
     *                                       --vault-name
     *                                       [--disabled {false, true}]
     *                                       [--expires]
     *                                       [--not-before]
     *                                       [--tags]
     */
    ext_keyvault-preview_az_keyvault_certificate_pending_merge(): void {
    }

    /**
     * Gets the creation operation of a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate pending show --name
     *                                      --vault-name
     */
    ext_keyvault-preview_az_keyvault_certificate_pending_show(): void {
    }
}

/** Manage certificates. */
class ext_keyvault-preview_az_keyvault_certificate {
    /**
     * Create a Key Vault certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate create --name
     *                                --policy
     *                                --vault-name
     *                                [--disabled {false, true}]
     *                                [--tags]
     *                                [--validity]
     */
    ext_keyvault-preview_az_keyvault_certificate_create(): void {
    }

    /**
     * Deletes a certificate from a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate delete [--id]
     *                                [--name]
     *                                [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_certificate_delete(): void {
    }

    /**
     * Download the public portion of a Key Vault certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate download --file
     *                                  [--encoding {DER, PEM}]
     *                                  [--id]
     *                                  [--name]
     *                                  [--vault-name]
     *                                  [--version]
     */
    ext_keyvault-preview_az_keyvault_certificate_download(): void {
    }

    /**
     * Get the default policy for self-signed certificates.
     *
     * Syntax: 
     *
     * az keyvault certificate get-default-policy [--scaffold]
     */
    ext_keyvault-preview_az_keyvault_certificate_get_default_policy(): void {
    }

    /**
     * Import a certificate into KeyVault.
     *
     * Syntax: 
     *
     * az keyvault certificate import --file
     *                                --name
     *                                --vault-name
     *                                [--disabled {false, true}]
     *                                [--password]
     *                                [--policy]
     *                                [--tags]
     */
    ext_keyvault-preview_az_keyvault_certificate_import(): void {
    }

    /**
     * List certificates in a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate list --vault-name
     *                              [--include-pending]
     *                              [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_certificate_list(): void {
    }

    /**
     * Lists the deleted certificates in the specified vault currently available for recovery.
     *
     * Syntax: 
     *
     * az keyvault certificate list-deleted --vault-name
     *                                      [--include-pending]
     *                                      [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_certificate_list_deleted(): void {
    }

    /**
     * List the versions of a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate list-versions --name
     *                                       --vault-name
     *                                       [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_certificate_list_versions(): void {
    }

    /**
     * Permanently deletes the specified deleted certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate purge [--id]
     *                               [--name]
     *                               [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_certificate_purge(): void {
    }

    /**
     * Recovers the deleted certificate back to its current version under /certificates.
     *
     * Syntax: 
     *
     * az keyvault certificate recover [--id]
     *                                 [--name]
     *                                 [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_certificate_recover(): void {
    }

    /**
     * Updates the specified attributes associated with the given certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate set-attributes [--enabled {false, true}]
     *                                        [--id]
     *                                        [--name]
     *                                        [--policy]
     *                                        [--tags]
     *                                        [--vault-name]
     *                                        [--version]
     */
    ext_keyvault-preview_az_keyvault_certificate_set_attributes(): void {
    }

    /**
     * Gets information about a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate show [--id]
     *                              [--name]
     *                              [--vault-name]
     *                              [--version]
     */
    ext_keyvault-preview_az_keyvault_certificate_show(): void {
    }

    /**
     * Retrieves information about the specified deleted certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate show-deleted [--id]
     *                                      [--name]
     *                                      [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_certificate_show_deleted(): void {
    }
}

/** Manage keys. */
class ext_keyvault-preview_az_keyvault_key {
    /**
     * Request that a backup of the specified key be downloaded to the client.
     *
     * Syntax: 
     *
     * az keyvault key backup --file
     *                        [--id]
     *                        [--name]
     *                        [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_key_backup(): void {
    }

    /**
     * Create a new key, stores it, then returns key parameters and attributes to the client.
     *
     * Syntax: 
     *
     * az keyvault key create --name
     *                        --vault-name
     *                        [--curve {P-256, P-384, P-521, SECP256K1}]
     *                        [--disabled {false, true}]
     *                        [--expires]
     *                        [--kty {EC, EC-HSM, RSA, RSA-HSM, oct}]
     *                        [--not-before]
     *                        [--ops {decrypt, encrypt, sign, unwrapKey, verify, wrapKey}]
     *                        [--protection {hsm, software}]
     *                        [--size]
     *                        [--tags]
     */
    ext_keyvault-preview_az_keyvault_key_create(): void {
    }

    /**
     * Delete a key of any type from storage in Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key delete [--id]
     *                        [--name]
     *                        [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_key_delete(): void {
    }

    /**
     * Import a private key.
     *
     * Syntax: 
     *
     * az keyvault key import --name
     *                        --vault-name
     *                        [--byok-file]
     *                        [--disabled {false, true}]
     *                        [--expires]
     *                        [--not-before]
     *                        [--ops {decrypt, encrypt, sign, unwrapKey, verify, wrapKey}]
     *                        [--pem-file]
     *                        [--pem-password]
     *                        [--protection {hsm, software}]
     *                        [--tags]
     */
    ext_keyvault-preview_az_keyvault_key_import(): void {
    }

    /**
     * List keys in the specified Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key list --vault-name
     *                      [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_key_list(): void {
    }

    /**
     * List the deleted keys in the specified Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key list-deleted --vault-name
     *                              [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_key_list_deleted(): void {
    }

    /**
     * Retrieves a list of individual key versions with the same key name.
     *
     * Syntax: 
     *
     * az keyvault key list-versions --name
     *                               --vault-name
     *                               [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_key_list_versions(): void {
    }

    /**
     * Permanently delete the specified key.
     *
     * Syntax: 
     *
     * az keyvault key purge [--id]
     *                       [--name]
     *                       [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_key_purge(): void {
    }

    /**
     * Recover the deleted key to its latest version.
     *
     * Syntax: 
     *
     * az keyvault key recover [--id]
     *                         [--name]
     *                         [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_key_recover(): void {
    }

    /**
     * Restore a backed up key to a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key restore --file
     *                         --vault-name
     */
    ext_keyvault-preview_az_keyvault_key_restore(): void {
    }

    /**
     * The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key set-attributes [--enabled {false, true}]
     *                                [--expires]
     *                                [--id]
     *                                [--name]
     *                                [--not-before]
     *                                [--ops {decrypt, encrypt, sign, unwrapKey, verify, wrapKey}]
     *                                [--tags]
     *                                [--vault-name]
     *                                [--version]
     */
    ext_keyvault-preview_az_keyvault_key_set_attributes(): void {
    }

    /**
     * Gets the public part of a stored key.
     *
     * Syntax: 
     *
     * az keyvault key show [--id]
     *                      [--name]
     *                      [--vault-name]
     *                      [--version]
     */
    ext_keyvault-preview_az_keyvault_key_show(): void {
    }

    /**
     * Get the public part of a deleted key.
     *
     * Syntax: 
     *
     * az keyvault key show-deleted [--id]
     *                              [--name]
     *                              [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_key_show_deleted(): void {
    }
}

/** Manage vault network ACLs. */
class ext_keyvault-preview_az_keyvault_network_rule {
    /**
     * Add a network rule to the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule add --name
     *                              [--ip-address]
     *                              [--resource-group]
     *                              [--subnet]
     *                              [--vnet-name]
     */
    ext_keyvault-preview_az_keyvault_network_rule_add(): void {
    }

    /**
     * Lists the network rules from the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule list --name
     *                               [--resource-group]
     */
    ext_keyvault-preview_az_keyvault_network_rule_list(): void {
    }

    /**
     * Removes a network rule from the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule remove --name
     *                                 [--ip-address]
     *                                 [--resource-group]
     *                                 [--subnet]
     *                                 [--vnet-name]
     */
    ext_keyvault-preview_az_keyvault_network_rule_remove(): void {
    }
}

/** Manage secrets. */
class ext_keyvault-preview_az_keyvault_secret {
    /**
     * Backs up the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret backup --file-path
     *                           [--id]
     *                           [--name]
     *                           [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_secret_backup(): void {
    }

    /**
     * Deletes a secret from a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault secret delete [--id]
     *                           [--name]
     *                           [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_secret_delete(): void {
    }

    /**
     * Download a secret from a KeyVault.
     *
     * Syntax: 
     *
     * az keyvault secret download --file
     *                             [--encoding {ascii, base64, hex, utf-16be, utf-16le, utf-8}]
     *                             [--id]
     *                             [--name]
     *                             [--vault-name]
     *                             [--version]
     */
    ext_keyvault-preview_az_keyvault_secret_download(): void {
    }

    /**
     * List secrets in a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault secret list --vault-name
     *                         [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_secret_list(): void {
    }

    /**
     * Lists deleted secrets for the specified vault.
     *
     * Syntax: 
     *
     * az keyvault secret list-deleted --vault-name
     *                                 [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_secret_list_deleted(): void {
    }

    /**
     * List all versions of the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret list-versions --name
     *                                  --vault-name
     *                                  [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_secret_list_versions(): void {
    }

    /**
     * Permanently deletes the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret purge [--id]
     *                          [--name]
     *                          [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_secret_purge(): void {
    }

    /**
     * Recovers the deleted secret to the latest version.
     *
     * Syntax: 
     *
     * az keyvault secret recover [--id]
     *                            [--name]
     *                            [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_secret_recover(): void {
    }

    /**
     * Restores a backed up secret to a vault.
     *
     * Syntax: 
     *
     * az keyvault secret restore --file-path
     *                            --vault-name
     */
    ext_keyvault-preview_az_keyvault_secret_restore(): void {
    }

    /**
     * Create a secret (if one doesn't exist) or update a secret in a KeyVault.
     *
     * Syntax: 
     *
     * az keyvault secret set --name
     *                        --vault-name
     *                        [--description]
     *                        [--disabled {false, true}]
     *                        [--encoding {ascii, base64, hex, utf-16be, utf-16le, utf-8}]
     *                        [--expires]
     *                        [--file]
     *                        [--not-before]
     *                        [--tags]
     *                        [--value]
     */
    ext_keyvault-preview_az_keyvault_secret_set(): void {
    }

    /**
     * Updates the attributes associated with a specified secret in a given key vault.
     *
     * Syntax: 
     *
     * az keyvault secret set-attributes [--content-type]
     *                                   [--enabled {false, true}]
     *                                   [--expires]
     *                                   [--id]
     *                                   [--name]
     *                                   [--not-before]
     *                                   [--tags]
     *                                   [--vault-name]
     *                                   [--version]
     */
    ext_keyvault-preview_az_keyvault_secret_set_attributes(): void {
    }

    /**
     * Get a specified secret from a given key vault.
     *
     * Syntax: 
     *
     * az keyvault secret show [--id]
     *                         [--name]
     *                         [--vault-name]
     *                         [--version]
     */
    ext_keyvault-preview_az_keyvault_secret_show(): void {
    }

    /**
     * Gets the specified deleted secret.
     *
     * Syntax: 
     *
     * az keyvault secret show-deleted [--id]
     *                                 [--name]
     *                                 [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_secret_show_deleted(): void {
    }
}

/** Manage storage account SAS definitions. */
class ext_keyvault-preview_az_keyvault_storage_sas_definition {
    /**
     * Creates or updates a new SAS definition for the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition create --account-name
     *                                           --name
     *                                           --sas-type {account, service}
     *                                           --template-uri
     *                                           --validity-period
     *                                           --vault-name
     *                                           [--disabled {false, true}]
     *                                           [--tags]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_create(): void {
    }

    /**
     * Deletes a SAS definition from a specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition delete [--account-name]
     *                                           [--id]
     *                                           [--name]
     *                                           [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_delete(): void {
    }

    /**
     * List storage SAS definitions for the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition list --account-name
     *                                         --vault-name
     *                                         [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_list(): void {
    }

    /**
     * Lists deleted SAS definitions for the specified vault and storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition list-deleted --account-name
     *                                                 --vault-name
     *                                                 [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_list_deleted(): void {
    }

    /**
     * Recovers the deleted SAS definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition recover --account-name
     *                                            --name
     *                                            --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_recover(): void {
    }

    /**
     * Gets information about a SAS definition for the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition show [--account-name]
     *                                         [--id]
     *                                         [--name]
     *                                         [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_show(): void {
    }

    /**
     * Gets the specified deleted sas definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition show-deleted --account-name
     *                                                 --name
     *                                                 --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_show_deleted(): void {
    }

    /**
     * Updates the specified attributes associated with the given SAS definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition update [--account-name]
     *                                           [--disabled {false, true}]
     *                                           [--id]
     *                                           [--name]
     *                                           [--sas-type {account, service}]
     *                                           [--tags]
     *                                           [--template-uri]
     *                                           [--validity-period]
     *                                           [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_sas_definition_update(): void {
    }
}

/** Manage storage accounts. */
class ext_keyvault-preview_az_keyvault_storage {
    /**
     * Creates or updates a new storage account.
     *
     * Syntax: 
     *
     * az keyvault storage add --active-key-name
     *                         --name
     *                         --resource-id
     *                         --vault-name
     *                         [--auto-regenerate-key {false, true}]
     *                         [--disabled {false, true}]
     *                         [--regeneration-period]
     *                         [--tags]
     */
    ext_keyvault-preview_az_keyvault_storage_add(): void {
    }

    /**
     * Backs up the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage backup --file
     *                            [--id]
     *                            [--name]
     *                            [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_backup(): void {
    }

    /**
     * List storage accounts managed by the specified key vault.
     *
     * Syntax: 
     *
     * az keyvault storage list --vault-name
     *                          [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_storage_list(): void {
    }

    /**
     * Lists deleted storage accounts for the specified vault.
     *
     * Syntax: 
     *
     * az keyvault storage list-deleted --vault-name
     *                                  [--maxresults]
     */
    ext_keyvault-preview_az_keyvault_storage_list_deleted(): void {
    }

    /**
     * Permanently deletes the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage purge --name
     *                           --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_purge(): void {
    }

    /**
     * Recovers the deleted storage account.
     *
     * Syntax: 
     *
     * az keyvault storage recover --name
     *                             --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_recover(): void {
    }

    /**
     * Regenerates the specified key value for the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage regenerate-key --key-name
     *                                    [--id]
     *                                    [--name]
     *                                    [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_regenerate_key(): void {
    }

    /**
     * Remove a Key Vault managed Azure Storage Account and all associated SAS definitions. This operation requires the storage/delete permission.
     *
     * Syntax: 
     *
     * az keyvault storage remove [--id]
     *                            [--name]
     *                            [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_remove(): void {
    }

    /**
     * Restores a backed up storage account to a vault.
     *
     * Syntax: 
     *
     * az keyvault storage restore --file-path
     *                             --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_restore(): void {
    }

    /**
     * Gets information about a specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage show [--id]
     *                          [--name]
     *                          [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_show(): void {
    }

    /**
     * Gets the specified deleted storage account.
     *
     * Syntax: 
     *
     * az keyvault storage show-deleted --name
     *                                  --vault-name
     */
    ext_keyvault-preview_az_keyvault_storage_show_deleted(): void {
    }

    /**
     * Updates the specified attributes associated with the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage update [--active-key-name]
     *                            [--auto-regenerate-key {false, true}]
     *                            [--disabled {false, true}]
     *                            [--id]
     *                            [--name]
     *                            [--regeneration-period]
     *                            [--tags]
     *                            [--vault-name]
     */
    ext_keyvault-preview_az_keyvault_storage_update(): void {
    }
}

/** Safeguard and maintain control of keys, secrets, and certificates. */
class ext_keyvault-preview_az_keyvault {
    /**
     * Create a key vault.
     *
     * Syntax: 
     *
     * az keyvault create --name
     *                    --resource-group
     *                    [--bypass {AzureServices, None}]
     *                    [--default-action {Allow, Deny}]
     *                    [--enable-purge-protection {false, true}]
     *                    [--enable-soft-delete {false, true}]
     *                    [--enabled-for-deployment {false, true}]
     *                    [--enabled-for-disk-encryption {false, true}]
     *                    [--enabled-for-template-deployment {false, true}]
     *                    [--location]
     *                    [--no-self-perms {false, true}]
     *                    [--sku {premium, standard}]
     *                    [--tags]
     */
    ext_keyvault-preview_az_keyvault_create(): void {
    }

    /**
     * Delete a key vault.
     *
     * Syntax: 
     *
     * az keyvault delete --name
     *                    [--resource-group]
     */
    ext_keyvault-preview_az_keyvault_delete(): void {
    }

    /**
     * Delete security policy settings for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault delete-policy --name
     *                           [--object-id]
     *                           [--resource-group]
     *                           [--spn]
     *                           [--upn]
     */
    ext_keyvault-preview_az_keyvault_delete_policy(): void {
    }

    /**
     * List key vaults.
     *
     * Syntax: 
     *
     * az keyvault list [--resource-group]
     */
    ext_keyvault-preview_az_keyvault_list(): void {
    }

    /**
     * Get information about the deleted Vaults or HSMs in a subscription.
     *
     * Syntax: 
     *
     * az keyvault list-deleted
     */
    ext_keyvault-preview_az_keyvault_list_deleted(): void {
    }

    /**
     * Permanently delete the specified Vault or HSM. Aka Purges the deleted Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault purge --location
     *                   --name
     */
    ext_keyvault-preview_az_keyvault_purge(): void {
    }

    /**
     * Recover a key vault.
     *
     * Syntax: 
     *
     * az keyvault recover --location
     *                     --name
     *                     [--resource-group]
     */
    ext_keyvault-preview_az_keyvault_recover(): void {
    }

    /**
     * Update security policy settings for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault set-policy --name
     *                        [--certificate-permissions {backup, create, delete, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers, purge, recover, restore, setissuers, update}]
     *                        [--key-permissions {backup, create, decrypt, delete, encrypt, get, import, list, purge, recover, restore, sign, unwrapKey, update, verify, wrapKey}]
     *                        [--object-id]
     *                        [--resource-group]
     *                        [--secret-permissions {backup, delete, get, list, purge, recover, restore, set}]
     *                        [--spn]
     *                        [--storage-permissions {backup, delete, deletesas, get, getsas, list, listsas, purge, recover, regeneratekey, restore, set, setsas, update}]
     *                        [--upn]
     */
    ext_keyvault-preview_az_keyvault_set_policy(): void {
    }

    /**
     * Show details of a key vault.
     *
     * Syntax: 
     *
     * az keyvault show --name
     *                  [--resource-group]
     */
    ext_keyvault-preview_az_keyvault_show(): void {
    }

    /**
     * Update the properties of a key vault.
     *
     * Syntax: 
     *
     * az keyvault update --name
     *                    [--add]
     *                    [--bypass {AzureServices, None}]
     *                    [--default-action {Allow, Deny}]
     *                    [--enable-purge-protection {false, true}]
     *                    [--enable-soft-delete {false, true}]
     *                    [--enabled-for-deployment {false, true}]
     *                    [--enabled-for-disk-encryption {false, true}]
     *                    [--enabled-for-template-deployment {false, true}]
     *                    [--force-string]
     *                    [--remove]
     *                    [--resource-group]
     *                    [--set]
     */
    ext_keyvault-preview_az_keyvault_update(): void {
    }
}

/** */
class ext_kusto_az {
}

/** Kusto attached-database-configuration. */
class ext_kusto_az_kusto_attached_database_configuration {
    /**
     * Creates or updates an attached database configuration.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration create --attached-database-configuration-name
     *                                                 --cluster-name
     *                                                 --resource-group
     *                                                 [--cluster-resource-id]
     *                                                 [--database-name]
     *                                                 [--default-principals-modification-kind {None, Replace, Union}]
     *                                                 [--location]
     *                                                 [--no-wait]
     */
    ext_kusto_az_kusto_attached_database_configuration_create(): void {
    }

    /**
     * Deletes the attached database configuration with the given name.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration delete --attached-database-configuration-name
     *                                                 --cluster-name
     *                                                 --resource-group
     *                                                 [--no-wait]
     */
    ext_kusto_az_kusto_attached_database_configuration_delete(): void {
    }

    /**
     * Returns the list of attached database configurations of the given Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration list --cluster-name
     *                                               --resource-group
     */
    ext_kusto_az_kusto_attached_database_configuration_list(): void {
    }

    /**
     * Returns an attached database configuration.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration show --attached-database-configuration-name
     *                                               --cluster-name
     *                                               --resource-group
     */
    ext_kusto_az_kusto_attached_database_configuration_show(): void {
    }

    /**
     * Creates or updates an attached database configuration.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration update --attached-database-configuration-name
     *                                                 --cluster-name
     *                                                 --resource-group
     *                                                 [--cluster-resource-id]
     *                                                 [--database-name]
     *                                                 [--default-principals-modification-kind {None, Replace, Union}]
     *                                                 [--location]
     *                                                 [--no-wait]
     */
    ext_kusto_az_kusto_attached_database_configuration_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto attached-database-configuration is met.
     *
     * Syntax: 
     *
     * az kusto attached-database-configuration wait --attached-database-configuration-name
     *                                               --cluster-name
     *                                               --resource-group
     *                                               [--created]
     *                                               [--custom]
     *                                               [--deleted]
     *                                               [--exists]
     *                                               [--interval]
     *                                               [--timeout]
     *                                               [--updated]
     */
    ext_kusto_az_kusto_attached_database_configuration_wait(): void {
    }
}

/** Kusto cluster-principal-assignment. */
class ext_kusto_az_kusto_cluster_principal_assignment {
    /**
     * Create a Kusto cluster principalAssignment.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment create --cluster-name
     *                                              --principal-assignment-name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--principal-id]
     *                                              [--principal-type {App, Group, User}]
     *                                              [--role {AllDatabasesAdmin, AllDatabasesViewer}]
     *                                              [--tenant-id]
     */
    ext_kusto_az_kusto_cluster_principal_assignment_create(): void {
    }

    /**
     * Deletes a Kusto cluster principalAssignment.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment delete --cluster-name
     *                                              --principal-assignment-name
     *                                              --resource-group
     *                                              [--no-wait]
     */
    ext_kusto_az_kusto_cluster_principal_assignment_delete(): void {
    }

    /**
     * Lists all Kusto cluster principalAssignments.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment list --cluster-name
     *                                            --resource-group
     */
    ext_kusto_az_kusto_cluster_principal_assignment_list(): void {
    }

    /**
     * Gets a Kusto cluster principalAssignment.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment show --cluster-name
     *                                            --principal-assignment-name
     *                                            --resource-group
     */
    ext_kusto_az_kusto_cluster_principal_assignment_show(): void {
    }

    /**
     * Create a Kusto cluster principalAssignment.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment update --cluster-name
     *                                              --principal-assignment-name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--principal-id]
     *                                              [--principal-type {App, Group, User}]
     *                                              [--role {AllDatabasesAdmin, AllDatabasesViewer}]
     *                                              [--tenant-id]
     */
    ext_kusto_az_kusto_cluster_principal_assignment_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto cluster-principal-assignment is met.
     *
     * Syntax: 
     *
     * az kusto cluster-principal-assignment wait --cluster-name
     *                                            --principal-assignment-name
     *                                            --resource-group
     *                                            [--created]
     *                                            [--custom]
     *                                            [--deleted]
     *                                            [--exists]
     *                                            [--interval]
     *                                            [--timeout]
     *                                            [--updated]
     */
    ext_kusto_az_kusto_cluster_principal_assignment_wait(): void {
    }
}

/** Kusto cluster. */
class ext_kusto_az_kusto_cluster {
    /**
     * Add a list of language extensions that can run within KQL queries.
     *
     * Syntax: 
     *
     * az kusto cluster add-language-extension --cluster-name
     *                                         --resource-group
     *                                         [--no-wait]
     *                                         [--value]
     */
    ext_kusto_az_kusto_cluster_add_language_extension(): void {
    }

    /**
     * Create or update a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster create --cluster-name
     *                         --location
     *                         --resource-group
     *                         --sku
     *                         [--enable-disk-encryption {false, true}]
     *                         [--enable-double-encryption {false, true}]
     *                         [--enable-purge {false, true}]
     *                         [--enable-streaming-ingest {false, true}]
     *                         [--identity-type {None, SystemAssigned}]
     *                         [--identity-user-assigned-identities]
     *                         [--key-vault-properties]
     *                         [--no-wait]
     *                         [--optimized-autoscale]
     *                         [--tags]
     *                         [--trusted-external-tenants]
     *                         [--virtual-network-configuration]
     *                         [--zones]
     */
    ext_kusto_az_kusto_cluster_create(): void {
    }

    /**
     * Deletes a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster delete --cluster-name
     *                         --resource-group
     *                         [--no-wait]
     */
    ext_kusto_az_kusto_cluster_delete(): void {
    }

    /**
     * Detaches all followers of a database owned by this cluster.
     *
     * Syntax: 
     *
     * az kusto cluster detach-follower-database --attached-database-configuration-name
     *                                           --cluster-name
     *                                           --cluster-resource-id
     *                                           --resource-group
     *                                           [--no-wait]
     */
    ext_kusto_az_kusto_cluster_detach_follower_database(): void {
    }

    /**
     * Diagnoses network connectivity status for external resources on which the service is dependent on.
     *
     * Syntax: 
     *
     * az kusto cluster diagnose-virtual-network --cluster-name
     *                                           --resource-group
     *                                           [--no-wait]
     */
    ext_kusto_az_kusto_cluster_diagnose_virtual_network(): void {
    }

    /**
     * Lists all Kusto clusters within a subscription.
     *
     * Syntax: 
     *
     * az kusto cluster list [--resource-group]
     */
    ext_kusto_az_kusto_cluster_list(): void {
    }

    /**
     * Returns a list of databases that are owned by this cluster and were followed by another cluster.
     *
     * Syntax: 
     *
     * az kusto cluster list-follower-database --cluster-name
     *                                         --resource-group
     */
    ext_kusto_az_kusto_cluster_list_follower_database(): void {
    }

    /**
     * Returns a list of language extensions that can run within KQL queries.
     *
     * Syntax: 
     *
     * az kusto cluster list-language-extension --cluster-name
     *                                          --resource-group
     */
    ext_kusto_az_kusto_cluster_list_language_extension(): void {
    }

    /**
     * Lists eligible SKUs for Kusto resource provider.
     *
     * Syntax: 
     *
     * az kusto cluster list-sku [--cluster-name]
     *                           [--resource-group]
     */
    ext_kusto_az_kusto_cluster_list_sku(): void {
    }

    /**
     * Remove a list of language extensions that can run within KQL queries.
     *
     * Syntax: 
     *
     * az kusto cluster remove-language-extension --cluster-name
     *                                            --resource-group
     *                                            [--no-wait]
     *                                            [--value]
     */
    ext_kusto_az_kusto_cluster_remove_language_extension(): void {
    }

    /**
     * Gets a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster show --cluster-name
     *                       --resource-group
     */
    ext_kusto_az_kusto_cluster_show(): void {
    }

    /**
     * Starts a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster start --cluster-name
     *                        --resource-group
     *                        [--no-wait]
     */
    ext_kusto_az_kusto_cluster_start(): void {
    }

    /**
     * Stops a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster stop --cluster-name
     *                       --resource-group
     *                       [--no-wait]
     */
    ext_kusto_az_kusto_cluster_stop(): void {
    }

    /**
     * Update a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster update --cluster-name
     *                         --resource-group
     *                         [--enable-disk-encryption {false, true}]
     *                         [--enable-double-encryption {false, true}]
     *                         [--enable-purge {false, true}]
     *                         [--enable-streaming-ingest {false, true}]
     *                         [--identity-type {None, SystemAssigned}]
     *                         [--identity-user-assigned-identities]
     *                         [--key-vault-properties]
     *                         [--location]
     *                         [--no-wait]
     *                         [--optimized-autoscale]
     *                         [--sku]
     *                         [--tags]
     *                         [--trusted-external-tenants]
     *                         [--virtual-network-configuration]
     */
    ext_kusto_az_kusto_cluster_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto cluster is met.
     *
     * Syntax: 
     *
     * az kusto cluster wait --cluster-name
     *                       --resource-group
     *                       [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--interval]
     *                       [--timeout]
     *                       [--updated]
     */
    ext_kusto_az_kusto_cluster_wait(): void {
    }
}

/** Kusto data-connection sub group event-grid. */
class ext_kusto_az_kusto_data_connection_event_grid {
    /**
     * Creates or updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection event-grid create --cluster-name
     *                                            --data-connection-name
     *                                            --database-name
     *                                            --resource-group
     *                                            [--blob-storage-event-type {Microsoft.Storage.BlobCreated, Microsoft.Storage.BlobRenamed}]
     *                                            [--consumer-group]
     *                                            [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                            [--event-hub-resource-id]
     *                                            [--ignore-first-record {false, true}]
     *                                            [--location]
     *                                            [--mapping-rule-name]
     *                                            [--no-wait]
     *                                            [--storage-account-resource-id]
     *                                            [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_grid_create(): void {
    }

    /**
     * Checks that the data connection parameters are valid.
     *
     * Syntax: 
     *
     * az kusto data-connection event-grid data-connection-validation --cluster-name
     *                                                                --database-name
     *                                                                --resource-group
     *                                                                [--blob-storage-event-type {Microsoft.Storage.BlobCreated, Microsoft.Storage.BlobRenamed}]
     *                                                                [--consumer-group]
     *                                                                [--data-connection-name]
     *                                                                [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                                                [--event-hub-resource-id]
     *                                                                [--ignore-first-record {false, true}]
     *                                                                [--location]
     *                                                                [--mapping-rule-name]
     *                                                                [--no-wait]
     *                                                                [--storage-account-resource-id]
     *                                                                [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_grid_data_connection_validation(): void {
    }

    /**
     * Updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection event-grid update --cluster-name
     *                                            --data-connection-name
     *                                            --database-name
     *                                            --resource-group
     *                                            [--blob-storage-event-type {Microsoft.Storage.BlobCreated, Microsoft.Storage.BlobRenamed}]
     *                                            [--consumer-group]
     *                                            [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                            [--event-hub-resource-id]
     *                                            [--ignore-first-record {false, true}]
     *                                            [--location]
     *                                            [--mapping-rule-name]
     *                                            [--no-wait]
     *                                            [--storage-account-resource-id]
     *                                            [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_grid_update(): void {
    }
}

/** Kusto data-connection sub group event-hub. */
class ext_kusto_az_kusto_data_connection_event_hub {
    /**
     * Creates or updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection event-hub create --cluster-name
     *                                           --data-connection-name
     *                                           --database-name
     *                                           --resource-group
     *                                           [--compression {GZip, None}]
     *                                           [--consumer-group]
     *                                           [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                           [--event-hub-resource-id]
     *                                           [--event-system-properties]
     *                                           [--location]
     *                                           [--mapping-rule-name]
     *                                           [--no-wait]
     *                                           [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_hub_create(): void {
    }

    /**
     * Checks that the data connection parameters are valid.
     *
     * Syntax: 
     *
     * az kusto data-connection event-hub data-connection-validation --cluster-name
     *                                                               --database-name
     *                                                               --resource-group
     *                                                               [--compression {GZip, None}]
     *                                                               [--consumer-group]
     *                                                               [--data-connection-name]
     *                                                               [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                                               [--event-hub-resource-id]
     *                                                               [--event-system-properties]
     *                                                               [--location]
     *                                                               [--mapping-rule-name]
     *                                                               [--no-wait]
     *                                                               [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_hub_data_connection_validation(): void {
    }

    /**
     * Updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection event-hub update --cluster-name
     *                                           --data-connection-name
     *                                           --database-name
     *                                           --resource-group
     *                                           [--compression {GZip, None}]
     *                                           [--consumer-group]
     *                                           [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                           [--event-hub-resource-id]
     *                                           [--event-system-properties]
     *                                           [--location]
     *                                           [--mapping-rule-name]
     *                                           [--no-wait]
     *                                           [--table-name]
     */
    ext_kusto_az_kusto_data_connection_event_hub_update(): void {
    }
}

/** Kusto data-connection sub group iot-hub. */
class ext_kusto_az_kusto_data_connection_iot_hub {
    /**
     * Creates or updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection iot-hub create --cluster-name
     *                                         --data-connection-name
     *                                         --database-name
     *                                         --resource-group
     *                                         [--consumer-group]
     *                                         [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                         [--event-system-properties]
     *                                         [--iot-hub-resource-id]
     *                                         [--location]
     *                                         [--mapping-rule-name]
     *                                         [--no-wait]
     *                                         [--shared-access-policy-name]
     *                                         [--table-name]
     */
    ext_kusto_az_kusto_data_connection_iot_hub_create(): void {
    }

    /**
     * Checks that the data connection parameters are valid.
     *
     * Syntax: 
     *
     * az kusto data-connection iot-hub data-connection-validation --cluster-name
     *                                                             --database-name
     *                                                             --resource-group
     *                                                             [--consumer-group]
     *                                                             [--data-connection-name]
     *                                                             [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                                             [--event-system-properties]
     *                                                             [--iot-hub-resource-id]
     *                                                             [--location]
     *                                                             [--mapping-rule-name]
     *                                                             [--no-wait]
     *                                                             [--shared-access-policy-name]
     *                                                             [--table-name]
     */
    ext_kusto_az_kusto_data_connection_iot_hub_data_connection_validation(): void {
    }

    /**
     * Updates a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection iot-hub update --cluster-name
     *                                         --data-connection-name
     *                                         --database-name
     *                                         --resource-group
     *                                         [--consumer-group]
     *                                         [--data-format {APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT, W3CLOGFILE}]
     *                                         [--event-system-properties]
     *                                         [--iot-hub-resource-id]
     *                                         [--location]
     *                                         [--mapping-rule-name]
     *                                         [--no-wait]
     *                                         [--shared-access-policy-name]
     *                                         [--table-name]
     */
    ext_kusto_az_kusto_data_connection_iot_hub_update(): void {
    }
}

/** Kusto data-connection. */
class ext_kusto_az_kusto_data_connection {
    /**
     * Deletes the data connection with the given name.
     *
     * Syntax: 
     *
     * az kusto data-connection delete --cluster-name
     *                                 --data-connection-name
     *                                 --database-name
     *                                 --resource-group
     *                                 [--no-wait]
     */
    ext_kusto_az_kusto_data_connection_delete(): void {
    }

    /**
     * Returns the list of data connections of the given Kusto database.
     *
     * Syntax: 
     *
     * az kusto data-connection list --cluster-name
     *                               --database-name
     *                               --resource-group
     */
    ext_kusto_az_kusto_data_connection_list(): void {
    }

    /**
     * Returns a data connection.
     *
     * Syntax: 
     *
     * az kusto data-connection show --cluster-name
     *                               --data-connection-name
     *                               --database-name
     *                               --resource-group
     */
    ext_kusto_az_kusto_data_connection_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto data-connection is met.
     *
     * Syntax: 
     *
     * az kusto data-connection wait --cluster-name
     *                               --data-connection-name
     *                               --database-name
     *                               --resource-group
     *                               [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--interval]
     *                               [--timeout]
     *                               [--updated]
     */
    ext_kusto_az_kusto_data_connection_wait(): void {
    }
}

/** Kusto database-principal-assignment. */
class ext_kusto_az_kusto_database_principal_assignment {
    /**
     * Creates a Kusto cluster database principalAssignment.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment create --cluster-name
     *                                               --database-name
     *                                               --principal-assignment-name
     *                                               --resource-group
     *                                               [--no-wait]
     *                                               [--principal-id]
     *                                               [--principal-type {App, Group, User}]
     *                                               [--role {Admin, Ingestor, Monitor, UnrestrictedViewers, User, Viewer}]
     *                                               [--tenant-id]
     */
    ext_kusto_az_kusto_database_principal_assignment_create(): void {
    }

    /**
     * Deletes a Kusto principalAssignment.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment delete --cluster-name
     *                                               --database-name
     *                                               --principal-assignment-name
     *                                               --resource-group
     *                                               [--no-wait]
     */
    ext_kusto_az_kusto_database_principal_assignment_delete(): void {
    }

    /**
     * Lists all Kusto cluster database principalAssignments.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment list --cluster-name
     *                                             --database-name
     *                                             --resource-group
     */
    ext_kusto_az_kusto_database_principal_assignment_list(): void {
    }

    /**
     * Gets a Kusto cluster database principalAssignment.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment show --cluster-name
     *                                             --database-name
     *                                             --principal-assignment-name
     *                                             --resource-group
     */
    ext_kusto_az_kusto_database_principal_assignment_show(): void {
    }

    /**
     * Creates a Kusto cluster database principalAssignment.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment update --cluster-name
     *                                               --database-name
     *                                               --principal-assignment-name
     *                                               --resource-group
     *                                               [--no-wait]
     *                                               [--principal-id]
     *                                               [--principal-type {App, Group, User}]
     *                                               [--role {Admin, Ingestor, Monitor, UnrestrictedViewers, User, Viewer}]
     *                                               [--tenant-id]
     */
    ext_kusto_az_kusto_database_principal_assignment_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto database-principal-assignment is met.
     *
     * Syntax: 
     *
     * az kusto database-principal-assignment wait --cluster-name
     *                                             --database-name
     *                                             --principal-assignment-name
     *                                             --resource-group
     *                                             [--created]
     *                                             [--custom]
     *                                             [--deleted]
     *                                             [--exists]
     *                                             [--interval]
     *                                             [--timeout]
     *                                             [--updated]
     */
    ext_kusto_az_kusto_database_principal_assignment_wait(): void {
    }
}

/** Kusto database. */
class ext_kusto_az_kusto_database {
    /**
     * Add Database principals permissions.
     *
     * Syntax: 
     *
     * az kusto database add-principal --cluster-name
     *                                 --database-name
     *                                 --resource-group
     *                                 [--value]
     */
    ext_kusto_az_kusto_database_add_principal(): void {
    }

    /**
     * Creates or updates a database.
     *
     * Syntax: 
     *
     * az kusto database create --cluster-name
     *                          --database-name
     *                          --resource-group
     *                          [--no-wait]
     *                          [--read-only-following-database]
     *                          [--read-write-database]
     */
    ext_kusto_az_kusto_database_create(): void {
    }

    /**
     * Deletes the database with the given name.
     *
     * Syntax: 
     *
     * az kusto database delete --cluster-name
     *                          --database-name
     *                          --resource-group
     *                          [--no-wait]
     */
    ext_kusto_az_kusto_database_delete(): void {
    }

    /**
     * Returns the list of databases of the given Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto database list --cluster-name
     *                        --resource-group
     */
    ext_kusto_az_kusto_database_list(): void {
    }

    /**
     * Returns a list of database principals of the given Kusto cluster and database.
     *
     * Syntax: 
     *
     * az kusto database list-principal --cluster-name
     *                                  --database-name
     *                                  --resource-group
     */
    ext_kusto_az_kusto_database_list_principal(): void {
    }

    /**
     * Remove Database principals permissions.
     *
     * Syntax: 
     *
     * az kusto database remove-principal --cluster-name
     *                                    --database-name
     *                                    --resource-group
     *                                    [--value]
     */
    ext_kusto_az_kusto_database_remove_principal(): void {
    }

    /**
     * Returns a database.
     *
     * Syntax: 
     *
     * az kusto database show --cluster-name
     *                        --database-name
     *                        --resource-group
     */
    ext_kusto_az_kusto_database_show(): void {
    }

    /**
     * Updates a database.
     *
     * Syntax: 
     *
     * az kusto database update --cluster-name
     *                          --database-name
     *                          --resource-group
     *                          [--no-wait]
     *                          [--read-only-following-database]
     *                          [--read-write-database]
     */
    ext_kusto_az_kusto_database_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the kusto database is met.
     *
     * Syntax: 
     *
     * az kusto database wait --cluster-name
     *                        --database-name
     *                        --resource-group
     *                        [--created]
     *                        [--custom]
     *                        [--deleted]
     *                        [--exists]
     *                        [--interval]
     *                        [--timeout]
     *                        [--updated]
     */
    ext_kusto_az_kusto_database_wait(): void {
    }
}

/** Manage Azure Kusto resources. */
class ext_kusto_az_kusto {
}

/** */
class ext_log-analytics_az {
}

/** Commands for querying data in Log Analytics workspaces. */
class ext_log-analytics_az_monitor_log_analytics {
    /**
     * Query a Log Analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics query --analytics-query
     *                                --workspace
     *                                [--timespan]
     *                                [--workspaces]
     */
    ext_log-analytics_az_monitor_log_analytics_query(): void {
    }
}

/** Manage the Azure Monitor Service. */
class ext_log-analytics_az_monitor {
}

/** */
class ext_log-analytics-solution_az {
}

/** Commands to manage monitor log-analytics solution. */
class ext_log-analytics-solution_az_monitor_log_analytics_solution {
    /**
     * Create a log-analytics solution.
     *
     * Syntax: 
     *
     * az monitor log-analytics solution create --resource-group
     *                                          --solution-type
     *                                          --workspace
     *                                          [--name]
     *                                          [--no-wait]
     *                                          [--plan-product]
     *                                          [--plan-publisher]
     *                                          [--tags]
     */
    ext_log-analytics-solution_az_monitor_log_analytics_solution_create(): void {
    }

    /**
     * Delete a log-analytics solution.
     *
     * Syntax: 
     *
     * az monitor log-analytics solution delete --name
     *                                          --resource-group
     *                                          [--no-wait]
     *                                          [--yes]
     */
    ext_log-analytics-solution_az_monitor_log_analytics_solution_delete(): void {
    }

    /**
     * List all of the log-analytics solutions in the specified subscription or resource group.
     *
     * Syntax: 
     *
     * az monitor log-analytics solution list [--resource-group]
     */
    ext_log-analytics-solution_az_monitor_log_analytics_solution_list(): void {
    }

    /**
     * Get details about the specified log-analytics solution.
     *
     * Syntax: 
     *
     * az monitor log-analytics solution show --name
     *                                        --resource-group
     */
    ext_log-analytics-solution_az_monitor_log_analytics_solution_show(): void {
    }

    /**
     * Update an existing log-analytics solution.
     *
     * Syntax: 
     *
     * az monitor log-analytics solution update --name
     *                                          --resource-group
     *                                          [--no-wait]
     *                                          [--tags]
     */
    ext_log-analytics-solution_az_monitor_log_analytics_solution_update(): void {
    }
}

/** Manage Azure log analytics. */
class ext_log-analytics-solution_az_monitor_log_analytics {
}

/** Manage the Azure Monitor Service. */
class ext_log-analytics-solution_az_monitor {
}

/** */
class ext_logic_az {
}

/** Logic integration-account. */
class ext_logic_az_logic_integration_account {
    /**
     * Creates or updates an integration account.
     *
     * Syntax: 
     *
     * az logic integration-account create --name
     *                                     --resource-group
     *                                     [--integration-service-environment]
     *                                     [--location]
     *                                     [--sku]
     *                                     [--state {Completed, Deleted, Disabled, Enabled, NotSpecified, Suspended}]
     *                                     [--tags]
     */
    ext_logic_az_logic_integration_account_create(): void {
    }

    /**
     * Deletes an integration account.
     *
     * Syntax: 
     *
     * az logic integration-account delete --name
     *                                     --resource-group
     *                                     [--yes]
     */
    ext_logic_az_logic_integration_account_delete(): void {
    }

    /**
     * Import an integration account from a JSON file.
     *
     * Syntax: 
     *
     * az logic integration-account import --input-path
     *                                     --name
     *                                     --resource-group
     *                                     [--location]
     *                                     [--sku]
     *                                     [--tags]
     */
    ext_logic_az_logic_integration_account_import(): void {
    }

    /**
     * Gets a list of integration accounts by subscription.
     *
     * Syntax: 
     *
     * az logic integration-account list [--resource-group]
     *                                   [--top]
     */
    ext_logic_az_logic_integration_account_list(): void {
    }

    /**
     * Gets an integration account.
     *
     * Syntax: 
     *
     * az logic integration-account show --name
     *                                   --resource-group
     */
    ext_logic_az_logic_integration_account_show(): void {
    }

    /**
     * Updates an integration account.
     *
     * Syntax: 
     *
     * az logic integration-account update --name
     *                                     --resource-group
     *                                     [--integration-service-environment]
     *                                     [--sku]
     *                                     [--state {Completed, Deleted, Disabled, Enabled, NotSpecified, Suspended}]
     *                                     [--tags]
     */
    ext_logic_az_logic_integration_account_update(): void {
    }
}

/** Logic workflow. */
class ext_logic_az_logic_workflow {
    /**
     * Creates or updates a workflow using a JSON file for the defintion.
     *
     * Syntax: 
     *
     * az logic workflow create --definition
     *                          --location
     *                          --name
     *                          --resource-group
     *                          [--access-control]
     *                          [--endpoints-configuration]
     *                          [--integration-account]
     *                          [--integration-service-environment]
     *                          [--state {Completed, Deleted, Disabled, Enabled, NotSpecified, Suspended}]
     *                          [--tags]
     */
    ext_logic_az_logic_workflow_create(): void {
    }

    /**
     * Deletes a workflow.
     *
     * Syntax: 
     *
     * az logic workflow delete --name
     *                          --resource-group
     *                          [--yes]
     */
    ext_logic_az_logic_workflow_delete(): void {
    }

    /**
     * Gets a list of workflows by subscription.
     *
     * Syntax: 
     *
     * az logic workflow list [--filter]
     *                        [--resource-group]
     *                        [--top]
     */
    ext_logic_az_logic_workflow_list(): void {
    }

    /**
     * Gets a workflow.
     *
     * Syntax: 
     *
     * az logic workflow show --name
     *                        --resource-group
     */
    ext_logic_az_logic_workflow_show(): void {
    }

    /**
     * Updates a workflow.
     *
     * Syntax: 
     *
     * az logic workflow update --definition
     *                          --name
     *                          --resource-group
     *                          [--state {Completed, Deleted, Disabled, Enabled, NotSpecified, Suspended}]
     *                          [--tags]
     */
    ext_logic_az_logic_workflow_update(): void {
    }
}

/** */
class ext_logic_az_logic {
}

/** */
class ext_maintenance_az {
}

/** Manage Azure Maintenance update applications. */
class ext_maintenance_az_maintenance_applyupdate {
    /**
     * Creates a ApplyUpdate request.
     *
     * Syntax: 
     *
     * az maintenance applyupdate create --provider-name
     *                                   --resource-group
     *                                   --resource-name
     *                                   --resource-type
     *                                   [--resource-parent-name]
     *                                   [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_applyupdate_create(): void {
    }

    /**
     * Gets the state of a ApplyUpdate request.
     *
     * Syntax: 
     *
     * az maintenance applyupdate get --apply-update-name
     *                                --provider-name
     *                                --resource-group
     *                                --resource-name
     *                                --resource-type
     *                                [--resource-parent-name]
     *                                [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_applyupdate_get(): void {
    }

    /**
     * Shows the state of a ApplyUpdate request.
     *
     * Syntax: 
     *
     * az maintenance applyupdate show --apply-update-name
     *                                 --provider-name
     *                                 --resource-group
     *                                 --resource-name
     *                                 --resource-type
     *                                 [--resource-parent-name]
     *                                 [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_applyupdate_show(): void {
    }
}

/** Manage Azure Maintenance configuration assignment to resource. */
class ext_maintenance_az_maintenance_assignment {
    /**
     * Creates a Maintenance Assignment.
     *
     * Syntax: 
     *
     * az maintenance assignment create --configuration-assignment-name
     *                                  --location
     *                                  --maintenance-configuration-id
     *                                  --provider-name
     *                                  --resource-group
     *                                  --resource-name
     *                                  --resource-type
     *                                  [--resource-id]
     *                                  [--resource-parent-name]
     *                                  [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_assignment_create(): void {
    }

    /**
     * Delete a Maintenance Assignment.
     *
     * Syntax: 
     *
     * az maintenance assignment delete --configuration-assignment-name
     *                                  --provider-name
     *                                  --resource-group
     *                                  --resource-name
     *                                  --resource-type
     *                                  [--resource-parent-name]
     *                                  [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_assignment_delete(): void {
    }

    /**
     * Lists Maintenance Assignment.
     *
     * Syntax: 
     *
     * az maintenance assignment list --provider-name
     *                                --resource-group
     *                                --resource-name
     *                                --resource-type
     *                                [--resource-parent-name]
     *                                [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_assignment_list(): void {
    }
}

/** Manage Azure Maintenance configurations. */
class ext_maintenance_az_maintenance_configuration {
    /**
     * Creates a Maintenance Configuration.
     *
     * Syntax: 
     *
     * az maintenance configuration create --location
     *                                     --name
     *                                     --resource-group
     *                                     [--maintenanceScope]
     *                                     [--tags]
     */
    ext_maintenance_az_maintenance_configuration_create(): void {
    }

    /**
     * Deletes a Maintenance Configuration.
     *
     * Syntax: 
     *
     * az maintenance configuration delete --name
     *                                     --resource-group
     */
    ext_maintenance_az_maintenance_configuration_delete(): void {
    }

    /**
     * Get Configuration records within a subscription.
     *
     * Syntax: 
     *
     * az maintenance configuration list
     */
    ext_maintenance_az_maintenance_configuration_list(): void {
    }

    /**
     * Get the details of a Maintenance Configuration.
     *
     * Syntax: 
     *
     * az maintenance configuration show --name
     *                                   --resource-group
     */
    ext_maintenance_az_maintenance_configuration_show(): void {
    }

    /**
     * Creates a Maintenance Configuration.
     *
     * Syntax: 
     *
     * az maintenance configuration update --location
     *                                     --name
     *                                     --resource-group
     *                                     [--maintenanceScope]
     *                                     [--tags]
     */
    ext_maintenance_az_maintenance_configuration_update(): void {
    }
}

/** Azure Maintenance updates. */
class ext_maintenance_az_maintenance_update {
    /**
     * List pending a Maintenance Updates.
     *
     * Syntax: 
     *
     * az maintenance update list --provider-name
     *                            --resource-group
     *                            --resource-name
     *                            --resource-type
     *                            [--resource-parent-name]
     *                            [--resource-parent-type]
     */
    ext_maintenance_az_maintenance_update_list(): void {
    }
}

/** Manage Azure Maintenance. */
class ext_maintenance_az_maintenance {
}

/** */
class ext_managementpartner_az {
}

/** Allows the partners to associate a Microsoft Partner Network(MPN) ID to a user or service principal in the customer's Azure directory. */
class ext_managementpartner_az_managementpartner {
    /**
     * Associates a Microsoft Partner Network(MPN) ID to the current authenticated user or service principal.
     *
     * Syntax: 
     *
     * az managementpartner create --partner-id
     */
    ext_managementpartner_az_managementpartner_create(): void {
    }

    /**
     * Delete the Microsoft Partner Network(MPN) ID of the current authenticated user or service principal.
     *
     * Syntax: 
     *
     * az managementpartner delete --partner-id
     */
    ext_managementpartner_az_managementpartner_delete(): void {
    }

    /**
     * Gets the Microsoft Partner Network(MPN) ID of the current authenticated user or service principal.
     *
     * Syntax: 
     *
     * az managementpartner show [--partner-id]
     */
    ext_managementpartner_az_managementpartner_show(): void {
    }

    /**
     * Updates the Microsoft Partner Network(MPN) ID of the current authenticated user or service principal.
     *
     * Syntax: 
     *
     * az managementpartner update --partner-id
     */
    ext_managementpartner_az_managementpartner_update(): void {
    }
}

/** */
class ext_mesh_az {
}

/** Manage Service Fabric Mesh applications. */
class ext_mesh_az_mesh_app {
    /**
     * Delete a Service Fabric Mesh application.
     *
     * Syntax: 
     *
     * az mesh app delete --name
     *                    --resource-group
     *                    [--yes]
     */
    ext_mesh_az_mesh_app_delete(): void {
    }

    /**
     * List Service Fabric Mesh applications.
     *
     * Syntax: 
     *
     * az mesh app list [--resource-group]
     */
    ext_mesh_az_mesh_app_list(): void {
    }

    /**
     * Get the details of a Service Fabric Mesh application.
     *
     * Syntax: 
     *
     * az mesh app show --name
     *                  --resource-group
     */
    ext_mesh_az_mesh_app_show(): void {
    }
}

/** Examine the logs for a codepackage. */
class ext_mesh_az_mesh_code_package_log {
    /**
     * Examine the logs for a codepackage.
     *
     * Syntax: 
     *
     * az mesh code-package-log get --app-name
     *                              --code-package-name
     *                              --replica-name
     *                              --resource-group
     *                              --service-name
     *                              [--tail]
     */
    ext_mesh_az_mesh_code_package_log_get(): void {
    }
}

/** Manage Service Fabric Mesh deployments. */
class ext_mesh_az_mesh_deployment {
    /**
     * Create a Service Fabric Mesh application.
     *
     * Syntax: 
     *
     * az mesh deployment create --resource-group
     *                           [--input-yaml-files]
     *                           [--mode]
     *                           [--name]
     *                           [--no-wait]
     *                           [--parameters]
     *                           [--template-file]
     *                           [--template-uri]
     */
    ext_mesh_az_mesh_deployment_create(): void {
    }
}

/** Manage gateway resources. */
class ext_mesh_az_mesh_gateway {
    /**
     * Delete a gateway resource.
     *
     * Syntax: 
     *
     * az mesh gateway delete --name
     *                        --resource-group
     *                        [--yes]
     */
    ext_mesh_az_mesh_gateway_delete(): void {
    }

    /**
     * List gateway resources.
     *
     * Syntax: 
     *
     * az mesh gateway list [--resource-group]
     */
    ext_mesh_az_mesh_gateway_list(): void {
    }

    /**
     * Get the details of a gateway.
     *
     * Syntax: 
     *
     * az mesh gateway show --name
     *                      --resource-group
     */
    ext_mesh_az_mesh_gateway_show(): void {
    }
}

/** Generate Service Fabric Mesh deployment template. */
class ext_mesh_az_mesh_generate {
    /**
     * Generate a Service Fabric Mesh ARM deployment template from input yaml.
     *
     * Syntax: 
     *
     * az mesh generate armtemplate --input-yaml-files
     *                              [--parameters]
     */
    ext_mesh_az_mesh_generate_armtemplate(): void {
    }
}

/** Manage networks. */
class ext_mesh_az_mesh_network {
    /**
     * Delete a network.
     *
     * Syntax: 
     *
     * az mesh network delete --name
     *                        --resource-group
     *                        [--yes]
     */
    ext_mesh_az_mesh_network_delete(): void {
    }

    /**
     * List networks.
     *
     * Syntax: 
     *
     * az mesh network list [--resource-group]
     */
    ext_mesh_az_mesh_network_list(): void {
    }

    /**
     * Get the details of a network.
     *
     * Syntax: 
     *
     * az mesh network show --name
     *                      --resource-group
     */
    ext_mesh_az_mesh_network_show(): void {
    }
}

/** Manage secret resources. */
class ext_mesh_az_mesh_secret {
    /**
     * Delete a secret.
     *
     * Syntax: 
     *
     * az mesh secret delete --name
     *                       --resource-group
     *                       [--yes]
     */
    ext_mesh_az_mesh_secret_delete(): void {
    }

    /**
     * List Secrets.
     *
     * Syntax: 
     *
     * az mesh secret list [--resource-group]
     */
    ext_mesh_az_mesh_secret_list(): void {
    }

    /**
     * Get the details of a secret.
     *
     * Syntax: 
     *
     * az mesh secret show --name
     *                     --resource-group
     */
    ext_mesh_az_mesh_secret_show(): void {
    }
}

/** Manage secret values. */
class ext_mesh_az_mesh_secretvalue {
    /**
     * Delete a secret version.
     *
     * Syntax: 
     *
     * az mesh secretvalue delete --resource-group
     *                            --secret-resource-name
     *                            --version
     *                            [--yes]
     */
    ext_mesh_az_mesh_secretvalue_delete(): void {
    }

    /**
     * List Secrets versions.
     *
     * Syntax: 
     *
     * az mesh secretvalue list --resource-group
     *                          --secret-name
     */
    ext_mesh_az_mesh_secretvalue_list(): void {
    }

    /**
     * Get the details of a secret value.
     *
     * Syntax: 
     *
     * az mesh secretvalue show --resource-group
     *                          --secret-name
     *                          --version
     *                          [--show-value]
     */
    ext_mesh_az_mesh_secretvalue_show(): void {
    }
}

/** Manage Service Fabric Mesh service replicas. */
class ext_mesh_az_mesh_service_replica {
    /**
     * List the details of service replicas.
     *
     * Syntax: 
     *
     * az mesh service-replica list --app-name
     *                              --resource-group
     *                              --service-name
     */
    ext_mesh_az_mesh_service_replica_list(): void {
    }

    /**
     * Gets the given replica of the service of an application.
     *
     * Syntax: 
     *
     * az mesh service-replica show --app-name
     *                              --name
     *                              --resource-group
     *                              --service-name
     */
    ext_mesh_az_mesh_service_replica_show(): void {
    }
}

/** Manage Service Fabric Mesh services. */
class ext_mesh_az_mesh_service {
    /**
     * Lists all the service resources.
     *
     * Syntax: 
     *
     * az mesh service list --app-name
     *                      --resource-group
     */
    ext_mesh_az_mesh_service_list(): void {
    }

    /**
     * Get the details of a service.
     *
     * Syntax: 
     *
     * az mesh service show --app-name
     *                      --name
     *                      --resource-group
     */
    ext_mesh_az_mesh_service_show(): void {
    }
}

/** Manage volumes. */
class ext_mesh_az_mesh_volume {
    /**
     * Create a volume.
     *
     * Syntax: 
     *
     * az mesh volume create --location
     *                       --name
     *                       --resource-group
     *                       [--template-file]
     *                       [--template-uri]
     */
    ext_mesh_az_mesh_volume_create(): void {
    }

    /**
     * Delete a volume.
     *
     * Syntax: 
     *
     * az mesh volume delete --name
     *                       --resource-group
     *                       [--yes]
     */
    ext_mesh_az_mesh_volume_delete(): void {
    }

    /**
     * List volumes.
     *
     * Syntax: 
     *
     * az mesh volume list [--resource-group]
     */
    ext_mesh_az_mesh_volume_list(): void {
    }

    /**
     * Get the details of a volume.
     *
     * Syntax: 
     *
     * az mesh volume show --name
     *                     --resource-group
     */
    ext_mesh_az_mesh_volume_show(): void {
    }
}

/** (PREVIEW) Manage Azure Service Fabric Mesh Resources. */
class ext_mesh_az_mesh {
}

/** */
class ext_mixed-reality_az {
}

/** Manage developer keys of a Spatial Anchors Account. */
class ext_mixed-reality_az_spatial_anchors_account_key {
    /**
     * Renew one of the keys of a Spatial Anchors Account.
     *
     * Syntax: 
     *
     * az spatial-anchors-account key renew --key {primary, secondary}
     *                                      --name
     *                                      --resource-group
     */
    ext_mixed-reality_az_spatial_anchors_account_key_renew(): void {
    }

    /**
     * Show keys of a Spatial Anchors Account.
     *
     * Syntax: 
     *
     * az spatial-anchors-account key show --name
     *                                     --resource-group
     */
    ext_mixed-reality_az_spatial_anchors_account_key_show(): void {
    }
}

/** Manage Spatial Anchors Accounts. */
class ext_mixed-reality_az_spatial_anchors_account {
    /**
     * Create a Spatial Anchors Account.
     *
     * Syntax: 
     *
     * az spatial-anchors-account create --name
     *                                   --resource-group
     *                                   [--location]
     *                                   [--tags]
     */
    ext_mixed-reality_az_spatial_anchors_account_create(): void {
    }

    /**
     * Delete a Spatial Anchors Account.
     *
     * Syntax: 
     *
     * az spatial-anchors-account delete --name
     *                                   --resource-group
     */
    ext_mixed-reality_az_spatial_anchors_account_delete(): void {
    }

    /**
     * List Spatial Anchors Accounts.
     *
     * Syntax: 
     *
     * az spatial-anchors-account list [--resource-group]
     */
    ext_mixed-reality_az_spatial_anchors_account_list(): void {
    }

    /**
     * Show a Spatial Anchors Account.
     *
     * Syntax: 
     *
     * az spatial-anchors-account show --name
     *                                 --resource-group
     */
    ext_mixed-reality_az_spatial_anchors_account_show(): void {
    }
}

/** */
class ext_netappfiles-preview_az {
}

/** Manage Azure NetApp Files (ANF) Account Resources. */
class ext_netappfiles-preview_az_netappfiles_account {
    /**
     * Create a new Azure NetApp Files (ANF) account. Note that active directory can only be applied to an existing account (using set/update).
     *
     * Syntax: 
     *
     * az netappfiles account create --account-name
     *                               --location
     *                               --resource-group
     *                               [--active-directories]
     *                               [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_account_create(): void {
    }

    /**
     * Delete the specified ANF account.
     *
     * Syntax: 
     *
     * az netappfiles account delete --account-name
     *                               --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_account_delete(): void {
    }

    /**
     * List ANF accounts.
     *
     * Syntax: 
     *
     * az netappfiles account list --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_account_list(): void {
    }

    /**
     * Sets the tags or the active directory details for a specified ANF account. Sets the active directory property to exactly what is provided. If none is provided then the active directory is removed, i.e. provide empty [].
     *
     * Syntax: 
     *
     * az netappfiles account set --account-name
     *                            --location
     *                            --resource-group
     *                            [--active-directories]
     *                            [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_account_set(): void {
    }

    /**
     * Get the specified ANF account.
     *
     * Syntax: 
     *
     * az netappfiles account show --account-name
     *                             --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_account_show(): void {
    }

    /**
     * Set/modify the tags or the active directory details for a specified ANF account. Active directory settings are appended only - if none are present no change is made otherwise the active directory is replaced with that provided.
     *
     * Syntax: 
     *
     * az netappfiles account update --account-name
     *                               --location
     *                               --resource-group
     *                               [--active-directories]
     *                               [--add]
     *                               [--force-string]
     *                               [--remove]
     *                               [--set]
     *                               [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_account_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Mount Target Resources. */
class ext_netappfiles-preview_az_netappfiles_mount_target {
    /**
     * List the mount targets of an ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles mount-target list --account-name
     *                                  --pool-name
     *                                  --resource-group
     *                                  --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_mount_target_list(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Pool Resources. */
class ext_netappfiles-preview_az_netappfiles_pool {
    /**
     * Create a new Azure NetApp Files (ANF) pool.
     *
     * Syntax: 
     *
     * az netappfiles pool create --account-name
     *                            --location
     *                            --pool-name
     *                            --resource-group
     *                            --service-level
     *                            --size
     *                            [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_pool_create(): void {
    }

    /**
     * Delete the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool delete --account-name
     *                            --pool-name
     *                            --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_pool_delete(): void {
    }

    /**
     * L:ist the ANF pools for the specified account.
     *
     * Syntax: 
     *
     * az netappfiles pool list --account-name
     *                          --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_pool_list(): void {
    }

    /**
     * Get the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool show --account-name
     *                          --pool-name
     *                          --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_pool_show(): void {
    }

    /**
     * Update the tags of the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool update --account-name
     *                            --pool-name
     *                            --resource-group
     *                            [--add]
     *                            [--force-string]
     *                            [--location]
     *                            [--remove]
     *                            [--service-level]
     *                            [--set]
     *                            [--size]
     *                            [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_pool_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Snapshot Resources. */
class ext_netappfiles-preview_az_netappfiles_snapshot {
    /**
     * Create a new Azure NetApp Files (ANF) snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot create --account-name
     *                                --location
     *                                --pool-name
     *                                --resource-group
     *                                --snapshot-name
     *                                --volume-name
     *                                [--file-system-id]
     */
    ext_netappfiles-preview_az_netappfiles_snapshot_create(): void {
    }

    /**
     * Delete the specified ANF snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot delete --account-name
     *                                --pool-name
     *                                --resource-group
     *                                --snapshot-name
     *                                --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_snapshot_delete(): void {
    }

    /**
     * List the snapshots of an ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles snapshot list --account-name
     *                              --pool-name
     *                              --resource-group
     *                              --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_snapshot_list(): void {
    }

    /**
     * Get the specified ANF snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot show --account-name
     *                              --pool-name
     *                              --resource-group
     *                              --snapshot-name
     *                              --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_snapshot_show(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Volume Resources. */
class ext_netappfiles-preview_az_netappfiles_volume {
    /**
     * Create a new Azure NetApp Files (ANF) volume.
     *
     * Syntax: 
     *
     * az netappfiles volume create --account-name
     *                              --creation-token
     *                              --location
     *                              --pool-name
     *                              --resource-group
     *                              --service-level
     *                              --subnet-id
     *                              --usage-threshold
     *                              --volume-name
     *                              [--export-policy]
     *                              [--tags]
     */
    ext_netappfiles-preview_az_netappfiles_volume_create(): void {
    }

    /**
     * Delete the specified ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles volume delete --account-name
     *                              --pool-name
     *                              --resource-group
     *                              --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_volume_delete(): void {
    }

    /**
     * List the ANF Pools for the specified account.
     *
     * Syntax: 
     *
     * az netappfiles volume list --account-name
     *                            --pool-name
     *                            --resource-group
     */
    ext_netappfiles-preview_az_netappfiles_volume_list(): void {
    }

    /**
     * Get the specified ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles volume show --account-name
     *                            --pool-name
     *                            --resource-group
     *                            --volume-name
     */
    ext_netappfiles-preview_az_netappfiles_volume_show(): void {
    }

    /**
     * Update the specified ANF volume with the values provided. Unspecified values will remain unchanged.
     *
     * Syntax: 
     *
     * az netappfiles volume update --account-name
     *                              --pool-name
     *                              --resource-group
     *                              --volume-name
     *                              [--add]
     *                              [--export-policy]
     *                              [--force-string]
     *                              [--remove]
     *                              [--service-level]
     *                              [--set]
     *                              [--tags]
     *                              [--usage-threshold]
     */
    ext_netappfiles-preview_az_netappfiles_volume_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Resources. */
class ext_netappfiles-preview_az_netappfiles {
}

/** */
class ext_notification-hub_az {
}

/** Commands to manage notification hubs authorization rule. */
class ext_notification-hub_az_notification_hub_authorization_rule {
    /**
     * Create an authorization rule for a NotificationHub.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule create --name
     *                                               --namespace-name
     *                                               --notification-hub-name
     *                                               --resource-group
     *                                               --rights
     */
    ext_notification-hub_az_notification_hub_authorization_rule_create(): void {
    }

    /**
     * Delete a notificationHub authorization rule.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule delete --name
     *                                               --namespace-name
     *                                               --notification-hub-name
     *                                               --resource-group
     */
    ext_notification-hub_az_notification_hub_authorization_rule_delete(): void {
    }

    /**
     * List the authorization rules for a NotificationHub.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule list --namespace-name
     *                                             --notification-hub-name
     *                                             --resource-group
     */
    ext_notification-hub_az_notification_hub_authorization_rule_list(): void {
    }

    /**
     * List the Primary and Secondary ConnectionStrings to the NotificationHub.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule list-keys --name
     *                                                  --namespace-name
     *                                                  --notification-hub-name
     *                                                  --resource-group
     */
    ext_notification-hub_az_notification_hub_authorization_rule_list_keys(): void {
    }

    /**
     * Regenerate the Primary/Secondary Keys to the NotificationHub Authorization Rule.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule regenerate-keys --name
     *                                                        --namespace-name
     *                                                        --notification-hub-name
     *                                                        --policy-key {Primary Key, Secondary Key}
     *                                                        --resource-group
     */
    ext_notification-hub_az_notification_hub_authorization_rule_regenerate_keys(): void {
    }

    /**
     * Show an authorization rule for a NotificationHub by name.
     *
     * Syntax: 
     *
     * az notification-hub authorization-rule show --name
     *                                             --namespace-name
     *                                             --notification-hub-name
     *                                             --resource-group
     */
    ext_notification-hub_az_notification_hub_authorization_rule_show(): void {
    }
}

/** Commands to manage notification hub credential for Amazon(ADM). */
class ext_notification-hub_az_notification_hub_credential_adm {
    /**
     * Update credential for Amazon(ADM).
     *
     * Syntax: 
     *
     * az notification-hub credential adm update --client-id
     *                                           --client-secret
     *                                           --namespace-name
     *                                           --notification-hub-name
     *                                           --resource-group
     */
    ext_notification-hub_az_notification_hub_credential_adm_update(): void {
    }
}

/** Commands to manage notification hub credential for Apple(APNS). */
class ext_notification-hub_az_notification_hub_credential_apns {
    /**
     * Update credential for Apple(APNS).
     *
     * Syntax: 
     *
     * az notification-hub credential apns update --namespace-name
     *                                            --notification-hub-name
     *                                            --resource-group
     *                                            [--apns-certificate]
     *                                            [--app-id]
     *                                            [--app-name]
     *                                            [--certificate-key]
     *                                            [--endpoint]
     *                                            [--key-id]
     *                                            [--token]
     */
    ext_notification-hub_az_notification_hub_credential_apns_update(): void {
    }
}

/** Commands to manage notification hub credential for Baidu(Andrioid China). */
class ext_notification-hub_az_notification_hub_credential_baidu {
    /**
     * Update credential for Baidu(Andrioid China).
     *
     * Syntax: 
     *
     * az notification-hub credential baidu update --api-key
     *                                             --namespace-name
     *                                             --notification-hub-name
     *                                             --resource-group
     *                                             --secret-key
     */
    ext_notification-hub_az_notification_hub_credential_baidu_update(): void {
    }
}

/** Commands to manage notification hub credential for Google(GCM/FCM). */
class ext_notification-hub_az_notification_hub_credential_gcm {
    /**
     * Update the Google GCM/FCM API key.
     *
     * Syntax: 
     *
     * az notification-hub credential gcm update --google-api-key
     *                                           --namespace-name
     *                                           --notification-hub-name
     *                                           --resource-group
     */
    ext_notification-hub_az_notification_hub_credential_gcm_update(): void {
    }
}

/** Commands to manage notification hub credential for Windows Phone(MPNS). */
class ext_notification-hub_az_notification_hub_credential_mpns {
    /**
     * Update credential for Windows Phone(MPNS).
     *
     * Syntax: 
     *
     * az notification-hub credential mpns update --certificate-key
     *                                            --mpns-certificate
     *                                            --namespace-name
     *                                            --notification-hub-name
     *                                            --resource-group
     */
    ext_notification-hub_az_notification_hub_credential_mpns_update(): void {
    }
}

/** Commands to manage notification hub credential for Windows(WNS). */
class ext_notification-hub_az_notification_hub_credential_wns {
    /**
     * Update credential for Windows(WNS).
     *
     * Syntax: 
     *
     * az notification-hub credential wns update --namespace-name
     *                                           --notification-hub-name
     *                                           --package-sid
     *                                           --resource-group
     *                                           --secret-key
     */
    ext_notification-hub_az_notification_hub_credential_wns_update(): void {
    }
}

/** Commands to manage notification hub credential. */
class ext_notification-hub_az_notification_hub_credential {
    /**
     * List the PNS Credentials associated with a notification hub .
     *
     * Syntax: 
     *
     * az notification-hub credential list --namespace-name
     *                                     --notification-hub-name
     *                                     --resource-group
     */
    ext_notification-hub_az_notification_hub_credential_list(): void {
    }
}

/** Commands to manage notification hubs namespace authorization rule. */
class ext_notification-hub_az_notification_hub_namespace_authorization_rule {
    /**
     * Create an authorization rule for a namespace.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule create --name
     *                                                         --namespace-name
     *                                                         --resource-group
     *                                                         --rights
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_create(): void {
    }

    /**
     * Delete a namespace authorization rule.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule delete --name
     *                                                         --namespace-name
     *                                                         --resource-group
     *                                                         [--yes]
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_delete(): void {
    }

    /**
     * List the authorization rules for a namespace.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule list --namespace-name
     *                                                       --resource-group
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_list(): void {
    }

    /**
     * List the Primary and Secondary ConnectionStrings to the namespace.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule list-keys --name
     *                                                            --namespace-name
     *                                                            --resource-group
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_list_keys(): void {
    }

    /**
     * Regenerate the Primary/Secondary Keys to the Namespace Authorization Rule.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule regenerate-keys --name
     *                                                                  --namespace-name
     *                                                                  --policy-key {Primary Key, Secondary Key}
     *                                                                  --resource-group
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_regenerate_keys(): void {
    }

    /**
     * Show an authorization rule for a namespace by name.
     *
     * Syntax: 
     *
     * az notification-hub namespace authorization-rule show --name
     *                                                       --namespace-name
     *                                                       --resource-group
     */
    ext_notification-hub_az_notification_hub_namespace_authorization_rule_show(): void {
    }
}

/** Commands to manage notification hub namespace. */
class ext_notification-hub_az_notification_hub_namespace {
    /**
     * Check the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
     *
     * Syntax: 
     *
     * az notification-hub namespace check-availability --name
     */
    ext_notification-hub_az_notification_hub_namespace_check_availability(): void {
    }

    /**
     * Create a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
     *
     * Syntax: 
     *
     * az notification-hub namespace create --name
     *                                      --resource-group
     *                                      --sku {Basic, Free, Standard}
     *                                      [--location]
     *                                      [--tags]
     */
    ext_notification-hub_az_notification_hub_namespace_create(): void {
    }

    /**
     * Delete an existing namespace. This operation also removes all associated notification hubs under the namespace.
     *
     * Syntax: 
     *
     * az notification-hub namespace delete --name
     *                                      --resource-group
     *                                      [--no-wait]
     *                                      [--yes]
     */
    ext_notification-hub_az_notification_hub_namespace_delete(): void {
    }

    /**
     * List available namespaces.
     *
     * Syntax: 
     *
     * az notification-hub namespace list [--resource-group]
     */
    ext_notification-hub_az_notification_hub_namespace_list(): void {
    }

    /**
     * Return the description for the specified namespace.
     *
     * Syntax: 
     *
     * az notification-hub namespace show --name
     *                                    --resource-group
     */
    ext_notification-hub_az_notification_hub_namespace_show(): void {
    }

    /**
     * Update a service namespace. The namespace's resource manifest is immutable and cannot be modified.
     *
     * Syntax: 
     *
     * az notification-hub namespace update --name
     *                                      --resource-group
     *                                      [--sku {Basic, Free, Standard}]
     *                                      [--tags]
     */
    ext_notification-hub_az_notification_hub_namespace_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Notification Hub Namesapce is met.
     *
     * Syntax: 
     *
     * az notification-hub namespace wait --name
     *                                    --resource-group
     *                                    [--created]
     *                                    [--custom]
     *                                    [--deleted]
     *                                    [--exists]
     *                                    [--interval]
     *                                    [--timeout]
     *                                    [--updated]
     */
    ext_notification-hub_az_notification_hub_namespace_wait(): void {
    }
}

/** Manage Notification Hubs. */
class ext_notification-hub_az_notification_hub {
    /**
     * Check the availability of the given notificationHub in a namespace.
     *
     * Syntax: 
     *
     * az notification-hub check-availability --name
     *                                        --namespace-name
     *                                        --resource-group
     */
    ext_notification-hub_az_notification_hub_check_availability(): void {
    }

    /**
     * Create a NotificationHub in a namespace.
     *
     * Syntax: 
     *
     * az notification-hub create --location
     *                            --name
     *                            --namespace-name
     *                            --resource-group
     *                            [--registration-ttl]
     *                            [--tags]
     */
    ext_notification-hub_az_notification_hub_create(): void {
    }

    /**
     * Delete a notification hub associated with a namespace.
     *
     * Syntax: 
     *
     * az notification-hub delete --name
     *                            --namespace-name
     *                            --resource-group
     *                            [--yes]
     */
    ext_notification-hub_az_notification_hub_delete(): void {
    }

    /**
     * List the notification hubs associated with a namespace.
     *
     * Syntax: 
     *
     * az notification-hub list --namespace-name
     *                          --resource-group
     */
    ext_notification-hub_az_notification_hub_list(): void {
    }

    /**
     * Show the notification hub information.
     *
     * Syntax: 
     *
     * az notification-hub show --name
     *                          --namespace-name
     *                          --resource-group
     */
    ext_notification-hub_az_notification_hub_show(): void {
    }

    /**
     * Test send a push notification.
     *
     * Syntax: 
     *
     * az notification-hub test-send --namespace-name
     *                               --notification-format {apple, baidu, gcm, template, windows, windowsphone}
     *                               --notification-hub-name
     *                               --resource-group
     *                               [--message]
     *                               [--payload]
     *                               [--tag]
     *                               [--title]
     */
    ext_notification-hub_az_notification_hub_test_send(): void {
    }

    /**
     * Update a Notification Hub in a namespace.
     *
     * Syntax: 
     *
     * az notification-hub update --name
     *                            --namespace-name
     *                            --resource-group
     *                            [--tags]
     */
    ext_notification-hub_az_notification_hub_update(): void {
    }
}

/** */
class ext_peering_az {
}

/** Peering asn. */
class ext_peering_az_peering_asn {
    /**
     * Creates a new peer ASN or updates an existing peer ASN with the specified name under the given subscription.
     *
     * Syntax: 
     *
     * az peering asn create --peer-asn-name
     *                       [--peer-asn]
     *                       [--peer-contact-detail]
     *                       [--peer-name]
     *                       [--validation-state {Approved, Failed, None, Pending}]
     */
    ext_peering_az_peering_asn_create(): void {
    }

    /**
     * Deletes an existing peer ASN with the specified name under the given subscription.
     *
     * Syntax: 
     *
     * az peering asn delete --peer-asn-name
     */
    ext_peering_az_peering_asn_delete(): void {
    }

    /**
     * Lists all of the peer ASNs under the given subscription.
     *
     * Syntax: 
     *
     * az peering asn list
     */
    ext_peering_az_peering_asn_list(): void {
    }

    /**
     * Gets the peer ASN with the specified name under the given subscription.
     *
     * Syntax: 
     *
     * az peering asn show --peer-asn-name
     */
    ext_peering_az_peering_asn_show(): void {
    }
}

/** Peering legacy. */
class ext_peering_az_peering_legacy {
    /**
     * Lists all of the legacy peerings under the given subscription matching the specified kind and location.
     *
     * Syntax: 
     *
     * az peering legacy list --kind {Direct, Exchange}
     *                        --peering-location
     *                        [--asn]
     */
    ext_peering_az_peering_legacy_list(): void {
    }
}

/** Peering location. */
class ext_peering_az_peering_location {
    /**
     * Lists all of the available peering locations for the specified kind of peering.
     *
     * Syntax: 
     *
     * az peering location list --kind {Direct, Exchange}
     *                          [--direct-peering-type {Cdn, Edge, Internal, Ix, IxRs, Transit}]
     */
    ext_peering_az_peering_location_list(): void {
    }
}

/** Peering peering. */
class ext_peering_az_peering_peering {
    /**
     * Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering peering create --kind {Direct, Exchange}
     *                           --location
     *                           --peering-name
     *                           --resource-group
     *                           --sku
     *                           [--direct]
     *                           [--exchange]
     *                           [--peering-location]
     *                           [--tags]
     */
    ext_peering_az_peering_peering_create(): void {
    }

    /**
     * Deletes an existing peering with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering peering delete --peering-name
     *                           --resource-group
     */
    ext_peering_az_peering_peering_delete(): void {
    }

    /**
     * Lists all of the peerings under the given subscription.
     *
     * Syntax: 
     *
     * az peering peering list [--resource-group]
     */
    ext_peering_az_peering_peering_list(): void {
    }

    /**
     * Gets an existing peering with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering peering show --peering-name
     *                         --resource-group
     */
    ext_peering_az_peering_peering_show(): void {
    }

    /**
     * Updates tags for a peering with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering peering update --peering-name
     *                           --resource-group
     *                           [--tags]
     */
    ext_peering_az_peering_peering_update(): void {
    }
}

/** Peering received-route. */
class ext_peering_az_peering_received_route {
    /**
     * Lists the prefixes received over the specified peering under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering received-route list --peering-name
     *                                --resource-group
     *                                [--as-path]
     *                                [--origin-as-validation-state]
     *                                [--prefix]
     *                                [--rpki-validation-state]
     *                                [--skip-token]
     */
    ext_peering_az_peering_received_route_list(): void {
    }
}

/** Peering registered-asn. */
class ext_peering_az_peering_registered_asn {
    /**
     * Creates a new registered ASN with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-asn create --peering-name
     *                                  --registered-asn-name
     *                                  --resource-group
     *                                  [--asn]
     */
    ext_peering_az_peering_registered_asn_create(): void {
    }

    /**
     * Deletes an existing registered ASN with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-asn delete --peering-name
     *                                  --registered-asn-name
     *                                  --resource-group
     */
    ext_peering_az_peering_registered_asn_delete(): void {
    }

    /**
     * Lists all registered ASNs under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-asn list --peering-name
     *                                --resource-group
     */
    ext_peering_az_peering_registered_asn_list(): void {
    }

    /**
     * Gets an existing registered ASN with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-asn show --peering-name
     *                                --registered-asn-name
     *                                --resource-group
     */
    ext_peering_az_peering_registered_asn_show(): void {
    }

    /**
     * Creates a new registered ASN with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-asn update --peering-name
     *                                  --registered-asn-name
     *                                  --resource-group
     *                                  [--asn]
     */
    ext_peering_az_peering_registered_asn_update(): void {
    }
}

/** Peering registered-prefix. */
class ext_peering_az_peering_registered_prefix {
    /**
     * Creates a new registered prefix with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-prefix create --peering-name
     *                                     --registered-prefix-name
     *                                     --resource-group
     *                                     [--prefix]
     */
    ext_peering_az_peering_registered_prefix_create(): void {
    }

    /**
     * Deletes an existing registered prefix with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-prefix delete --peering-name
     *                                     --registered-prefix-name
     *                                     --resource-group
     */
    ext_peering_az_peering_registered_prefix_delete(): void {
    }

    /**
     * Lists all registered prefixes under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-prefix list --peering-name
     *                                   --resource-group
     */
    ext_peering_az_peering_registered_prefix_list(): void {
    }

    /**
     * Gets an existing registered prefix with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-prefix show --peering-name
     *                                   --registered-prefix-name
     *                                   --resource-group
     */
    ext_peering_az_peering_registered_prefix_show(): void {
    }

    /**
     * Creates a new registered prefix with the specified name under the given subscription, resource group and peering.
     *
     * Syntax: 
     *
     * az peering registered-prefix update --peering-name
     *                                     --registered-prefix-name
     *                                     --resource-group
     *                                     [--prefix]
     */
    ext_peering_az_peering_registered_prefix_update(): void {
    }
}

/** Peering service country. */
class ext_peering_az_peering_service_country {
    /**
     * Lists all of the available countries for peering service.
     *
     * Syntax: 
     *
     * az peering service country list
     */
    ext_peering_az_peering_service_country_list(): void {
    }
}

/** Peering service location. */
class ext_peering_az_peering_service_location {
    /**
     * Lists all of the available locations for peering service.
     *
     * Syntax: 
     *
     * az peering service location list [--country]
     */
    ext_peering_az_peering_service_location_list(): void {
    }
}

/** Peering service prefix. */
class ext_peering_az_peering_service_prefix {
    /**
     * Creates a new prefix with the specified name under the given subscription, resource group and peering service.
     *
     * Syntax: 
     *
     * az peering service prefix create --peering-service-name
     *                                  --prefix-name
     *                                  --resource-group
     *                                  [--peering-service-prefix-key]
     *                                  [--prefix]
     */
    ext_peering_az_peering_service_prefix_create(): void {
    }

    /**
     * Deletes an existing prefix with the specified name under the given subscription, resource group and peering service.
     *
     * Syntax: 
     *
     * az peering service prefix delete --peering-service-name
     *                                  --prefix-name
     *                                  --resource-group
     */
    ext_peering_az_peering_service_prefix_delete(): void {
    }

    /**
     * Lists all prefixes under the given subscription, resource group and peering service.
     *
     * Syntax: 
     *
     * az peering service prefix list --peering-service-name
     *                                --resource-group
     *                                [--expand]
     */
    ext_peering_az_peering_service_prefix_list(): void {
    }

    /**
     * Gets an existing prefix with the specified name under the given subscription, resource group and peering service.
     *
     * Syntax: 
     *
     * az peering service prefix show --peering-service-name
     *                                --prefix-name
     *                                --resource-group
     *                                [--expand]
     */
    ext_peering_az_peering_service_prefix_show(): void {
    }

    /**
     * Creates a new prefix with the specified name under the given subscription, resource group and peering service.
     *
     * Syntax: 
     *
     * az peering service prefix update --peering-service-name
     *                                  --prefix-name
     *                                  --resource-group
     *                                  [--peering-service-prefix-key]
     *                                  [--prefix]
     */
    ext_peering_az_peering_service_prefix_update(): void {
    }
}

/** Peering service provider. */
class ext_peering_az_peering_service_provider {
    /**
     * Lists all of the available peering service locations for the specified kind of peering.
     *
     * Syntax: 
     *
     * az peering service provider list
     */
    ext_peering_az_peering_service_provider_list(): void {
    }
}

/** Peering service. */
class ext_peering_az_peering_service {
    /**
     * Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering service create --location
     *                           --peering-service-name
     *                           --resource-group
     *                           [--peering-service-location]
     *                           [--peering-service-provider]
     *                           [--sku]
     *                           [--tags]
     */
    ext_peering_az_peering_service_create(): void {
    }

    /**
     * Deletes an existing peering service with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering service delete --peering-service-name
     *                           --resource-group
     */
    ext_peering_az_peering_service_delete(): void {
    }

    /**
     * Lists all of the peerings under the given subscription.
     *
     * Syntax: 
     *
     * az peering service list [--resource-group]
     */
    ext_peering_az_peering_service_list(): void {
    }

    /**
     * Gets an existing peering service with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering service show --peering-service-name
     *                         --resource-group
     */
    ext_peering_az_peering_service_show(): void {
    }

    /**
     * Updates tags for a peering service with the specified name under the given subscription and resource group.
     *
     * Syntax: 
     *
     * az peering service update --peering-service-name
     *                           --resource-group
     *                           [--tags]
     */
    ext_peering_az_peering_service_update(): void {
    }
}

/** Manage peering. */
class ext_peering_az_peering {
}

/** */
class ext_portal_az {
}

/** Manage portal dashboards. */
class ext_portal_az_portal_dashboard {
    /**
     * Creates or updates a dashboard.
     *
     * Syntax: 
     *
     * az portal dashboard create --input-path
     *                            --name
     *                            --resource-group
     *                            [--location]
     *                            [--tags]
     */
    ext_portal_az_portal_dashboard_create(): void {
    }

    /**
     * Deletes a dashboard.
     *
     * Syntax: 
     *
     * az portal dashboard delete --name
     *                            --resource-group
     *                            [--yes]
     */
    ext_portal_az_portal_dashboard_delete(): void {
    }

    /**
     * Imports a dashboard from a JSON file.
     *
     * Syntax: 
     *
     * az portal dashboard import --input-path
     *                            --resource-group
     *                            [--name]
     */
    ext_portal_az_portal_dashboard_import(): void {
    }

    /**
     * Lists the dashboards within a subscription or resource group.
     *
     * Syntax: 
     *
     * az portal dashboard list [--resource-group]
     */
    ext_portal_az_portal_dashboard_list(): void {
    }

    /**
     * Gets details for a single dashboard.
     *
     * Syntax: 
     *
     * az portal dashboard show --name
     *                          --resource-group
     */
    ext_portal_az_portal_dashboard_show(): void {
    }

    /**
     * Updates an existing dashboard.
     *
     * Syntax: 
     *
     * az portal dashboard update --input-path
     *                            --name
     *                            --resource-group
     */
    ext_portal_az_portal_dashboard_update(): void {
    }
}

/** */
class ext_portal_az_portal {
}

/** */
class ext_powerbidedicated_az {
}

/** Manage PowerBI embedded capacity. */
class ext_powerbidedicated_az_powerbi_embedded_capacity {
    /**
     * Create a new PowerBI embedded capacity.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity create --location
     *                                     --name
     *                                     --resource-group
     *                                     --sku-name {A1, A2, A3, A4, A5, A6}
     *                                     [--administration-members]
     *                                     [--no-wait]
     *                                     [--sku-tier {PBIE_Azure}]
     *                                     [--tags]
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_create(): void {
    }

    /**
     * Delete the specified PowerBI embedded capacity.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity delete --name
     *                                     --resource-group
     *                                     [--no-wait]
     *                                     [--yes]
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_delete(): void {
    }

    /**
     * List all the embedded capacities for the given resource group.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity list [--resource-group]
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_list(): void {
    }

    /**
     * Get details about the specified PowerBI embedded capacity.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity show --name
     *                                   --resource-group
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_show(): void {
    }

    /**
     * Update the specified PowerBI embedded capacity.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity update --name
     *                                     --resource-group
     *                                     [--administration-members]
     *                                     [--no-wait]
     *                                     [--sku-name {A1, A2, A3, A4, A5, A6}]
     *                                     [--sku-tier {PBIE_Azure}]
     *                                     [--tags]
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of PowerBI embedded capacity is met.
     *
     * Syntax: 
     *
     * az powerbi embedded-capacity wait --name
     *                                   --resource-group
     *                                   [--created]
     *                                   [--custom]
     *                                   [--deleted]
     *                                   [--exists]
     *                                   [--interval]
     *                                   [--timeout]
     *                                   [--updated]
     */
    ext_powerbidedicated_az_powerbi_embedded_capacity_wait(): void {
    }
}

/** Manage PowerBI resources. */
class ext_powerbidedicated_az_powerbi {
}

/** */
class ext_privatedns_az {
}

/** Manage virtual network links to the specified Private DNS zone. */
class ext_privatedns_az_network_private_dns_link_vnet {
    /**
     * Create a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet create --name
     *                                         --registration-enabled {false, true}
     *                                         --resource-group
     *                                         --virtual-network
     *                                         --zone-name
     *                                         [--no-wait]
     *                                         [--tags]
     */
    ext_privatedns_az_network_private_dns_link_vnet_create(): void {
    }

    /**
     * Delete a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet delete --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--yes]
     */
    ext_privatedns_az_network_private_dns_link_vnet_delete(): void {
    }

    /**
     * List the virtual network links to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet list --resource-group
     *                                       --zone-name
     *                                       [--top]
     */
    ext_privatedns_az_network_private_dns_link_vnet_list(): void {
    }

    /**
     * Get a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet show --name
     *                                       --resource-group
     *                                       --zone-name
     */
    ext_privatedns_az_network_private_dns_link_vnet_show(): void {
    }

    /**
     * Update a virtual network link's properties. Does not modify virtual network within the link.
     *
     * Syntax: 
     *
     * az network private-dns link vnet update --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--registration-enabled {false, true}]
     *                                         [--remove]
     *                                         [--set]
     *                                         [--tags]
     */
    ext_privatedns_az_network_private_dns_link_vnet_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the virtual network link to the specified Private DNS zone is met.
     *
     * Syntax: 
     *
     * az network private-dns link vnet wait --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--timeout]
     *                                       [--updated]
     */
    ext_privatedns_az_network_private_dns_link_vnet_wait(): void {
    }
}

/** Manage Private DNS links. */
class ext_privatedns_az_network_private_dns_link {
}

/** Manage Private DNS A records. */
class ext_privatedns_az_network_private_dns_record_set_a {
    /**
     * Add an A record.
     *
     * Syntax: 
     *
     * az network private-dns record-set a add-record --ipv4-address
     *                                                --record-set-name
     *                                                --resource-group
     *                                                --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_a_add_record(): void {
    }

    /**
     * Create an empty A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a create --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--metadata]
     *                                            [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_a_create(): void {
    }

    /**
     * Delete an A record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set a delete --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--if-match]
     *                                            [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_a_delete(): void {
    }

    /**
     * List all A record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set a list --resource-group
     *                                          --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_a_list(): void {
    }

    /**
     * Remove an A record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a remove-record --ipv4-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_a_remove_record(): void {
    }

    /**
     * Get the details of an A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a show --name
     *                                          --resource-group
     *                                          --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_a_show(): void {
    }

    /**
     * Update an A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a update --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--add]
     *                                            [--force-string]
     *                                            [--if-match]
     *                                            [--metadata]
     *                                            [--remove]
     *                                            [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_a_update(): void {
    }
}

/** Manage Private DNS AAAA records. */
class ext_privatedns_az_network_private_dns_record_set_aaaa {
    /**
     * Add an AAAA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa add-record --ipv6-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_add_record(): void {
    }

    /**
     * Create an empty AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa create --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--metadata]
     *                                               [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_create(): void {
    }

    /**
     * Delete an AAAA record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa delete --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--if-match]
     *                                               [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_delete(): void {
    }

    /**
     * List all AAAA record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa list --resource-group
     *                                             --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_list(): void {
    }

    /**
     * Remove AAAA record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa remove-record --ipv6-address
     *                                                      --record-set-name
     *                                                      --resource-group
     *                                                      --zone-name
     *                                                      [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_remove_record(): void {
    }

    /**
     * Get the details of an AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa show --name
     *                                             --resource-group
     *                                             --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_show(): void {
    }

    /**
     * Update an AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa update --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--add]
     *                                               [--force-string]
     *                                               [--if-match]
     *                                               [--metadata]
     *                                               [--remove]
     *                                               [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_aaaa_update(): void {
    }
}

/** Manage Private DNS CNAME records. */
class ext_privatedns_az_network_private_dns_record_set_cname {
    /**
     * Create an empty CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname create --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--metadata]
     *                                                [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_cname_create(): void {
    }

    /**
     * Delete a CNAME record set and its associated record.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname delete --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--if-match]
     *                                                [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_cname_delete(): void {
    }

    /**
     * List the CNAME record set in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname list --resource-group
     *                                              --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_cname_list(): void {
    }

    /**
     * Remove a CNAME record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname remove-record --cname
     *                                                       --record-set-name
     *                                                       --resource-group
     *                                                       --zone-name
     *                                                       [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_cname_remove_record(): void {
    }

    /**
     * Set the value of a CNAME record.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname set-record --cname
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_cname_set_record(): void {
    }

    /**
     * Get the details of a CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname show --name
     *                                              --resource-group
     *                                              --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_cname_show(): void {
    }

    /**
     * Update a CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname update --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--add]
     *                                                [--force-string]
     *                                                [--if-match]
     *                                                [--metadata]
     *                                                [--remove]
     *                                                [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_cname_update(): void {
    }
}

/** Manage Private DNS MX records. */
class ext_privatedns_az_network_private_dns_record_set_mx {
    /**
     * Add an MX record.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx add-record --exchange
     *                                                 --preference
     *                                                 --record-set-name
     *                                                 --resource-group
     *                                                 --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_mx_add_record(): void {
    }

    /**
     * Create an empty MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx create --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--metadata]
     *                                             [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_mx_create(): void {
    }

    /**
     * Delete an MX record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx delete --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--if-match]
     *                                             [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_mx_delete(): void {
    }

    /**
     * List all MX record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx list --resource-group
     *                                           --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_mx_list(): void {
    }

    /**
     * Remove an MX record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx remove-record --exchange
     *                                                    --preference
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     *                                                    [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_mx_remove_record(): void {
    }

    /**
     * Get the details of an MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx show --name
     *                                           --resource-group
     *                                           --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_mx_show(): void {
    }

    /**
     * Update an MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx update --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--if-match]
     *                                             [--metadata]
     *                                             [--remove]
     *                                             [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_mx_update(): void {
    }
}

/** Manage Private DNS PTR records. */
class ext_privatedns_az_network_private_dns_record_set_ptr {
    /**
     * Add a PTR record.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr add-record --ptrdname
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_add_record(): void {
    }

    /**
     * Create an empty PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_create(): void {
    }

    /**
     * Delete a PTR record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_delete(): void {
    }

    /**
     * List all PTR record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr list --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_list(): void {
    }

    /**
     * Remove a PTR record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr remove-record --ptrdname
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_remove_record(): void {
    }

    /**
     * Get the details of a PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr show --name
     *                                            --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_show(): void {
    }

    /**
     * Update a PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_ptr_update(): void {
    }
}

/** Manage Private DNS SOA record. */
class ext_privatedns_az_network_private_dns_record_set_soa {
    /**
     * Get the details of an SOA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set soa show --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_soa_show(): void {
    }

    /**
     * Update properties of an SOA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set soa update --resource-group
     *                                              --zone-name
     *                                              [--email]
     *                                              [--expire-time]
     *                                              [--minimum-ttl]
     *                                              [--refresh-time]
     *                                              [--retry-time]
     *                                              [--serial-number]
     */
    ext_privatedns_az_network_private_dns_record_set_soa_update(): void {
    }
}

/** Manage Private DNS SRV records. */
class ext_privatedns_az_network_private_dns_record_set_srv {
    /**
     * Add an SRV record.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv add-record --port
     *                                                  --priority
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --target
     *                                                  --weight
     *                                                  --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_srv_add_record(): void {
    }

    /**
     * Create an empty SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_srv_create(): void {
    }

    /**
     * Delete an SRV record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_srv_delete(): void {
    }

    /**
     * List all SRV record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv list --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_srv_list(): void {
    }

    /**
     * Remove an SRV record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv remove-record --port
     *                                                     --priority
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --target
     *                                                     --weight
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_srv_remove_record(): void {
    }

    /**
     * Get the details of an SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv show --name
     *                                            --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_srv_show(): void {
    }

    /**
     * Update an SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_srv_update(): void {
    }
}

/** Manage Private DNS TXT records. */
class ext_privatedns_az_network_private_dns_record_set_txt {
    /**
     * Add a TXT record.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt add-record --record-set-name
     *                                                  --resource-group
     *                                                  --value
     *                                                  --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_txt_add_record(): void {
    }

    /**
     * Create an empty TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--ttl]
     */
    ext_privatedns_az_network_private_dns_record_set_txt_create(): void {
    }

    /**
     * Delete a TXT record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--yes]
     */
    ext_privatedns_az_network_private_dns_record_set_txt_delete(): void {
    }

    /**
     * List all TXT record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt list --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_txt_list(): void {
    }

    /**
     * Remove a TXT record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt remove-record --record-set-name
     *                                                     --resource-group
     *                                                     --value
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     */
    ext_privatedns_az_network_private_dns_record_set_txt_remove_record(): void {
    }

    /**
     * Get the details of a TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt show --name
     *                                            --resource-group
     *                                            --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_txt_show(): void {
    }

    /**
     * Update a TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     */
    ext_privatedns_az_network_private_dns_record_set_txt_update(): void {
    }
}

/** Manage Private DNS records and record sets. */
class ext_privatedns_az_network_private_dns_record_set {
    /**
     * List all record sets within a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set list --resource-group
     *                                        --zone-name
     */
    ext_privatedns_az_network_private_dns_record_set_list(): void {
    }
}

/** Manage Private DNS zones. */
class ext_privatedns_az_network_private_dns_zone {
    /**
     * Create a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone create --name
     *                                    --resource-group
     *                                    [--no-wait]
     *                                    [--tags]
     */
    ext_privatedns_az_network_private_dns_zone_create(): void {
    }

    /**
     * Delete a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone delete --name
     *                                    --resource-group
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--yes]
     */
    ext_privatedns_az_network_private_dns_zone_delete(): void {
    }

    /**
     * List Private DNS zones.
     *
     * Syntax: 
     *
     * az network private-dns zone list [--resource-group]
     */
    ext_privatedns_az_network_private_dns_zone_list(): void {
    }

    /**
     * Get a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone show --name
     *                                  --resource-group
     */
    ext_privatedns_az_network_private_dns_zone_show(): void {
    }

    /**
     * Update a Private DNS zone's properties. Does not modify Private DNS records or virtual network links within the zone.
     *
     * Syntax: 
     *
     * az network private-dns zone update --name
     *                                    --resource-group
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--remove]
     *                                    [--set]
     *                                    [--tags]
     */
    ext_privatedns_az_network_private_dns_zone_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Private DNS zone is met.
     *
     * Syntax: 
     *
     * az network private-dns zone wait --name
     *                                  --resource-group
     *                                  [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--interval]
     *                                  [--timeout]
     *                                  [--updated]
     */
    ext_privatedns_az_network_private_dns_zone_wait(): void {
    }
}

/** Manage Private DNS domains in Azure. */
class ext_privatedns_az_network_private_dns {
}

/** Manage Azure Network resources. */
class ext_privatedns_az_network {
}

/** Manage shared query of Azure resource graph. */
class ext_resource-graph_az_graph_shared_query {
    /**
     * Create a shared query.
     *
     * Syntax: 
     *
     * az graph shared-query create --description
     *                              --graph-query
     *                              --name
     *                              --resource-group
     *                              [--tags]
     */
    ext_resource-graph_az_graph_shared_query_create(): void {
    }

    /**
     * Delete a shared query.
     *
     * Syntax: 
     *
     * az graph shared-query delete --name
     *                              --resource-group
     */
    ext_resource-graph_az_graph_shared_query_delete(): void {
    }

    /**
     * List all shared query in a resource group.
     *
     * Syntax: 
     *
     * az graph shared-query list --resource-group
     */
    ext_resource-graph_az_graph_shared_query_list(): void {
    }

    /**
     * Show the properties of a shared query.
     *
     * Syntax: 
     *
     * az graph shared-query show --name
     *                            --resource-group
     */
    ext_resource-graph_az_graph_shared_query_show(): void {
    }
}

/** Query the resources managed by Azure Resource Manager. */
class ext_resource-graph_az_graph {
    /**
     * Query the resources managed by Azure Resource Manager.
     *
     * Syntax: 
     *
     * az graph query --graph-query
     *                [--first]
     *                [--include]
     *                [--skip]
     *                [--subscriptions]
     */
    ext_resource-graph_az_graph_query(): void {
    }
}

/** */
class ext_resource-graph_az {
}

/** (PREVIEW) Manage Azure SAP HANA Instance. */
class ext_sap-hana_az_hanainstance {
    /**
     * Create a new SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance create --instance-name
     *                        --ip-address
     *                        --location
     *                        --os-computer-name
     *                        --partner-node-id
     *                        --resource-group
     *                        --ssh-public-key
     */
    ext_sap-hana_az_hanainstance_create(): void {
    }

    /**
     * Delete a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance delete --instance-name
     *                        --resource-group
     */
    ext_sap-hana_az_hanainstance_delete(): void {
    }

    /**
     * List SAP HANA Instances.
     *
     * Syntax: 
     *
     * az hanainstance list [--resource-group]
     */
    ext_sap-hana_az_hanainstance_list(): void {
    }

    /**
     * Restart a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance restart --instance-name
     *                         --resource-group
     */
    ext_sap-hana_az_hanainstance_restart(): void {
    }

    /**
     * Get the details of a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance show --instance-name
     *                      --resource-group
     */
    ext_sap-hana_az_hanainstance_show(): void {
    }

    /**
     * Shutdown a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance shutdown --instance-name
     *                          --resource-group
     */
    ext_sap-hana_az_hanainstance_shutdown(): void {
    }

    /**
     * Start a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance start --instance-name
     *                       --resource-group
     */
    ext_sap-hana_az_hanainstance_start(): void {
    }

    /**
     * Update the Tags field of a SAP HANA Instance.
     *
     * Syntax: 
     *
     * az hanainstance update --instance-name
     *                        --resource-group
     *                        [--add]
     *                        [--force-string]
     *                        [--no-wait]
     *                        [--remove]
     *                        [--set]
     */
    ext_sap-hana_az_hanainstance_update(): void {
    }
}

/** */
class ext_sap-hana_az {
}

/** Manage the provider instance for the SAP Monitor. */
class ext_sap-hana_az_sapmonitor_provider_instance {
    /**
     * Create a new provider instance for the SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor provider-instance create --monitor-name
     *                                        --provider-instance-name
     *                                        --provider-instance-properties
     *                                        --provider-instance-type
     *                                        --resource-group
     *                                        [--provider-instance-metadata]
     */
    ext_sap-hana_az_sapmonitor_provider_instance_create(): void {
    }

    /**
     * Delete a provider instance from the SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor provider-instance delete --monitor-name
     *                                        --provider-instance-name
     *                                        --resource-group
     */
    ext_sap-hana_az_sapmonitor_provider_instance_delete(): void {
    }

    /**
     * List provider instances for the SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor provider-instance list --monitor-name
     *                                      --resource-group
     */
    ext_sap-hana_az_sapmonitor_provider_instance_list(): void {
    }

    /**
     * Get the details of a provider instance for the SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor provider-instance show --monitor-name
     *                                      --provider-instance-name
     *                                      --resource-group
     */
    ext_sap-hana_az_sapmonitor_provider_instance_show(): void {
    }
}

/** (PREVIEW) Manage Azure SAP Monitor. */
class ext_sap-hana_az_sapmonitor {
    /**
     * Create a SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor create --hana-subnet
     *                      --monitor-name
     *                      --region
     *                      --resource-group
     *                      [--dca]
     *                      [--hana-db-name]
     *                      [--hana-db-password]
     *                      [--hana-db-password-key-vault-url]
     *                      [--hana-db-sql-port]
     *                      [--hana-db-username]
     *                      [--hana-hostname]
     *                      [--key-vault-id]
     *                      [--lawsid]
     *                      [--tags]
     */
    ext_sap-hana_az_sapmonitor_create(): void {
    }

    /**
     * Delete a SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor delete --monitor-name
     *                      --resource-group
     */
    ext_sap-hana_az_sapmonitor_delete(): void {
    }

    /**
     * List SAP Monitors.
     *
     * Syntax: 
     *
     * az sapmonitor list
     */
    ext_sap-hana_az_sapmonitor_list(): void {
    }

    /**
     * Get the details of a SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor show --monitor-name
     *                    --resource-group
     */
    ext_sap-hana_az_sapmonitor_show(): void {
    }

    /**
     * Updates the tags field of a SAP Monitor.
     *
     * Syntax: 
     *
     * az sapmonitor update --monitor-name
     *                      --resource-group
     *                      [--add]
     *                      [--force-string]
     *                      [--no-wait]
     *                      [--remove]
     *                      [--set]
     */
    ext_sap-hana_az_sapmonitor_update(): void {
    }
}

/** */
class ext_scheduled-query_az {
}

/** Commands to manage scheduled queries. */
class ext_scheduled-query_az_monitor_scheduled_query {
    /**
     * Create a scheduled query.
     *
     * Syntax: 
     *
     * az monitor scheduled-query create --condition
     *                                   --name
     *                                   --resource-group
     *                                   --scopes
     *                                   [--action]
     *                                   [--description]
     *                                   [--disabled {false, true}]
     *                                   [--evaluation-frequency]
     *                                   [--location]
     *                                   [--mad]
     *                                   [--severity]
     *                                   [--tags]
     *                                   [--target-resource-type]
     *                                   [--window-size]
     */
    ext_scheduled-query_az_monitor_scheduled_query_create(): void {
    }

    /**
     * Delete a scheduled query.
     *
     * Syntax: 
     *
     * az monitor scheduled-query delete --name
     *                                   --resource-group
     *                                   [--yes]
     */
    ext_scheduled-query_az_monitor_scheduled_query_delete(): void {
    }

    /**
     * List all scheduled queries.
     *
     * Syntax: 
     *
     * az monitor scheduled-query list [--resource-group]
     */
    ext_scheduled-query_az_monitor_scheduled_query_list(): void {
    }

    /**
     * Show detail of a scheduled query.
     *
     * Syntax: 
     *
     * az monitor scheduled-query show --name
     *                                 --resource-group
     */
    ext_scheduled-query_az_monitor_scheduled_query_show(): void {
    }

    /**
     * Update a scheduled query.
     *
     * Syntax: 
     *
     * az monitor scheduled-query update --name
     *                                   --resource-group
     *                                   [--action]
     *                                   [--add]
     *                                   [--condition]
     *                                   [--description]
     *                                   [--disabled {false, true}]
     *                                   [--evaluation-frequency]
     *                                   [--force-string]
     *                                   [--mad]
     *                                   [--remove]
     *                                   [--set]
     *                                   [--severity]
     *                                   [--tags]
     *                                   [--window-size]
     */
    ext_scheduled-query_az_monitor_scheduled_query_update(): void {
    }
}

/** Manage the Azure Monitor Service. */
class ext_scheduled-query_az_monitor {
}

/** */
class ext_spring-cloud_az {
}

/** Commands to manage Azure Cosmos DB bindings. */
class ext_spring-cloud_az_spring_cloud_app_binding_cosmos {
    /**
     * Bind an Azure Cosmos DB with the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding cosmos add --api-type {cassandra, gremlin, mongo, sql, table}
     *                                        --app
     *                                        --name
     *                                        --resource-group
     *                                        --resource-id
     *                                        --service
     *                                        [--collection-name]
     *                                        [--database-name]
     *                                        [--key-space]
     */
    ext_spring-cloud_az_spring_cloud_app_binding_cosmos_add(): void {
    }

    /**
     * Update an Azure Cosmos DB service binding of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding cosmos update --app
     *                                           --name
     *                                           --resource-group
     *                                           --service
     *                                           [--collection-name]
     *                                           [--database-name]
     *                                           [--key-space]
     */
    ext_spring-cloud_az_spring_cloud_app_binding_cosmos_update(): void {
    }
}

/** Commands to manage Azure Database for MySQL bindings. */
class ext_spring-cloud_az_spring_cloud_app_binding_mysql {
    /**
     * Bind an Azure Database for MySQL with the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding mysql add --app
     *                                       --database-name
     *                                       --key
     *                                       --name
     *                                       --resource-group
     *                                       --resource-id
     *                                       --service
     *                                       --username
     */
    ext_spring-cloud_az_spring_cloud_app_binding_mysql_add(): void {
    }

    /**
     * Update an Azure Database for MySQL service binding of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding mysql update --app
     *                                          --name
     *                                          --resource-group
     *                                          --service
     *                                          [--database-name]
     *                                          [--key]
     *                                          [--username]
     */
    ext_spring-cloud_az_spring_cloud_app_binding_mysql_update(): void {
    }
}

/** Commands to manage Azure Cache for Redis bindings. */
class ext_spring-cloud_az_spring_cloud_app_binding_redis {
    /**
     * Bind an Azure Cache for Redis with the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding redis add --app
     *                                       --name
     *                                       --resource-group
     *                                       --resource-id
     *                                       --service
     *                                       [--disable-ssl]
     */
    ext_spring-cloud_az_spring_cloud_app_binding_redis_add(): void {
    }

    /**
     * Update an Azure Cache for Redis service binding of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding redis update --app
     *                                          --name
     *                                          --resource-group
     *                                          --service
     *                                          [--disable-ssl]
     */
    ext_spring-cloud_az_spring_cloud_app_binding_redis_update(): void {
    }
}

/** Commands to manage bindings with Azure Data Services, you need to manually restart app to make settings take effect. */
class ext_spring-cloud_az_spring_cloud_app_binding {
    /**
     * List all service bindings in an app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding list --app
     *                                  --resource-group
     *                                  --service
     */
    ext_spring-cloud_az_spring_cloud_app_binding_list(): void {
    }

    /**
     * Remove a service binding of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app binding remove --app
     *                                    --name
     *                                    --resource-group
     *                                    --service
     */
    ext_spring-cloud_az_spring_cloud_app_binding_remove(): void {
    }

    /**
     * Show the details of a service binding.
     *
     * Syntax: 
     *
     * az spring-cloud app binding show --app
     *                                  --name
     *                                  --resource-group
     *                                  --service
     */
    ext_spring-cloud_az_spring_cloud_app_binding_show(): void {
    }
}

/** Commands to manage custom domains. */
class ext_spring-cloud_az_spring_cloud_app_custom_domain {
    /**
     * Bind a custom domain with the app.
     *
     * Syntax: 
     *
     * az spring-cloud app custom-domain bind --app
     *                                        --domain-name
     *                                        --resource-group
     *                                        --service
     *                                        [--certificate]
     */
    ext_spring-cloud_az_spring_cloud_app_custom_domain_bind(): void {
    }

    /**
     * List all custom domains of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app custom-domain list --app
     *                                        --resource-group
     *                                        --service
     */
    ext_spring-cloud_az_spring_cloud_app_custom_domain_list(): void {
    }

    /**
     * Show details of a custom domain.
     *
     * Syntax: 
     *
     * az spring-cloud app custom-domain show --app
     *                                        --domain-name
     *                                        --resource-group
     *                                        --service
     */
    ext_spring-cloud_az_spring_cloud_app_custom_domain_show(): void {
    }

    /**
     * Unbind a custom-domain of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app custom-domain unbind --app
     *                                          --domain-name
     *                                          --resource-group
     *                                          --service
     */
    ext_spring-cloud_az_spring_cloud_app_custom_domain_unbind(): void {
    }

    /**
     * Update a custom domain of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app custom-domain update --app
     *                                          --domain-name
     *                                          --resource-group
     *                                          --service
     *                                          [--certificate]
     */
    ext_spring-cloud_az_spring_cloud_app_custom_domain_update(): void {
    }
}

/** Commands to manage life cycle of deployments of an app in Azure Spring Cloud. More operations on deployments can be done on app level with parameter --deployment. e.g. az spring-cloud app deploy --deployment <staging deployment>. */
class ext_spring-cloud_az_spring_cloud_app_deployment {
    /**
     * Create a staging deployment for the app. To deploy code or update setting to an existing deployment, use `az spring-cloud app deploy/update --deployment <staging deployment>`.
     *
     * Syntax: 
     *
     * az spring-cloud app deployment create --app
     *                                       --name
     *                                       --resource-group
     *                                       --service
     *                                       [--artifact-path]
     *                                       [--cpu]
     *                                       [--env]
     *                                       [--instance-count]
     *                                       [--jvm-options]
     *                                       [--main-entry]
     *                                       [--memory]
     *                                       [--no-wait]
     *                                       [--runtime-version {Java_11, Java_8, NetCore_31}]
     *                                       [--skip-clone-settings]
     *                                       [--target-module]
     *                                       [--version]
     */
    ext_spring-cloud_az_spring_cloud_app_deployment_create(): void {
    }

    /**
     * Delete a deployment of the app.
     *
     * Syntax: 
     *
     * az spring-cloud app deployment delete --app
     *                                       --name
     *                                       --resource-group
     *                                       --service
     */
    ext_spring-cloud_az_spring_cloud_app_deployment_delete(): void {
    }

    /**
     * List all deployments in an app.
     *
     * Syntax: 
     *
     * az spring-cloud app deployment list --app
     *                                     --resource-group
     *                                     --service
     */
    ext_spring-cloud_az_spring_cloud_app_deployment_list(): void {
    }

    /**
     * Show details of a deployment.
     *
     * Syntax: 
     *
     * az spring-cloud app deployment show --app
     *                                     --name
     *                                     --resource-group
     *                                     --service
     */
    ext_spring-cloud_az_spring_cloud_app_deployment_show(): void {
    }
}

/** Manage an app's managed service identity. */
class ext_spring-cloud_az_spring_cloud_app_identity {
    /**
     * Enable managed service identity on an app.
     *
     * Syntax: 
     *
     * az spring-cloud app identity assign --name
     *                                     --resource-group
     *                                     --service
     *                                     [--role]
     *                                     [--scope]
     */
    ext_spring-cloud_az_spring_cloud_app_identity_assign(): void {
    }

    /**
     * Remove managed service identity from an app.
     *
     * Syntax: 
     *
     * az spring-cloud app identity remove --name
     *                                     --resource-group
     *                                     --service
     */
    ext_spring-cloud_az_spring_cloud_app_identity_remove(): void {
    }

    /**
     * Display app's managed identity info.
     *
     * Syntax: 
     *
     * az spring-cloud app identity show --name
     *                                   --resource-group
     *                                   --service
     */
    ext_spring-cloud_az_spring_cloud_app_identity_show(): void {
    }
}

/** Commands to tail app instances logs with multiple options. If the app has only one instance, the instance name is optional. */
class ext_spring-cloud_az_spring_cloud_app_log {
    /**
     * Show logs of an app instance, logs will be streamed when setting '-f/--follow'.
     *
     * Syntax: 
     *
     * az spring-cloud app log tail --name
     *                              --resource-group
     *                              --service
     *                              [--follow]
     *                              [--instance]
     *                              [--limit]
     *                              [--lines]
     *                              [--since]
     */
    ext_spring-cloud_az_spring_cloud_app_log_tail(): void {
    }
}

/** Commands to manage apps in Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud_app {
    /**
     * Create a new app with a default deployment in the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud app create --name
     *                            --resource-group
     *                            --service
     *                            [--assign-identity {false, true}]
     *                            [--cpu]
     *                            [--enable-persistent-storage {false, true}]
     *                            [--env]
     *                            [--instance-count]
     *                            [--is-public {false, true}]
     *                            [--jvm-options]
     *                            [--memory]
     *                            [--runtime-version {Java_11, Java_8, NetCore_31}]
     */
    ext_spring-cloud_az_spring_cloud_app_create(): void {
    }

    /**
     * Delete an app in the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud app delete --name
     *                            --resource-group
     *                            --service
     */
    ext_spring-cloud_az_spring_cloud_app_delete(): void {
    }

    /**
     * Deploy source code or pre-built binary to an app and update related configurations.
     *
     * Syntax: 
     *
     * az spring-cloud app deploy --name
     *                            --resource-group
     *                            --service
     *                            [--artifact-path]
     *                            [--deployment]
     *                            [--env]
     *                            [--jvm-options]
     *                            [--main-entry]
     *                            [--no-wait]
     *                            [--runtime-version {Java_11, Java_8, NetCore_31}]
     *                            [--target-module]
     *                            [--version]
     */
    ext_spring-cloud_az_spring_cloud_app_deploy(): void {
    }

    /**
     * List all apps in the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud app list --resource-group
     *                          --service
     */
    ext_spring-cloud_az_spring_cloud_app_list(): void {
    }

    /**
     * Show logs of an app instance, logs will be streamed when setting '-f/--follow'.
     *
     * Syntax: 
     *
     * az spring-cloud app logs --name
     *                          --resource-group
     *                          --service
     *                          [--follow]
     *                          [--instance]
     *                          [--limit]
     *                          [--lines]
     *                          [--since]
     */
    ext_spring-cloud_az_spring_cloud_app_logs(): void {
    }

    /**
     * Restart instances of the app, default to production deployment.
     *
     * Syntax: 
     *
     * az spring-cloud app restart --name
     *                             --resource-group
     *                             --service
     *                             [--deployment]
     *                             [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_app_restart(): void {
    }

    /**
     * Manually scale an app or its deployments.
     *
     * Syntax: 
     *
     * az spring-cloud app scale --name
     *                           --resource-group
     *                           --service
     *                           [--cpu]
     *                           [--deployment]
     *                           [--instance-count]
     *                           [--memory]
     *                           [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_app_scale(): void {
    }

    /**
     * Set production deployment of an app.
     *
     * Syntax: 
     *
     * az spring-cloud app set-deployment --deployment
     *                                    --name
     *                                    --resource-group
     *                                    --service
     *                                    [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_app_set_deployment(): void {
    }

    /**
     * Show the details of an app in the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud app show --name
     *                          --resource-group
     *                          --service
     */
    ext_spring-cloud_az_spring_cloud_app_show(): void {
    }

    /**
     * Show build log of the last deploy, only apply to source code deploy, default to production deployment.
     *
     * Syntax: 
     *
     * az spring-cloud app show-deploy-log --name
     *                                     --resource-group
     *                                     --service
     *                                     [--deployment]
     */
    ext_spring-cloud_az_spring_cloud_app_show_deploy_log(): void {
    }

    /**
     * Start instances of the app, default to production deployment.
     *
     * Syntax: 
     *
     * az spring-cloud app start --name
     *                           --resource-group
     *                           --service
     *                           [--deployment]
     *                           [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_app_start(): void {
    }

    /**
     * Stop instances of the app, default to production deployment.
     *
     * Syntax: 
     *
     * az spring-cloud app stop --name
     *                          --resource-group
     *                          --service
     *                          [--deployment]
     *                          [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_app_stop(): void {
    }

    /**
     * Update configurations of an app.
     *
     * Syntax: 
     *
     * az spring-cloud app update --name
     *                            --resource-group
     *                            --service
     *                            [--deployment]
     *                            [--enable-persistent-storage {false, true}]
     *                            [--env]
     *                            [--https-only {false, true}]
     *                            [--is-public {false, true}]
     *                            [--jvm-options]
     *                            [--main-entry]
     *                            [--runtime-version {Java_11, Java_8, NetCore_31}]
     */
    ext_spring-cloud_az_spring_cloud_app_update(): void {
    }
}

/** Commands to manage certificates. */
class ext_spring-cloud_az_spring_cloud_certificate {
    /**
     * Add a certificate in Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud certificate add --name
     *                                 --resource-group
     *                                 --service
     *                                 --vault-certificate-name
     *                                 --vault-uri
     */
    ext_spring-cloud_az_spring_cloud_certificate_add(): void {
    }

    /**
     * List all certificates in Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud certificate list --resource-group
     *                                  --service
     */
    ext_spring-cloud_az_spring_cloud_certificate_list(): void {
    }

    /**
     * Remove a certificate in Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud certificate remove --name
     *                                    --resource-group
     *                                    --service
     */
    ext_spring-cloud_az_spring_cloud_certificate_remove(): void {
    }

    /**
     * Show a certificate in Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud certificate show --name
     *                                  --resource-group
     *                                  --service
     */
    ext_spring-cloud_az_spring_cloud_certificate_show(): void {
    }
}

/** Commands to manage Config Server git repository in Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud_config_server_git_repo {
    /**
     * Set add a new repositry of git property of Config Server.
     *
     * Syntax: 
     *
     * az spring-cloud config-server git repo add --name
     *                                            --repo-name
     *                                            --resource-group
     *                                            --uri
     *                                            [--host-key]
     *                                            [--host-key-algorithm]
     *                                            [--label]
     *                                            [--password]
     *                                            [--pattern]
     *                                            [--private-key]
     *                                            [--search-paths]
     *                                            [--strict-host-key-checking]
     *                                            [--username]
     */
    ext_spring-cloud_az_spring_cloud_config_server_git_repo_add(): void {
    }

    /**
     * List all repositries of git property of Config Server.
     *
     * Syntax: 
     *
     * az spring-cloud config-server git repo list --name
     *                                             --resource-group
     */
    ext_spring-cloud_az_spring_cloud_config_server_git_repo_list(): void {
    }

    /**
     * Remove an existing repositry of git property of Config Server.
     *
     * Syntax: 
     *
     * az spring-cloud config-server git repo remove --name
     *                                               --repo-name
     *                                               --resource-group
     */
    ext_spring-cloud_az_spring_cloud_config_server_git_repo_remove(): void {
    }

    /**
     * Override an existing repositry of git property of Config Server, will totally override the old one.
     *
     * Syntax: 
     *
     * az spring-cloud config-server git repo update --name
     *                                               --repo-name
     *                                               --resource-group
     *                                               [--host-key]
     *                                               [--host-key-algorithm]
     *                                               [--label]
     *                                               [--password]
     *                                               [--pattern]
     *                                               [--private-key]
     *                                               [--search-paths]
     *                                               [--strict-host-key-checking]
     *                                               [--uri]
     *                                               [--username]
     */
    ext_spring-cloud_az_spring_cloud_config_server_git_repo_update(): void {
    }
}

/** Commands to manage Config Server git property in Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud_config_server_git {
    /**
     * Set git property of Config Server, will totally override the old one.
     *
     * Syntax: 
     *
     * az spring-cloud config-server git set --name
     *                                       --resource-group
     *                                       --uri
     *                                       [--host-key]
     *                                       [--host-key-algorithm]
     *                                       [--label]
     *                                       [--password]
     *                                       [--private-key]
     *                                       [--search-paths]
     *                                       [--strict-host-key-checking]
     *                                       [--username]
     */
    ext_spring-cloud_az_spring_cloud_config_server_git_set(): void {
    }
}

/** Commands to manage Config Server in Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud_config_server {
    /**
     * Erase all settings in Config Server.
     *
     * Syntax: 
     *
     * az spring-cloud config-server clear --name
     *                                     --resource-group
     */
    ext_spring-cloud_az_spring_cloud_config_server_clear(): void {
    }

    /**
     * Set Config Server from a yaml file.
     *
     * Syntax: 
     *
     * az spring-cloud config-server set --config-file
     *                                   --name
     *                                   --resource-group
     *                                   [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_config_server_set(): void {
    }

    /**
     * Show Config Server.
     *
     * Syntax: 
     *
     * az spring-cloud config-server show --name
     *                                    --resource-group
     */
    ext_spring-cloud_az_spring_cloud_config_server_show(): void {
    }
}

/** Commands to manage test endpoint in Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud_test_endpoint {
    /**
     * Disable test endpoint of the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud test-endpoint disable --name
     *                                       --resource-group
     */
    ext_spring-cloud_az_spring_cloud_test_endpoint_disable(): void {
    }

    /**
     * Enable test endpoint of the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud test-endpoint enable --name
     *                                      --resource-group
     */
    ext_spring-cloud_az_spring_cloud_test_endpoint_enable(): void {
    }

    /**
     * List test endpoint keys of the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud test-endpoint list --name
     *                                    --resource-group
     *                                    [--app]
     *                                    [--deployment]
     */
    ext_spring-cloud_az_spring_cloud_test_endpoint_list(): void {
    }

    /**
     * Regenerate a test-endpoint key for the Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud test-endpoint renew-key --name
     *                                         --resource-group
     *                                         --type {Primary, Secondary}
     */
    ext_spring-cloud_az_spring_cloud_test_endpoint_renew_key(): void {
    }
}

/** Commands to manage Azure Spring Cloud. */
class ext_spring-cloud_az_spring_cloud {
    /**
     * Create an Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud create --name
     *                        --resource-group
     *                        [--app-insights]
     *                        [--app-insights-key]
     *                        [--app-network-resource-group]
     *                        [--app-subnet]
     *                        [--disable-distributed-tracing {false, true}]
     *                        [--location]
     *                        [--no-wait]
     *                        [--reserved-cidr-range]
     *                        [--service-runtime-network-resource-group]
     *                        [--service-runtime-subnet]
     *                        [--sku]
     *                        [--tags]
     *                        [--vnet]
     */
    ext_spring-cloud_az_spring_cloud_create(): void {
    }

    /**
     * Delete an Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud delete --name
     *                        --resource-group
     *                        [--no-wait]
     */
    ext_spring-cloud_az_spring_cloud_delete(): void {
    }

    /**
     * List all Azure Spring Cloud in the given resource group, otherwise list the subscription's.
     *
     * Syntax: 
     *
     * az spring-cloud list [--resource-group]
     */
    ext_spring-cloud_az_spring_cloud_list(): void {
    }

    /**
     * Show the details for an Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud show --name
     *                      --resource-group
     */
    ext_spring-cloud_az_spring_cloud_show(): void {
    }

    /**
     * Update an Azure Spring Cloud.
     *
     * Syntax: 
     *
     * az spring-cloud update --name
     *                        --resource-group
     *                        [--app-insights]
     *                        [--app-insights-key]
     *                        [--disable-distributed-tracing {false, true}]
     *                        [--no-wait]
     *                        [--sku]
     *                        [--tags]
     */
    ext_spring-cloud_az_spring_cloud_update(): void {
    }
}

/** */
class ext_ssh_az {
}

/** SSH into Azure VMs. */
class ext_ssh_az_ssh {
    /**
     * Create an SSH config for Azure VMs which can then be imported to 3rd party SSH clients.
     *
     * Syntax: 
     *
     * az ssh config --file
     *               [--ip]
     *               [--private-key-file]
     *               [--public-key-file]
     *               [--resource-group]
     *               [--vm-name]
     */
    ext_ssh_az_ssh_config(): void {
    }

    /**
     * SSH into Azure VMs.
     *
     * Syntax: 
     *
     * az ssh vm [--ip]
     *           [--private-key-file]
     *           [--public-key-file]
     *           [--resource-group]
     *           [--vm-name]
     */
    ext_ssh_az_ssh_vm(): void {
    }
}

/** */
class ext_storage-blob-preview_az {
}

/** Manage the properties of a storage account's blob service. */
class ext_storage-blob-preview_az_storage_account_blob_service_properties {
    /**
     * Show the properties of a storage account's blob service.
     *
     * Syntax: 
     *
     * az storage account blob-service-properties show --account-name
     *                                                 [--resource-group]
     */
    ext_storage-blob-preview_az_storage_account_blob_service_properties_show(): void {
    }

    /**
     * Update the properties of a storage account's blob service.
     *
     * Syntax: 
     *
     * az storage account blob-service-properties update --account-name
     *                                                   [--add]
     *                                                   [--container-days]
     *                                                   [--container-retention {false, true}]
     *                                                   [--delete-retention-days]
     *                                                   [--enable-change-feed {false, true}]
     *                                                   [--enable-delete-retention {false, true}]
     *                                                   [--enable-last-access-tracking {false, true}]
     *                                                   [--enable-restore-policy {false, true}]
     *                                                   [--enable-versioning {false, true}]
     *                                                   [--force-string]
     *                                                   [--remove]
     *                                                   [--resource-group]
     *                                                   [--restore-days]
     *                                                   [--set]
     */
    ext_storage-blob-preview_az_storage_account_blob_service_properties_update(): void {
    }
}

/** Manage storage account management policies. */
class ext_storage-blob-preview_az_storage_account_management_policy {
    /**
     * Creates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy create --account-name
     *                                             --policy
     *                                             --resource-group
     */
    ext_storage-blob-preview_az_storage_account_management_policy_create(): void {
    }

    /**
     * Deletes the managementpolicy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy delete --account-name
     *                                             --resource-group
     */
    ext_storage-blob-preview_az_storage_account_management_policy_delete(): void {
    }

    /**
     * Gets the managementpolicy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy show --account-name
     *                                           --resource-group
     */
    ext_storage-blob-preview_az_storage_account_management_policy_show(): void {
    }

    /**
     * Updates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy update --account-name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--remove]
     *                                             [--set]
     */
    ext_storage-blob-preview_az_storage_account_management_policy_update(): void {
    }
}

/** Manage storage accounts. */
class ext_storage-blob-preview_az_storage_account {
}

/** Manage blob copy operations. Use `az storage blob show` to check the status of the blobs. */
class ext_storage-blob-preview_az_storage_blob_copy {
    /**
     * List blobs in a given container.
     *
     * Syntax: 
     *
     * az storage blob copy start --destination-blob
     *                            --destination-container
     *                            [--account-key]
     *                            [--account-name]
     *                            [--auth-mode {key, login}]
     *                            [--connection-string]
     *                            [--destination-if-match]
     *                            [--destination-if-modified-since]
     *                            [--destination-if-none-match]
     *                            [--destination-if-unmodified-since]
     *                            [--destination-lease-id]
     *                            [--destination-tags-condition]
     *                            [--metadata]
     *                            [--rehydrate-priority]
     *                            [--requires-sync {false, true}]
     *                            [--sas-token]
     *                            [--source-account-key]
     *                            [--source-account-name]
     *                            [--source-blob]
     *                            [--source-container]
     *                            [--source-if-match]
     *                            [--source-if-modified-since]
     *                            [--source-if-none-match]
     *                            [--source-if-unmodified-since]
     *                            [--source-lease-id]
     *                            [--source-path]
     *                            [--source-sas]
     *                            [--source-share]
     *                            [--source-snapshot]
     *                            [--source-tags-condition]
     *                            [--source-uri]
     *                            [--tags]
     *                            [--tier]
     *                            [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_copy_start(): void {
    }
}

/** Manage storage blob leases. */
class ext_storage-blob-preview_az_storage_blob_lease {
    /**
     * Request a new lease.
     *
     * Syntax: 
     *
     * az storage blob lease acquire --blob-name
     *                               --container-name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--lease-duration]
     *                               [--proposed-lease-id]
     *                               [--sas-token]
     *                               [--tags-condition]
     *                               [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_lease_acquire(): void {
    }

    /**
     * Break the lease, if the container or blob has an active lease.
     *
     * Syntax: 
     *
     * az storage blob lease break --blob-name
     *                             --container-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--lease-break-period]
     *                             [--sas-token]
     *                             [--tags-condition]
     *                             [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_lease_break(): void {
    }

    /**
     * Change the lease ID of an active lease.
     *
     * Syntax: 
     *
     * az storage blob lease change --blob-name
     *                              --container-name
     *                              --lease-id
     *                              --proposed-lease-id
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--sas-token]
     *                              [--tags-condition]
     *                              [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_lease_change(): void {
    }

    /**
     * Release the lease.
     *
     * Syntax: 
     *
     * az storage blob lease release --blob-name
     *                               --container-name
     *                               --lease-id
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--sas-token]
     *                               [--tags-condition]
     *                               [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_lease_release(): void {
    }

    /**
     * Renew the lease.
     *
     * Syntax: 
     *
     * az storage blob lease renew --blob-name
     *                             --container-name
     *                             --lease-id
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--sas-token]
     *                             [--tags-condition]
     *                             [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_lease_renew(): void {
    }
}

/** Manage blob metadata. */
class ext_storage-blob-preview_az_storage_blob_metadata {
    /**
     * Return all user-defined metadata for the specified blob or snapshot.
     *
     * Syntax: 
     *
     * az storage blob metadata show --container-name
     *                               --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--lease-id]
     *                               [--sas-token]
     *                               [--snapshot]
     *                               [--tags-condition]
     *                               [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_metadata_show(): void {
    }

    /**
     * Set user-defined metadata for the specified blob as one or more name-value pairs.
     *
     * Syntax: 
     *
     * az storage blob metadata update --container-name
     *                                 --name
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--auth-mode {key, login}]
     *                                 [--connection-string]
     *                                 [--if-match]
     *                                 [--if-modified-since]
     *                                 [--if-none-match]
     *                                 [--if-unmodified-since]
     *                                 [--lease-id]
     *                                 [--metadata]
     *                                 [--sas-token]
     *                                 [--snapshot]
     *                                 [--tags-condition]
     *                                 [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_metadata_update(): void {
    }
}

/** Manage blob tags. */
class ext_storage-blob-preview_az_storage_blob_tag {
    /**
     * Get tags on a blob or specific blob version, or snapshot.
     *
     * Syntax: 
     *
     * az storage blob tag list --container-name
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--sas-token]
     *                          [--snapshot]
     *                          [--tags-condition]
     *                          [--timeout]
     *                          [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_tag_list(): void {
    }

    /**
     * Set tags on a blob or specific blob version, but not snapshot.
     *
     * Syntax: 
     *
     * az storage blob tag set --container-name
     *                         --name
     *                         --tags
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--sas-token]
     *                         [--tags-condition]
     *                         [--timeout]
     *                         [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_tag_set(): void {
    }
}

/** Manage object storage for unstructured data (blobs). */
class ext_storage-blob-preview_az_storage_blob {
    /**
     * Mark a blob or snapshot for deletion.
     *
     * Syntax: 
     *
     * az storage blob delete --container-name
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--delete-snapshots]
     *                        [--if-match]
     *                        [--if-modified-since]
     *                        [--if-none-match]
     *                        [--if-unmodified-since]
     *                        [--lease-id]
     *                        [--sas-token]
     *                        [--snapshot]
     *                        [--tags-condition]
     *                        [--timeout]
     *                        [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_delete(): void {
    }

    /**
     * Download a blob to a file path, with automatic chunking and progress notifications.
     *
     * Syntax: 
     *
     * az storage blob download --container-name
     *                          --file
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--end-range]
     *                          [--if-match]
     *                          [--if-modified-since]
     *                          [--if-none-match]
     *                          [--if-unmodified-since]
     *                          [--lease-id]
     *                          [--max-connections]
     *                          [--no-progress]
     *                          [--open-mode]
     *                          [--sas-token]
     *                          [--snapshot]
     *                          [--socket-timeout]
     *                          [--start-range]
     *                          [--tags-condition]
     *                          [--timeout]
     *                          [--validate-content]
     *                          [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_download(): void {
    }

    /**
     * Check for the existence of a blob in a container.
     *
     * Syntax: 
     *
     * az storage blob exists --container-name
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_exists(): void {
    }

    /**
     * List blobs across all containers whose tags match a given search expression.
     *
     * Syntax: 
     *
     * az storage blob filter --tag-filter
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--sas-token]
     */
    ext_storage-blob-preview_az_storage_blob_filter(): void {
    }

    /**
     * Generate a shared access signature for the blob.
     *
     * Syntax: 
     *
     * az storage blob generate-sas --container-name
     *                              --name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--as-user]
     *                              [--auth-mode {key, login}]
     *                              [--cache-control]
     *                              [--connection-string]
     *                              [--content-disposition]
     *                              [--content-encoding]
     *                              [--content-language]
     *                              [--content-type]
     *                              [--expiry]
     *                              [--full-uri]
     *                              [--https-only]
     *                              [--ip]
     *                              [--permissions]
     *                              [--policy-name]
     *                              [--snapshot]
     *                              [--start]
     *                              [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_generate_sas(): void {
    }

    /**
     * List blobs in a given container.
     *
     * Syntax: 
     *
     * az storage blob list --container-name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--delimiter]
     *                      [--include]
     *                      [--marker]
     *                      [--num-results]
     *                      [--prefix]
     *                      [--sas-token]
     *                      [--show-next-marker]
     *                      [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_list(): void {
    }

    /**
     * Set the block or page tiers on the blob.
     *
     * Syntax: 
     *
     * az storage blob set-tier --container-name
     *                          --name
     *                          --tier
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--rehydrate-priority {High, Standard}]
     *                          [--sas-token]
     *                          [--tags-condition]
     *                          [--timeout]
     *                          [--type {block, page}]
     *                          [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_set_tier(): void {
    }

    /**
     * Get the details of a blob.
     *
     * Syntax: 
     *
     * az storage blob show --container-name
     *                      --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--lease-id]
     *                      [--sas-token]
     *                      [--snapshot]
     *                      [--tags-condition]
     *                      [--timeout]
     *                      [--version-id]
     */
    ext_storage-blob-preview_az_storage_blob_show(): void {
    }

    /**
     * Creates a snapshot of the blob.
     *
     * Syntax: 
     *
     * az storage blob snapshot --container-name
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--if-match]
     *                          [--if-modified-since]
     *                          [--if-none-match]
     *                          [--if-unmodified-since]
     *                          [--lease-id]
     *                          [--metadata]
     *                          [--sas-token]
     *                          [--tags-condition]
     *                          [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_snapshot(): void {
    }

    /**
     * Restores soft-deleted blobs or snapshots.
     *
     * Syntax: 
     *
     * az storage blob undelete --container-name
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--sas-token]
     *                          [--timeout]
     */
    ext_storage-blob-preview_az_storage_blob_undelete(): void {
    }

    /**
     * Upload a file to a storage blob.
     *
     * Syntax: 
     *
     * az storage blob upload --container-name
     *                        --file
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--content-cache-control]
     *                        [--content-disposition]
     *                        [--content-encoding]
     *                        [--content-language]
     *                        [--content-md5]
     *                        [--content-type]
     *                        [--encryption-scope]
     *                        [--if-match]
     *                        [--if-modified-since]
     *                        [--if-none-match]
     *                        [--if-unmodified-since]
     *                        [--lease-id]
     *                        [--max-connections]
     *                        [--maxsize-condition]
     *                        [--metadata]
     *                        [--no-progress]
     *                        [--overwrite {false, true}]
     *                        [--sas-token]
     *                        [--tags]
     *                        [--tags-condition]
     *                        [--tier]
     *                        [--timeout]
     *                        [--type {append, block, page}]
     *                        [--validate-content]
     */
    ext_storage-blob-preview_az_storage_blob_upload(): void {
    }
}

/** Manage blob storage containers. */
class ext_storage-blob-preview_az_storage_container {
    /**
     * Generate a SAS token for a storage container.
     *
     * Syntax: 
     *
     * az storage container generate-sas --name
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--as-user]
     *                                   [--auth-mode {key, login}]
     *                                   [--cache-control]
     *                                   [--connection-string]
     *                                   [--content-disposition]
     *                                   [--content-encoding]
     *                                   [--content-language]
     *                                   [--content-type]
     *                                   [--expiry]
     *                                   [--full-uri]
     *                                   [--https-only]
     *                                   [--ip]
     *                                   [--permissions]
     *                                   [--policy-name]
     *                                   [--start]
     */
    ext_storage-blob-preview_az_storage_container_generate_sas(): void {
    }

    /**
     * List containers in a storage account.
     *
     * Syntax: 
     *
     * az storage container list [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--include-deleted {false, true}]
     *                           [--include-metadata {false, true}]
     *                           [--marker]
     *                           [--num-results]
     *                           [--prefix]
     *                           [--sas-token]
     *                           [--show-next-marker]
     *                           [--timeout]
     */
    ext_storage-blob-preview_az_storage_container_list(): void {
    }

    /**
     * Restores soft-deleted container.
     *
     * Syntax: 
     *
     * az storage container restore --deleted-version
     *                              --name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--new-name]
     *                              [--sas-token]
     *                              [--timeout]
     */
    ext_storage-blob-preview_az_storage_container_restore(): void {
    }
}

/** Manage Azure Cloud Storage resources. */
class ext_storage-blob-preview_az_storage {
}

/** */
class ext_storage-or-preview_az {
}

/** Manage Object Replication Service Policy Rules. */
class ext_storage-or-preview_az_storage_account_or_policy_rule {
    /**
     * Add rule to the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule add --account-name
     *                                       --destination-container
     *                                       --policy-id
     *                                       --resource-group
     *                                       --source-container
     *                                       [--min-creation-time]
     *                                       [--prefix-match]
     */
    ext_storage-or-preview_az_storage_account_or_policy_rule_add(): void {
    }

    /**
     * List all the rules in the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule list --account-name
     *                                        --policy-id
     *                                        --resource-group
     */
    ext_storage-or-preview_az_storage_account_or_policy_rule_list(): void {
    }

    /**
     * Remove the specified rule from the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule remove --account-name
     *                                          --policy-id
     *                                          --resource-group
     *                                          --rule-id
     */
    ext_storage-or-preview_az_storage_account_or_policy_rule_remove(): void {
    }

    /**
     * Show the properties of specified rule in Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule show --account-name
     *                                        --policy-id
     *                                        --resource-group
     *                                        --rule-id
     */
    ext_storage-or-preview_az_storage_account_or_policy_rule_show(): void {
    }

    /**
     * Update rule properties to Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule update --account-name
     *                                          --policy-id
     *                                          --resource-group
     *                                          --rule-id
     *                                          [--destination-container]
     *                                          [--min-creation-time]
     *                                          [--prefix-match]
     *                                          [--source-container]
     */
    ext_storage-or-preview_az_storage_account_or_policy_rule_update(): void {
    }
}

/** Manage storage account Object Replication Policy. */
class ext_storage-or-preview_az_storage_account_or_policy {
    /**
     * Create Object Replication Service Policy for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy create --account-name
     *                                     --resource-group
     *                                     [--destination-account]
     *                                     [--destination-container]
     *                                     [--min-creation-time]
     *                                     [--policy]
     *                                     [--policy-id]
     *                                     [--prefix-match]
     *                                     [--rule-id]
     *                                     [--source-account]
     *                                     [--source-container]
     */
    ext_storage-or-preview_az_storage_account_or_policy_create(): void {
    }

    /**
     * Delete specified Object Replication Service Policy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy delete --account-name
     *                                     --policy-id
     *                                     --resource-group
     */
    ext_storage-or-preview_az_storage_account_or_policy_delete(): void {
    }

    /**
     * List Object Replication Service Policies associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy list --account-name
     *                                   --resource-group
     */
    ext_storage-or-preview_az_storage_account_or_policy_list(): void {
    }

    /**
     * Show the properties of specified Object Replication Service Policy for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy show --account-name
     *                                   --policy-id
     *                                   --resource-group
     */
    ext_storage-or-preview_az_storage_account_or_policy_show(): void {
    }

    /**
     * Update Object Replication Service Policy properties for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy update --account-name
     *                                     --resource-group
     *                                     [--add]
     *                                     [--destination-account]
     *                                     [--force-string]
     *                                     [--policy]
     *                                     [--policy-id]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--source-account]
     */
    ext_storage-or-preview_az_storage_account_or_policy_update(): void {
    }
}

/** Manage storage accounts. */
class ext_storage-or-preview_az_storage_account {
}

/** Manage Azure Cloud Storage resources. */
class ext_storage-or-preview_az_storage {
}

/** */
class ext_storage-preview_az {
}

/** Manage storage account keys. */
class ext_storage-preview_az_storage_account_keys {
    /**
     * List the access keys or Kerberos keys (if active directory enabled) for a storage account.
     *
     * Syntax: 
     *
     * az storage account keys list --account-name
     *                              [--resource-group]
     */
    ext_storage-preview_az_storage_account_keys_list(): void {
    }

    /**
     * Regenerate one of the access keys or Kerberos keys (if active directory enabled) for a storage account.
     *
     * Syntax: 
     *
     * az storage account keys renew --account-name
     *                               --key {primary, secondary}
     *                               [--resource-group]
     */
    ext_storage-preview_az_storage_account_keys_renew(): void {
    }
}

/** Manage storage account management policies. */
class ext_storage-preview_az_storage_account_management_policy {
    /**
     * Creates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy create --account-name
     *                                             --resource-group
     *                                             [--policy]
     */
    ext_storage-preview_az_storage_account_management_policy_create(): void {
    }

    /**
     * Deletes the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy delete --account-name
     *                                             --resource-group
     */
    ext_storage-preview_az_storage_account_management_policy_delete(): void {
    }

    /**
     * Gets the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy show --account-name
     *                                           --resource-group
     */
    ext_storage-preview_az_storage_account_management_policy_show(): void {
    }

    /**
     * Updates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy update --account-name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--remove]
     *                                             [--set]
     */
    ext_storage-preview_az_storage_account_management_policy_update(): void {
    }
}

/** Manage network rules. */
class ext_storage-preview_az_storage_account_network_rule {
    /**
     * Add a network rule.
     *
     * Syntax: 
     *
     * az storage account network-rule add --account-name
     *                                     [--action]
     *                                     [--ip-address]
     *                                     [--resource-group]
     *                                     [--subnet]
     *                                     [--vnet-name]
     */
    ext_storage-preview_az_storage_account_network_rule_add(): void {
    }

    /**
     * List network rules.
     *
     * Syntax: 
     *
     * az storage account network-rule list --account-name
     *                                      [--resource-group]
     */
    ext_storage-preview_az_storage_account_network_rule_list(): void {
    }

    /**
     * Remove a network rule.
     *
     * Syntax: 
     *
     * az storage account network-rule remove --account-name
     *                                        [--ip-address]
     *                                        [--resource-group]
     *                                        [--subnet]
     *                                        [--vnet-name]
     */
    ext_storage-preview_az_storage_account_network_rule_remove(): void {
    }
}

/** Manage storage accounts. */
class ext_storage-preview_az_storage_account {
    /**
     * Checks that the storage account name is valid and is not already in use.
     *
     * Syntax: 
     *
     * az storage account check-name --name
     */
    ext_storage-preview_az_storage_account_check_name(): void {
    }

    /**
     * Create a storage account.
     *
     * Syntax: 
     *
     * az storage account create --name
     *                           --resource-group
     *                           [--access-tier {Cool, Hot}]
     *                           [--assign-identity]
     *                           [--bypass {AzureServices, Logging, Metrics, None}]
     *                           [--custom-domain]
     *                           [--default-action {Allow, Deny}]
     *                           [--encryption-services {blob, file, queue, table}]
     *                           [--hierarchical-namespace {false, true}]
     *                           [--https-only {false, true}]
     *                           [--kind {BlobStorage, BlockBlobStorage, FileStorage, Storage, StorageV2}]
     *                           [--location]
     *                           [--sku {Premium_LRS, Premium_ZRS, Standard_GRS, Standard_LRS, Standard_RAGRS, Standard_ZRS}]
     *                           [--tags]
     */
    ext_storage-preview_az_storage_account_create(): void {
    }

    /**
     * Delete a storage account.
     *
     * Syntax: 
     *
     * az storage account delete --name
     *                           [--resource-group]
     *                           [--yes]
     */
    ext_storage-preview_az_storage_account_delete(): void {
    }

    /**
     * Failover request can be triggered for a storage account in case of availability issues.
     *
     * Syntax: 
     *
     * az storage account failover --name
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--yes]
     */
    ext_storage-preview_az_storage_account_failover(): void {
    }

    /**
     * List storage accounts.
     *
     * Syntax: 
     *
     * az storage account list [--resource-group]
     */
    ext_storage-preview_az_storage_account_list(): void {
    }

    /**
     * Show storage account properties.
     *
     * Syntax: 
     *
     * az storage account show --name
     *                         [--expand {geoReplicationStats}]
     *                         [--resource-group]
     */
    ext_storage-preview_az_storage_account_show(): void {
    }

    /**
     * Show the current count and limit of the storage accounts under the subscription.
     *
     * Syntax: 
     *
     * az storage account show-usage --location
     */
    ext_storage-preview_az_storage_account_show_usage(): void {
    }

    /**
     * Update the properties of a storage account.
     *
     * Syntax: 
     *
     * az storage account update --name
     *                           [--access-tier {Cool, Hot}]
     *                           [--add]
     *                           [--assign-identity]
     *                           [--bypass {AzureServices, Logging, Metrics, None}]
     *                           [--custom-domain]
     *                           [--default-action {Allow, Deny}]
     *                           [--encryption-key-name]
     *                           [--encryption-key-source {Microsoft.Keyvault, Microsoft.Storage}]
     *                           [--encryption-key-vault]
     *                           [--encryption-key-version]
     *                           [--encryption-services {blob, file, queue, table}]
     *                           [--force-string]
     *                           [--https-only {false, true}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--sku {Premium_LRS, Premium_ZRS, Standard_GRS, Standard_LRS, Standard_RAGRS, Standard_ZRS}]
     *                           [--tags]
     *                           [--use-subdomain {false, true}]
     */
    ext_storage-preview_az_storage_account_update(): void {
    }
}

/** Manage object storage for unstructured data (blobs) using AzCopy. */
class ext_storage-preview_az_storage_azcopy_blob {
    /**
     * Delete blobs from a storage blob container using AzCopy.
     *
     * Syntax: 
     *
     * az storage azcopy blob delete --container
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--recursive]
     *                               [--sas-token]
     *                               [--target]
     */
    ext_storage-preview_az_storage_azcopy_blob_delete(): void {
    }

    /**
     * Download blobs from a storage blob container using AzCopy.
     *
     * Syntax: 
     *
     * az storage azcopy blob download --container
     *                                 --destination
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--auth-mode {key, login}]
     *                                 [--connection-string]
     *                                 [--recursive]
     *                                 [--sas-token]
     *                                 [--source]
     */
    ext_storage-preview_az_storage_azcopy_blob_download(): void {
    }

    /**
     * Sync blobs recursively to a storage blob container using AzCopy.
     *
     * Syntax: 
     *
     * az storage azcopy blob sync --container
     *                             --source
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--destination]
     *                             [--sas-token]
     */
    ext_storage-preview_az_storage_azcopy_blob_sync(): void {
    }

    /**
     * Upload blobs to a storage blob container using AzCopy.
     *
     * Syntax: 
     *
     * az storage azcopy blob upload --container
     *                               --source
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--destination]
     *                               [--recursive]
     *                               [--sas-token]
     */
    ext_storage-preview_az_storage_azcopy_blob_upload(): void {
    }
}

/** [EXPERIMENTAL] Manage storage operations utilizing AzCopy. */
class ext_storage-preview_az_storage_azcopy {
    /**
     * Run a command directly using the AzCopy CLI. Please use SAS tokens for authentication.
     *
     * Syntax: 
     *
     * az storage azcopy run-command [<COMMAND_ARGS>]
     */
    ext_storage-preview_az_storage_azcopy_run_command(): void {
    }
}

/** Manage the access control properties of a blob when Hierarchical Namespace is enabled. */
class ext_storage-preview_az_storage_blob_access {
    /**
     * Set the access control properties of a blob.
     *
     * Syntax: 
     *
     * az storage blob access set --acl-spec
     *                            --blob-name
     *                            --container-name
     *                            [--account-key]
     *                            [--account-name]
     *                            [--auth-mode {key, login}]
     *                            [--connection-string]
     *                            [--if-match]
     *                            [--if-modified-since]
     *                            [--if-none-match]
     *                            [--if-unmodified-since]
     *                            [--lease-id]
     *                            [--sas-token]
     *                            [--timeout]
     */
    ext_storage-preview_az_storage_blob_access_set(): void {
    }

    /**
     * Show the access control properties of a blob.
     *
     * Syntax: 
     *
     * az storage blob access show --blob-name
     *                             --container-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--lease-id]
     *                             [--sas-token]
     *                             [--timeout]
     *                             [--user-principle-names]
     */
    ext_storage-preview_az_storage_blob_access_show(): void {
    }

    /**
     * Update the access control properties of a blob.
     *
     * Syntax: 
     *
     * az storage blob access update --blob-name
     *                               --container-name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--acl-spec]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--group]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--lease-id]
     *                               [--owner]
     *                               [--permissions]
     *                               [--sas-token]
     *                               [--timeout]
     */
    ext_storage-preview_az_storage_blob_access_update(): void {
    }
}

/** Manage the access control properties of a directory when Hierarchical Namespace is enabled. */
class ext_storage-preview_az_storage_blob_directory_access {
    /**
     * Set the access control properties of a directory.
     *
     * Syntax: 
     *
     * az storage blob directory access set --acl-spec
     *                                      --container-name
     *                                      --directory-path
     *                                      [--account-key]
     *                                      [--account-name]
     *                                      [--auth-mode {key, login}]
     *                                      [--connection-string]
     *                                      [--if-match]
     *                                      [--if-modified-since]
     *                                      [--if-none-match]
     *                                      [--if-unmodified-since]
     *                                      [--lease-id]
     *                                      [--sas-token]
     *                                      [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_access_set(): void {
    }

    /**
     * Show the access control properties of a directory.
     *
     * Syntax: 
     *
     * az storage blob directory access show --container-name
     *                                       --directory-path
     *                                       [--account-key]
     *                                       [--account-name]
     *                                       [--auth-mode {key, login}]
     *                                       [--connection-string]
     *                                       [--if-match]
     *                                       [--if-modified-since]
     *                                       [--if-none-match]
     *                                       [--if-unmodified-since]
     *                                       [--lease-id]
     *                                       [--sas-token]
     *                                       [--timeout]
     *                                       [--user-principle-names]
     */
    ext_storage-preview_az_storage_blob_directory_access_show(): void {
    }

    /**
     * Update the access control properties of a directory.
     *
     * Syntax: 
     *
     * az storage blob directory access update --container-name
     *                                         --directory-path
     *                                         [--account-key]
     *                                         [--account-name]
     *                                         [--acl-spec]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--group]
     *                                         [--if-match]
     *                                         [--if-modified-since]
     *                                         [--if-none-match]
     *                                         [--if-unmodified-since]
     *                                         [--lease-id]
     *                                         [--owner]
     *                                         [--permissions]
     *                                         [--sas-token]
     *                                         [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_access_update(): void {
    }
}

/** Manage directory metadata. */
class ext_storage-preview_az_storage_blob_directory_metadata {
    /**
     * Show all user-defined metadata for the specified blob directory.
     *
     * Syntax: 
     *
     * az storage blob directory metadata show --container-name
     *                                         --directory-path
     *                                         [--account-key]
     *                                         [--account-name]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--cpk]
     *                                         [--if-match]
     *                                         [--if-modified-since]
     *                                         [--if-none-match]
     *                                         [--if-unmodified-since]
     *                                         [--lease-id]
     *                                         [--sas-token]
     *                                         [--snapshot]
     *                                         [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_metadata_show(): void {
    }

    /**
     * Set user-defined metadata for the specified blob directory as one or more name-value pairs.
     *
     * Syntax: 
     *
     * az storage blob directory metadata update --container-name
     *                                           --directory-path
     *                                           [--account-key]
     *                                           [--account-name]
     *                                           [--auth-mode {key, login}]
     *                                           [--connection-string]
     *                                           [--cpk]
     *                                           [--if-match]
     *                                           [--if-modified-since]
     *                                           [--if-none-match]
     *                                           [--if-unmodified-since]
     *                                           [--lease-id]
     *                                           [--metadata]
     *                                           [--sas-token]
     *                                           [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_metadata_update(): void {
    }
}

/** Manage blob directories in storage account container. */
class ext_storage-preview_az_storage_blob_directory {
    /**
     * Create a storage blob directory in a storage container.
     *
     * Syntax: 
     *
     * az storage blob directory create --container-name
     *                                  --directory-path
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--lease-id]
     *                                  [--metadata]
     *                                  [--permissions]
     *                                  [--sas-token]
     *                                  [--timeout]
     *                                  [--umask]
     */
    ext_storage-preview_az_storage_blob_directory_create(): void {
    }

    /**
     * Delete a storage blob directory in a storage container.
     *
     * Syntax: 
     *
     * az storage blob directory delete --container-name
     *                                  --directory-path
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--fail-not-exist]
     *                                  [--if-match]
     *                                  [--if-modified-since]
     *                                  [--if-none-match]
     *                                  [--if-unmodified-since]
     *                                  [--lease-id]
     *                                  [--marker]
     *                                  [--recursive]
     *                                  [--sas-token]
     *                                  [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_delete(): void {
    }

    /**
     * Download blobs to a local file path.
     *
     * Syntax: 
     *
     * az storage blob directory download --container
     *                                    --destination-path
     *                                    --source-path
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--recursive]
     *                                    [--sas-token]
     */
    ext_storage-preview_az_storage_blob_directory_download(): void {
    }

    /**
     * Check for the existence of a blob directory in a storage container.
     *
     * Syntax: 
     *
     * az storage blob directory exists --container-name
     *                                  --directory-path
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--sas-token]
     *                                  [--snapshot]
     *                                  [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_exists(): void {
    }

    /**
     * List blobs and blob subdirectories in a storage directory.
     *
     * Syntax: 
     *
     * az storage blob directory list --container-name
     *                                --directory-path
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--delimiter]
     *                                [--include]
     *                                [--marker]
     *                                [--num-results]
     *                                [--prefix]
     *                                [--sas-token]
     *                                [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_list(): void {
    }

    /**
     * Move a storage directory to another storage blob directory in a storage container.
     *
     * Syntax: 
     *
     * az storage blob directory move --container-name
     *                                --destination-path
     *                                --source-path
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--lease-id]
     *                                [--move-mode {legacy, posix}]
     *                                [--sas-token]
     *                                [--source-if-match]
     *                                [--source-if-modified-since]
     *                                [--source-if-none-match]
     *                                [--source-if-unmodified-since]
     *                                [--source-lease-id]
     *                                [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_move(): void {
    }

    /**
     * Show a storage blob directory properties in a storage container.
     *
     * Syntax: 
     *
     * az storage blob directory show --container-name
     *                                --directory-path
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--if-match]
     *                                [--if-modified-since]
     *                                [--if-none-match]
     *                                [--if-unmodified-since]
     *                                [--lease-id]
     *                                [--sas-token]
     *                                [--timeout]
     */
    ext_storage-preview_az_storage_blob_directory_show(): void {
    }

    /**
     * Upload blobs or subdirectories to a storage blob directory.
     *
     * Syntax: 
     *
     * az storage blob directory upload --container
     *                                  --destination-path
     *                                  --source
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--recursive]
     *                                  [--sas-token]
     */
    ext_storage-preview_az_storage_blob_directory_upload(): void {
    }
}

/** Manage storage blob service properties. */
class ext_storage-preview_az_storage_blob_service_properties {
    /**
     * Gets the properties of a storage account's Blob service, including Azure Storage Analytics.
     *
     * Syntax: 
     *
     * az storage blob service-properties show [--account-key]
     *                                         [--account-name]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--sas-token]
     *                                         [--timeout]
     */
    ext_storage-preview_az_storage_blob_service_properties_show(): void {
    }

    /**
     * Update storage blob service properties.
     *
     * Syntax: 
     *
     * az storage blob service-properties update [--404-document]
     *                                           [--account-key]
     *                                           [--account-name]
     *                                           [--add]
     *                                           [--auth-mode {key, login}]
     *                                           [--connection-string]
     *                                           [--days-retained]
     *                                           [--delete-retention {false, true}]
     *                                           [--force-string]
     *                                           [--index-document]
     *                                           [--remove]
     *                                           [--sas-token]
     *                                           [--set]
     *                                           [--static-website {false, true}]
     *                                           [--timeout]
     */
    ext_storage-preview_az_storage_blob_service_properties_update(): void {
    }
}

/** Manage object storage for unstructured data (blobs). */
class ext_storage-preview_az_storage_blob {
    /**
     * Move a blob in a storage container.
     *
     * Syntax: 
     *
     * az storage blob move --container-name
     *                      --destination-blob
     *                      --source-blob
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--lease-id]
     *                      [--sas-token]
     *                      [--source-if-match]
     *                      [--source-if-modified-since]
     *                      [--source-if-none-match]
     *                      [--source-if-unmodified-since]
     *                      [--source-lease-id]
     *                      [--timeout]
     */
    ext_storage-preview_az_storage_blob_move(): void {
    }
}

/** Manage Azure Cloud Storage resources. */
class ext_storage-preview_az_storage {
}

/** */
class ext_storagesync_az {
}

/** Manage registered server. */
class ext_storagesync_az_storagesync_registered_server {
    /**
     * Unregister an on-premises server from it's storage sync service.
     *
     * Syntax: 
     *
     * az storagesync registered-server delete --server-id
     *                                         --storage-sync-service
     *                                         [--no-wait]
     *                                         [--resource-group]
     *                                         [--yes]
     */
    ext_storagesync_az_storagesync_registered_server_delete(): void {
    }

    /**
     * List all registered servers for a given storage sync service.
     *
     * Syntax: 
     *
     * az storagesync registered-server list --storage-sync-service
     *                                       [--resource-group]
     */
    ext_storagesync_az_storagesync_registered_server_list(): void {
    }

    /**
     * Show the properties for a given registered server.
     *
     * Syntax: 
     *
     * az storagesync registered-server show --server-id
     *                                       --storage-sync-service
     *                                       [--resource-group]
     */
    ext_storagesync_az_storagesync_registered_server_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a registered server is met.
     *
     * Syntax: 
     *
     * az storagesync registered-server wait --resource-group
     *                                       --server-id
     *                                       --storage-sync-service-name
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--timeout]
     *                                       [--updated]
     */
    ext_storagesync_az_storagesync_registered_server_wait(): void {
    }
}

/** Manage cloud endpoint. */
class ext_storagesync_az_storagesync_sync_group_cloud_endpoint {
    /**
     * Create a new cloud endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group cloud-endpoint create --name
     *                                                 --storage-sync-service
     *                                                 --sync-group-name
     *                                                 [--azure-file-share-name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--storage-account]
     *                                                 [--storage-account-tenant-id]
     */
    ext_storagesync_az_storagesync_sync_group_cloud_endpoint_create(): void {
    }

    /**
     * Delete a given cloud endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group cloud-endpoint delete --name
     *                                                 --storage-sync-service
     *                                                 --sync-group-name
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--yes]
     */
    ext_storagesync_az_storagesync_sync_group_cloud_endpoint_delete(): void {
    }

    /**
     * List all cloud endpoints in a sync group.
     *
     * Syntax: 
     *
     * az storagesync sync-group cloud-endpoint list --storage-sync-service
     *                                               --sync-group-name
     *                                               [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_cloud_endpoint_list(): void {
    }

    /**
     * Show the properties for a given cloud endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group cloud-endpoint show --name
     *                                               --storage-sync-service
     *                                               --sync-group-name
     *                                               [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_cloud_endpoint_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a cloud endpoint is met.
     *
     * Syntax: 
     *
     * az storagesync sync-group cloud-endpoint wait --name
     *                                               --resource-group
     *                                               --storage-sync-service-name
     *                                               --sync-group-name
     *                                               [--created]
     *                                               [--custom]
     *                                               [--deleted]
     *                                               [--exists]
     *                                               [--interval]
     *                                               [--timeout]
     *                                               [--updated]
     */
    ext_storagesync_az_storagesync_sync_group_cloud_endpoint_wait(): void {
    }
}

/** Manage server endpoint. */
class ext_storagesync_az_storagesync_sync_group_server_endpoint {
    /**
     * Create a new server endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint create --name
     *                                                  --registered-server-id
     *                                                  --server-local-path
     *                                                  --storage-sync-service
     *                                                  --sync-group-name
     *                                                  [--cloud-tiering {off, on}]
     *                                                  [--no-wait]
     *                                                  [--offline-data-transfer {off, on}]
     *                                                  [--offline-data-transfer-share-name]
     *                                                  [--resource-group]
     *                                                  [--tier-files-older-than-days]
     *                                                  [--volume-free-space-percent]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_create(): void {
    }

    /**
     * Delete a given server endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint delete --name
     *                                                  --storage-sync-service
     *                                                  --sync-group-name
     *                                                  [--no-wait]
     *                                                  [--resource-group]
     *                                                  [--yes]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_delete(): void {
    }

    /**
     * List all server endpoints in a sync group.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint list --storage-sync-service
     *                                                --sync-group-name
     *                                                [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_list(): void {
    }

    /**
     * Show the properties for a given server endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint show --name
     *                                                --storage-sync-service
     *                                                --sync-group-name
     *                                                [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_show(): void {
    }

    /**
     * Update the properties for a given server endpoint.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint update --name
     *                                                  --storage-sync-service
     *                                                  --sync-group-name
     *                                                  [--cloud-tiering {off, on}]
     *                                                  [--no-wait]
     *                                                  [--offline-data-transfer {off, on}]
     *                                                  [--offline-data-transfer-share-name]
     *                                                  [--resource-group]
     *                                                  [--tier-files-older-than-days]
     *                                                  [--volume-free-space-percent]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a server endpoint is met.
     *
     * Syntax: 
     *
     * az storagesync sync-group server-endpoint wait --name
     *                                                --resource-group
     *                                                --storage-sync-service-name
     *                                                --sync-group-name
     *                                                [--created]
     *                                                [--custom]
     *                                                [--deleted]
     *                                                [--exists]
     *                                                [--interval]
     *                                                [--timeout]
     *                                                [--updated]
     */
    ext_storagesync_az_storagesync_sync_group_server_endpoint_wait(): void {
    }
}

/** Manage sync group. */
class ext_storagesync_az_storagesync_sync_group {
    /**
     * Create a new sync group.
     *
     * Syntax: 
     *
     * az storagesync sync-group create --name
     *                                  --storage-sync-service
     *                                  [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_create(): void {
    }

    /**
     * Delete a given sync group.
     *
     * Syntax: 
     *
     * az storagesync sync-group delete --name
     *                                  --storage-sync-service
     *                                  [--resource-group]
     *                                  [--yes]
     */
    ext_storagesync_az_storagesync_sync_group_delete(): void {
    }

    /**
     * List all sync groups in a storage sync service.
     *
     * Syntax: 
     *
     * az storagesync sync-group list --storage-sync-service
     *                                [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_list(): void {
    }

    /**
     * Show the properties for a given sync group.
     *
     * Syntax: 
     *
     * az storagesync sync-group show --name
     *                                --storage-sync-service
     *                                [--resource-group]
     */
    ext_storagesync_az_storagesync_sync_group_show(): void {
    }
}

/** Manage Azure File Sync. */
class ext_storagesync_az_storagesync {
    /**
     * Create a new storage sync service.
     *
     * Syntax: 
     *
     * az storagesync create --name
     *                       --resource-group
     *                       [--location]
     *                       [--tags]
     */
    ext_storagesync_az_storagesync_create(): void {
    }

    /**
     * Delete a given storage sync service.
     *
     * Syntax: 
     *
     * az storagesync delete --name
     *                       [--resource-group]
     *                       [--yes]
     */
    ext_storagesync_az_storagesync_delete(): void {
    }

    /**
     * List all storage sync services in a resource group or a subscription.
     *
     * Syntax: 
     *
     * az storagesync list [--resource-group]
     */
    ext_storagesync_az_storagesync_list(): void {
    }

    /**
     * Show the properties for a given storage sync service.
     *
     * Syntax: 
     *
     * az storagesync show --name
     *                     [--resource-group]
     */
    ext_storagesync_az_storagesync_show(): void {
    }
}

/** */
class ext_stream-analytics_az {
}

/** Commands to manage stream-analytics function. */
class ext_stream-analytics_az_stream_analytics_function {
    /**
     * Create a function or replaces an already existing function under an existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics function create --binding
     *                                     --function-output
     *                                     --inputs
     *                                     --job-name
     *                                     --name
     *                                     --resource-group
     *                                     [--type {Scalar}]
     */
    ext_stream-analytics_az_stream_analytics_function_create(): void {
    }

    /**
     * Delete a function from the streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics function delete --job-name
     *                                     --name
     *                                     --resource-group
     */
    ext_stream-analytics_az_stream_analytics_function_delete(): void {
    }

    /**
     * List all of the functions under the specified streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics function list --job-name
     *                                   --resource-group
     */
    ext_stream-analytics_az_stream_analytics_function_list(): void {
    }

    /**
     * Get details about the specified function.
     *
     * Syntax: 
     *
     * az stream-analytics function show --job-name
     *                                   --name
     *                                   --resource-group
     */
    ext_stream-analytics_az_stream_analytics_function_show(): void {
    }

    /**
     * Test if the information provided for a function is valid.
     *
     * Syntax: 
     *
     * az stream-analytics function test --job-name
     *                                   --name
     *                                   --resource-group
     *                                   [--no-wait]
     */
    ext_stream-analytics_az_stream_analytics_function_test(): void {
    }
}

/** Commands to manage stream-analytics input. */
class ext_stream-analytics_az_stream_analytics_input {
    /**
     * Create an input or replaces an already existing input under an existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics input create --datasource
     *                                  --job-name
     *                                  --name
     *                                  --resource-group
     *                                  --serialization
     *                                  --type {Reference, Stream}
     */
    ext_stream-analytics_az_stream_analytics_input_create(): void {
    }

    /**
     * Delete an input from the streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics input delete --job-name
     *                                  --name
     *                                  --resource-group
     */
    ext_stream-analytics_az_stream_analytics_input_delete(): void {
    }

    /**
     * List all of the inputs under the specified streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics input list --job-name
     *                                --resource-group
     */
    ext_stream-analytics_az_stream_analytics_input_list(): void {
    }

    /**
     * Get details about the specified input.
     *
     * Syntax: 
     *
     * az stream-analytics input show --job-name
     *                                --name
     *                                --resource-group
     */
    ext_stream-analytics_az_stream_analytics_input_show(): void {
    }

    /**
     * Test an input.
     *
     * Syntax: 
     *
     * az stream-analytics input test --job-name
     *                                --name
     *                                --resource-group
     *                                [--no-wait]
     */
    ext_stream-analytics_az_stream_analytics_input_test(): void {
    }
}

/** Commands to manage stream-analytics streaming job. */
class ext_stream-analytics_az_stream_analytics_job {
    /**
     * Create a streaming job or replaces an already existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job create --name
     *                                --resource-group
     *                                [--compatibility-level {1.0}]
     *                                [--data-locale]
     *                                [--events-late-arrival-max-delay]
     *                                [--events-outoforder-max-delay]
     *                                [--events-outoforder-policy {Adjust, Drop}]
     *                                [--location]
     *                                [--no-wait]
     *                                [--output-error-policy {Drop, Stop}]
     *                                [--sku {Standard}]
     *                                [--tags]
     */
    ext_stream-analytics_az_stream_analytics_job_create(): void {
    }

    /**
     * Delete a streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job delete --name
     *                                --resource-group
     *                                [--no-wait]
     */
    ext_stream-analytics_az_stream_analytics_job_delete(): void {
    }

    /**
     * List all of the streaming jobs in the specified resource group.
     *
     * Syntax: 
     *
     * az stream-analytics job list [--expand]
     *                              [--resource-group]
     */
    ext_stream-analytics_az_stream_analytics_job_list(): void {
    }

    /**
     * Get details about the specified streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job show --name
     *                              --resource-group
     *                              [--expand]
     */
    ext_stream-analytics_az_stream_analytics_job_show(): void {
    }

    /**
     * Start a streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job start --name
     *                               --resource-group
     *                               [--no-wait]
     *                               [--output-start-mode {CustomTime, JobStartTime, LastOutputEventTime}]
     *                               [--output-start-time]
     */
    ext_stream-analytics_az_stream_analytics_job_start(): void {
    }

    /**
     * Stop a running streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job stop --name
     *                              --resource-group
     *                              [--no-wait]
     */
    ext_stream-analytics_az_stream_analytics_job_stop(): void {
    }

    /**
     * Update existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics job update --name
     *                                --resource-group
     *                                [--data-locale]
     *                                [--events-late-arrival-max-delay]
     *                                [--events-outoforder-max-delay]
     *                                [--events-outoforder-policy {Adjust, Drop}]
     *                                [--output-error-policy {Drop, Stop}]
     *                                [--tags]
     */
    ext_stream-analytics_az_stream_analytics_job_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the streaming job is met.
     *
     * Syntax: 
     *
     * az stream-analytics job wait --name
     *                              --resource-group
     *                              [--created]
     *                              [--custom]
     *                              [--deleted]
     *                              [--exists]
     *                              [--expand]
     *                              [--interval]
     *                              [--timeout]
     *                              [--updated]
     */
    ext_stream-analytics_az_stream_analytics_job_wait(): void {
    }
}

/** Commands to manage stream-analytics output. */
class ext_stream-analytics_az_stream_analytics_output {
    /**
     * Create an output or replaces an already existing output under an existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics output create --datasource
     *                                   --job-name
     *                                   --name
     *                                   --resource-group
     *                                   [--serialization]
     */
    ext_stream-analytics_az_stream_analytics_output_create(): void {
    }

    /**
     * Delete an output from the streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics output delete --job-name
     *                                   --name
     *                                   --resource-group
     */
    ext_stream-analytics_az_stream_analytics_output_delete(): void {
    }

    /**
     * List all of the outputs under the specified streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics output list --job-name
     *                                 --resource-group
     */
    ext_stream-analytics_az_stream_analytics_output_list(): void {
    }

    /**
     * Get details about the specified output.
     *
     * Syntax: 
     *
     * az stream-analytics output show --job-name
     *                                 --name
     *                                 --resource-group
     */
    ext_stream-analytics_az_stream_analytics_output_show(): void {
    }

    /**
     * Test an output.
     *
     * Syntax: 
     *
     * az stream-analytics output test --job-name
     *                                 --name
     *                                 --resource-group
     *                                 [--no-wait]
     */
    ext_stream-analytics_az_stream_analytics_output_test(): void {
    }
}

/** Commands to show quota information. */
class ext_stream-analytics_az_stream_analytics_quota {
    /**
     * Retrieve quota information in a particular region.
     *
     * Syntax: 
     *
     * az stream-analytics quota show --location
     */
    ext_stream-analytics_az_stream_analytics_quota_show(): void {
    }
}

/** Commands to manage stream-analytics transformation. */
class ext_stream-analytics_az_stream_analytics_transformation {
    /**
     * Create a transformation or replaces an already existing transformation under an existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics transformation create --job-name
     *                                           --name
     *                                           --resource-group
     *                                           [--streaming-units]
     *                                           [--transformation-query]
     */
    ext_stream-analytics_az_stream_analytics_transformation_create(): void {
    }

    /**
     * Get details about the specified transformation.
     *
     * Syntax: 
     *
     * az stream-analytics transformation show --job-name
     *                                         --name
     *                                         --resource-group
     */
    ext_stream-analytics_az_stream_analytics_transformation_show(): void {
    }

    /**
     * Update transformation under an existing streaming job.
     *
     * Syntax: 
     *
     * az stream-analytics transformation update --job-name
     *                                           --name
     *                                           --resource-group
     *                                           [--streaming-units]
     *                                           [--transformation-query]
     */
    ext_stream-analytics_az_stream_analytics_transformation_update(): void {
    }
}

/** Manage Stream Analytics. */
class ext_stream-analytics_az_stream_analytics {
}

/** Manage Azure subscription information. */
class ext_subscription_az_account {
    /**
     * Create a subscription.
     *
     * Syntax: 
     *
     * az account create --enrollment-account-name
     *                   --offer-type {MS-AZR-0017P, MS-AZR-0148P}
     *                   [--display-name]
     *                   [--owner-object-id]
     *                   [--owner-spn]
     *                   [--owner-upn]
     */
    ext_subscription_az_account_create(): void {
    }
}

/** */
class ext_subscription_az {
}

/** */
class ext_support_az {
}

/** Problem classifications for an Azure service. */
class ext_support_az_support_services_problem_classifications {
    /**
     * Lists all the problem classifications (categories) available for an Azure service. Always use the service and it's corresponding problem classification(s) obtained programmatically for support ticket creation. This practice ensures that you always have the most recent set of service and problem classification Ids.
     *
     * Syntax: 
     *
     * az support services problem-classifications list --service-name
     */
    ext_support_az_support_services_problem_classifications_list(): void {
    }

    /**
     * Gets the problem classification details for an Azure service.
     *
     * Syntax: 
     *
     * az support services problem-classifications show --problem-classification-name
     *                                                  --service-name
     */
    ext_support_az_support_services_problem_classifications_show(): void {
    }
}

/** Azure services and related problem categories. */
class ext_support_az_support_services {
    /**
     * Lists all the Azure services available for support ticket creation. Always use the service and it's corresponding problem classification(s) obtained programmatically for support ticket creation. This practice ensures that you always have the most recent set of service and problem classification Ids.
     *
     * Syntax: 
     *
     * az support services list
     */
    ext_support_az_support_services_list(): void {
    }

    /**
     * Gets a specific Azure service for support ticket creation.
     *
     * Syntax: 
     *
     * az support services show --service-name
     */
    ext_support_az_support_services_show(): void {
    }
}

/** Manage support ticket communications. */
class ext_support_az_support_tickets_communications {
    /**
     * Adds a new customer communication to an Azure support ticket.
     *
     * Syntax: 
     *
     * az support tickets communications create --communication-body
     *                                          --communication-name
     *                                          --communication-subject
     *                                          --ticket-name
     *                                          [--communication-sender]
     */
    ext_support_az_support_tickets_communications_create(): void {
    }

    /**
     * Lists all communications (attachments not included) for a support ticket.
     *
     * Syntax: 
     *
     * az support tickets communications list --ticket-name
     *                                        [--filters]
     */
    ext_support_az_support_tickets_communications_list(): void {
    }

    /**
     * Gets communication details for a support ticket.
     *
     * Syntax: 
     *
     * az support tickets communications show --communication-name
     *                                        --ticket-name
     */
    ext_support_az_support_tickets_communications_show(): void {
    }
}

/** Create and manage Azure support ticket. */
class ext_support_az_support_tickets {
    /**
     * Creates a new support ticket for Quota increase, Technical, Billing, and Subscription Management issues for the specified subscription.
     *
     * Syntax: 
     *
     * az support tickets create --contact-country
     *                           --contact-email
     *                           --contact-first-name
     *                           --contact-language
     *                           --contact-last-name
     *                           --contact-method {email, phone}
     *                           --contact-timezone
     *                           --description
     *                           --problem-classification
     *                           --severity {critical, highestcriticalimpact, minimal, moderate}
     *                           --ticket-name
     *                           --title
     *                           [--contact-additional-emails]
     *                           [--contact-phone-number]
     *                           [--partner-tenant-id]
     *                           [--quota-change-payload]
     *                           [--quota-change-regions]
     *                           [--quota-change-subtype]
     *                           [--quota-change-version]
     *                           [--require-24-by-7-response {false, true}]
     *                           [--start-time]
     *                           [--technical-resource]
     */
    ext_support_az_support_tickets_create(): void {
    }

    /**
     * Lists all the support tickets for an Azure subscription.
     *
     * Syntax: 
     *
     * az support tickets list [--filters]
     */
    ext_support_az_support_tickets_list(): void {
    }

    /**
     * Gets support ticket details for an Azure subscription.
     *
     * Syntax: 
     *
     * az support tickets show --ticket-name
     */
    ext_support_az_support_tickets_show(): void {
    }

    /**
     * Updates severity level, status and customer contact information for a support ticket.
     *
     * Syntax: 
     *
     * az support tickets update --ticket-name
     *                           [--contact-additional-emails]
     *                           [--contact-country]
     *                           [--contact-email]
     *                           [--contact-first-name]
     *                           [--contact-language]
     *                           [--contact-last-name]
     *                           [--contact-method {email, phone}]
     *                           [--contact-phone-number]
     *                           [--contact-timezone]
     *                           [--severity {critical, highestcriticalimpact, minimal, moderate}]
     *                           [--status {closed, open}]
     */
    ext_support_az_support_tickets_update(): void {
    }
}

/** Manage Azure support resource. */
class ext_support_az_support {
}

/** */
class ext_synapse_az {
}

/** Manage Synapse Spark batch jobs. */
class ext_synapse_az_synapse_spark_job {
    /**
     * Cancel a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job cancel --livy-id
     *                             --spark-pool-name
     *                             --workspace-name
     *                             [--yes]
     */
    ext_synapse_az_synapse_spark_job_cancel(): void {
    }

    /**
     * List all Spark jobs.
     *
     * Syntax: 
     *
     * az synapse spark job list --spark-pool-name
     *                           --workspace-name
     *                           [--from-index]
     *                           [--size]
     */
    ext_synapse_az_synapse_spark_job_list(): void {
    }

    /**
     * Get a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job show --livy-id
     *                           --spark-pool-name
     *                           --workspace-name
     */
    ext_synapse_az_synapse_spark_job_show(): void {
    }

    /**
     * Submit a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job submit --executor-size {Large, Medium, Small}
     *                             --executors
     *                             --main-class-name
     *                             --main-definition-file
     *                             --name
     *                             --spark-pool-name
     *                             --workspace-name
     *                             [--archives]
     *                             [--command-line-arguments]
     *                             [--configuration]
     *                             [--language {CSharp, PySpark, Python, Scala, Spark, SparkDotNet}]
     *                             [--reference-files]
     *                             [--tags]
     */
    ext_synapse_az_synapse_spark_job_submit(): void {
    }
}

/** Manage Spark pools. */
class ext_synapse_az_synapse_spark_pool {
    /**
     * Create a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool create --name
     *                              --node-count
     *                              --node-size {Large, Medium, Small}
     *                              --resource-group
     *                              --spark-version
     *                              --workspace-name
     *                              [--default-spark-log-folder]
     *                              [--delay]
     *                              [--enable-auto-pause {false, true}]
     *                              [--enable-auto-scale {false, true}]
     *                              [--library-requirements-file]
     *                              [--max-node-count]
     *                              [--min-node-count]
     *                              [--no-wait]
     *                              [--node-size-family]
     *                              [--spark-events-folder]
     *                              [--tags]
     */
    ext_synapse_az_synapse_spark_pool_create(): void {
    }

    /**
     * Delete a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool delete --name
     *                              --resource-group
     *                              --workspace-name
     *                              [--no-wait]
     *                              [--yes]
     */
    ext_synapse_az_synapse_spark_pool_delete(): void {
    }

    /**
     * List all Spark pools.
     *
     * Syntax: 
     *
     * az synapse spark pool list --resource-group
     *                            --workspace-name
     */
    ext_synapse_az_synapse_spark_pool_list(): void {
    }

    /**
     * Get a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool show --name
     *                            --resource-group
     *                            --workspace-name
     */
    ext_synapse_az_synapse_spark_pool_show(): void {
    }

    /**
     * Update the Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool update --name
     *                              --resource-group
     *                              --workspace-name
     *                              [--delay]
     *                              [--enable-auto-pause {false, true}]
     *                              [--enable-auto-scale {false, true}]
     *                              [--force {false, true}]
     *                              [--library-requirements-file]
     *                              [--max-node-count]
     *                              [--min-node-count]
     *                              [--no-wait]
     *                              [--node-count]
     *                              [--node-size {Large, Medium, Small}]
     *                              [--tags]
     */
    ext_synapse_az_synapse_spark_pool_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a Spark pool is met.
     *
     * Syntax: 
     *
     * az synapse spark pool wait --big-data-pool-name
     *                            --resource-group
     *                            --workspace-name
     *                            [--created]
     *                            [--custom]
     *                            [--deleted]
     *                            [--exists]
     *                            [--interval]
     *                            [--timeout]
     *                            [--updated]
     */
    ext_synapse_az_synapse_spark_pool_wait(): void {
    }
}

/** Manage Synapse Spark sessions. */
class ext_synapse_az_synapse_spark_session {
    /**
     * Cancel a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session cancel --livy-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--yes]
     */
    ext_synapse_az_synapse_spark_session_cancel(): void {
    }

    /**
     * Create a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session create --executor-size {Large, Medium, Small}
     *                                 --executors
     *                                 --name
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--configuration]
     *                                 [--reference-files]
     *                                 [--tags]
     */
    ext_synapse_az_synapse_spark_session_create(): void {
    }

    /**
     * List all Spark sessions.
     *
     * Syntax: 
     *
     * az synapse spark session list --spark-pool-name
     *                               --workspace-name
     *                               [--from-index]
     *                               [--size]
     */
    ext_synapse_az_synapse_spark_session_list(): void {
    }

    /**
     * Reset a Spark session timeout time.
     *
     * Syntax: 
     *
     * az synapse spark session reset-timeout --livy-id
     *                                        --spark-pool-name
     *                                        --workspace-name
     */
    ext_synapse_az_synapse_spark_session_reset_timeout(): void {
    }

    /**
     * Get a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session show --livy-id
     *                               --spark-pool-name
     *                               --workspace-name
     */
    ext_synapse_az_synapse_spark_session_show(): void {
    }
}

/** Manage Synapse Spark statements. */
class ext_synapse_az_synapse_spark_statement {
    /**
     * Cancel a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement cancel --livy-id
     *                                   --session-id
     *                                   --spark-pool-name
     *                                   --workspace-name
     *                                   [--yes]
     */
    ext_synapse_az_synapse_spark_statement_cancel(): void {
    }

    /**
     * Invoke a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement invoke --code
     *                                   --language {CSharp, PySpark, Python, SQL, Scala, Spark, SparkDotNet}
     *                                   --session-id
     *                                   --spark-pool-name
     *                                   --workspace-name
     */
    ext_synapse_az_synapse_spark_statement_invoke(): void {
    }

    /**
     * List all Spark statements.
     *
     * Syntax: 
     *
     * az synapse spark statement list --session-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     */
    ext_synapse_az_synapse_spark_statement_list(): void {
    }

    /**
     * Get a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement show --livy-id
     *                                 --session-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     */
    ext_synapse_az_synapse_spark_statement_show(): void {
    }
}

/** Manage Spark pools and Spark jobs. */
class ext_synapse_az_synapse_spark {
}

/** Manage SQL pools. */
class ext_synapse_az_synapse_sql_pool {
    /**
     * Create a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool create --name
     *                            --performance-level
     *                            --resource-group
     *                            --workspace-name
     *                            [--no-wait]
     *                            [--tags]
     */
    ext_synapse_az_synapse_sql_pool_create(): void {
    }

    /**
     * Delete a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool delete --name
     *                            --resource-group
     *                            --workspace-name
     *                            [--no-wait]
     *                            [--yes]
     */
    ext_synapse_az_synapse_sql_pool_delete(): void {
    }

    /**
     * List all SQL pools.
     *
     * Syntax: 
     *
     * az synapse sql pool list --resource-group
     *                          --workspace-name
     */
    ext_synapse_az_synapse_sql_pool_list(): void {
    }

    /**
     * Pause a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool pause --name
     *                           --resource-group
     *                           --workspace-name
     */
    ext_synapse_az_synapse_sql_pool_pause(): void {
    }

    /**
     * Resume a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool resume --name
     *                            --resource-group
     *                            --workspace-name
     */
    ext_synapse_az_synapse_sql_pool_resume(): void {
    }

    /**
     * Get a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool show --name
     *                          --resource-group
     *                          --workspace-name
     */
    ext_synapse_az_synapse_sql_pool_show(): void {
    }

    /**
     * Update a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool update --name
     *                            --resource-group
     *                            --workspace-name
     *                            [--performance-level]
     *                            [--tags]
     */
    ext_synapse_az_synapse_sql_pool_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a SQL pool is met.
     *
     * Syntax: 
     *
     * az synapse sql pool wait --resource-group
     *                          --sql-pool-name
     *                          --workspace-name
     *                          [--created]
     *                          [--custom]
     *                          [--deleted]
     *                          [--exists]
     *                          [--interval]
     *                          [--timeout]
     *                          [--updated]
     */
    ext_synapse_az_synapse_sql_pool_wait(): void {
    }
}

/** Manage SQL pools. */
class ext_synapse_az_synapse_sql {
}

/** Manage a workspace's firewall rules. */
class ext_synapse_az_synapse_workspace_firewall_rule {
    /**
     * Create a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule create --end-ip-address
     *                                           --name
     *                                           --resource-group
     *                                           --start-ip-address
     *                                           --workspace-name
     *                                           [--no-wait]
     */
    ext_synapse_az_synapse_workspace_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule delete --name
     *                                           --resource-group
     *                                           --workspace-name
     *                                           [--no-wait]
     *                                           [--yes]
     */
    ext_synapse_az_synapse_workspace_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule list --resource-group
     *                                         --workspace-name
     */
    ext_synapse_az_synapse_workspace_firewall_rule_list(): void {
    }

    /**
     * Get a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule show --name
     *                                         --resource-group
     *                                         --workspace-name
     */
    ext_synapse_az_synapse_workspace_firewall_rule_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a firewall rule is met.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule wait --resource-group
     *                                         --rule-name
     *                                         --workspace-name
     *                                         [--created]
     *                                         [--custom]
     *                                         [--deleted]
     *                                         [--exists]
     *                                         [--interval]
     *                                         [--timeout]
     *                                         [--updated]
     */
    ext_synapse_az_synapse_workspace_firewall_rule_wait(): void {
    }
}

/** Manage Synapse workspaces. */
class ext_synapse_az_synapse_workspace {
    /**
     * Check if a Synapse workspace name is available or not.
     *
     * Syntax: 
     *
     * az synapse workspace check-name --name
     */
    ext_synapse_az_synapse_workspace_check_name(): void {
    }

    /**
     * Create a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace create --file-system
     *                             --location
     *                             --name
     *                             --resource-group
     *                             --sql-admin-login-password
     *                             --sql-admin-login-user
     *                             --storage-account
     *                             [--no-wait]
     *                             [--tags]
     */
    ext_synapse_az_synapse_workspace_create(): void {
    }

    /**
     * Delete a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace delete --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--yes]
     */
    ext_synapse_az_synapse_workspace_delete(): void {
    }

    /**
     * List all Synapse workspaces.
     *
     * Syntax: 
     *
     * az synapse workspace list [--resource-group]
     */
    ext_synapse_az_synapse_workspace_list(): void {
    }

    /**
     * Get a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace show --name
     *                           --resource-group
     */
    ext_synapse_az_synapse_workspace_show(): void {
    }

    /**
     * Update a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace update --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--sql-admin-login-password]
     *                             [--tags]
     */
    ext_synapse_az_synapse_workspace_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the workspace is met.
     *
     * Syntax: 
     *
     * az synapse workspace wait --resource-group
     *                           --workspace-name
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--timeout]
     *                           [--updated]
     */
    ext_synapse_az_synapse_workspace_wait(): void {
    }
}

/** Manage and operate Synapse Workspace, Spark Pool, SQL Pool. */
class ext_synapse_az_synapse {
}

/** */
class ext_timeseriesinsights_az {
}

/** Commands to manage timeseriesinsights access policy. */
class ext_timeseriesinsights_az_timeseriesinsights_access_policy {
    /**
     * Create or update an access policy in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights access-policy create --environment-name
     *                                            --name
     *                                            --resource-group
     *                                            [--description]
     *                                            [--principal-object-id]
     *                                            [--roles {Contributor, Reader}]
     */
    ext_timeseriesinsights_az_timeseriesinsights_access_policy_create(): void {
    }

    /**
     * Delete the access policy with the specified name in the specified subscription, resource group, and environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights access-policy delete --environment-name
     *                                            --name
     *                                            --resource-group
     *                                            [--yes]
     */
    ext_timeseriesinsights_az_timeseriesinsights_access_policy_delete(): void {
    }

    /**
     * List all the available access policies associated with the environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights access-policy list --environment-name
     *                                          --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_access_policy_list(): void {
    }

    /**
     * Show the access policy with the specified name in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights access-policy show --environment-name
     *                                          --name
     *                                          --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_access_policy_show(): void {
    }

    /**
     * Create or update an access policy in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights access-policy update --environment-name
     *                                            --name
     *                                            --resource-group
     *                                            [--description]
     *                                            [--roles {Contributor, Reader}]
     */
    ext_timeseriesinsights_az_timeseriesinsights_access_policy_update(): void {
    }
}

/** Create or update a longterm environment in the specified subscription and resource group. */
class ext_timeseriesinsights_az_timeseriesinsights_environment_longterm {
    /**
     * Create or update a longterm environment in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment longterm create --data-retention
     *                                                   --name
     *                                                   --resource-group
     *                                                   --sku-capacity
     *                                                   --sku-name {L1, P1, S1, S2}
     *                                                   --storage-account-name
     *                                                   --storage-management-key
     *                                                   --time-series-id-properties
     *                                                   [--location]
     *                                                   [--no-wait]
     *                                                   [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_longterm_create(): void {
    }

    /**
     * Update a longterm environment in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment longterm update --name
     *                                                   --resource-group
     *                                                   [--data-retention]
     *                                                   [--no-wait]
     *                                                   [--storage-management-key]
     *                                                   [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_longterm_update(): void {
    }
}

/** Create or update a standard environment in the specified subscription and resource group. */
class ext_timeseriesinsights_az_timeseriesinsights_environment_standard {
    /**
     * Create or update a standard environment in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment standard create --data-retention-time
     *                                                   --name
     *                                                   --resource-group
     *                                                   --sku-capacity
     *                                                   --sku-name {L1, P1, S1, S2}
     *                                                   [--location]
     *                                                   [--no-wait]
     *                                                   [--partition-key-properties]
     *                                                   [--storage-limit-exceeded-behavior {PauseIngress, PurgeOldData}]
     *                                                   [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_standard_create(): void {
    }

    /**
     * Update a standard environment in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment standard update --name
     *                                                   --resource-group
     *                                                   [--data-retention-time]
     *                                                   [--no-wait]
     *                                                   [--partition-key-properties]
     *                                                   [--sku-capacity]
     *                                                   [--sku-name {L1, P1, S1, S2}]
     *                                                   [--storage-limit-exceeded-behavior {PauseIngress, PurgeOldData}]
     *                                                   [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_standard_update(): void {
    }
}

/** Commands to manage timeseriesinsights environment. */
class ext_timeseriesinsights_az_timeseriesinsights_environment {
    /**
     * Delete the environment with the specified name in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment delete --name
     *                                          --resource-group
     *                                          [--yes]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_delete(): void {
    }

    /**
     * List all the available environments associated with the subscription and within the specified resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment list [--resource-group]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_list(): void {
    }

    /**
     * Show the environment with the specified name in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az timeseriesinsights environment show --name
     *                                        --resource-group
     *                                        [--expand]
     */
    ext_timeseriesinsights_az_timeseriesinsights_environment_show(): void {
    }
}

/** Create or update an event hub event source under the specified environment. */
class ext_timeseriesinsights_az_timeseriesinsights_event_source_eventhub {
    /**
     * Create or update an event hub event source under the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source eventhub create --consumer-group-name
     *                                                    --environment-name
     *                                                    --event-source-resource-id
     *                                                    --key-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    --shared-access-key
     *                                                    [--location]
     *                                                    [--tags]
     *                                                    [--timestamp-property-name]
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_eventhub_create(): void {
    }

    /**
     * Create or update an event source under the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source eventhub update --environment-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    [--local-timestamp-format {Embedded, Iana, TimeSpan}]
     *                                                    [--shared-access-key]
     *                                                    [--tags]
     *                                                    [--timestamp-property-name]
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_eventhub_update(): void {
    }
}

/** Create or update an iothub event source under the specified environment. */
class ext_timeseriesinsights_az_timeseriesinsights_event_source_iothub {
    /**
     * Create or update an iothub event source under the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source iothub create --consumer-group-name
     *                                                  --environment-name
     *                                                  --event-source-resource-id
     *                                                  --key-name
     *                                                  --name
     *                                                  --resource-group
     *                                                  --shared-access-key
     *                                                  [--location]
     *                                                  [--tags]
     *                                                  [--timestamp-property-name]
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_iothub_create(): void {
    }

    /**
     * Create or update an event source under the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source iothub update --environment-name
     *                                                  --name
     *                                                  --resource-group
     *                                                  [--local-timestamp-format {Embedded, Iana, TimeSpan}]
     *                                                  [--shared-access-key]
     *                                                  [--tags]
     *                                                  [--timestamp-property-name]
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_iothub_update(): void {
    }
}

/** Commands to manage timeseriesinsights event source. */
class ext_timeseriesinsights_az_timeseriesinsights_event_source {
    /**
     * Delete the event source with the specified name in the specified subscription, resource group, and environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source delete --environment-name
     *                                           --name
     *                                           --resource-group
     *                                           [--yes]
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_delete(): void {
    }

    /**
     * List all the available event sources associated with the subscription and within the specified resource group and environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source list --environment-name
     *                                         --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_list(): void {
    }

    /**
     * Show the event source with the specified name in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights event-source show --environment-name
     *                                         --name
     *                                         --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_event_source_show(): void {
    }
}

/** Commands to manage timeseriesinsights reference data set. */
class ext_timeseriesinsights_az_timeseriesinsights_reference_data_set {
    /**
     * Create or update a reference data set in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights reference-data-set create --data-string-comparison-behavior {Ordinal, OrdinalIgnoreCase}
     *                                                 --environment-name
     *                                                 --key-properties
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--location]
     *                                                 [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_reference_data_set_create(): void {
    }

    /**
     * Delete the reference data set with the specified name in the specified subscription, resource group, and environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights reference-data-set delete --environment-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--yes]
     */
    ext_timeseriesinsights_az_timeseriesinsights_reference_data_set_delete(): void {
    }

    /**
     * List all the available reference data sets associated with the subscription and within the specified resource group and environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights reference-data-set list --environment-name
     *                                               --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_reference_data_set_list(): void {
    }

    /**
     * Show the reference data set with the specified name in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights reference-data-set show --environment-name
     *                                               --name
     *                                               --resource-group
     */
    ext_timeseriesinsights_az_timeseriesinsights_reference_data_set_show(): void {
    }

    /**
     * Create or update a reference data set in the specified environment.
     *
     * Syntax: 
     *
     * az timeseriesinsights reference-data-set update --environment-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--tags]
     */
    ext_timeseriesinsights_az_timeseriesinsights_reference_data_set_update(): void {
    }
}

/** Manage Azure Time Series Insights. */
class ext_timeseriesinsights_az_timeseriesinsights {
}

/** */
class ext_virtual-network-tap_az {
}

/** Manage virtual network tap configurations. */
class ext_virtual-network-tap_az_network_nic_vtap_config {
    /**
     * Create a virtual network tap configuration.
     *
     * Syntax: 
     *
     * az network nic vtap-config create --name
     *                                   --nic-name
     *                                   --resource-group
     *                                   --vnet-tap
     */
    ext_virtual-network-tap_az_network_nic_vtap_config_create(): void {
    }

    /**
     * Delete a virtual network tap configuration.
     *
     * Syntax: 
     *
     * az network nic vtap-config delete --name
     *                                   --nic-name
     *                                   --resource-group
     */
    ext_virtual-network-tap_az_network_nic_vtap_config_delete(): void {
    }

    /**
     * List virtual network tap configurations.
     *
     * Syntax: 
     *
     * az network nic vtap-config list --nic-name
     *                                 --resource-group
     */
    ext_virtual-network-tap_az_network_nic_vtap_config_list(): void {
    }

    /**
     * Get details of a virtual network tap configuration.
     *
     * Syntax: 
     *
     * az network nic vtap-config show --name
     *                                 --nic-name
     *                                 --resource-group
     */
    ext_virtual-network-tap_az_network_nic_vtap_config_show(): void {
    }
}

/** Manage network interfaces. */
class ext_virtual-network-tap_az_network_nic {
}

/** Manage virtual network taps. */
class ext_virtual-network-tap_az_network_vnet_tap {
    /**
     * Create a virtual network tap.
     *
     * Syntax: 
     *
     * az network vnet tap create --destination
     *                            --name
     *                            --resource-group
     *                            [--location]
     *                            [--port]
     *                            [--tags]
     */
    ext_virtual-network-tap_az_network_vnet_tap_create(): void {
    }

    /**
     * Delete a virtual network tap.
     *
     * Syntax: 
     *
     * az network vnet tap delete --name
     *                            --resource-group
     */
    ext_virtual-network-tap_az_network_vnet_tap_delete(): void {
    }

    /**
     * List virtual network taps.
     *
     * Syntax: 
     *
     * az network vnet tap list [--resource-group]
     */
    ext_virtual-network-tap_az_network_vnet_tap_list(): void {
    }

    /**
     * Get the details of a virtual network tap.
     *
     * Syntax: 
     *
     * az network vnet tap show --name
     *                          --resource-group
     */
    ext_virtual-network-tap_az_network_vnet_tap_show(): void {
    }

    /**
     * Update settings of a virtual network tap.
     *
     * Syntax: 
     *
     * az network vnet tap update --name
     *                            --resource-group
     *                            [--add]
     *                            [--force-string]
     *                            [--remove]
     *                            [--set]
     */
    ext_virtual-network-tap_az_network_vnet_tap_update(): void {
    }
}

/** Manage Azure Virtual Networks. */
class ext_virtual-network-tap_az_network_vnet {
}

/** Manage Azure Network resources. */
class ext_virtual-network-tap_az_network {
}

/** */
class ext_virtual-wan_az {
}

/** Manage point-to-site VPN gateway connections. */
class ext_virtual-wan_az_network_p2s_vpn_gateway_connection {
    /**
     * List all connections for a given point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway connection list --gateway-name
     *                                            --resource-group
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_connection_list(): void {
    }

    /**
     * Show the details of a point-to-site VPN gateway connection.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway connection show --gateway-name
     *                                            --name
     *                                            --resource-group
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_connection_show(): void {
    }
}

/** Manage point-to-site VPN gateway. */
class ext_virtual-wan_az_network_p2s_vpn_gateway {
    /**
     * Create a point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway create --name
     *                                   --resource-group
     *                                   --scale-unit
     *                                   --vhub
     *                                   [--address-space]
     *                                   [--associated]
     *                                   [--config-name]
     *                                   [--labels]
     *                                   [--location]
     *                                   [--no-wait]
     *                                   [--propagated]
     *                                   [--tags]
     *                                   [--vpn-server-config]
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_create(): void {
    }

    /**
     * Delete a point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway delete --name
     *                                   --resource-group
     *                                   [--yes]
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_delete(): void {
    }

    /**
     * List all point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway list [--resource-group]
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_list(): void {
    }

    /**
     * Show the details of a point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway show --name
     *                                 --resource-group
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_show(): void {
    }

    /**
     * Update settings of a point-to-site VPN gateway.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway update --name
     *                                   --resource-group
     *                                   [--add]
     *                                   [--address-space]
     *                                   [--associated]
     *                                   [--config-name]
     *                                   [--force-string]
     *                                   [--labels]
     *                                   [--no-wait]
     *                                   [--propagated]
     *                                   [--remove]
     *                                   [--scale-unit]
     *                                   [--set]
     *                                   [--tags]
     *                                   [--vpn-server-config]
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the point-to-site VPN gateway is met.
     *
     * Syntax: 
     *
     * az network p2s-vpn-gateway wait --name
     *                                 --resource-group
     *                                 [--created]
     *                                 [--custom]
     *                                 [--deleted]
     *                                 [--exists]
     *                                 [--interval]
     *                                 [--timeout]
     *                                 [--updated]
     */
    ext_virtual-wan_az_network_p2s_vpn_gateway_wait(): void {
    }
}

/** Manage virtual hub VNet connections. */
class ext_virtual-wan_az_network_vhub_connection {
    /**
     * Create a virtual hub VNet connection.
     *
     * Syntax: 
     *
     * az network vhub connection create --name
     *                                   --remote-vnet
     *                                   --resource-group
     *                                   --vhub-name
     *                                   [--address-prefixes]
     *                                   [--associated]
     *                                   [--internet-security {false, true}]
     *                                   [--labels]
     *                                   [--next-hop]
     *                                   [--no-wait]
     *                                   [--propagated]
     *                                   [--remote-vnet-transit {false, true}]
     *                                   [--route-name]
     *                                   [--use-hub-vnet-gateways {false, true}]
     */
    ext_virtual-wan_az_network_vhub_connection_create(): void {
    }

    /**
     * Delete a virtual hub VNet connection.
     *
     * Syntax: 
     *
     * az network vhub connection delete --name
     *                                   --resource-group
     *                                   --vhub-name
     *                                   [--no-wait]
     *                                   [--yes]
     */
    ext_virtual-wan_az_network_vhub_connection_delete(): void {
    }

    /**
     * List virtual hub VNet connections.
     *
     * Syntax: 
     *
     * az network vhub connection list --resource-group
     *                                 --vhub-name
     */
    ext_virtual-wan_az_network_vhub_connection_list(): void {
    }

    /**
     * Get the details of a virtual hub VNet connection.
     *
     * Syntax: 
     *
     * az network vhub connection show --name
     *                                 --resource-group
     *                                 --vhub-name
     */
    ext_virtual-wan_az_network_vhub_connection_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of virtual hub VNet connection is met.
     *
     * Syntax: 
     *
     * az network vhub connection wait --name
     *                                 --resource-group
     *                                 --vhub-name
     *                                 [--created]
     *                                 [--custom]
     *                                 [--deleted]
     *                                 [--exists]
     *                                 [--interval]
     *                                 [--timeout]
     *                                 [--updated]
     */
    ext_virtual-wan_az_network_vhub_connection_wait(): void {
    }
}

/** Manage routes of route table in the virtual hub. */
class ext_virtual-wan_az_network_vhub_route_table_route {
    /**
     * Add a route into route table of the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table route add --destination-type {CIDR, ResourceId, Service}
     *                                       --destinations
     *                                       --name
     *                                       --next-hop-type {IPAddress, ResourceId}
     *                                       --resource-group
     *                                       --vhub-name
     *                                       [--next-hop]
     *                                       [--next-hops]
     *                                       [--no-wait]
     *                                       [--route-name]
     */
    ext_virtual-wan_az_network_vhub_route_table_route_add(): void {
    }

    /**
     * List routes in the virtual hub route table.
     *
     * Syntax: 
     *
     * az network vhub route-table route list --name
     *                                        --resource-group
     *                                        --vhub-name
     */
    ext_virtual-wan_az_network_vhub_route_table_route_list(): void {
    }

    /**
     * Remove a route from route table of the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table route remove --index
     *                                          --name
     *                                          --resource-group
     *                                          --vhub-name
     *                                          [--no-wait]
     */
    ext_virtual-wan_az_network_vhub_route_table_route_remove(): void {
    }
}

/** Manage route table in the virtual hub. */
class ext_virtual-wan_az_network_vhub_route_table {
    /**
     * Create a route table in the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table create --name
     *                                    --resource-group
     *                                    --vhub-name
     *                                    [--connections {All_Branches, All_Vnets}]
     *                                    [--destination-type {CIDR, ResourceId, Service}]
     *                                    [--destinations]
     *                                    [--labels]
     *                                    [--next-hop]
     *                                    [--next-hop-type {IPAddress, ResourceId}]
     *                                    [--next-hops]
     *                                    [--no-wait]
     *                                    [--route-name]
     */
    ext_virtual-wan_az_network_vhub_route_table_create(): void {
    }

    /**
     * Delete a route table in the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table delete --name
     *                                    --resource-group
     *                                    --vhub-name
     */
    ext_virtual-wan_az_network_vhub_route_table_delete(): void {
    }

    /**
     * List all route tables in the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table list --resource-group
     *                                  --vhub-name
     */
    ext_virtual-wan_az_network_vhub_route_table_list(): void {
    }

    /**
     * Show a route table in the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table show --name
     *                                  --resource-group
     *                                  --vhub-name
     */
    ext_virtual-wan_az_network_vhub_route_table_show(): void {
    }

    /**
     * Update a route table in the virtual hub.
     *
     * Syntax: 
     *
     * az network vhub route-table update --name
     *                                    --resource-group
     *                                    --vhub-name
     *                                    [--connections {All_Branches, All_Vnets}]
     *                                    [--labels]
     *                                    [--no-wait]
     */
    ext_virtual-wan_az_network_vhub_route_table_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the vhub route-table is met.
     *
     * Syntax: 
     *
     * az network vhub route-table wait --name
     *                                  --resource-group
     *                                  --vhub-name
     *                                  [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--interval]
     *                                  [--timeout]
     *                                  [--updated]
     */
    ext_virtual-wan_az_network_vhub_route_table_wait(): void {
    }
}

/** Manage entries in the virtual hub route table. */
class ext_virtual-wan_az_network_vhub_route {
    /**
     * Add a route to the virtual hub route table.
     *
     * Syntax: 
     *
     * az network vhub route add --address-prefixes
     *                           --next-hop
     *                           --resource-group
     *                           --vhub-name
     *                           [--no-wait]
     */
    ext_virtual-wan_az_network_vhub_route_add(): void {
    }

    /**
     * List routes in the virtual hub route table.
     *
     * Syntax: 
     *
     * az network vhub route list --resource-group
     *                            --vhub-name
     */
    ext_virtual-wan_az_network_vhub_route_list(): void {
    }

    /**
     * Remove a route from the virtual hub route table.
     *
     * Syntax: 
     *
     * az network vhub route remove --index
     *                              --resource-group
     *                              --vhub-name
     *                              [--no-wait]
     */
    ext_virtual-wan_az_network_vhub_route_remove(): void {
    }

    /**
     * Reset virtual hub route when the route state is failed.
     *
     * Syntax: 
     *
     * az network vhub route reset --resource-group
     *                             --vhub-name
     *                             [--no-wait]
     */
    ext_virtual-wan_az_network_vhub_route_reset(): void {
    }
}

/** Manage virtual hubs. */
class ext_virtual-wan_az_network_vhub {
    /**
     * Create a virtual hub.
     *
     * Syntax: 
     *
     * az network vhub create --address-prefix
     *                        --name
     *                        --resource-group
     *                        --vwan
     *                        [--location]
     *                        [--no-wait]
     *                        [--sku {Basic, Standard}]
     *                        [--tags]
     */
    ext_virtual-wan_az_network_vhub_create(): void {
    }

    /**
     * Delete a virtual hub.
     *
     * Syntax: 
     *
     * az network vhub delete --name
     *                        --resource-group
     */
    ext_virtual-wan_az_network_vhub_delete(): void {
    }

    /**
     * Get the effective routes configured for the Virtual Hub resource or the specified resource.
     *
     * Syntax: 
     *
     * az network vhub get-effective-routes --name
     *                                      --resource-group
     *                                      [--no-wait]
     *                                      [--resource-id]
     *                                      [--resource-type]
     */
    ext_virtual-wan_az_network_vhub_get_effective_routes(): void {
    }

    /**
     * List virtual hubs.
     *
     * Syntax: 
     *
     * az network vhub list [--resource-group]
     */
    ext_virtual-wan_az_network_vhub_list(): void {
    }

    /**
     * Get the details of a virtual hub.
     *
     * Syntax: 
     *
     * az network vhub show --name
     *                      --resource-group
     */
    ext_virtual-wan_az_network_vhub_show(): void {
    }

    /**
     * Update settings of a virtual hub.
     *
     * Syntax: 
     *
     * az network vhub update --name
     *                        --resource-group
     *                        [--add]
     *                        [--address-prefix]
     *                        [--force-string]
     *                        [--no-wait]
     *                        [--remove]
     *                        [--set]
     *                        [--sku {Basic, Standard}]
     *                        [--tags]
     *                        [--vwan]
     */
    ext_virtual-wan_az_network_vhub_update(): void {
    }
}

/** Manage VPN gateway connection IPSec policies. */
class ext_virtual-wan_az_network_vpn_gateway_connection_ipsec_policy {
    /**
     * Add an IPSec policy to a VPN gateway connection.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection ipsec-policy add --connection-name
     *                                                    --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                                    --gateway-name
     *                                                    --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                                    --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                                    --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                                    --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                                    --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                                    --resource-group
     *                                                    --sa-data-size
     *                                                    --sa-lifetime
     *                                                    [--no-wait]
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_ipsec_policy_add(): void {
    }

    /**
     * List VPN gateway connection IPSec policies.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection ipsec-policy list --connection-name
     *                                                     --gateway-name
     *                                                     --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_ipsec_policy_list(): void {
    }

    /**
     * Remove an IPSec policy from a VPN gateway connection.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection ipsec-policy remove --connection-name
     *                                                       --gateway-name
     *                                                       --index
     *                                                       --resource-group
     *                                                       [--no-wait]
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_ipsec_policy_remove(): void {
    }
}

/** Manage VPN gateway connections. */
class ext_virtual-wan_az_network_vpn_gateway_connection {
    /**
     * Create a VPN gateway connection.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection create --gateway-name
     *                                          --name
     *                                          --remote-vpn-site
     *                                          --resource-group
     *                                          [--associated]
     *                                          [--connection-bandwidth]
     *                                          [--enable-bgp {false, true}]
     *                                          [--internet-security {false, true}]
     *                                          [--labels]
     *                                          [--no-wait]
     *                                          [--propagated]
     *                                          [--protocol-type {IKEv1, IKEv2}]
     *                                          [--rate-limiting {false, true}]
     *                                          [--routing-weight]
     *                                          [--shared-key]
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_create(): void {
    }

    /**
     * Delete a VPN gateway connection.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection delete --gateway-name
     *                                          --name
     *                                          --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_delete(): void {
    }

    /**
     * List VPN gateway connections.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection list --gateway-name
     *                                        --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_list(): void {
    }

    /**
     * Get the details of a VPN gateway connection.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection show --gateway-name
     *                                        --name
     *                                        --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the VPN gateway connection is met.
     *
     * Syntax: 
     *
     * az network vpn-gateway connection wait --gateway-name
     *                                        --resource-group
     *                                        [--created]
     *                                        [--custom]
     *                                        [--deleted]
     *                                        [--exists]
     *                                        [--interval]
     *                                        [--timeout]
     *                                        [--updated]
     */
    ext_virtual-wan_az_network_vpn_gateway_connection_wait(): void {
    }
}

/** Manage VPN gateways. */
class ext_virtual-wan_az_network_vpn_gateway {
    /**
     * Create a VPN gateway.
     *
     * Syntax: 
     *
     * az network vpn-gateway create --name
     *                               --resource-group
     *                               --vhub
     *                               [--asn]
     *                               [--bgp-peering-address]
     *                               [--location]
     *                               [--no-wait]
     *                               [--peer-weight]
     *                               [--scale-unit]
     *                               [--tags]
     */
    ext_virtual-wan_az_network_vpn_gateway_create(): void {
    }

    /**
     * Delete a VPN gateway.
     *
     * Syntax: 
     *
     * az network vpn-gateway delete --name
     *                               --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_delete(): void {
    }

    /**
     * List VPN gateways.
     *
     * Syntax: 
     *
     * az network vpn-gateway list [--resource-group]
     */
    ext_virtual-wan_az_network_vpn_gateway_list(): void {
    }

    /**
     * Get the details of a VPN gateway.
     *
     * Syntax: 
     *
     * az network vpn-gateway show --name
     *                             --resource-group
     */
    ext_virtual-wan_az_network_vpn_gateway_show(): void {
    }

    /**
     * Update settings of a VPN gateway.
     *
     * Syntax: 
     *
     * az network vpn-gateway update --name
     *                               --resource-group
     *                               [--add]
     *                               [--asn]
     *                               [--bgp-peering-address]
     *                               [--force-string]
     *                               [--no-wait]
     *                               [--peer-weight]
     *                               [--remove]
     *                               [--scale-unit]
     *                               [--set]
     *                               [--tags]
     *                               [--vhub]
     */
    ext_virtual-wan_az_network_vpn_gateway_update(): void {
    }
}

/** Manage VPN server configuration IPSec policies. */
class ext_virtual-wan_az_network_vpn_server_config_ipsec_policy {
    /**
     * Add an IPSec policy to a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config ipsec-policy add --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                               --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                               --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                               --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                               --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                               --name
     *                                               --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                               --resource-group
     *                                               --sa-data-size
     *                                               --sa-lifetime
     *                                               [--no-wait]
     */
    ext_virtual-wan_az_network_vpn_server_config_ipsec_policy_add(): void {
    }

    /**
     * List VPN server configuration IPSec policies.
     *
     * Syntax: 
     *
     * az network vpn-server-config ipsec-policy list --name
     *                                                --resource-group
     */
    ext_virtual-wan_az_network_vpn_server_config_ipsec_policy_list(): void {
    }

    /**
     * Remove an IPSec policy from a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config ipsec-policy remove --index
     *                                                  --name
     *                                                  --resource-group
     *                                                  [--no-wait]
     */
    ext_virtual-wan_az_network_vpn_server_config_ipsec_policy_remove(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the IPSec policy of a VPN server configuration is met.
     *
     * Syntax: 
     *
     * az network vpn-server-config ipsec-policy wait --name
     *                                                --resource-group
     *                                                [--created]
     *                                                [--custom]
     *                                                [--deleted]
     *                                                [--exists]
     *                                                [--interval]
     *                                                [--timeout]
     *                                                [--updated]
     */
    ext_virtual-wan_az_network_vpn_server_config_ipsec_policy_wait(): void {
    }
}

/** Manage VPN server configuration. */
class ext_virtual-wan_az_network_vpn_server_config {
    /**
     * Create a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config create --name
     *                                     --resource-group
     *                                     [--aad-audience]
     *                                     [--aad-issuer]
     *                                     [--aad-tenant]
     *                                     [--auth-types {AAD, Certificate, Radius}]
     *                                     [--location]
     *                                     [--no-wait]
     *                                     [--protocols {IkeV2, OpenVPN}]
     *                                     [--radius-client-root-certs]
     *                                     [--radius-server-root-certs]
     *                                     [--radius-servers]
     *                                     [--vpn-client-revoked-certs]
     *                                     [--vpn-client-root-certs]
     */
    ext_virtual-wan_az_network_vpn_server_config_create(): void {
    }

    /**
     * Delete a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config delete --name
     *                                     --resource-group
     *                                     [--yes]
     */
    ext_virtual-wan_az_network_vpn_server_config_delete(): void {
    }

    /**
     * List all VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config list [--resource-group]
     */
    ext_virtual-wan_az_network_vpn_server_config_list(): void {
    }

    /**
     * Set settings of a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config set --name
     *                                  --resource-group
     *                                  [--aad-audience]
     *                                  [--aad-issuer]
     *                                  [--aad-tenant]
     *                                  [--auth-types {AAD, Certificate, Radius}]
     *                                  [--location]
     *                                  [--no-wait]
     *                                  [--protocols {IkeV2, OpenVPN}]
     *                                  [--radius-client-root-certs]
     *                                  [--radius-server-root-certs]
     *                                  [--radius-servers]
     *                                  [--vpn-client-revoked-certs]
     *                                  [--vpn-client-root-certs]
     */
    ext_virtual-wan_az_network_vpn_server_config_set(): void {
    }

    /**
     * Show the details of a VPN server configuration.
     *
     * Syntax: 
     *
     * az network vpn-server-config show --name
     *                                   --resource-group
     */
    ext_virtual-wan_az_network_vpn_server_config_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the VPN server configuration is met.
     *
     * Syntax: 
     *
     * az network vpn-server-config wait --name
     *                                   --resource-group
     *                                   [--created]
     *                                   [--custom]
     *                                   [--deleted]
     *                                   [--exists]
     *                                   [--interval]
     *                                   [--timeout]
     *                                   [--updated]
     */
    ext_virtual-wan_az_network_vpn_server_config_wait(): void {
    }
}

/** Manage VPN site configurations. */
class ext_virtual-wan_az_network_vpn_site {
    /**
     * Create a VPN site configuration.
     *
     * Syntax: 
     *
     * az network vpn-site create --ip-address
     *                            --name
     *                            --resource-group
     *                            [--address-prefixes]
     *                            [--asn]
     *                            [--bgp-peering-address]
     *                            [--device-model]
     *                            [--device-vendor]
     *                            [--link-speed]
     *                            [--location]
     *                            [--no-wait]
     *                            [--peer-weight]
     *                            [--security-site {false, true}]
     *                            [--site-key]
     *                            [--tags]
     *                            [--virtual-wan]
     */
    ext_virtual-wan_az_network_vpn_site_create(): void {
    }

    /**
     * Delete a VPN site configuration.
     *
     * Syntax: 
     *
     * az network vpn-site delete --name
     *                            --resource-group
     */
    ext_virtual-wan_az_network_vpn_site_delete(): void {
    }

    /**
     * Provide a SAS-URL to download the configuration for a VPN site.
     *
     * Syntax: 
     *
     * az network vpn-site download --output-blob-sas-url
     *                              --resource-group
     *                              --vwan-name
     *                              [--vpn-sites]
     */
    ext_virtual-wan_az_network_vpn_site_download(): void {
    }

    /**
     * List VPN site configurations.
     *
     * Syntax: 
     *
     * az network vpn-site list [--resource-group]
     */
    ext_virtual-wan_az_network_vpn_site_list(): void {
    }

    /**
     * Get the details of a VPN site configuration.
     *
     * Syntax: 
     *
     * az network vpn-site show --name
     *                          --resource-group
     */
    ext_virtual-wan_az_network_vpn_site_show(): void {
    }

    /**
     * Update settings of a VPN site configuration.
     *
     * Syntax: 
     *
     * az network vpn-site update --name
     *                            --resource-group
     *                            [--add]
     *                            [--address-prefixes]
     *                            [--asn]
     *                            [--bgp-peering-address]
     *                            [--device-model]
     *                            [--device-vendor]
     *                            [--force-string]
     *                            [--ip-address]
     *                            [--link-speed]
     *                            [--no-wait]
     *                            [--peer-weight]
     *                            [--remove]
     *                            [--security-site {false, true}]
     *                            [--set]
     *                            [--site-key]
     *                            [--tags]
     *                            [--virtual-wan]
     */
    ext_virtual-wan_az_network_vpn_site_update(): void {
    }
}

/** Manage virtual WANs. */
class ext_virtual-wan_az_network_vwan {
    /**
     * Create a virtual WAN.
     *
     * Syntax: 
     *
     * az network vwan create --name
     *                        --resource-group
     *                        [--branch-to-branch-traffic {false, true}]
     *                        [--disable-vpn-encryption {false, true}]
     *                        [--location]
     *                        [--office365-category]
     *                        [--security-provider-name]
     *                        [--tags]
     *                        [--type {Basic, Standard}]
     */
    ext_virtual-wan_az_network_vwan_create(): void {
    }

    /**
     * Delete a virtual WAN.
     *
     * Syntax: 
     *
     * az network vwan delete --name
     *                        --resource-group
     */
    ext_virtual-wan_az_network_vwan_delete(): void {
    }

    /**
     * List virtual WANs.
     *
     * Syntax: 
     *
     * az network vwan list [--resource-group]
     */
    ext_virtual-wan_az_network_vwan_list(): void {
    }

    /**
     * Get the details of a virtual WAN.
     *
     * Syntax: 
     *
     * az network vwan show --name
     *                      --resource-group
     */
    ext_virtual-wan_az_network_vwan_show(): void {
    }

    /**
     * Update settings of a virtual WAN.
     *
     * Syntax: 
     *
     * az network vwan update --name
     *                        --resource-group
     *                        [--add]
     *                        [--branch-to-branch-traffic {false, true}]
     *                        [--disable-vpn-encryption {false, true}]
     *                        [--force-string]
     *                        [--office365-category]
     *                        [--remove]
     *                        [--security-provider-name]
     *                        [--set]
     *                        [--tags]
     *                        [--type {Basic, Standard}]
     */
    ext_virtual-wan_az_network_vwan_update(): void {
    }
}

/** Manage Azure Network resources. */
class ext_virtual-wan_az_network {
}

/** */
class ext_vm-repair_az {
}

/** Auto repair commands to fix VMs. */
class ext_vm-repair_az_vm_repair {
    /**
     * Create a new repair VM and attach the source VM's copied OS disk as a data disk.
     *
     * Syntax: 
     *
     * az vm repair create --name
     *                     --resource-group
     *                     [--copy-disk-name]
     *                     [--repair-group-name]
     *                     [--repair-password]
     *                     [--repair-username]
     *                     [--repair-vm-name]
     *                     [--unlock-encrypted-vm]
     */
    ext_vm-repair_az_vm_repair_create(): void {
    }

    /**
     * List available scripts. Located <a href="https://github.com/Azure/repair-script-library">https://github.com/Azure/repair-script-library</a>.
     *
     * Syntax: 
     *
     * az vm repair list-scripts
     */
    ext_vm-repair_az_vm_repair_list_scripts(): void {
    }

    /**
     * Replace source VM's OS disk with data disk from repair VM.
     *
     * Syntax: 
     *
     * az vm repair restore --name
     *                      --resource-group
     *                      [--disk-name]
     *                      [--repair-vm-id]
     *                      [--yes]
     */
    ext_vm-repair_az_vm_repair_restore(): void {
    }

    /**
     * Run verified scripts from GitHub on a VM. 'az vm repair list-scripts' to view available scripts.
     *
     * Syntax: 
     *
     * az vm repair run --name
     *                  --resource-group
     *                  [--custom-script-file]
     *                  [--parameters]
     *                  [--repair-vm-id]
     *                  [--run-id]
     *                  [--run-on-repair]
     */
    ext_vm-repair_az_vm_repair_run(): void {
    }
}

/** Manage Linux or Windows virtual machines. */
class ext_vm-repair_az_vm {
}

/** */
class ext_vmware_az {
}

/** Commands to manage clusters in a private cloud. */
class ext_vmware_az_vmware_cluster {
    /**
     * Create a cluster in a private cloud. The maximum number of clusters is 4.
     *
     * Syntax: 
     *
     * az vmware cluster create --name
     *                          --private-cloud
     *                          --resource-group
     *                          --size
     *                          [--tags]
     */
    ext_vmware_az_vmware_cluster_create(): void {
    }

    /**
     * Delete a cluster in a private cloud.
     *
     * Syntax: 
     *
     * az vmware cluster delete --name
     *                          --private-cloud
     *                          --resource-group
     */
    ext_vmware_az_vmware_cluster_delete(): void {
    }

    /**
     * List clusters in a private cloud.
     *
     * Syntax: 
     *
     * az vmware cluster list --private-cloud
     *                        --resource-group
     */
    ext_vmware_az_vmware_cluster_list(): void {
    }

    /**
     * Show details of a cluster in a private cloud.
     *
     * Syntax: 
     *
     * az vmware cluster show --name
     *                        --private-cloud
     *                        --resource-group
     */
    ext_vmware_az_vmware_cluster_show(): void {
    }

    /**
     * Update a cluster in a private cloud.
     *
     * Syntax: 
     *
     * az vmware cluster update --name
     *                          --private-cloud
     *                          --resource-group
     *                          --size
     *                          [--tags]
     */
    ext_vmware_az_vmware_cluster_update(): void {
    }
}

/** Commands to manage private clouds. */
class ext_vmware_az_vmware_private_cloud {
    /**
     * Add an authorization to the ExpressRoute for a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud addauthorization --name
     *                                          --private-cloud
     *                                          --resource-group
     */
    ext_vmware_az_vmware_private_cloud_addauthorization(): void {
    }

    /**
     * Add a vCenter Single Sign On Identity Source to a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud addidentitysource --alias
     *                                           --base-group-dn
     *                                           --base-user-dn
     *                                           --domain
     *                                           --name
     *                                           --password
     *                                           --primary-server
     *                                           --private-cloud
     *                                           --resource-group
     *                                           --username
     *                                           [--secondary-server]
     *                                           [--ssl]
     */
    ext_vmware_az_vmware_private_cloud_addidentitysource(): void {
    }

    /**
     * Create a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud create --cluster-size
     *                                --location
     *                                --name
     *                                --network-block
     *                                --resource-group
     *                                --sku
     *                                [--circuit-primary-subnet]
     *                                [--circuit-secondary-subnet]
     *                                [--internet]
     *                                [--nsxt-password]
     *                                [--tags]
     *                                [--vcenter-password]
     */
    ext_vmware_az_vmware_private_cloud_create(): void {
    }

    /**
     * Delete a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud delete --name
     *                                --resource-group
     */
    ext_vmware_az_vmware_private_cloud_delete(): void {
    }

    /**
     * Delete an authorization to the ExpressRoute for a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud deleteauthorization --name
     *                                             --private-cloud
     *                                             --resource-group
     */
    ext_vmware_az_vmware_private_cloud_deleteauthorization(): void {
    }

    /**
     * Delete a vCenter Single Sign On Identity Source for a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud deleteidentitysource --alias
     *                                              --domain
     *                                              --name
     *                                              --private-cloud
     *                                              --resource-group
     */
    ext_vmware_az_vmware_private_cloud_deleteidentitysource(): void {
    }

    /**
     * List the private clouds.
     *
     * Syntax: 
     *
     * az vmware private-cloud list [--resource-group]
     */
    ext_vmware_az_vmware_private_cloud_list(): void {
    }

    /**
     * List the admin credentials for the private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud listadmincredentials --private-cloud
     *                                              --resource-group
     */
    ext_vmware_az_vmware_private_cloud_listadmincredentials(): void {
    }

    /**
     * Show details of a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud show --name
     *                              --resource-group
     */
    ext_vmware_az_vmware_private_cloud_show(): void {
    }

    /**
     * Update a private cloud.
     *
     * Syntax: 
     *
     * az vmware private-cloud update --name
     *                                --resource-group
     *                                [--cluster-size]
     *                                [--internet]
     */
    ext_vmware_az_vmware_private_cloud_update(): void {
    }
}

/** Commands to manage Azure VMware Solutions. */
class ext_vmware_az_vmware {
    /**
     * Return quota for subscription by region.
     *
     * Syntax: 
     *
     * az vmware checkquotaavailability --location
     */
    ext_vmware_az_vmware_checkquotaavailability(): void {
    }
}

/** */
class ext_webapp_az {
}

/** Group of commands related to webapp container operations. */
class ext_webapp_az_webapp_container {
    /**
     * Experimental command to create and deploy a container webapp.
     *
     * Syntax: 
     *
     * az webapp container up --name
     *                        [--docker-custom-image-name]
     *                        [--dryrun]
     *                        [--registry-name]
     *                        [--registry-rg]
     *                        [--source-location]
     */
    ext_webapp_az_webapp_container_up(): void {
    }
}

/** Create a remote connection using a tcp tunnel to your web app. */
class ext_webapp_az_webapp_remote_connection {
    /**
     * Creates a remote connection using a tcp tunnel to your web app.
     *
     * Syntax: 
     *
     * az webapp remote-connection create --name
     *                                    --resource-group
     *                                    [--port]
     *                                    [--slot]
     */
    ext_webapp_az_webapp_remote_connection_create(): void {
    }
}

/** Holds group of commands which cater to webapp scans. Currently available only for Linux based webapps. */
class ext_webapp_az_webapp_scan {
    /**
     * Get details of all scans conducted on webapp, upto max scan limit set on the webapp This will get you the scan log results in addition to the scan status of each scan conducted on the webapp.
     *
     * Syntax: 
     *
     * az webapp scan list-result --name
     *                            --resource-group
     *                            [--slot]
     */
    ext_webapp_az_webapp_scan_list_result(): void {
    }

    /**
     * Get results of specified scan-id. This will fetch you the Scan log results of the specified scan-id.
     *
     * Syntax: 
     *
     * az webapp scan show-result --name
     *                            --resource-group
     *                            --scan-id
     *                            [--slot]
     */
    ext_webapp_az_webapp_scan_show_result(): void {
    }

    /**
     * Starts the scan on the specified webapp files in the wwwroot directory. It returns a JSON containing the ScanID, traking and results URL.
     *
     * Syntax: 
     *
     * az webapp scan start --name
     *                      --resource-group
     *                      [--slot]
     *                      [--timeout]
     */
    ext_webapp_az_webapp_scan_start(): void {
    }

    /**
     * Stops the current executing scan. Does nothing if no scan is executing.
     *
     * Syntax: 
     *
     * az webapp scan stop --name
     *                     --resource-group
     *                     [--slot]
     */
    ext_webapp_az_webapp_scan_stop(): void {
    }

    /**
     * Track status of scan by providing scan-id. You can track the status of the scan from [Starting, Success, Failed, TimeoutFailure, Executing].
     *
     * Syntax: 
     *
     * az webapp scan track --name
     *                      --resource-group
     *                      --scan-id
     *                      [--slot]
     */
    ext_webapp_az_webapp_scan_track(): void {
    }
}

/** Manage web apps. */
class ext_webapp_az_webapp {
}

/** Manage and update CLI extensions. */
class az_extension {
    /**
     * Add an extension.
     *
     * Syntax: 
     *
     * az extension add [--name]
     *                  [--pip-extra-index-urls]
     *                  [--pip-proxy]
     *                  [--source]
     *                  [--system]
     *                  [--upgrade]
     *                  [--version]
     *                  [--yes]
     */
    az_extension_add(): void {
    }

    /**
     * List the installed extensions.
     *
     * Syntax: 
     *
     * az extension list [--query-examples]
     */
    az_extension_list(): void {
    }

    /**
     * List publicly available extensions.
     *
     * Syntax: 
     *
     * az extension list-available [--show-details]
     */
    az_extension_list_available(): void {
    }

    /**
     * List available versions for an extension.
     *
     * Syntax: 
     *
     * az extension list-versions --name
     */
    az_extension_list_versions(): void {
    }

    /**
     * Remove an extension.
     *
     * Syntax: 
     *
     * az extension remove --name
     */
    az_extension_remove(): void {
    }

    /**
     * Show an extension.
     *
     * Syntax: 
     *
     * az extension show --name
     *                   [--query-examples]
     */
    az_extension_show(): void {
    }

    /**
     * Update an extension.
     *
     * Syntax: 
     *
     * az extension update --name
     *                     [--pip-extra-index-urls]
     *                     [--pip-proxy]
     */
    az_extension_update(): void {
    }
}

/** Manage resource provider features. */
class az_feature {
    /**
     * List preview features.
     *
     * Syntax: 
     *
     * az feature list [--namespace]
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_feature_list(): void {
    }

    /**
     * Register a preview feature.
     *
     * Syntax: 
     *
     * az feature register --name
     *                     --namespace
     *                     [--subscription]
     */
    az_feature_register(): void {
    }

    /**
     * Gets the preview feature with the specified name.
     *
     * Syntax: 
     *
     * az feature show --name
     *                 --namespace
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_feature_show(): void {
    }

    /**
     * Unregister a preview feature.
     *
     * Syntax: 
     *
     * az feature unregister --name
     *                       --namespace
     *                       [--subscription]
     */
    az_feature_unregister(): void {
    }
}

/** Methods that show, set, add, and remove access restrictions on a functionapp. */
class az_functionapp_config_access_restriction {
    /**
     * Adds an Access Restriction to the functionapp.
     *
     * Syntax: 
     *
     * az functionapp config access-restriction add --priority
     *                                              [--action {Allow, Deny}]
     *                                              [--description]
     *                                              [--ids]
     *                                              [--ignore-missing-endpoint {false, true}]
     *                                              [--ip-address]
     *                                              [--name]
     *                                              [--resource-group]
     *                                              [--rule-name]
     *                                              [--scm-site {false, true}]
     *                                              [--slot]
     *                                              [--subnet]
     *                                              [--subscription]
     *                                              [--vnet-name]
     */
    az_functionapp_config_access_restriction_add(): void {
    }

    /**
     * Removes an Access Restriction from the functionapp.
     *
     * Syntax: 
     *
     * az functionapp config access-restriction remove [--action {Allow, Deny}]
     *                                                 [--ids]
     *                                                 [--ip-address]
     *                                                 [--name]
     *                                                 [--resource-group]
     *                                                 [--rule-name]
     *                                                 [--scm-site {false, true}]
     *                                                 [--slot]
     *                                                 [--subnet]
     *                                                 [--subscription]
     *                                                 [--vnet-name]
     */
    az_functionapp_config_access_restriction_remove(): void {
    }

    /**
     * Sets if SCM site is using the same restrictions as the main site.
     *
     * Syntax: 
     *
     * az functionapp config access-restriction set --use-same-restrictions-for-scm-site {false, true}
     *                                              [--ids]
     *                                              [--name]
     *                                              [--resource-group]
     *                                              [--slot]
     *                                              [--subscription]
     */
    az_functionapp_config_access_restriction_set(): void {
    }

    /**
     * Show Access Restriction settings for functionapp.
     *
     * Syntax: 
     *
     * az functionapp config access-restriction show [--ids]
     *                                               [--name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--slot]
     *                                               [--subscription]
     */
    az_functionapp_config_access_restriction_show(): void {
    }
}

/** Configure function app settings. */
class az_functionapp_config_appsettings {
    /**
     * Delete a function app's settings.
     *
     * Syntax: 
     *
     * az functionapp config appsettings delete --setting-names
     *                                          [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--slot]
     *                                          [--subscription]
     */
    az_functionapp_config_appsettings_delete(): void {
    }

    /**
     * Show settings for a function app.
     *
     * Syntax: 
     *
     * az functionapp config appsettings list --name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--slot]
     *                                        [--subscription]
     */
    az_functionapp_config_appsettings_list(): void {
    }

    /**
     * Update a function app's settings.
     *
     * Syntax: 
     *
     * az functionapp config appsettings set [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--settings]
     *                                       [--slot]
     *                                       [--slot-settings]
     *                                       [--subscription]
     */
    az_functionapp_config_appsettings_set(): void {
    }
}

/** Manage function app container settings. */
class az_functionapp_config_container {
    /**
     * Delete a function app container's settings.
     *
     * Syntax: 
     *
     * az functionapp config container delete [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--slot]
     *                                        [--subscription]
     */
    az_functionapp_config_container_delete(): void {
    }

    /**
     * Set a function app container's settings.
     *
     * Syntax: 
     *
     * az functionapp config container set [--docker-custom-image-name]
     *                                     [--docker-registry-server-password]
     *                                     [--docker-registry-server-url]
     *                                     [--docker-registry-server-user]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--slot]
     *                                     [--subscription]
     */
    az_functionapp_config_container_set(): void {
    }

    /**
     * Get details of a function app container's settings.
     *
     * Syntax: 
     *
     * az functionapp config container show [--ids]
     *                                      [--name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--slot]
     *                                      [--subscription]
     */
    az_functionapp_config_container_show(): void {
    }
}

/** Configure hostnames for a function app. */
class az_functionapp_config_hostname {
    /**
     * Bind a hostname to a function app.
     *
     * Syntax: 
     *
     * az functionapp config hostname add [--hostname]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_functionapp_config_hostname_add(): void {
    }

    /**
     * Unbind a hostname from a function app.
     *
     * Syntax: 
     *
     * az functionapp config hostname delete [--hostname]
     *                                       [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_functionapp_config_hostname_delete(): void {
    }

    /**
     * Get the external-facing IP address for a function app.
     *
     * Syntax: 
     *
     * az functionapp config hostname get-external-ip [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_functionapp_config_hostname_get_external_ip(): void {
    }

    /**
     * List all hostname bindings for a function app.
     *
     * Syntax: 
     *
     * az functionapp config hostname list --resource-group
     *                                     --webapp-name
     *                                     [--query-examples]
     *                                     [--slot]
     *                                     [--subscription]
     */
    az_functionapp_config_hostname_list(): void {
    }
}

/** Configure SSL certificates. */
class az_functionapp_config_ssl {
    /**
     * Bind an SSL certificate to a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl bind --certificate-thumbprint
     *                                --ssl-type {IP, SNI}
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--slot]
     *                                [--subscription]
     */
    az_functionapp_config_ssl_bind(): void {
    }

    /**
     * Create a Managed Certificate for a hostname in a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl create --hostname
     *                                  --name
     *                                  --resource-group
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_functionapp_config_ssl_create(): void {
    }

    /**
     * Delete an SSL certificate from a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl delete --certificate-thumbprint
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_functionapp_config_ssl_delete(): void {
    }

    /**
     * Import an SSL certificate to a function app from Key Vault.
     *
     * Syntax: 
     *
     * az functionapp config ssl import --key-vault
     *                                  --key-vault-certificate-name
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_functionapp_config_ssl_import(): void {
    }

    /**
     * List SSL certificates for a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl list --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_functionapp_config_ssl_list(): void {
    }

    /**
     * Unbind an SSL certificate from a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl unbind --certificate-thumbprint
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_functionapp_config_ssl_unbind(): void {
    }

    /**
     * Upload an SSL certificate to a function app.
     *
     * Syntax: 
     *
     * az functionapp config ssl upload --certificate-file
     *                                  --certificate-password
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_functionapp_config_ssl_upload(): void {
    }
}

/** Configure a function app. */
class az_functionapp_config {
    /**
     * Set the function app's configuration.
     *
     * Syntax: 
     *
     * az functionapp config set [--always-on {false, true}]
     *                           [--auto-heal-enabled {false, true}]
     *                           [--ftps-state {AllAllowed, Disabled, FtpsOnly}]
     *                           [--generic-configurations]
     *                           [--http20-enabled {false, true}]
     *                           [--ids]
     *                           [--java-container]
     *                           [--java-container-version]
     *                           [--java-version]
     *                           [--linux-fx-version]
     *                           [--min-tls-version]
     *                           [--name]
     *                           [--net-framework-version]
     *                           [--number-of-workers]
     *                           [--php-version]
     *                           [--prewarmed-instance-count]
     *                           [--python-version]
     *                           [--remote-debugging-enabled {false, true}]
     *                           [--resource-group]
     *                           [--slot]
     *                           [--startup-file]
     *                           [--subscription]
     *                           [--use-32bit-worker-process {false, true}]
     *                           [--web-sockets-enabled {false, true}]
     */
    az_functionapp_config_set(): void {
    }

    /**
     * Get the details of a function app's configuration.
     *
     * Syntax: 
     *
     * az functionapp config show [--ids]
     *                            [--name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--slot]
     *                            [--subscription]
     */
    az_functionapp_config_show(): void {
    }
}

/** Manage Cross-Origin Resource Sharing (CORS). */
class az_functionapp_cors {
    /**
     * Add allowed origins.
     *
     * Syntax: 
     *
     * az functionapp cors add --allowed-origins
     *                         [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--slot]
     *                         [--subscription]
     */
    az_functionapp_cors_add(): void {
    }

    /**
     * Remove allowed origins.
     *
     * Syntax: 
     *
     * az functionapp cors remove --allowed-origins
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--slot]
     *                            [--subscription]
     */
    az_functionapp_cors_remove(): void {
    }

    /**
     * Show allowed origins.
     *
     * Syntax: 
     *
     * az functionapp cors show [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--slot]
     *                          [--subscription]
     */
    az_functionapp_cors_show(): void {
    }
}

/** Manage container-based continuous deployment. */
class az_functionapp_deployment_container {
    /**
     * Configure continuous deployment via containers.
     *
     * Syntax: 
     *
     * az functionapp deployment container config --enable-cd {false, true}
     *                                            [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--slot]
     *                                            [--subscription]
     */
    az_functionapp_deployment_container_config(): void {
    }

    /**
     * Get the URL which can be used to configure webhooks for continuous deployment.
     *
     * Syntax: 
     *
     * az functionapp deployment container show-cd-url [--ids]
     *                                                 [--name]
     *                                                 [--resource-group]
     *                                                 [--slot]
     *                                                 [--subscription]
     */
    az_functionapp_deployment_container_show_cd_url(): void {
    }
}

/** Manage function app deployment slots. */
class az_functionapp_deployment_slot {
    /**
     * Configure deployment slot auto swap.
     *
     * Syntax: 
     *
     * az functionapp deployment slot auto-swap --slot
     *                                          [--auto-swap-slot]
     *                                          [--disable]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_functionapp_deployment_slot_auto_swap(): void {
    }

    /**
     * Create a deployment slot.
     *
     * Syntax: 
     *
     * az functionapp deployment slot create --name
     *                                       --resource-group
     *                                       --slot
     *                                       [--configuration-source]
     *                                       [--subscription]
     */
    az_functionapp_deployment_slot_create(): void {
    }

    /**
     * Delete a deployment slot.
     *
     * Syntax: 
     *
     * az functionapp deployment slot delete --slot
     *                                       [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_functionapp_deployment_slot_delete(): void {
    }

    /**
     * List all deployment slots.
     *
     * Syntax: 
     *
     * az functionapp deployment slot list [--ids]
     *                                     [--name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_functionapp_deployment_slot_list(): void {
    }

    /**
     * Change deployment slots for a function app.
     *
     * Syntax: 
     *
     * az functionapp deployment slot swap --slot
     *                                     [--action {preview, reset, swap}]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     *                                     [--target-slot]
     */
    az_functionapp_deployment_slot_swap(): void {
    }
}

/** Manage function app deployment via source control. */
class az_functionapp_deployment_source {
    /**
     * Manage deployment from git or Mercurial repositories.
     *
     * Syntax: 
     *
     * az functionapp deployment source config --repo-url
     *                                         [--app-working-dir]
     *                                         [--branch]
     *                                         [--cd-account-create]
     *                                         [--cd-app-type {AspNet, AspNetCore, NodeJS, PHP, Python}]
     *                                         [--cd-project-url]
     *                                         [--git-token]
     *                                         [--ids]
     *                                         [--manual-integration]
     *                                         [--name]
     *                                         [--nodejs-task-runner {Grunt, Gulp, None}]
     *                                         [--private-repo-password]
     *                                         [--private-repo-username]
     *                                         [--python-framework {Bottle, Django, Flask}]
     *                                         [--python-version {Python 2.7.12 x64, Python 2.7.12 x86, Python 2.7.13 x64, Python 2.7.13 x86, Python 3.5.3 x64, Python 3.5.3 x86, Python 3.6.0 x64, Python 3.6.0 x86, Python 3.6.1 x86, Python 3.6.2 x64}]
     *                                         [--repository-type {externalgit, git, github, localgit, mercurial, vsts}]
     *                                         [--resource-group]
     *                                         [--slot]
     *                                         [--slot-swap]
     *                                         [--subscription]
     *                                         [--test]
     */
    az_functionapp_deployment_source_config(): void {
    }

    /**
     * Get a URL for a git repository endpoint to clone and push to for function app deployment.
     *
     * Syntax: 
     *
     * az functionapp deployment source config-local-git [--ids]
     *                                                   [--name]
     *                                                   [--resource-group]
     *                                                   [--slot]
     *                                                   [--subscription]
     */
    az_functionapp_deployment_source_config_local_git(): void {
    }

    /**
     * Perform deployment using the kudu zip push deployment for a function app.
     *
     * Syntax: 
     *
     * az functionapp deployment source config-zip --src
     *                                             [--build-remote {false, true}]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--resource-group]
     *                                             [--slot]
     *                                             [--subscription]
     *                                             [--timeout]
     */
    az_functionapp_deployment_source_config_zip(): void {
    }

    /**
     * Delete a source control deployment configuration.
     *
     * Syntax: 
     *
     * az functionapp deployment source delete [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--slot]
     *                                         [--subscription]
     */
    az_functionapp_deployment_source_delete(): void {
    }

    /**
     * Get the details of a source control deployment configuration.
     *
     * Syntax: 
     *
     * az functionapp deployment source show [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_functionapp_deployment_source_show(): void {
    }

    /**
     * Synchronize from the repository. Only needed under manual integration mode.
     *
     * Syntax: 
     *
     * az functionapp deployment source sync [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_functionapp_deployment_source_sync(): void {
    }

    /**
     * Update source control token cached in Azure app service.
     *
     * Syntax: 
     *
     * az functionapp deployment source update-token [--git-token]
     *                                               [--subscription]
     */
    az_functionapp_deployment_source_update_token(): void {
    }
}

/** Manage user credentials for deployment. */
class az_functionapp_deployment_user {
    /**
     * Update deployment credentials.
     *
     * Syntax: 
     *
     * az functionapp deployment user set --user-name
     *                                    [--password]
     *                                    [--subscription]
     */
    az_functionapp_deployment_user_set(): void {
    }

    /**
     * Gets publishing user.
     *
     * Syntax: 
     *
     * az functionapp deployment user show [--query-examples]
     *                                     [--subscription]
     */
    az_functionapp_deployment_user_show(): void {
    }
}

/** Manage function app deployments. */
class az_functionapp_deployment {
    /**
     * Get the details for available function app publishing credentials.
     *
     * Syntax: 
     *
     * az functionapp deployment list-publishing-credentials [--ids]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--slot]
     *                                                       [--subscription]
     */
    az_functionapp_deployment_list_publishing_credentials(): void {
    }

    /**
     * Get the details for available function app deployment profiles.
     *
     * Syntax: 
     *
     * az functionapp deployment list-publishing-profiles [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--slot]
     *                                                    [--subscription]
     *                                                    [--xml]
     */
    az_functionapp_deployment_list_publishing_profiles(): void {
    }
}

/** Azure Function specific integration with Azure DevOps. Please visit <a href="https://aka.ms/functions-azure-devops">https://aka.ms/functions-azure-devops</a> for more information. */
class az_functionapp_devops_pipeline {
    /**
     * Create an Azure DevOps pipeline for a function app.
     *
     * Syntax: 
     *
     * az functionapp devops-pipeline create [--allow-force-push {false, true}]
     *                                       [--functionapp-name]
     *                                       [--github-pat]
     *                                       [--github-repository]
     *                                       [--organization-name]
     *                                       [--overwrite-yaml {false, true}]
     *                                       [--project-name]
     *                                       [--repository-name]
     *                                       [--subscription]
     */
    az_functionapp_devops_pipeline_create(): void {
    }
}

/** Manage function keys. */
class az_functionapp_function_keys {
    /**
     * Delete a function key.
     *
     * Syntax: 
     *
     * az functionapp function keys delete --key-name
     *                                     --name
     *                                     --resource-group
     *                                     [--function-name]
     *                                     [--slot]
     *                                     [--subscription]
     */
    az_functionapp_function_keys_delete(): void {
    }

    /**
     * List all function keys.
     *
     * Syntax: 
     *
     * az functionapp function keys list --function-name
     *                                   --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_functionapp_function_keys_list(): void {
    }

    /**
     * Create or update a function key.
     *
     * Syntax: 
     *
     * az functionapp function keys set --function-name
     *                                  --key-name
     *                                  --name
     *                                  --resource-group
     *                                  [--key-value]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_functionapp_function_keys_set(): void {
    }
}

/** Manage function app functions. */
class az_functionapp_function {
    /**
     * Delete a function.
     *
     * Syntax: 
     *
     * az functionapp function delete --function-name
     *                                --name
     *                                --resource-group
     *                                [--subscription]
     */
    az_functionapp_function_delete(): void {
    }

    /**
     * Get the details of a function.
     *
     * Syntax: 
     *
     * az functionapp function show --function-name
     *                              --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_functionapp_function_show(): void {
    }
}

/** Methods that list, add and remove hybrid-connections from functionapp. */
class az_functionapp_hybrid_connection {
    /**
     * Add a hybrid-connection to a functionapp.
     *
     * Syntax: 
     *
     * az functionapp hybrid-connection add --hybrid-connection
     *                                      --name
     *                                      --namespace
     *                                      --resource-group
     *                                      [--slot]
     *                                      [--subscription]
     */
    az_functionapp_hybrid_connection_add(): void {
    }

    /**
     * List the hybrid-connections on a functionapp.
     *
     * Syntax: 
     *
     * az functionapp hybrid-connection list --name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_functionapp_hybrid_connection_list(): void {
    }

    /**
     * Remove a hybrid-connection from a functionapp.
     *
     * Syntax: 
     *
     * az functionapp hybrid-connection remove --hybrid-connection
     *                                         --name
     *                                         --namespace
     *                                         --resource-group
     *                                         [--slot]
     *                                         [--subscription]
     */
    az_functionapp_hybrid_connection_remove(): void {
    }
}

/** Manage web app's managed service identity. */
class az_functionapp_identity {
    /**
     * Assign managed service identity to the web app.
     *
     * Syntax: 
     *
     * az functionapp identity assign [--identities]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--role]
     *                                [--scope]
     *                                [--slot]
     *                                [--subscription]
     */
    az_functionapp_identity_assign(): void {
    }

    /**
     * Disable web app's managed service identity.
     *
     * Syntax: 
     *
     * az functionapp identity remove [--identities]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--slot]
     *                                [--subscription]
     */
    az_functionapp_identity_remove(): void {
    }

    /**
     * Display web app's managed service identity.
     *
     * Syntax: 
     *
     * az functionapp identity show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--slot]
     *                              [--subscription]
     */
    az_functionapp_identity_show(): void {
    }
}

/** Manage function app keys. */
class az_functionapp_keys {
    /**
     * Delete a function app key.
     *
     * Syntax: 
     *
     * az functionapp keys delete --key-name
     *                            --key-type {functionKeys, masterKey, systemKey}
     *                            --name
     *                            --resource-group
     *                            [--slot]
     *                            [--subscription]
     */
    az_functionapp_keys_delete(): void {
    }

    /**
     * List all function app keys.
     *
     * Syntax: 
     *
     * az functionapp keys list --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--slot]
     *                          [--subscription]
     */
    az_functionapp_keys_list(): void {
    }

    /**
     * Create or update a function app key.
     *
     * Syntax: 
     *
     * az functionapp keys set --key-name
     *                         --key-type {functionKeys, masterKey, systemKey}
     *                         --name
     *                         --resource-group
     *                         [--key-value]
     *                         [--slot]
     *                         [--subscription]
     */
    az_functionapp_keys_set(): void {
    }
}

/** Manage function app deployment logs. */
class az_functionapp_log_deployment {
    /**
     * List deployment logs of the deployments associated with function app.
     *
     * Syntax: 
     *
     * az functionapp log deployment list --name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_functionapp_log_deployment_list(): void {
    }

    /**
     * Show deployment logs of the latest deployment, or a specific deployment if deployment-id is specified.
     *
     * Syntax: 
     *
     * az functionapp log deployment show --name
     *                                    --resource-group
     *                                    [--deployment-id]
     *                                    [--query-examples]
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_functionapp_log_deployment_show(): void {
    }
}

/** */
class az_functionapp_log {
}

/** Manage App Service Plans for an Azure Function. */
class az_functionapp_plan {
    /**
     * Create an App Service Plan for an Azure Function.
     *
     * Syntax: 
     *
     * az functionapp plan create --name
     *                            --resource-group
     *                            --sku
     *                            [--is-linux {false, true}]
     *                            [--location]
     *                            [--max-burst]
     *                            [--min-instances]
     *                            [--subscription]
     *                            [--tags]
     */
    az_functionapp_plan_create(): void {
    }

    /**
     * Delete an App Service Plan.
     *
     * Syntax: 
     *
     * az functionapp plan delete [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--yes]
     */
    az_functionapp_plan_delete(): void {
    }

    /**
     * List App Service Plans.
     *
     * Syntax: 
     *
     * az functionapp plan list [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_functionapp_plan_list(): void {
    }

    /**
     * Get the App Service Plans for a resource group or a set of resource groups.
     *
     * Syntax: 
     *
     * az functionapp plan show [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_functionapp_plan_show(): void {
    }

    /**
     * Update an App Service plan for an Azure Function.
     *
     * Syntax: 
     *
     * az functionapp plan update [--add]
     *                            [--force-string]
     *                            [--ids]
     *                            [--max-burst]
     *                            [--min-instances]
     *                            [--name]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--sku]
     *                            [--subscription]
     */
    az_functionapp_plan_update(): void {
    }
}

/** Methods that list, add, and remove virtual networks integrations from a functionapp. */
class az_functionapp_vnet_integration {
    /**
     * Add a regional virtual network integration to a functionapp.
     *
     * Syntax: 
     *
     * az functionapp vnet-integration add --name
     *                                     --resource-group
     *                                     --subnet
     *                                     --vnet
     *                                     [--slot]
     *                                     [--subscription]
     */
    az_functionapp_vnet_integration_add(): void {
    }

    /**
     * List the virtual network integrations on a functionapp.
     *
     * Syntax: 
     *
     * az functionapp vnet-integration list --name
     *                                      --resource-group
     *                                      [--query-examples]
     *                                      [--slot]
     *                                      [--subscription]
     */
    az_functionapp_vnet_integration_list(): void {
    }

    /**
     * Remove a regional virtual network integration from functionapp.
     *
     * Syntax: 
     *
     * az functionapp vnet-integration remove --name
     *                                        --resource-group
     *                                        [--slot]
     *                                        [--subscription]
     */
    az_functionapp_vnet_integration_remove(): void {
    }
}

/** Manage function apps. To install the Azure Functions Core tools see <a href="https://github.com/Azure/azure-functions-core-tools">https://github.com/Azure/azure-functions-core-tools</a>. */
class az_functionapp {
    /**
     * Create a function app.
     *
     * Syntax: 
     *
     * az functionapp create --name
     *                       --resource-group
     *                       --storage-account
     *                       [--app-insights]
     *                       [--app-insights-key]
     *                       [--assign-identity]
     *                       [--consumption-plan-location]
     *                       [--deployment-container-image-name]
     *                       [--deployment-local-git]
     *                       [--deployment-source-branch]
     *                       [--deployment-source-url]
     *                       [--disable-app-insights {false, true}]
     *                       [--docker-registry-server-password]
     *                       [--docker-registry-server-user]
     *                       [--functions-version {2, 3}]
     *                       [--os-type {Linux, Windows}]
     *                       [--plan]
     *                       [--role]
     *                       [--runtime {custom, dotnet, java, node, powershell, python}]
     *                       [--runtime-version]
     *                       [--scope]
     *                       [--subscription]
     *                       [--tags]
     */
    az_functionapp_create(): void {
    }

    /**
     * Delete a function app.
     *
     * Syntax: 
     *
     * az functionapp delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--slot]
     *                       [--subscription]
     */
    az_functionapp_delete(): void {
    }

    /**
     * List function apps.
     *
     * Syntax: 
     *
     * az functionapp list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_functionapp_list(): void {
    }

    /**
     * List available locations for running function apps.
     *
     * Syntax: 
     *
     * az functionapp list-consumption-locations [--subscription]
     */
    az_functionapp_list_consumption_locations(): void {
    }

    /**
     * Restart a function app.
     *
     * Syntax: 
     *
     * az functionapp restart [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--slot]
     *                        [--subscription]
     */
    az_functionapp_restart(): void {
    }

    /**
     * Get the details of a function app.
     *
     * Syntax: 
     *
     * az functionapp show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--slot]
     *                     [--subscription]
     */
    az_functionapp_show(): void {
    }

    /**
     * Start a function app.
     *
     * Syntax: 
     *
     * az functionapp start [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--slot]
     *                      [--subscription]
     */
    az_functionapp_start(): void {
    }

    /**
     * Stop a function app.
     *
     * Syntax: 
     *
     * az functionapp stop [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--slot]
     *                     [--subscription]
     */
    az_functionapp_stop(): void {
    }

    /**
     * Update a function app.
     *
     * Syntax: 
     *
     * az functionapp update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--plan]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     */
    az_functionapp_update(): void {
    }
}

/** Manage deployment operations. */
class az_group_deployment_operation {
    /**
     * Gets all deployments operations for a deployment.
     *
     * Syntax: 
     *
     * az group deployment operation list --name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     *                                    [--top]
     */
    az_group_deployment_operation_list(): void {
    }

    /**
     * Get a deployment's operation.
     *
     * Syntax: 
     *
     * az group deployment operation show --name
     *                                    --operation-ids
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_group_deployment_operation_show(): void {
    }
}

/** Manage Azure Resource Manager deployments. */
class az_group_deployment {
    /**
     * Cancels a currently running template deployment.
     *
     * Syntax: 
     *
     * az group deployment cancel --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_group_deployment_cancel(): void {
    }

    /**
     * Start a deployment.
     *
     * Syntax: 
     *
     * az group deployment create --resource-group
     *                            [--aux-subs]
     *                            [--aux-tenants]
     *                            [--handle-extended-json-format]
     *                            [--mode {Complete, Incremental}]
     *                            [--name]
     *                            [--no-prompt {false, true}]
     *                            [--no-wait]
     *                            [--parameters]
     *                            [--rollback-on-error]
     *                            [--subscription]
     *                            [--template-file]
     *                            [--template-uri]
     */
    az_group_deployment_create(): void {
    }

    /**
     * Deletes a deployment from the deployment history.
     *
     * Syntax: 
     *
     * az group deployment delete --name
     *                            --resource-group
     *                            [--no-wait]
     *                            [--subscription]
     */
    az_group_deployment_delete(): void {
    }

    /**
     * Export the template used for a deployment.
     *
     * Syntax: 
     *
     * az group deployment export --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_group_deployment_export(): void {
    }

    /**
     * Get all the deployments for a resource group.
     *
     * Syntax: 
     *
     * az group deployment list --resource-group
     *                          [--filter]
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--top]
     */
    az_group_deployment_list(): void {
    }

    /**
     * Gets a deployment.
     *
     * Syntax: 
     *
     * az group deployment show --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_group_deployment_show(): void {
    }

    /**
     * Validate whether a template is syntactically correct.
     *
     * Syntax: 
     *
     * az group deployment validate --resource-group
     *                              [--handle-extended-json-format]
     *                              [--mode {Complete, Incremental}]
     *                              [--no-prompt {false, true}]
     *                              [--parameters]
     *                              [--rollback-on-error]
     *                              [--subscription]
     *                              [--template-file]
     *                              [--template-uri]
     */
    az_group_deployment_validate(): void {
    }

    /**
     * Place the CLI in a waiting state until a deployment condition is met.
     *
     * Syntax: 
     *
     * az group deployment wait --name
     *                          --resource-group
     *                          [--created]
     *                          [--custom]
     *                          [--deleted]
     *                          [--exists]
     *                          [--interval]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--updated]
     */
    az_group_deployment_wait(): void {
    }
}

/** Manage Azure resource group locks. */
class az_group_lock {
    /**
     * Create a resource group lock.
     *
     * Syntax: 
     *
     * az group lock create --lock-type {CanNotDelete, ReadOnly}
     *                      --name
     *                      --resource-group
     *                      [--notes]
     *                      [--subscription]
     */
    az_group_lock_create(): void {
    }

    /**
     * Delete a resource group lock.
     *
     * Syntax: 
     *
     * az group lock delete [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_group_lock_delete(): void {
    }

    /**
     * List lock information in the resource-group.
     *
     * Syntax: 
     *
     * az group lock list [--filter-string]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_group_lock_list(): void {
    }

    /**
     * Show the details of a resource group lock.
     *
     * Syntax: 
     *
     * az group lock show [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_group_lock_show(): void {
    }

    /**
     * Update a resource group lock.
     *
     * Syntax: 
     *
     * az group lock update [--ids]
     *                      [--lock-type {CanNotDelete, ReadOnly}]
     *                      [--name]
     *                      [--notes]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_group_lock_update(): void {
    }
}

/** Manage resource groups and template deployments. */
class az_group {
    /**
     * Create a new resource group.
     *
     * Syntax: 
     *
     * az group create --location
     *                 --name
     *                 [--managed-by]
     *                 [--subscription]
     *                 [--tags]
     */
    az_group_create(): void {
    }

    /**
     * Delete a resource group.
     *
     * Syntax: 
     *
     * az group delete --name
     *                 [--no-wait]
     *                 [--subscription]
     *                 [--yes]
     */
    az_group_delete(): void {
    }

    /**
     * Check if a resource group exists.
     *
     * Syntax: 
     *
     * az group exists --name
     *                 [--subscription]
     */
    az_group_exists(): void {
    }

    /**
     * Captures a resource group as a template.
     *
     * Syntax: 
     *
     * az group export --name
     *                 [--include-comments]
     *                 [--include-parameter-default-value]
     *                 [--resource-ids]
     *                 [--skip-all-params]
     *                 [--skip-resource-name-params]
     *                 [--subscription]
     */
    az_group_export(): void {
    }

    /**
     * List resource groups.
     *
     * Syntax: 
     *
     * az group list [--query-examples]
     *               [--subscription]
     *               [--tag]
     */
    az_group_list(): void {
    }

    /**
     * Gets a resource group.
     *
     * Syntax: 
     *
     * az group show --name
     *               [--query-examples]
     *               [--subscription]
     */
    az_group_show(): void {
    }

    /**
     * Update a resource group.
     *
     * Syntax: 
     *
     * az group update --name
     *                 [--add]
     *                 [--force-string]
     *                 [--remove]
     *                 [--set]
     *                 [--subscription]
     *                 [--tags]
     */
    az_group_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the resource group is met.
     *
     * Syntax: 
     *
     * az group wait --name
     *               [--created]
     *               [--custom]
     *               [--deleted]
     *               [--exists]
     *               [--interval]
     *               [--subscription]
     *               [--timeout]
     *               [--updated]
     */
    az_group_wait(): void {
    }
}

/** Manage HDInsight applications. */
class az_hdinsight_application {
    /**
     * Create an application for a HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight application create --cluster-name
     *                                 --name
     *                                 --resource-group
     *                                 --script-action-name
     *                                 --script-uri
     *                                 [--access-mode]
     *                                 [--destination-port]
     *                                 [--disable-gateway-auth {false, true}]
     *                                 [--edgenode-size]
     *                                 [--marketplace-id]
     *                                 [--no-validation-timeout]
     *                                 [--script-parameters]
     *                                 [--ssh-password]
     *                                 [--ssh-public-key]
     *                                 [--ssh-user]
     *                                 [--sub-domain-suffix]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--tags]
     *                                 [--type {CustomApplication, RServer}]
     *                                 [--vnet-name]
     */
    az_hdinsight_application_create(): void {
    }

    /**
     * Deletes the specified application on the HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight application delete --cluster-name
     *                                 --name
     *                                 --resource-group
     *                                 [--no-wait]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_hdinsight_application_delete(): void {
    }

    /**
     * Lists all of the applications for the HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight application list --cluster-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_hdinsight_application_list(): void {
    }

    /**
     * Gets properties of the specified application.
     *
     * Syntax: 
     *
     * az hdinsight application show --cluster-name
     *                               --name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_hdinsight_application_show(): void {
    }

    /**
     * Place the CLI in a waiting state until an operation is complete.
     *
     * Syntax: 
     *
     * az hdinsight application wait --cluster-name
     *                               --name
     *                               --resource-group
     *                               [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--interval]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_hdinsight_application_wait(): void {
    }
}

/** Manage schedule condition of the HDInsight cluster which enabled Schedule-based Autoscale. */
class az_hdinsight_autoscale_condition {
    /**
     * Add a new schedule condition.
     *
     * Syntax: 
     *
     * az hdinsight autoscale condition create --cluster-name
     *                                         --days {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}
     *                                         --resource-group
     *                                         --time
     *                                         --workernode-count
     *                                         [--no-wait]
     *                                         [--subscription]
     */
    az_hdinsight_autoscale_condition_create(): void {
    }

    /**
     * Delete schedule condition.
     *
     * Syntax: 
     *
     * az hdinsight autoscale condition delete --cluster-name
     *                                         --index
     *                                         --resource-group
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_hdinsight_autoscale_condition_delete(): void {
    }

    /**
     * List all schedule conditions.
     *
     * Syntax: 
     *
     * az hdinsight autoscale condition list --cluster-name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_hdinsight_autoscale_condition_list(): void {
    }

    /**
     * Update a schedule condition.
     *
     * Syntax: 
     *
     * az hdinsight autoscale condition update --cluster-name
     *                                         --index
     *                                         --resource-group
     *                                         [--days {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}]
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--time]
     *                                         [--workernode-count]
     */
    az_hdinsight_autoscale_condition_update(): void {
    }

    /**
     * Place the CLI in a waiting state until an operation is complete.
     *
     * Syntax: 
     *
     * az hdinsight autoscale condition wait --name
     *                                       --resource-group
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--subscription]
     *                                       [--timeout]
     *                                       [--updated]
     */
    az_hdinsight_autoscale_condition_wait(): void {
    }
}

/** Manage HDInsight cluster's Autoscale configuration. */
class az_hdinsight_autoscale {
    /**
     * Enable Autoscale for a running cluster.
     *
     * Syntax: 
     *
     * az hdinsight autoscale create --cluster-name
     *                               --resource-group
     *                               --type {Load, Schedule}
     *                               [--days {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}]
     *                               [--max-workernode-count]
     *                               [--min-workernode-count]
     *                               [--no-wait]
     *                               [--subscription]
     *                               [--time]
     *                               [--timezone]
     *                               [--workernode-count]
     *                               [--yes]
     */
    az_hdinsight_autoscale_create(): void {
    }

    /**
     * Disable Autoscale for a running cluster.
     *
     * Syntax: 
     *
     * az hdinsight autoscale delete --cluster-name
     *                               --resource-group
     *                               [--no-wait]
     *                               [--subscription]
     *                               [--yes]
     */
    az_hdinsight_autoscale_delete(): void {
    }

    /**
     * List the available timezone name when enabling Schedule-based Autoscale.
     *
     * Syntax: 
     *
     * az hdinsight autoscale list-timezones [--subscription]
     */
    az_hdinsight_autoscale_list_timezones(): void {
    }

    /**
     * Get the Autoscale configuration of a specified cluster.
     *
     * Syntax: 
     *
     * az hdinsight autoscale show --cluster-name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_hdinsight_autoscale_show(): void {
    }

    /**
     * Update the Autoscale configuration.
     *
     * Syntax: 
     *
     * az hdinsight autoscale update --cluster-name
     *                               --resource-group
     *                               [--max-workernode-count]
     *                               [--min-workernode-count]
     *                               [--no-wait]
     *                               [--subscription]
     *                               [--timezone]
     */
    az_hdinsight_autoscale_update(): void {
    }

    /**
     * Place the CLI in a waiting state until an operation is complete.
     *
     * Syntax: 
     *
     * az hdinsight autoscale wait --name
     *                             --resource-group
     *                             [--created]
     *                             [--custom]
     *                             [--deleted]
     *                             [--exists]
     *                             [--interval]
     *                             [--subscription]
     *                             [--timeout]
     *                             [--updated]
     */
    az_hdinsight_autoscale_wait(): void {
    }
}

/** Manage HDInsight cluster's virtual hosts. */
class az_hdinsight_host {
    /**
     * List the hosts of the specified HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight host list --cluster-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_hdinsight_host_list(): void {
    }

    /**
     * Restart the specific hosts of the specified HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight host restart --cluster-name
     *                           --host-names
     *                           --resource-group
     *                           [--subscription]
     *                           [--yes]
     */
    az_hdinsight_host_restart(): void {
    }
}

/** Manage Azure Monitor logs integration on an HDInsight cluster. */
class az_hdinsight_monitor {
    /**
     * Disable the Azure Monitor logs integration on an HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight monitor disable --name
     *                              --resource-group
     *                              [--subscription]
     */
    az_hdinsight_monitor_disable(): void {
    }

    /**
     * Enable the Azure Monitor logs integration on an HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight monitor enable --name
     *                             --resource-group
     *                             --workspace
     *                             [--no-validation-timeout]
     *                             [--primary-key]
     *                             [--subscription]
     */
    az_hdinsight_monitor_enable(): void {
    }

    /**
     * Get the status of Azure Monitor logs integration on an HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight monitor show --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_hdinsight_monitor_show(): void {
    }
}

/** Manage HDInsight script actions. */
class az_hdinsight_script_action {
    /**
     * Deletes a specified persisted script action of the cluster.
     *
     * Syntax: 
     *
     * az hdinsight script-action delete --cluster-name
     *                                   --name
     *                                   --resource-group
     *                                   [--subscription]
     */
    az_hdinsight_script_action_delete(): void {
    }

    /**
     * Execute script actions on the specified HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight script-action execute --cluster-name
     *                                    --name
     *                                    --resource-group
     *                                    --roles
     *                                    --script-uri
     *                                    [--persist-on-success]
     *                                    [--script-parameters]
     *                                    [--subscription]
     */
    az_hdinsight_script_action_execute(): void {
    }

    /**
     * Lists all the persisted script actions for the specified cluster.
     *
     * Syntax: 
     *
     * az hdinsight script-action list --cluster-name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_hdinsight_script_action_list(): void {
    }

    /**
     * Lists all scripts' execution history for the specified cluster.
     *
     * Syntax: 
     *
     * az hdinsight script-action list-execution-history --cluster-name
     *                                                   --resource-group
     *                                                   [--subscription]
     */
    az_hdinsight_script_action_list_execution_history(): void {
    }

    /**
     * Promotes the specified ad-hoc script execution to a persisted script.
     *
     * Syntax: 
     *
     * az hdinsight script-action promote --cluster-name
     *                                    --execution-id
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_hdinsight_script_action_promote(): void {
    }

    /**
     * Gets the script execution detail for the given script execution ID.
     *
     * Syntax: 
     *
     * az hdinsight script-action show-execution-details --cluster-name
     *                                                   --execution-id
     *                                                   --resource-group
     *                                                   [--subscription]
     */
    az_hdinsight_script_action_show_execution_details(): void {
    }
}

/** Manage HDInsight resources. */
class az_hdinsight {
    /**
     * Create a new cluster.
     *
     * Syntax: 
     *
     * az hdinsight create --name
     *                     --resource-group
     *                     --type
     *                     [--assign-identity]
     *                     [--autoscale-count]
     *                     [--autoscale-max-count]
     *                     [--autoscale-min-count]
     *                     [--autoscale-type {Load, Schedule}]
     *                     [--cluster-admin-account]
     *                     [--cluster-admin-password]
     *                     [--cluster-configurations]
     *                     [--cluster-tier {Premium, Standard}]
     *                     [--cluster-users-group-dns]
     *                     [--component-version]
     *                     [--days {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}]
     *                     [--domain]
     *                     [--edgenode-size]
     *                     [--encryption-algorithm {RSA-OAEP, RSA-OAEP-256, RSA1_5}]
     *                     [--encryption-at-host {false, true}]
     *                     [--encryption-in-transit {false, true}]
     *                     [--encryption-key-name]
     *                     [--encryption-key-version]
     *                     [--encryption-vault-uri]
     *                     [--esp]
     *                     [--headnode-size]
     *                     [--http-password]
     *                     [--http-user]
     *                     [--kafka-client-group-id]
     *                     [--kafka-client-group-name]
     *                     [--kafka-management-node-count]
     *                     [--kafka-management-node-size]
     *                     [--ldaps-urls]
     *                     [--location]
     *                     [--minimal-tls-version {1.0, 1.1, 1.2}]
     *                     [--no-validation-timeout]
     *                     [--no-wait]
     *                     [--outbound-public-network-access-type {PublicLoadBalancer, UDR}]
     *                     [--public-network-access-type {InboundAndOutbound, OutboundOnly}]
     *                     [--ssh-password]
     *                     [--ssh-public-key]
     *                     [--ssh-user]
     *                     [--storage-account]
     *                     [--storage-account-key]
     *                     [--storage-account-managed-identity]
     *                     [--storage-container]
     *                     [--storage-filesystem]
     *                     [--subnet]
     *                     [--subscription]
     *                     [--tags]
     *                     [--time]
     *                     [--timezone]
     *                     [--version]
     *                     [--vnet-name]
     *                     [--workernode-count]
     *                     [--workernode-data-disk-size]
     *                     [--workernode-data-disk-storage-account-type {premium_lrs, standard_lrs}]
     *                     [--workernode-data-disks-per-node]
     *                     [--workernode-size]
     *                     [--zookeepernode-size]
     */
    az_hdinsight_create(): void {
    }

    /**
     * Deletes the specified HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight delete --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--subscription]
     *                     [--yes]
     */
    az_hdinsight_delete(): void {
    }

    /**
     * List HDInsight clusters in a resource group or subscription.
     *
     * Syntax: 
     *
     * az hdinsight list [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_hdinsight_list(): void {
    }

    /**
     * Lists the usages for the specified location.
     *
     * Syntax: 
     *
     * az hdinsight list-usage --location
     *                         [--subscription]
     */
    az_hdinsight_list_usage(): void {
    }

    /**
     * Resizes the specified HDInsight cluster to the specified size.
     *
     * Syntax: 
     *
     * az hdinsight resize --name
     *                     --resource-group
     *                     --workernode-count
     *                     [--no-wait]
     *                     [--subscription]
     */
    az_hdinsight_resize(): void {
    }

    /**
     * Rotate the disk encryption key of the specified HDInsight cluster.
     *
     * Syntax: 
     *
     * az hdinsight rotate-disk-encryption-key --encryption-key-name
     *                                         --encryption-key-version
     *                                         --encryption-vault-uri
     *                                         --name
     *                                         --resource-group
     *                                         [--no-wait]
     *                                         [--subscription]
     */
    az_hdinsight_rotate_disk_encryption_key(): void {
    }

    /**
     * Gets the specified cluster.
     *
     * Syntax: 
     *
     * az hdinsight show --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     */
    az_hdinsight_show(): void {
    }

    /**
     * Patch HDInsight cluster with the specified parameters.
     *
     * Syntax: 
     *
     * az hdinsight update --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--subscription]
     *                     [--tags]
     */
    az_hdinsight_update(): void {
    }

    /**
     * Place the CLI in a waiting state until an operation is complete.
     *
     * Syntax: 
     *
     * az hdinsight wait --name
     *                   --resource-group
     *                   [--created]
     *                   [--custom]
     *                   [--deleted]
     *                   [--exists]
     *                   [--interval]
     *                   [--subscription]
     *                   [--timeout]
     *                   [--updated]
     */
    az_hdinsight_wait(): void {
    }
}

/** Managed Service Identities. */
class az_identity {
    /**
     * Create or update an identity in the specified subscription and resource group.
     *
     * Syntax: 
     *
     * az identity create --name
     *                    --resource-group
     *                    [--location]
     *                    [--subscription]
     *                    [--tags]
     */
    az_identity_create(): void {
    }

    /**
     * Deletes the identity.
     *
     * Syntax: 
     *
     * az identity delete [--ids]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_identity_delete(): void {
    }

    /**
     * List Managed Service Identities.
     *
     * Syntax: 
     *
     * az identity list [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_identity_list(): void {
    }

    /**
     * Lists available operations for the Managed Identity provider.
     *
     * Syntax: 
     *
     * az identity list-operations [--subscription]
     */
    az_identity_list_operations(): void {
    }

    /**
     * Gets the identity.
     *
     * Syntax: 
     *
     * az identity show [--ids]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_identity_show(): void {
    }
}

/** Manage image builder template customizers. */
class az_image_builder_customizer {
    /**
     * Add an image builder customizer to an image builder template.
     *
     * Syntax: 
     *
     * az image builder customizer add --customizer-name
     *                                 --type {file, powershell, shell, windows-restart, windows-update}
     *                                 [--defer]
     *                                 [--dest-path]
     *                                 [--exit-codes]
     *                                 [--file-source]
     *                                 [--filters]
     *                                 [--ids]
     *                                 [--inline-script]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--restart-check-command]
     *                                 [--restart-command]
     *                                 [--restart-timeout]
     *                                 [--script-url]
     *                                 [--search-criteria]
     *                                 [--subscription]
     *                                 [--update-limit]
     */
    az_image_builder_customizer_add(): void {
    }

    /**
     * Remove all image builder customizers from an image builder template.
     *
     * Syntax: 
     *
     * az image builder customizer clear [--defer]
     *                                   [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_image_builder_customizer_clear(): void {
    }

    /**
     * Remove an image builder customizer from an image builder template.
     *
     * Syntax: 
     *
     * az image builder customizer remove --customizer-name
     *                                    [--defer]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_image_builder_customizer_remove(): void {
    }
}

/** Manage image builder template output distributors. */
class az_image_builder_output {
    /**
     * Add an image builder output distributor to an image builder template.
     *
     * Syntax: 
     *
     * az image builder output add [--artifact-tags]
     *                             [--defer]
     *                             [--gallery-image-definition]
     *                             [--gallery-name]
     *                             [--gallery-replication-regions]
     *                             [--ids]
     *                             [--is-vhd]
     *                             [--managed-image]
     *                             [--managed-image-location]
     *                             [--name]
     *                             [--output-name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_image_builder_output_add(): void {
    }

    /**
     * Remove all image builder output distributors from an image builder template.
     *
     * Syntax: 
     *
     * az image builder output clear [--defer]
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_image_builder_output_clear(): void {
    }

    /**
     * Remove an image builder output distributor from an image builder template.
     *
     * Syntax: 
     *
     * az image builder output remove --output-name
     *                                [--defer]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_image_builder_output_remove(): void {
    }
}

/** Manage and build image builder templates. */
class az_image_builder {
    /**
     * Cancel the long running image build based on the image template.
     *
     * Syntax: 
     *
     * az image builder cancel [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_image_builder_cancel(): void {
    }

    /**
     * Create an image builder template.
     *
     * Syntax: 
     *
     * az image builder create --name
     *                         --resource-group
     *                         [--build-timeout]
     *                         [--checksum]
     *                         [--defer]
     *                         [--identity]
     *                         [--image-source]
     *                         [--image-template]
     *                         [--location]
     *                         [--managed-image-destinations]
     *                         [--no-wait]
     *                         [--os-disk-size]
     *                         [--scripts]
     *                         [--shared-image-destinations]
     *                         [--subnet]
     *                         [--subscription]
     *                         [--tags]
     *                         [--vm-size]
     *                         [--vnet]
     */
    az_image_builder_create(): void {
    }

    /**
     * Delete image builder template.
     *
     * Syntax: 
     *
     * az image builder delete [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_image_builder_delete(): void {
    }

    /**
     * List image builder templates.
     *
     * Syntax: 
     *
     * az image builder list [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_image_builder_list(): void {
    }

    /**
     * Build an image builder template.
     *
     * Syntax: 
     *
     * az image builder run [--ids]
     *                      [--name]
     *                      [--no-wait]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_image_builder_run(): void {
    }

    /**
     * Show an image builder template.
     *
     * Syntax: 
     *
     * az image builder show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_image_builder_show(): void {
    }

    /**
     * Show an image builder template's run outputs.
     *
     * Syntax: 
     *
     * az image builder show-runs [--ids]
     *                            [--name]
     *                            [--output-name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_image_builder_show_runs(): void {
    }

    /**
     * Update an image builder template.
     *
     * Syntax: 
     *
     * az image builder update [--add]
     *                         [--defer]
     *                         [--force-string]
     *                         [--ids]
     *                         [--name]
     *                         [--remove]
     *                         [--resource-group]
     *                         [--set]
     *                         [--subscription]
     */
    az_image_builder_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the template is met.
     *
     * Syntax: 
     *
     * az image builder wait [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--ids]
     *                       [--interval]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--timeout]
     *                       [--updated]
     */
    az_image_builder_wait(): void {
    }
}

/** Manage custom virtual machine images. */
class az_image {
    /**
     * Create a custom Virtual Machine Image from managed disks or snapshots.
     *
     * Syntax: 
     *
     * az image create --name
     *                 --resource-group
     *                 --source
     *                 [--data-disk-caching {None, ReadOnly, ReadWrite}]
     *                 [--data-disk-sources]
     *                 [--hyper-v-generation {V1, V2}]
     *                 [--location]
     *                 [--os-disk-caching {None, ReadOnly, ReadWrite}]
     *                 [--os-type {Linux, Windows}]
     *                 [--storage-sku {Premium_LRS, StandardSSD_LRS, Standard_LRS, UltraSSD_LRS}]
     *                 [--subscription]
     *                 [--tags]
     *                 [--zone-resilient {false, true}]
     */
    az_image_create(): void {
    }

    /**
     * Deletes an Image.
     *
     * Syntax: 
     *
     * az image delete [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_image_delete(): void {
    }

    /**
     * List custom VM images.
     *
     * Syntax: 
     *
     * az image list [--query-examples]
     *               [--resource-group]
     *               [--subscription]
     */
    az_image_list(): void {
    }

    /**
     * Gets an image.
     *
     * Syntax: 
     *
     * az image show [--expand]
     *               [--ids]
     *               [--name]
     *               [--query-examples]
     *               [--resource-group]
     *               [--subscription]
     */
    az_image_show(): void {
    }

    /**
     * Update custom VM images.
     *
     * Syntax: 
     *
     * az image update [--add]
     *                 [--force-string]
     *                 [--ids]
     *                 [--name]
     *                 [--remove]
     *                 [--resource-group]
     *                 [--set]
     *                 [--subscription]
     *                 [--tags]
     */
    az_image_update(): void {
    }
}

/** Manage IoT Central applications. */
class az_iot_central_app {
    /**
     * Create an IoT Central application.
     *
     * Syntax: 
     *
     * az iot central app create --name
     *                           --resource-group
     *                           --subdomain
     *                           [--display-name]
     *                           [--location]
     *                           [--no-wait]
     *                           [--sku {F1, S1, ST0, ST1, ST2}]
     *                           [--subscription]
     *                           [--template]
     */
    az_iot_central_app_create(): void {
    }

    /**
     * Delete an IoT Central application.
     *
     * Syntax: 
     *
     * az iot central app delete --name
     *                           --resource-group
     *                           [--no-wait]
     *                           [--subscription]
     *                           [--yes]
     */
    az_iot_central_app_delete(): void {
    }

    /**
     * List IoT Central applications.
     *
     * Syntax: 
     *
     * az iot central app list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_iot_central_app_list(): void {
    }

    /**
     * Get the details of an IoT Central application.
     *
     * Syntax: 
     *
     * az iot central app show --name
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_iot_central_app_show(): void {
    }

    /**
     * Update metadata for an IoT Central application.
     *
     * Syntax: 
     *
     * az iot central app update --name
     *                           --resource-group
     *                           [--add]
     *                           [--force-string]
     *                           [--remove]
     *                           [--set]
     *                           [--subscription]
     */
    az_iot_central_app_update(): void {
    }
}

/** Manage IoT Central resources. */
class az_iot_central {
}

/** Manage Azure IoT Hub Device Provisioning Service access policies. */
class az_iot_dps_access_policy {
    /**
     * Create a new shared access policy in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps access-policy create --access-policy-name
     *                                 --dps-name
     *                                 --resource-group
     *                                 --rights {DeviceConnect, EnrollmentRead, EnrollmentWrite, RegistrationStatusRead, RegistrationStatusWrite, ServiceConfig}
     *                                 [--no-wait]
     *                                 [--primary-key]
     *                                 [--secondary-key]
     *                                 [--subscription]
     */
    az_iot_dps_access_policy_create(): void {
    }

    /**
     * Delete a shared access policies in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps access-policy delete --access-policy-name
     *                                 --dps-name
     *                                 --resource-group
     *                                 [--no-wait]
     *                                 [--subscription]
     */
    az_iot_dps_access_policy_delete(): void {
    }

    /**
     * List all shared access policies in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps access-policy list --dps-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_iot_dps_access_policy_list(): void {
    }

    /**
     * Show details of a shared access policies in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps access-policy show --access-policy-name
     *                               --dps-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_iot_dps_access_policy_show(): void {
    }

    /**
     * Update a shared access policy in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps access-policy update --access-policy-name
     *                                 --dps-name
     *                                 --resource-group
     *                                 [--no-wait]
     *                                 [--primary-key]
     *                                 [--rights {DeviceConnect, EnrollmentRead, EnrollmentWrite, RegistrationStatusRead, RegistrationStatusWrite, ServiceConfig}]
     *                                 [--secondary-key]
     *                                 [--subscription]
     */
    az_iot_dps_access_policy_update(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service certificates. */
class az_iot_dps_certificate {
    /**
     * Create/upload an Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate create --certificate-name
     *                               --dps-name
     *                               --path
     *                               --resource-group
     *                               [--subscription]
     */
    az_iot_dps_certificate_create(): void {
    }

    /**
     * Delete an Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate delete --certificate-name
     *                               --dps-name
     *                               --etag
     *                               --resource-group
     *                               [--subscription]
     */
    az_iot_dps_certificate_delete(): void {
    }

    /**
     * Generate a verification code for an Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate generate-verification-code --certificate-name
     *                                                   --dps-name
     *                                                   --etag
     *                                                   --resource-group
     *                                                   [--subscription]
     */
    az_iot_dps_certificate_generate_verification_code(): void {
    }

    /**
     * List all certificates contained within an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps certificate list --dps-name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_iot_dps_certificate_list(): void {
    }

    /**
     * Show information about a particular Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate show --certificate-name
     *                             --dps-name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_iot_dps_certificate_show(): void {
    }

    /**
     * Update an Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate update --certificate-name
     *                               --dps-name
     *                               --etag
     *                               --path
     *                               --resource-group
     *                               [--subscription]
     */
    az_iot_dps_certificate_update(): void {
    }

    /**
     * Verify an Azure IoT Hub Device Provisioning Service certificate.
     *
     * Syntax: 
     *
     * az iot dps certificate verify --certificate-name
     *                               --dps-name
     *                               --etag
     *                               --path
     *                               --resource-group
     *                               [--subscription]
     */
    az_iot_dps_certificate_verify(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service linked IoT hubs. */
class az_iot_dps_linked_hub {
    /**
     * Create a linked IoT hub in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps linked-hub create --connection-string
     *                              --dps-name
     *                              --location
     *                              --resource-group
     *                              [--allocation-weight]
     *                              [--apply-allocation-policy {false, true}]
     *                              [--no-wait]
     *                              [--subscription]
     */
    az_iot_dps_linked_hub_create(): void {
    }

    /**
     * Update a linked IoT hub in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps linked-hub delete --dps-name
     *                              --linked-hub
     *                              --resource-group
     *                              [--no-wait]
     *                              [--subscription]
     */
    az_iot_dps_linked_hub_delete(): void {
    }

    /**
     * List all linked IoT hubs in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps linked-hub list --dps-name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_iot_dps_linked_hub_list(): void {
    }

    /**
     * Show details of a linked IoT hub in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps linked-hub show --dps-name
     *                            --linked-hub
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_iot_dps_linked_hub_show(): void {
    }

    /**
     * Update a linked IoT hub in an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps linked-hub update --dps-name
     *                              --linked-hub
     *                              --resource-group
     *                              [--allocation-weight]
     *                              [--apply-allocation-policy {false, true}]
     *                              [--no-wait]
     *                              [--subscription]
     */
    az_iot_dps_linked_hub_update(): void {
    }
}

/** Manage Azure IoT Hub Device Provisioning Service. */
class az_iot_dps {
    /**
     * Create an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps create --name
     *                   --resource-group
     *                   [--location]
     *                   [--sku {S1}]
     *                   [--subscription]
     *                   [--unit]
     */
    az_iot_dps_create(): void {
    }

    /**
     * Delete an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps delete [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_iot_dps_delete(): void {
    }

    /**
     * List Azure IoT Hub device provisioning services.
     *
     * Syntax: 
     *
     * az iot dps list [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_iot_dps_list(): void {
    }

    /**
     * Get the details of an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps show [--ids]
     *                 [--name]
     *                 [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_iot_dps_show(): void {
    }

    /**
     * Update an Azure IoT Hub device provisioning service.
     *
     * Syntax: 
     *
     * az iot dps update [--add]
     *                   [--force-string]
     *                   [--ids]
     *                   [--name]
     *                   [--remove]
     *                   [--resource-group]
     *                   [--set]
     *                   [--subscription]
     */
    az_iot_dps_update(): void {
    }
}

/** Manage IoT Hub certificates. */
class az_iot_hub_certificate {
    /**
     * Create/upload an Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate create --hub-name
     *                               --name
     *                               --path
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_iot_hub_certificate_create(): void {
    }

    /**
     * Deletes an Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate delete --etag
     *                               --name
     *                               [--hub-name]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_iot_hub_certificate_delete(): void {
    }

    /**
     * Generates a verification code for an Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate generate-verification-code --etag
     *                                                   --name
     *                                                   [--hub-name]
     *                                                   [--ids]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_iot_hub_certificate_generate_verification_code(): void {
    }

    /**
     * Lists all certificates contained within an Azure IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub certificate list [--hub-name]
     *                             [--ids]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_iot_hub_certificate_list(): void {
    }

    /**
     * Shows information about a particular Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate show --name
     *                             [--hub-name]
     *                             [--ids]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_iot_hub_certificate_show(): void {
    }

    /**
     * Update an Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate update --etag
     *                               --name
     *                               --path
     *                               [--hub-name]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_iot_hub_certificate_update(): void {
    }

    /**
     * Verifies an Azure IoT Hub certificate.
     *
     * Syntax: 
     *
     * az iot hub certificate verify --etag
     *                               --name
     *                               --path
     *                               [--hub-name]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_iot_hub_certificate_verify(): void {
    }
}

/** Manage the event hub consumer groups of an IoT hub. */
class az_iot_hub_consumer_group {
    /**
     * Create an event hub consumer group.
     *
     * Syntax: 
     *
     * az iot hub consumer-group create --hub-name
     *                                  --name
     *                                  [--event-hub-name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_iot_hub_consumer_group_create(): void {
    }

    /**
     * Delete an event hub consumer group.
     *
     * Syntax: 
     *
     * az iot hub consumer-group delete [--event-hub-name]
     *                                  [--hub-name]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_iot_hub_consumer_group_delete(): void {
    }

    /**
     * List event hub consumer groups.
     *
     * Syntax: 
     *
     * az iot hub consumer-group list [--event-hub-name]
     *                                [--hub-name]
     *                                [--ids]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_iot_hub_consumer_group_list(): void {
    }

    /**
     * Get the details for an event hub consumer group.
     *
     * Syntax: 
     *
     * az iot hub consumer-group show [--event-hub-name]
     *                                [--hub-name]
     *                                [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_iot_hub_consumer_group_show(): void {
    }
}

/** Manage device streams of an IoT hub. */
class az_iot_hub_devicestream {
    /**
     * Get IoT Hub's device streams endpoints.
     *
     * Syntax: 
     *
     * az iot hub devicestream show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_iot_hub_devicestream_show(): void {
    }
}

/** Manage message enrichments for endpoints of an IoT Hub. */
class az_iot_hub_message_enrichment {
    /**
     * Create a message enrichment for chosen endpoints in your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub message-enrichment create --endpoints
     *                                      --key
     *                                      --name
     *                                      --value
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_iot_hub_message_enrichment_create(): void {
    }

    /**
     * Delete a message enrichment in your IoT hub (by key).
     *
     * Syntax: 
     *
     * az iot hub message-enrichment delete --key
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_iot_hub_message_enrichment_delete(): void {
    }

    /**
     * Get information on all message enrichments for your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub message-enrichment list [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_iot_hub_message_enrichment_list(): void {
    }

    /**
     * Update a message enrichment in your IoT hub (by key).
     *
     * Syntax: 
     *
     * az iot hub message-enrichment update --endpoints
     *                                      --key
     *                                      --value
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_iot_hub_message_enrichment_update(): void {
    }
}

/** Manage shared access policies of an IoT hub. */
class az_iot_hub_policy {
    /**
     * Create a new shared access policy in an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub policy create --hub-name
     *                          --name
     *                          --permissions
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_iot_hub_policy_create(): void {
    }

    /**
     * Delete a shared access policy from an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub policy delete [--hub-name]
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_iot_hub_policy_delete(): void {
    }

    /**
     * List shared access policies of an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub policy list [--hub-name]
     *                        [--ids]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_iot_hub_policy_list(): void {
    }

    /**
     * Regenerate keys of a shared access policy of an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub policy renew-key --renew-key {primary, secondary, swap}
     *                             [--hub-name]
     *                             [--ids]
     *                             [--name]
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_iot_hub_policy_renew_key(): void {
    }

    /**
     * Get the details of a shared access policy of an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub policy show [--hub-name]
     *                        [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_iot_hub_policy_show(): void {
    }
}

/** Manage routes of an IoT hub. */
class az_iot_hub_route {
    /**
     * Create a route in IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route create --en
     *                         --hub-name
     *                         --name
     *                         --source {devicejoblifecycleevents, devicelifecycleevents, devicemessages, digitaltwinchangeevents, invalid, twinchangeevents}
     *                         [--condition]
     *                         [--enabled {false, true}]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_iot_hub_route_create(): void {
    }

    /**
     * Delete all or mentioned route for your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route delete [--hub-name]
     *                         [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--source {devicejoblifecycleevents, devicelifecycleevents, devicemessages, digitaltwinchangeevents, invalid, twinchangeevents}]
     *                         [--subscription]
     */
    az_iot_hub_route_delete(): void {
    }

    /**
     * Get all the routes in IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route list [--hub-name]
     *                       [--ids]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--source {devicejoblifecycleevents, devicelifecycleevents, devicemessages, digitaltwinchangeevents, invalid, twinchangeevents}]
     *                       [--subscription]
     */
    az_iot_hub_route_list(): void {
    }

    /**
     * Get information about the route in IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route show --name
     *                       [--hub-name]
     *                       [--ids]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_iot_hub_route_show(): void {
    }

    /**
     * Test all routes or mentioned route in IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route test [--ap]
     *                       [--body]
     *                       [--hub-name]
     *                       [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--source {devicejoblifecycleevents, devicelifecycleevents, devicemessages, digitaltwinchangeevents, invalid, twinchangeevents}]
     *                       [--sp]
     *                       [--subscription]
     */
    az_iot_hub_route_test(): void {
    }

    /**
     * Update a route in IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub route update --name
     *                         [--condition]
     *                         [--en]
     *                         [--enabled {false, true}]
     *                         [--hub-name]
     *                         [--ids]
     *                         [--resource-group]
     *                         [--source {devicejoblifecycleevents, devicelifecycleevents, devicemessages, digitaltwinchangeevents, invalid, twinchangeevents}]
     *                         [--subscription]
     */
    az_iot_hub_route_update(): void {
    }
}

/** Manage custom endpoints of an IoT hub. */
class az_iot_hub_routing_endpoint {
    /**
     * Add an endpoint to your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub routing-endpoint create --endpoint-name
     *                                    --endpoint-resource-group
     *                                    --endpoint-subscription-id
     *                                    --endpoint-type {azurestoragecontainer, eventhub, servicebusqueue, servicebustopic}
     *                                    --hub-name
     *                                    [--auth-type {identitybased, keybased}]
     *                                    [--batch-frequency]
     *                                    [--chunk-size]
     *                                    [--connection-string]
     *                                    [--container]
     *                                    [--encoding {avro, json}]
     *                                    [--endpoint-uri]
     *                                    [--entity-path]
     *                                    [--ff]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_iot_hub_routing_endpoint_create(): void {
    }

    /**
     * Delete all or mentioned endpoint for your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub routing-endpoint delete [--endpoint-name]
     *                                    [--endpoint-type {azurestoragecontainer, eventhub, servicebusqueue, servicebustopic}]
     *                                    [--hub-name]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_iot_hub_routing_endpoint_delete(): void {
    }

    /**
     * Get information on all the endpoints for your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub routing-endpoint list [--endpoint-type {azurestoragecontainer, eventhub, servicebusqueue, servicebustopic}]
     *                                  [--hub-name]
     *                                  [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_iot_hub_routing_endpoint_list(): void {
    }

    /**
     * Get information on mentioned endpoint for your IoT Hub.
     *
     * Syntax: 
     *
     * az iot hub routing-endpoint show --endpoint-name
     *                                  [--hub-name]
     *                                  [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_iot_hub_routing_endpoint_show(): void {
    }
}

/** Manage Azure IoT hubs. */
class az_iot_hub {
    /**
     * Create an Azure IoT hub.
     *
     * Syntax: 
     *
     * az iot hub create --name
     *                   --resource-group
     *                   [--c2d-max-delivery-count]
     *                   [--c2d-ttl]
     *                   [--fc]
     *                   [--fcs]
     *                   [--fcu]
     *                   [--fd]
     *                   [--feedback-lock-duration]
     *                   [--feedback-ttl]
     *                   [--fileupload-notification-max-delivery-count]
     *                   [--fileupload-notification-ttl]
     *                   [--fileupload-notifications {false, true}]
     *                   [--fileupload-sas-ttl]
     *                   [--fileupload-storage-auth-type]
     *                   [--location]
     *                   [--min-tls-version]
     *                   [--partition-count]
     *                   [--rd]
     *                   [--sku {B1, B2, B3, F1, S1, S2, S3}]
     *                   [--subscription]
     *                   [--unit]
     */
    az_iot_hub_create(): void {
    }

    /**
     * Delete an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub delete [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_iot_hub_delete(): void {
    }

    /**
     * List IoT hubs.
     *
     * Syntax: 
     *
     * az iot hub list [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_iot_hub_list(): void {
    }

    /**
     * List available pricing tiers.
     *
     * Syntax: 
     *
     * az iot hub list-skus [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_iot_hub_list_skus(): void {
    }

    /**
     * Initiate a manual failover for the IoT Hub to the geo-paired disaster recovery region.
     *
     * Syntax: 
     *
     * az iot hub manual-failover [--ids]
     *                            [--name]
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_iot_hub_manual_failover(): void {
    }

    /**
     * Get the details of an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub show [--ids]
     *                 [--name]
     *                 [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_iot_hub_show(): void {
    }

    /**
     * Show the connection strings for an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub show-connection-string [--all]
     *                                   [--hub-name]
     *                                   [--ids]
     *                                   [--key {primary, secondary}]
     *                                   [--policy-name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_iot_hub_show_connection_string(): void {
    }

    /**
     * Get the quota metrics for an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub show-quota-metrics [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_iot_hub_show_quota_metrics(): void {
    }

    /**
     * Get the statistics for an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub show-stats [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_iot_hub_show_stats(): void {
    }

    /**
     * Update metadata for an IoT hub.
     *
     * Syntax: 
     *
     * az iot hub update [--add]
     *                   [--c2d-max-delivery-count]
     *                   [--c2d-ttl]
     *                   [--fc]
     *                   [--fcs]
     *                   [--fcu]
     *                   [--fd]
     *                   [--feedback-lock-duration]
     *                   [--feedback-ttl]
     *                   [--fileupload-notification-max-delivery-count]
     *                   [--fileupload-notification-ttl]
     *                   [--fileupload-notifications {false, true}]
     *                   [--fileupload-sas-ttl]
     *                   [--fileupload-storage-auth-type]
     *                   [--force-string]
     *                   [--ids]
     *                   [--name]
     *                   [--rd]
     *                   [--remove]
     *                   [--resource-group]
     *                   [--set]
     *                   [--sku {B1, B2, B3, F1, S1, S2, S3}]
     *                   [--subscription]
     *                   [--unit]
     */
    az_iot_hub_update(): void {
    }
}

/** Manage Internet of Things (IoT) assets. */
class az_iot {
}

/** Manage IoT Central applications. */
class az_iotcentral_app {
    /**
     * Create an IoT Central application.
     *
     * Syntax: 
     *
     * az iotcentral app create --name
     *                          --resource-group
     *                          --subdomain
     *                          [--display-name]
     *                          [--location]
     *                          [--sku {F1, S1, ST0, ST1, ST2}]
     *                          [--subscription]
     *                          [--template]
     */
    az_iotcentral_app_create(): void {
    }

    /**
     * Delete an IoT Central application.
     *
     * Syntax: 
     *
     * az iotcentral app delete --name
     *                          --resource-group
     *                          [--subscription]
     */
    az_iotcentral_app_delete(): void {
    }

    /**
     * List IoT Central applications.
     *
     * Syntax: 
     *
     * az iotcentral app list [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_iotcentral_app_list(): void {
    }

    /**
     * Get the details of an IoT Central application.
     *
     * Syntax: 
     *
     * az iotcentral app show --name
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_iotcentral_app_show(): void {
    }

    /**
     * Update metadata for an IoT Central application.
     *
     * Syntax: 
     *
     * az iotcentral app update --name
     *                          --resource-group
     *                          [--add]
     *                          [--force-string]
     *                          [--remove]
     *                          [--set]
     *                          [--subscription]
     */
    az_iotcentral_app_update(): void {
    }
}

/** Manage IoT Central assets. */
class az_iotcentral {
}

/** Manage full HSM backup. */
class az_keyvault_backup {
    /**
     * Begin a full backup of the HSM.
     *
     * Syntax: 
     *
     * az keyvault backup start --storage-container-SAS-token
     *                          [--blob-container-name]
     *                          [--hsm-name]
     *                          [--id]
     *                          [--storage-account-name]
     *                          [--storage-resource-uri]
     *                          [--subscription]
     */
    az_keyvault_backup_start(): void {
    }
}

/** Manage contacts for certificate management. */
class az_keyvault_certificate_contact {
    /**
     * Add a contact to the specified vault to receive notifications of certificate operations.
     *
     * Syntax: 
     *
     * az keyvault certificate contact add --email
     *                                     --vault-name
     *                                     [--name]
     *                                     [--phone]
     *                                     [--subscription]
     */
    az_keyvault_certificate_contact_add(): void {
    }

    /**
     * Remove a certificate contact from the specified vault.
     *
     * Syntax: 
     *
     * az keyvault certificate contact delete --email
     *                                        --vault-name
     *                                        [--subscription]
     */
    az_keyvault_certificate_contact_delete(): void {
    }

    /**
     * Lists the certificate contacts for a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate contact list --vault-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_keyvault_certificate_contact_list(): void {
    }
}

/** Manage admin information for certificate issuers. */
class az_keyvault_certificate_issuer_admin {
    /**
     * Add admin details for a specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin add --email
     *                                          --issuer-name
     *                                          --vault-name
     *                                          [--first-name]
     *                                          [--last-name]
     *                                          [--phone]
     *                                          [--subscription]
     */
    az_keyvault_certificate_issuer_admin_add(): void {
    }

    /**
     * Remove admin details for the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin delete --email
     *                                             --issuer-name
     *                                             --vault-name
     *                                             [--subscription]
     */
    az_keyvault_certificate_issuer_admin_delete(): void {
    }

    /**
     * List admins for a specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer admin list --issuer-name
     *                                           --vault-name
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_keyvault_certificate_issuer_admin_list(): void {
    }
}

/** Manage certificate issuer information. */
class az_keyvault_certificate_issuer {
    /**
     * Create a certificate issuer record.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer create --issuer-name
     *                                       --provider-name
     *                                       --vault-name
     *                                       [--account-id]
     *                                       [--disabled {false, true}]
     *                                       [--organization-id]
     *                                       [--password]
     *                                       [--subscription]
     */
    az_keyvault_certificate_issuer_create(): void {
    }

    /**
     * Deletes the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer delete --issuer-name
     *                                       --vault-name
     *                                       [--subscription]
     */
    az_keyvault_certificate_issuer_delete(): void {
    }

    /**
     * List certificate issuers for a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer list --vault-name
     *                                     [--maxresults]
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_keyvault_certificate_issuer_list(): void {
    }

    /**
     * Lists the specified certificate issuer.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer show --issuer-name
     *                                     --vault-name
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_keyvault_certificate_issuer_show(): void {
    }

    /**
     * Update a certificate issuer record.
     *
     * Syntax: 
     *
     * az keyvault certificate issuer update --issuer-name
     *                                       --vault-name
     *                                       [--account-id]
     *                                       [--enabled {false, true}]
     *                                       [--organization-id]
     *                                       [--password]
     *                                       [--provider-name]
     *                                       [--subscription]
     */
    az_keyvault_certificate_issuer_update(): void {
    }
}

/** Manage pending certificate creation operations. */
class az_keyvault_certificate_pending {
    /**
     * Deletes the creation operation for a specific certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate pending delete --name
     *                                        --vault-name
     *                                        [--subscription]
     */
    az_keyvault_certificate_pending_delete(): void {
    }

    /**
     * Merges a certificate or a certificate chain with a key pair existing on the server.
     *
     * Syntax: 
     *
     * az keyvault certificate pending merge --file
     *                                       --name
     *                                       --vault-name
     *                                       [--disabled {false, true}]
     *                                       [--expires]
     *                                       [--not-before]
     *                                       [--subscription]
     *                                       [--tags]
     */
    az_keyvault_certificate_pending_merge(): void {
    }

    /**
     * Gets the creation operation of a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate pending show --name
     *                                      --vault-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_keyvault_certificate_pending_show(): void {
    }
}

/** Manage certificates. */
class az_keyvault_certificate {
    /**
     * Backs up the specified certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate backup --file
     *                                [--id]
     *                                [--name]
     *                                [--subscription]
     *                                [--vault-name]
     */
    az_keyvault_certificate_backup(): void {
    }

    /**
     * Create a Key Vault certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate create --name
     *                                --policy
     *                                --vault-name
     *                                [--disabled {false, true}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--validity]
     */
    az_keyvault_certificate_create(): void {
    }

    /**
     * Deletes a certificate from a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate delete [--id]
     *                                [--name]
     *                                [--subscription]
     *                                [--vault-name]
     */
    az_keyvault_certificate_delete(): void {
    }

    /**
     * Download the public portion of a Key Vault certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate download --file
     *                                  [--encoding {DER, PEM}]
     *                                  [--id]
     *                                  [--name]
     *                                  [--subscription]
     *                                  [--vault-name]
     *                                  [--version]
     */
    az_keyvault_certificate_download(): void {
    }

    /**
     * Get the default policy for self-signed certificates.
     *
     * Syntax: 
     *
     * az keyvault certificate get-default-policy [--scaffold]
     *                                            [--subscription]
     */
    az_keyvault_certificate_get_default_policy(): void {
    }

    /**
     * Import a certificate into KeyVault.
     *
     * Syntax: 
     *
     * az keyvault certificate import --file
     *                                --name
     *                                --vault-name
     *                                [--disabled {false, true}]
     *                                [--password]
     *                                [--policy]
     *                                [--subscription]
     *                                [--tags]
     */
    az_keyvault_certificate_import(): void {
    }

    /**
     * List certificates in a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault certificate list [--id]
     *                              [--include-pending {false, true}]
     *                              [--maxresults]
     *                              [--query-examples]
     *                              [--subscription]
     *                              [--vault-name]
     */
    az_keyvault_certificate_list(): void {
    }

    /**
     * Lists the deleted certificates in the specified vault currently available for recovery.
     *
     * Syntax: 
     *
     * az keyvault certificate list-deleted --vault-name
     *                                      [--id]
     *                                      [--include-pending {false, true}]
     *                                      [--maxresults]
     *                                      [--subscription]
     */
    az_keyvault_certificate_list_deleted(): void {
    }

    /**
     * List the versions of a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate list-versions [--id]
     *                                       [--maxresults]
     *                                       [--name]
     *                                       [--subscription]
     *                                       [--vault-name]
     */
    az_keyvault_certificate_list_versions(): void {
    }

    /**
     * Permanently deletes the specified deleted certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate purge [--id]
     *                               [--name]
     *                               [--subscription]
     *                               [--vault-name]
     */
    az_keyvault_certificate_purge(): void {
    }

    /**
     * Recovers the deleted certificate back to its current version under /certificates.
     *
     * Syntax: 
     *
     * az keyvault certificate recover [--id]
     *                                 [--name]
     *                                 [--subscription]
     *                                 [--vault-name]
     */
    az_keyvault_certificate_recover(): void {
    }

    /**
     * Restores a backed up certificate to a vault.
     *
     * Syntax: 
     *
     * az keyvault certificate restore --file
     *                                 --vault-name
     *                                 [--subscription]
     */
    az_keyvault_certificate_restore(): void {
    }

    /**
     * Updates the specified attributes associated with the given certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate set-attributes [--enabled {false, true}]
     *                                        [--id]
     *                                        [--name]
     *                                        [--policy]
     *                                        [--subscription]
     *                                        [--tags]
     *                                        [--vault-name]
     *                                        [--version]
     */
    az_keyvault_certificate_set_attributes(): void {
    }

    /**
     * Gets information about a certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate show [--id]
     *                              [--name]
     *                              [--query-examples]
     *                              [--subscription]
     *                              [--vault-name]
     *                              [--version]
     */
    az_keyvault_certificate_show(): void {
    }

    /**
     * Retrieves information about the specified deleted certificate.
     *
     * Syntax: 
     *
     * az keyvault certificate show-deleted [--id]
     *                                      [--name]
     *                                      [--subscription]
     *                                      [--vault-name]
     */
    az_keyvault_certificate_show_deleted(): void {
    }
}

/** Manage keys. */
class az_keyvault_key {
    /**
     * Request that a backup of the specified key be downloaded to the client.
     *
     * Syntax: 
     *
     * az keyvault key backup --file
     *                        [--hsm-name]
     *                        [--id]
     *                        [--name]
     *                        [--subscription]
     *                        [--vault-name]
     */
    az_keyvault_key_backup(): void {
    }

    /**
     * Create a new key, stores it, then returns key parameters and attributes to the client.
     *
     * Syntax: 
     *
     * az keyvault key create [--curve {P-256, P-256K, P-384, P-521}]
     *                        [--disabled {false, true}]
     *                        [--expires]
     *                        [--hsm-name]
     *                        [--id]
     *                        [--kty {EC, EC-HSM, RSA, RSA-HSM, oct, oct-HSM}]
     *                        [--name]
     *                        [--not-before]
     *                        [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
     *                        [--protection {hsm, software}]
     *                        [--size]
     *                        [--subscription]
     *                        [--tags]
     *                        [--vault-name]
     */
    az_keyvault_key_create(): void {
    }

    /**
     * Decrypt a single block of encrypted data.
     *
     * Syntax: 
     *
     * az keyvault key decrypt --algorithm {RSA-OAEP, RSA-OAEP-256, RSA1_5}
     *                         --value
     *                         [--data-type {base64, plaintext}]
     *                         [--id]
     *                         [--name]
     *                         [--subscription]
     *                         [--vault-name]
     *                         [--version]
     */
    az_keyvault_key_decrypt(): void {
    }

    /**
     * Delete a key of any type from storage in Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key delete [--hsm-name]
     *                        [--id]
     *                        [--name]
     *                        [--subscription]
     *                        [--vault-name]
     */
    az_keyvault_key_delete(): void {
    }

    /**
     * Download the public part of a stored key.
     *
     * Syntax: 
     *
     * az keyvault key download --file
     *                          [--encoding {DER, PEM}]
     *                          [--hsm-name]
     *                          [--id]
     *                          [--name]
     *                          [--subscription]
     *                          [--vault-name]
     *                          [--version]
     */
    az_keyvault_key_download(): void {
    }

    /**
     * Encrypt an arbitrary sequence of bytes using an encryption key that is stored in a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key encrypt --algorithm {RSA-OAEP, RSA-OAEP-256, RSA1_5}
     *                         --value
     *                         [--data-type {base64, plaintext}]
     *                         [--id]
     *                         [--name]
     *                         [--subscription]
     *                         [--vault-name]
     *                         [--version]
     */
    az_keyvault_key_encrypt(): void {
    }

    /**
     * Return policy template as JSON encoded policy definition.
     *
     * Syntax: 
     *
     * az keyvault key get-policy-template [--subscription]
     */
    az_keyvault_key_get_policy_template(): void {
    }

    /**
     * Import a private key.
     *
     * Syntax: 
     *
     * az keyvault key import [--byok-file]
     *                        [--byok-string]
     *                        [--disabled {false, true}]
     *                        [--expires]
     *                        [--hsm-name]
     *                        [--id]
     *                        [--name]
     *                        [--not-before]
     *                        [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
     *                        [--pem-file]
     *                        [--pem-password]
     *                        [--pem-string]
     *                        [--protection {hsm, software}]
     *                        [--subscription]
     *                        [--tags]
     *                        [--vault-name]
     */
    az_keyvault_key_import(): void {
    }

    /**
     * List keys in the specified Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key list [--hsm-name]
     *                      [--id]
     *                      [--maxresults]
     *                      [--query-examples]
     *                      [--subscription]
     *                      [--vault-name]
     */
    az_keyvault_key_list(): void {
    }

    /**
     * List the deleted keys in the specified Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key list-deleted [--hsm-name]
     *                              [--id]
     *                              [--maxresults]
     *                              [--subscription]
     *                              [--vault-name]
     */
    az_keyvault_key_list_deleted(): void {
    }

    /**
     * Retrieves a list of individual key versions with the same key name.
     *
     * Syntax: 
     *
     * az keyvault key list-versions [--hsm-name]
     *                               [--id]
     *                               [--maxresults]
     *                               [--name]
     *                               [--subscription]
     *                               [--vault-name]
     */
    az_keyvault_key_list_versions(): void {
    }

    /**
     * Permanently delete the specified key.
     *
     * Syntax: 
     *
     * az keyvault key purge [--hsm-name]
     *                       [--id]
     *                       [--name]
     *                       [--subscription]
     *                       [--vault-name]
     */
    az_keyvault_key_purge(): void {
    }

    /**
     * Recover the deleted key to its latest version.
     *
     * Syntax: 
     *
     * az keyvault key recover [--hsm-name]
     *                         [--id]
     *                         [--name]
     *                         [--subscription]
     *                         [--vault-name]
     */
    az_keyvault_key_recover(): void {
    }

    /**
     * Restore a backed up key to a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key restore --file
     *                         [--hsm-name]
     *                         [--id]
     *                         [--subscription]
     *                         [--vault-name]
     */
    az_keyvault_key_restore(): void {
    }

    /**
     * The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault key set-attributes [--enabled {false, true}]
     *                                [--expires]
     *                                [--hsm-name]
     *                                [--id]
     *                                [--name]
     *                                [--not-before]
     *                                [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--vault-name]
     *                                [--version]
     */
    az_keyvault_key_set_attributes(): void {
    }

    /**
     * Gets the public part of a stored key.
     *
     * Syntax: 
     *
     * az keyvault key show [--hsm-name]
     *                      [--id]
     *                      [--name]
     *                      [--query-examples]
     *                      [--subscription]
     *                      [--vault-name]
     *                      [--version]
     */
    az_keyvault_key_show(): void {
    }

    /**
     * Get the public part of a deleted key.
     *
     * Syntax: 
     *
     * az keyvault key show-deleted [--hsm-name]
     *                              [--id]
     *                              [--name]
     *                              [--subscription]
     *                              [--vault-name]
     */
    az_keyvault_key_show_deleted(): void {
    }
}

/** Manage vault network ACLs. */
class az_keyvault_network_rule {
    /**
     * Add a network rule to the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule add --name
     *                              [--ip-address]
     *                              [--no-wait]
     *                              [--resource-group]
     *                              [--subnet]
     *                              [--subscription]
     *                              [--vnet-name]
     */
    az_keyvault_network_rule_add(): void {
    }

    /**
     * List the network rules from the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule list --name
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_keyvault_network_rule_list(): void {
    }

    /**
     * Remove a network rule from the network ACLs for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault network-rule remove --name
     *                                 [--ip-address]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--vnet-name]
     */
    az_keyvault_network_rule_remove(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the vault is met.
     *
     * Syntax: 
     *
     * az keyvault network-rule wait --name
     *                               [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--interval]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_keyvault_network_rule_wait(): void {
    }
}

/** Manage vault private endpoint connections. */
class az_keyvault_private_endpoint_connection {
    /**
     * Approve a private endpoint connection request for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault private-endpoint-connection approve [--description]
     *                                                 [--id]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     *                                                 [--vault-name]
     */
    az_keyvault_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete the specified private endpoint connection associated with a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault private-endpoint-connection delete [--id]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     *                                                [--vault-name]
     */
    az_keyvault_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject a private endpoint connection request for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault private-endpoint-connection reject [--description]
     *                                                [--id]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     *                                                [--vault-name]
     */
    az_keyvault_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection associated with a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault private-endpoint-connection show [--id]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     *                                              [--vault-name]
     */
    az_keyvault_private_endpoint_connection_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the private endpoint connection is met.
     *
     * Syntax: 
     *
     * az keyvault private-endpoint-connection wait [--created]
     *                                              [--custom]
     *                                              [--deleted]
     *                                              [--exists]
     *                                              [--id]
     *                                              [--interval]
     *                                              [--name]
     *                                              [--resource-group]
     *                                              [--subscription]
     *                                              [--timeout]
     *                                              [--updated]
     *                                              [--vault-name]
     */
    az_keyvault_private_endpoint_connection_wait(): void {
    }
}

/** Manage vault private link resources. */
class az_keyvault_private_link_resource {
    /**
     * List the private link resources supported for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault private-link-resource list --vault-name
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_keyvault_private_link_resource_list(): void {
    }
}

/** Manage full HSM restore. */
class az_keyvault_restore {
    /**
     * Restore a full backup of a HSM.
     *
     * Syntax: 
     *
     * az keyvault restore start --backup-folder
     *                           --storage-container-SAS-token
     *                           [--blob-container-name]
     *                           [--hsm-name]
     *                           [--id]
     *                           [--storage-account-name]
     *                           [--storage-resource-uri]
     *                           [--subscription]
     */
    az_keyvault_restore_start(): void {
    }
}

/** Manage role assignments. */
class az_keyvault_role_assignment {
    /**
     * Create a new role assignment for a user, group, or service principal.
     *
     * Syntax: 
     *
     * az keyvault role assignment create --role
     *                                    --scope
     *                                    [--assignee]
     *                                    [--assignee-object-id]
     *                                    [--assignee-principal-type {Application, DirectoryObjectOrGroup, DirectoryRoleTemplate, Everyone, ForeignGroup, Group, MSI, ServicePrincipal, Unknown, User}]
     *                                    [--hsm-name]
     *                                    [--id]
     *                                    [--name]
     *                                    [--subscription]
     */
    az_keyvault_role_assignment_create(): void {
    }

    /**
     * Delete a role assignment.
     *
     * Syntax: 
     *
     * az keyvault role assignment delete [--assignee]
     *                                    [--assignee-object-id]
     *                                    [--hsm-name]
     *                                    [--id]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--role]
     *                                    [--scope]
     *                                    [--subscription]
     */
    az_keyvault_role_assignment_delete(): void {
    }

    /**
     * List role assignments.
     *
     * Syntax: 
     *
     * az keyvault role assignment list [--assignee]
     *                                  [--assignee-object-id]
     *                                  [--hsm-name]
     *                                  [--id]
     *                                  [--query-examples]
     *                                  [--role]
     *                                  [--scope]
     *                                  [--subscription]
     */
    az_keyvault_role_assignment_list(): void {
    }
}

/** Manage role definitions. */
class az_keyvault_role_definition {
    /**
     * List role definitions.
     *
     * Syntax: 
     *
     * az keyvault role definition list [--hsm-name]
     *                                  [--query-examples]
     *                                  [--scope]
     *                                  [--subscription]
     */
    az_keyvault_role_definition_list(): void {
    }
}

/** Manage user roles for access control. */
class az_keyvault_role {
}

/** Manage secrets. */
class az_keyvault_secret {
    /**
     * Backs up the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret backup --file
     *                           [--id]
     *                           [--name]
     *                           [--subscription]
     *                           [--vault-name]
     */
    az_keyvault_secret_backup(): void {
    }

    /**
     * Deletes a secret from a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault secret delete [--id]
     *                           [--name]
     *                           [--subscription]
     *                           [--vault-name]
     */
    az_keyvault_secret_delete(): void {
    }

    /**
     * Download a secret from a KeyVault.
     *
     * Syntax: 
     *
     * az keyvault secret download --file
     *                             [--encoding {ascii, base64, hex, utf-16be, utf-16le, utf-8}]
     *                             [--id]
     *                             [--name]
     *                             [--subscription]
     *                             [--vault-name]
     *                             [--version]
     */
    az_keyvault_secret_download(): void {
    }

    /**
     * List secrets in a specified key vault.
     *
     * Syntax: 
     *
     * az keyvault secret list [--id]
     *                         [--maxresults]
     *                         [--query-examples]
     *                         [--subscription]
     *                         [--vault-name]
     */
    az_keyvault_secret_list(): void {
    }

    /**
     * Lists deleted secrets for the specified vault.
     *
     * Syntax: 
     *
     * az keyvault secret list-deleted --vault-name
     *                                 [--id]
     *                                 [--maxresults]
     *                                 [--subscription]
     */
    az_keyvault_secret_list_deleted(): void {
    }

    /**
     * List all versions of the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret list-versions [--id]
     *                                  [--maxresults]
     *                                  [--name]
     *                                  [--subscription]
     *                                  [--vault-name]
     */
    az_keyvault_secret_list_versions(): void {
    }

    /**
     * Permanently deletes the specified secret.
     *
     * Syntax: 
     *
     * az keyvault secret purge [--id]
     *                          [--name]
     *                          [--subscription]
     *                          [--vault-name]
     */
    az_keyvault_secret_purge(): void {
    }

    /**
     * Recovers the deleted secret to the latest version.
     *
     * Syntax: 
     *
     * az keyvault secret recover [--id]
     *                            [--name]
     *                            [--subscription]
     *                            [--vault-name]
     */
    az_keyvault_secret_recover(): void {
    }

    /**
     * Restores a backed up secret to a vault.
     *
     * Syntax: 
     *
     * az keyvault secret restore --file
     *                            --vault-name
     *                            [--subscription]
     */
    az_keyvault_secret_restore(): void {
    }

    /**
     * Create a secret (if one doesn't exist) or update a secret in a KeyVault.
     *
     * Syntax: 
     *
     * az keyvault secret set --name
     *                        --vault-name
     *                        [--description]
     *                        [--disabled {false, true}]
     *                        [--encoding {ascii, base64, hex, utf-16be, utf-16le, utf-8}]
     *                        [--expires]
     *                        [--file]
     *                        [--not-before]
     *                        [--subscription]
     *                        [--tags]
     *                        [--value]
     */
    az_keyvault_secret_set(): void {
    }

    /**
     * Updates the attributes associated with a specified secret in a given key vault.
     *
     * Syntax: 
     *
     * az keyvault secret set-attributes [--content-type]
     *                                   [--enabled {false, true}]
     *                                   [--expires]
     *                                   [--id]
     *                                   [--name]
     *                                   [--not-before]
     *                                   [--subscription]
     *                                   [--tags]
     *                                   [--vault-name]
     *                                   [--version]
     */
    az_keyvault_secret_set_attributes(): void {
    }

    /**
     * Get a specified secret from a given key vault.
     *
     * Syntax: 
     *
     * az keyvault secret show [--id]
     *                         [--name]
     *                         [--query-examples]
     *                         [--subscription]
     *                         [--vault-name]
     *                         [--version]
     */
    az_keyvault_secret_show(): void {
    }

    /**
     * Gets the specified deleted secret.
     *
     * Syntax: 
     *
     * az keyvault secret show-deleted [--id]
     *                                 [--name]
     *                                 [--subscription]
     *                                 [--vault-name]
     */
    az_keyvault_secret_show_deleted(): void {
    }
}

/** Manage security domain operations. */
class az_keyvault_security_domain {
    /**
     * Download the security domain file from the HSM.
     *
     * Syntax: 
     *
     * az keyvault security-domain download --sd-quorum
     *                                      --sd-wrapping-keys
     *                                      --security-domain-file
     *                                      [--hsm-name]
     *                                      [--id]
     *                                      [--subscription]
     */
    az_keyvault_security_domain_download(): void {
    }

    /**
     * Retrieve the exchange key of the HSM.
     *
     * Syntax: 
     *
     * az keyvault security-domain init-recovery --sd-exchange-key
     *                                           [--hsm-name]
     *                                           [--id]
     *                                           [--subscription]
     */
    az_keyvault_security_domain_init_recovery(): void {
    }

    /**
     * Start to restore the HSM.
     *
     * Syntax: 
     *
     * az keyvault security-domain upload --sd-exchange-key
     *                                    --sd-file
     *                                    --sd-wrapping-keys
     *                                    [--hsm-name]
     *                                    [--id]
     *                                    [--no-wait]
     *                                    [--passwords]
     *                                    [--subscription]
     */
    az_keyvault_security_domain_upload(): void {
    }

    /**
     * Place the CLI in a waiting state until HSM security domain operation is finished.
     *
     * Syntax: 
     *
     * az keyvault security-domain wait [--hsm-name]
     *                                  [--id]
     *                                  [--subscription]
     */
    az_keyvault_security_domain_wait(): void {
    }
}

/** Manage storage account SAS definitions. */
class az_keyvault_storage_sas_definition {
    /**
     * Creates or updates a new SAS definition for the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition create --account-name
     *                                           --name
     *                                           --sas-type {account, service}
     *                                           --template-uri
     *                                           --validity-period
     *                                           --vault-name
     *                                           [--disabled {false, true}]
     *                                           [--subscription]
     *                                           [--tags]
     */
    az_keyvault_storage_sas_definition_create(): void {
    }

    /**
     * Deletes a SAS definition from a specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition delete [--account-name]
     *                                           [--id]
     *                                           [--name]
     *                                           [--subscription]
     *                                           [--vault-name]
     */
    az_keyvault_storage_sas_definition_delete(): void {
    }

    /**
     * List storage SAS definitions for the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition list --account-name
     *                                         --vault-name
     *                                         [--maxresults]
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_keyvault_storage_sas_definition_list(): void {
    }

    /**
     * Lists deleted SAS definitions for the specified vault and storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition list-deleted --account-name
     *                                                 --vault-name
     *                                                 [--maxresults]
     *                                                 [--subscription]
     */
    az_keyvault_storage_sas_definition_list_deleted(): void {
    }

    /**
     * Recovers the deleted SAS definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition recover --account-name
     *                                            --name
     *                                            --vault-name
     *                                            [--subscription]
     */
    az_keyvault_storage_sas_definition_recover(): void {
    }

    /**
     * Gets information about a SAS definition for the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition show [--account-name]
     *                                         [--id]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--subscription]
     *                                         [--vault-name]
     */
    az_keyvault_storage_sas_definition_show(): void {
    }

    /**
     * Gets the specified deleted sas definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition show-deleted --account-name
     *                                                 --name
     *                                                 --vault-name
     *                                                 [--subscription]
     */
    az_keyvault_storage_sas_definition_show_deleted(): void {
    }

    /**
     * Updates the specified attributes associated with the given SAS definition.
     *
     * Syntax: 
     *
     * az keyvault storage sas-definition update [--account-name]
     *                                           [--disabled {false, true}]
     *                                           [--id]
     *                                           [--name]
     *                                           [--sas-type {account, service}]
     *                                           [--subscription]
     *                                           [--tags]
     *                                           [--template-uri]
     *                                           [--validity-period]
     *                                           [--vault-name]
     */
    az_keyvault_storage_sas_definition_update(): void {
    }
}

/** Manage storage accounts. */
class az_keyvault_storage {
    /**
     * Creates or updates a new storage account.
     *
     * Syntax: 
     *
     * az keyvault storage add --active-key-name
     *                         --name
     *                         --resource-id
     *                         --vault-name
     *                         [--auto-regenerate-key {false, true}]
     *                         [--disabled {false, true}]
     *                         [--regeneration-period]
     *                         [--subscription]
     *                         [--tags]
     */
    az_keyvault_storage_add(): void {
    }

    /**
     * Backs up the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage backup --file
     *                            [--id]
     *                            [--name]
     *                            [--subscription]
     *                            [--vault-name]
     */
    az_keyvault_storage_backup(): void {
    }

    /**
     * List storage accounts managed by the specified key vault.
     *
     * Syntax: 
     *
     * az keyvault storage list --vault-name
     *                          [--maxresults]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_keyvault_storage_list(): void {
    }

    /**
     * Lists deleted storage accounts for the specified vault.
     *
     * Syntax: 
     *
     * az keyvault storage list-deleted --vault-name
     *                                  [--maxresults]
     *                                  [--subscription]
     */
    az_keyvault_storage_list_deleted(): void {
    }

    /**
     * Permanently deletes the specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage purge --name
     *                           --vault-name
     *                           [--subscription]
     */
    az_keyvault_storage_purge(): void {
    }

    /**
     * Recovers the deleted storage account.
     *
     * Syntax: 
     *
     * az keyvault storage recover --name
     *                             --vault-name
     *                             [--subscription]
     */
    az_keyvault_storage_recover(): void {
    }

    /**
     * Regenerates the specified key value for the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage regenerate-key --key-name
     *                                    [--id]
     *                                    [--name]
     *                                    [--subscription]
     *                                    [--vault-name]
     */
    az_keyvault_storage_regenerate_key(): void {
    }

    /**
     * Remove a Key Vault managed Azure Storage Account and all associated SAS definitions. This operation requires the storage/delete permission.
     *
     * Syntax: 
     *
     * az keyvault storage remove [--id]
     *                            [--name]
     *                            [--subscription]
     *                            [--vault-name]
     */
    az_keyvault_storage_remove(): void {
    }

    /**
     * Restores a backed up storage account to a vault.
     *
     * Syntax: 
     *
     * az keyvault storage restore --file
     *                             --vault-name
     *                             [--subscription]
     */
    az_keyvault_storage_restore(): void {
    }

    /**
     * Gets information about a specified storage account.
     *
     * Syntax: 
     *
     * az keyvault storage show [--id]
     *                          [--name]
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--vault-name]
     */
    az_keyvault_storage_show(): void {
    }

    /**
     * Gets the specified deleted storage account.
     *
     * Syntax: 
     *
     * az keyvault storage show-deleted --name
     *                                  --vault-name
     *                                  [--subscription]
     */
    az_keyvault_storage_show_deleted(): void {
    }

    /**
     * Updates the specified attributes associated with the given storage account.
     *
     * Syntax: 
     *
     * az keyvault storage update [--active-key-name]
     *                            [--auto-regenerate-key {false, true}]
     *                            [--disabled {false, true}]
     *                            [--id]
     *                            [--name]
     *                            [--regeneration-period]
     *                            [--subscription]
     *                            [--tags]
     *                            [--vault-name]
     */
    az_keyvault_storage_update(): void {
    }
}

/** Manage KeyVault keys, secrets, and certificates. */
class az_keyvault {
    /**
     * Create a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault create --resource-group
     *                    [--administrators]
     *                    [--bypass {AzureServices, None}]
     *                    [--default-action {Allow, Deny}]
     *                    [--enable-purge-protection {false, true}]
     *                    [--enable-rbac-authorization {false, true}]
     *                    [--enable-soft-delete {false, true}]
     *                    [--enabled-for-deployment {false, true}]
     *                    [--enabled-for-disk-encryption {false, true}]
     *                    [--enabled-for-template-deployment {false, true}]
     *                    [--hsm-name]
     *                    [--location]
     *                    [--name]
     *                    [--network-acls]
     *                    [--network-acls-ips]
     *                    [--network-acls-vnets]
     *                    [--no-self-perms {false, true}]
     *                    [--no-wait]
     *                    [--retention-days]
     *                    [--sku]
     *                    [--subscription]
     *                    [--tags]
     */
    az_keyvault_create(): void {
    }

    /**
     * Delete a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault delete [--hsm-name]
     *                    [--name]
     *                    [--no-wait]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_keyvault_delete(): void {
    }

    /**
     * Delete security policy settings for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault delete-policy --name
     *                           [--no-wait]
     *                           [--object-id]
     *                           [--resource-group]
     *                           [--spn]
     *                           [--subscription]
     *                           [--upn]
     */
    az_keyvault_delete_policy(): void {
    }

    /**
     * List Vaults and/or HSMs.
     *
     * Syntax: 
     *
     * az keyvault list [--query-examples]
     *                  [--resource-group]
     *                  [--resource-type]
     *                  [--subscription]
     */
    az_keyvault_list(): void {
    }

    /**
     * Get information about the deleted Vaults or HSMs in a subscription.
     *
     * Syntax: 
     *
     * az keyvault list-deleted [--resource-type]
     *                          [--subscription]
     */
    az_keyvault_list_deleted(): void {
    }

    /**
     * Permanently delete the specified Vault or HSM. Aka Purges the deleted Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault purge [--hsm-name]
     *                   [--location]
     *                   [--name]
     *                   [--no-wait]
     *                   [--subscription]
     */
    az_keyvault_purge(): void {
    }

    /**
     * Recover a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault recover [--hsm-name]
     *                     [--location]
     *                     [--name]
     *                     [--no-wait]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_keyvault_recover(): void {
    }

    /**
     * Update security policy settings for a Key Vault.
     *
     * Syntax: 
     *
     * az keyvault set-policy --name
     *                        [--certificate-permissions {backup, create, delete, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers, purge, recover, restore, setissuers, update}]
     *                        [--key-permissions {backup, create, decrypt, delete, encrypt, get, import, list, purge, recover, restore, sign, unwrapKey, update, verify, wrapKey}]
     *                        [--no-wait]
     *                        [--object-id]
     *                        [--resource-group]
     *                        [--secret-permissions {backup, delete, get, list, purge, recover, restore, set}]
     *                        [--spn]
     *                        [--storage-permissions {backup, delete, deletesas, get, getsas, list, listsas, purge, recover, regeneratekey, restore, set, setsas, update}]
     *                        [--subscription]
     *                        [--upn]
     */
    az_keyvault_set_policy(): void {
    }

    /**
     * Show details of a Vault or HSM.
     *
     * Syntax: 
     *
     * az keyvault show [--hsm-name]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_keyvault_show(): void {
    }

    /**
     * Update the properties of a Vault.
     *
     * Syntax: 
     *
     * az keyvault update --name
     *                    [--add]
     *                    [--bypass {AzureServices, None}]
     *                    [--default-action {Allow, Deny}]
     *                    [--enable-purge-protection {false, true}]
     *                    [--enable-rbac-authorization {false, true}]
     *                    [--enable-soft-delete {false, true}]
     *                    [--enabled-for-deployment {false, true}]
     *                    [--enabled-for-disk-encryption {false, true}]
     *                    [--enabled-for-template-deployment {false, true}]
     *                    [--force-string]
     *                    [--no-wait]
     *                    [--remove]
     *                    [--resource-group]
     *                    [--retention-days]
     *                    [--set]
     *                    [--subscription]
     */
    az_keyvault_update(): void {
    }

    /**
     * Update the properties of a HSM.
     *
     * Syntax: 
     *
     * az keyvault update-hsm --hsm-name
     *                        [--add]
     *                        [--bypass {AzureServices, None}]
     *                        [--default-action {Allow, Deny}]
     *                        [--enable-purge-protection {false, true}]
     *                        [--force-string]
     *                        [--no-wait]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--secondary-locations]
     *                        [--set]
     *                        [--subscription]
     */
    az_keyvault_update_hsm(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Vault is met.
     *
     * Syntax: 
     *
     * az keyvault wait --name
     *                  [--created]
     *                  [--custom]
     *                  [--deleted]
     *                  [--exists]
     *                  [--interval]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--timeout]
     *                  [--updated]
     */
    az_keyvault_wait(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the HSM is met.
     *
     * Syntax: 
     *
     * az keyvault wait-hsm --hsm-name
     *                      [--created]
     *                      [--custom]
     *                      [--deleted]
     *                      [--exists]
     *                      [--interval]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--timeout]
     *                      [--updated]
     */
    az_keyvault_wait_hsm(): void {
    }
}

/** Manage Azure Kusto clusters. */
class az_kusto_cluster {
    /**
     * Create a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster create --name
     *                         --resource-group
     *                         --sku {Dev(No SLA)_Standard_D11_v2, Dev(No SLA)_Standard_E2a_v4, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_DS13_v2+1TB_PS, Standard_DS13_v2+2TB_PS, Standard_DS14_v2+3TB_PS, Standard_DS14_v2+4TB_PS, Standard_E16a_v4, Standard_E16as_v4+3TB_PS, Standard_E16as_v4+4TB_PS, Standard_E2a_v4, Standard_E4a_v4, Standard_E8a_v4, Standard_E8as_v4+1TB_PS, Standard_E8as_v4+2TB_PS, Standard_L16s, Standard_L4s, Standard_L8s}
     *                         [--capacity]
     *                         [--location]
     *                         [--no-wait]
     *                         [--subscription]
     */
    az_kusto_cluster_create(): void {
    }

    /**
     * Delete a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster delete [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--yes]
     */
    az_kusto_cluster_delete(): void {
    }

    /**
     * List a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster list --resource-group
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_kusto_cluster_list(): void {
    }

    /**
     * Get a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_kusto_cluster_show(): void {
    }

    /**
     * Start a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster start [--ids]
     *                        [--name]
     *                        [--no-wait]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_kusto_cluster_start(): void {
    }

    /**
     * Stop a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster stop [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_kusto_cluster_stop(): void {
    }

    /**
     * Update a Kusto cluster.
     *
     * Syntax: 
     *
     * az kusto cluster update [--add]
     *                         [--capacity]
     *                         [--force-string]
     *                         [--ids]
     *                         [--name]
     *                         [--remove]
     *                         [--resource-group]
     *                         [--set]
     *                         [--sku {Dev(No SLA)_Standard_D11_v2, Dev(No SLA)_Standard_E2a_v4, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_DS13_v2+1TB_PS, Standard_DS13_v2+2TB_PS, Standard_DS14_v2+3TB_PS, Standard_DS14_v2+4TB_PS, Standard_E16a_v4, Standard_E16as_v4+3TB_PS, Standard_E16as_v4+4TB_PS, Standard_E2a_v4, Standard_E4a_v4, Standard_E8a_v4, Standard_E8as_v4+1TB_PS, Standard_E8as_v4+2TB_PS, Standard_L16s, Standard_L4s, Standard_L8s}]
     *                         [--subscription]
     */
    az_kusto_cluster_update(): void {
    }

    /**
     * Wait for a managed Kusto cluster to reach a desired state.
     *
     * Syntax: 
     *
     * az kusto cluster wait [--created]
     *                       [--custom]
     *                       [--deleted]
     *                       [--exists]
     *                       [--ids]
     *                       [--interval]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--timeout]
     *                       [--updated]
     */
    az_kusto_cluster_wait(): void {
    }
}

/** Manage Azure Kusto databases. */
class az_kusto_database {
    /**
     * Create a Kusto database.
     *
     * Syntax: 
     *
     * az kusto database create --cluster-name
     *                          --name
     *                          --resource-group
     *                          [--hot-cache-period]
     *                          [--no-wait]
     *                          [--soft-delete-period]
     *                          [--subscription]
     */
    az_kusto_database_create(): void {
    }

    /**
     * Delete a Kusto database.
     *
     * Syntax: 
     *
     * az kusto database delete [--cluster-name]
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--yes]
     */
    az_kusto_database_delete(): void {
    }

    /**
     * List a Kusto database.
     *
     * Syntax: 
     *
     * az kusto database list --cluster-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_kusto_database_list(): void {
    }

    /**
     * Get a Kusto database.
     *
     * Syntax: 
     *
     * az kusto database show [--cluster-name]
     *                        [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_kusto_database_show(): void {
    }

    /**
     * Update a Kusto database.
     *
     * Syntax: 
     *
     * az kusto database update --soft-delete-period
     *                          [--add]
     *                          [--cluster-name]
     *                          [--force-string]
     *                          [--hot-cache-period]
     *                          [--ids]
     *                          [--name]
     *                          [--no-wait]
     *                          [--remove]
     *                          [--resource-group]
     *                          [--set]
     *                          [--subscription]
     */
    az_kusto_database_update(): void {
    }

    /**
     * Wait for a managed Kusto database to reach a desired state.
     *
     * Syntax: 
     *
     * az kusto database wait [--cluster-name]
     *                        [--created]
     *                        [--custom]
     *                        [--deleted]
     *                        [--exists]
     *                        [--ids]
     *                        [--interval]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--timeout]
     *                        [--updated]
     */
    az_kusto_database_wait(): void {
    }
}

/** Manage Azure Kusto resources. */
class az_kusto {
}

/** Manage Azure Resource Manager (ARM) templates in an Azure DevTest Lab. */
class az_lab_arm_template {
    /**
     * List azure resource manager templates in a given artifact source.
     *
     * Syntax: 
     *
     * az lab arm-template list --artifact-source-name
     *                          --lab-name
     *                          --resource-group
     *                          [--expand]
     *                          [--filter]
     *                          [--orderby]
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--top]
     */
    az_lab_arm_template_list(): void {
    }

    /**
     * Get the details of an ARM template in a lab.
     *
     * Syntax: 
     *
     * az lab arm-template show --artifact-source-name
     *                          --lab-name
     *                          --name
     *                          --resource-group
     *                          [--export-parameters]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_lab_arm_template_show(): void {
    }
}

/** Manage DevTest Lab artifact sources. */
class az_lab_artifact_source {
    /**
     * List artifact sources in a given lab.
     *
     * Syntax: 
     *
     * az lab artifact-source list --lab-name
     *                             --resource-group
     *                             [--expand]
     *                             [--filter]
     *                             [--orderby]
     *                             [--query-examples]
     *                             [--subscription]
     *                             [--top]
     */
    az_lab_artifact_source_list(): void {
    }

    /**
     * Get artifact source.
     *
     * Syntax: 
     *
     * az lab artifact-source show --lab-name
     *                             --name
     *                             --resource-group
     *                             [--expand]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_lab_artifact_source_show(): void {
    }
}

/** Manage DevTest Labs artifacts. */
class az_lab_artifact {
    /**
     * List artifacts in a given artifact source.
     *
     * Syntax: 
     *
     * az lab artifact list --artifact-source-name
     *                      --lab-name
     *                      --resource-group
     *                      [--expand]
     *                      [--filter]
     *                      [--orderby]
     *                      [--query-examples]
     *                      [--subscription]
     *                      [--top]
     */
    az_lab_artifact_list(): void {
    }
}

/** Manage custom images of a DevTest Lab. */
class az_lab_custom_image {
    /**
     * Create a custom image in a DevTest Lab.
     *
     * Syntax: 
     *
     * az lab custom-image create --lab-name
     *                            --name
     *                            --os-state
     *                            --os-type
     *                            --resource-group
     *                            --source-vm-id
     *                            [--author]
     *                            [--description]
     *                            [--subscription]
     */
    az_lab_custom_image_create(): void {
    }

    /**
     * Delete custom image.
     *
     * Syntax: 
     *
     * az lab custom-image delete --lab-name
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_lab_custom_image_delete(): void {
    }

    /**
     * List custom images in a given lab.
     *
     * Syntax: 
     *
     * az lab custom-image list --lab-name
     *                          --resource-group
     *                          [--expand]
     *                          [--filter]
     *                          [--orderby]
     *                          [--query-examples]
     *                          [--subscription]
     *                          [--top]
     */
    az_lab_custom_image_list(): void {
    }

    /**
     * Get custom image.
     *
     * Syntax: 
     *
     * az lab custom-image show --lab-name
     *                          --name
     *                          --resource-group
     *                          [--expand]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_lab_custom_image_show(): void {
    }
}

/** Manage environments for an Azure DevTest Lab. */
class az_lab_environment {
    /**
     * Create an environment in a lab.
     *
     * Syntax: 
     *
     * az lab environment create --arm-template
     *                           --lab-name
     *                           --name
     *                           --resource-group
     *                           [--artifact-source-name]
     *                           [--parameters]
     *                           [--subscription]
     *                           [--tags]
     */
    az_lab_environment_create(): void {
    }

    /**
     * Delete an environment from a lab.
     *
     * Syntax: 
     *
     * az lab environment delete --lab-name
     *                           --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_lab_environment_delete(): void {
    }

    /**
     * List environments in a lab.
     *
     * Syntax: 
     *
     * az lab environment list --lab-name
     *                         --resource-group
     *                         [--expand]
     *                         [--filter]
     *                         [--orderby]
     *                         [--query-examples]
     *                         [--subscription]
     *                         [--top]
     */
    az_lab_environment_list(): void {
    }

    /**
     * Get the details for an environment of a lab.
     *
     * Syntax: 
     *
     * az lab environment show --lab-name
     *                         --name
     *                         --resource-group
     *                         [--expand]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_lab_environment_show(): void {
    }
}

/** Manage formulas for an Azure DevTest Lab. */
class az_lab_formula {
    /**
     * Delete formula.
     *
     * Syntax: 
     *
     * az lab formula delete --lab-name
     *                       --name
     *                       --resource-group
     *                       [--subscription]
     */
    az_lab_formula_delete(): void {
    }

    /**
     * Export artifacts from a formula.
     *
     * Syntax: 
     *
     * az lab formula export-artifacts --lab-name
     *                                 --name
     *                                 --resource-group
     *                                 [--subscription]
     */
    az_lab_formula_export_artifacts(): void {
    }

    /**
     * List formulas in a given lab.
     *
     * Syntax: 
     *
     * az lab formula list --lab-name
     *                     --resource-group
     *                     [--expand]
     *                     [--filter]
     *                     [--orderby]
     *                     [--query-examples]
     *                     [--subscription]
     *                     [--top]
     */
    az_lab_formula_list(): void {
    }

    /**
     * Show formulae from an Azure DevTest Lab.
     *
     * Syntax: 
     *
     * az lab formula show --lab-name
     *                     --name
     *                     --resource-group
     *                     [--expand]
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_lab_formula_show(): void {
    }
}

/** List Azure Marketplace images allowed for a DevTest Lab. */
class az_lab_gallery_image {
    /**
     * List gallery images in a given lab.
     *
     * Syntax: 
     *
     * az lab gallery-image list --lab-name
     *                           --resource-group
     *                           [--expand]
     *                           [--filter]
     *                           [--orderby]
     *                           [--query-examples]
     *                           [--subscription]
     *                           [--top]
     */
    az_lab_gallery_image_list(): void {
    }
}

/** Manage secrets of an Azure DevTest Lab. */
class az_lab_secret {
    /**
     * Delete secret.
     *
     * Syntax: 
     *
     * az lab secret delete --lab-name
     *                      --name
     *                      --resource-group
     *                      [--subscription]
     */
    az_lab_secret_delete(): void {
    }

    /**
     * List secrets in a given user profile.
     *
     * Syntax: 
     *
     * az lab secret list --lab-name
     *                    --resource-group
     *                    [--expand]
     *                    [--filter]
     *                    [--orderby]
     *                    [--query-examples]
     *                    [--subscription]
     *                    [--top]
     */
    az_lab_secret_list(): void {
    }

    /**
     * Set a secret for a lab.
     *
     * Syntax: 
     *
     * az lab secret set --lab-name
     *                   --name
     *                   --resource-group
     *                   --value
     *                   [--subscription]
     */
    az_lab_secret_set(): void {
    }

    /**
     * Get secret.
     *
     * Syntax: 
     *
     * az lab secret show --lab-name
     *                    --name
     *                    --resource-group
     *                    [--expand]
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_lab_secret_show(): void {
    }
}

/** Manage VMs in an Azure DevTest Lab. */
class az_lab_vm {
    /**
     * Apply artifacts to a virtual machine in Azure DevTest Lab.
     *
     * Syntax: 
     *
     * az lab vm apply-artifacts --lab-name
     *                           --name
     *                           --resource-group
     *                           [--artifacts]
     *                           [--subscription]
     */
    az_lab_vm_apply_artifacts(): void {
    }

    /**
     * Claim a virtual machine from the Lab.
     *
     * Syntax: 
     *
     * az lab vm claim [--ids]
     *                 [--lab-name]
     *                 [--name]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_lab_vm_claim(): void {
    }

    /**
     * Create a VM in a lab.
     *
     * Syntax: 
     *
     * az lab vm create --lab-name
     *                  --name
     *                  --resource-group
     *                  [--admin-password]
     *                  [--admin-username]
     *                  [--allow-claim]
     *                  [--artifacts]
     *                  [--authentication-type]
     *                  [--disk-type]
     *                  [--expiration-date]
     *                  [--formula]
     *                  [--generate-ssh-keys]
     *                  [--image]
     *                  [--image-type]
     *                  [--ip-configuration]
     *                  [--notes]
     *                  [--saved-secret]
     *                  [--size]
     *                  [--ssh-key]
     *                  [--subnet]
     *                  [--subscription]
     *                  [--tags]
     *                  [--vnet-name]
     */
    az_lab_vm_create(): void {
    }

    /**
     * Delete virtual machine.
     *
     * Syntax: 
     *
     * az lab vm delete --lab-name
     *                  --name
     *                  --resource-group
     *                  [--subscription]
     */
    az_lab_vm_delete(): void {
    }

    /**
     * List the VMs in an Azure DevTest Lab.
     *
     * Syntax: 
     *
     * az lab vm list --lab-name
     *                --resource-group
     *                [--all]
     *                [--claimable]
     *                [--environment]
     *                [--expand]
     *                [--filters]
     *                [--object-id]
     *                [--order-by]
     *                [--query-examples]
     *                [--subscription]
     *                [--top]
     */
    az_lab_vm_list(): void {
    }

    /**
     * Get virtual machine.
     *
     * Syntax: 
     *
     * az lab vm show --lab-name
     *                --name
     *                --resource-group
     *                [--expand]
     *                [--query-examples]
     *                [--subscription]
     */
    az_lab_vm_show(): void {
    }

    /**
     * Start a virtual machine.
     *
     * Syntax: 
     *
     * az lab vm start --lab-name
     *                 --name
     *                 --resource-group
     *                 [--subscription]
     */
    az_lab_vm_start(): void {
    }

    /**
     * Stop a virtual machine This operation can take a while to complete.
     *
     * Syntax: 
     *
     * az lab vm stop --lab-name
     *                --name
     *                --resource-group
     *                [--subscription]
     */
    az_lab_vm_stop(): void {
    }
}

/** Manage virtual networks of an Azure DevTest Lab. */
class az_lab_vnet {
    /**
     * Get virtual network.
     *
     * Syntax: 
     *
     * az lab vnet get --lab-name
     *                 --name
     *                 --resource-group
     *                 [--expand]
     *                 [--subscription]
     */
    az_lab_vnet_get(): void {
    }

    /**
     * List virtual networks in a given lab.
     *
     * Syntax: 
     *
     * az lab vnet list --lab-name
     *                  --resource-group
     *                  [--expand]
     *                  [--filter]
     *                  [--orderby]
     *                  [--query-examples]
     *                  [--subscription]
     *                  [--top]
     */
    az_lab_vnet_list(): void {
    }
}

/** Manage Azure DevTest Labs. */
class az_lab {
    /**
     * Delete lab.
     *
     * Syntax: 
     *
     * az lab delete --name
     *               --resource-group
     *               [--subscription]
     */
    az_lab_delete(): void {
    }

    /**
     * Get lab.
     *
     * Syntax: 
     *
     * az lab get --name
     *            --resource-group
     *            [--expand]
     *            [--subscription]
     */
    az_lab_get(): void {
    }
}

/** Manage Local Context. */
class az_local_context {
    /**
     * Delete local context data.
     *
     * Syntax: 
     *
     * az local-context delete [--all]
     *                         [--name]
     *                         [--purge]
     *                         [--recursive]
     *                         [--subscription]
     *                         [--yes]
     */
    az_local_context_delete(): void {
    }

    /**
     * Turn off local context.
     *
     * Syntax: 
     *
     * az local-context off [--subscription]
     */
    az_local_context_off(): void {
    }

    /**
     * Turn on local context.
     *
     * Syntax: 
     *
     * az local-context on [--subscription]
     */
    az_local_context_on(): void {
    }

    /**
     * Show local context data.
     *
     * Syntax: 
     *
     * az local-context show [--name]
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_local_context_show(): void {
    }
}

/** Manage Azure locks. */
class az_lock {
    /**
     * Create a lock.
     *
     * Syntax: 
     *
     * az lock create --lock-type {CanNotDelete, ReadOnly}
     *                --name
     *                [--namespace]
     *                [--notes]
     *                [--parent]
     *                [--resource]
     *                [--resource-group]
     *                [--resource-type]
     *                [--subscription]
     */
    az_lock_create(): void {
    }

    /**
     * Delete a lock.
     *
     * Syntax: 
     *
     * az lock delete [--ids]
     *                [--name]
     *                [--namespace]
     *                [--parent]
     *                [--resource]
     *                [--resource-group]
     *                [--resource-type]
     *                [--subscription]
     */
    az_lock_delete(): void {
    }

    /**
     * List lock information.
     *
     * Syntax: 
     *
     * az lock list [--filter-string]
     *              [--namespace]
     *              [--parent]
     *              [--query-examples]
     *              [--resource]
     *              [--resource-group]
     *              [--resource-type]
     *              [--subscription]
     */
    az_lock_list(): void {
    }

    /**
     * Show the properties of a lock.
     *
     * Syntax: 
     *
     * az lock show [--ids]
     *              [--name]
     *              [--namespace]
     *              [--parent]
     *              [--query-examples]
     *              [--resource]
     *              [--resource-group]
     *              [--resource-type]
     *              [--subscription]
     */
    az_lock_show(): void {
    }

    /**
     * Update a lock.
     *
     * Syntax: 
     *
     * az lock update [--ids]
     *                [--lock-type {CanNotDelete, ReadOnly}]
     *                [--name]
     *                [--namespace]
     *                [--notes]
     *                [--parent]
     *                [--resource]
     *                [--resource-group]
     *                [--resource-type]
     *                [--subscription]
     */
    az_lock_update(): void {
    }
}

/** Manage Azure Managed Applications. */
class az_managedapp_definition {
    /**
     * Create a managed application definition.
     *
     * Syntax: 
     *
     * az managedapp definition create --authorizations
     *                                 --description
     *                                 --display-name
     *                                 --lock-level {CanNotDelete, None, ReadOnly}
     *                                 --name
     *                                 --resource-group
     *                                 [--create-ui-definition]
     *                                 [--location]
     *                                 [--main-template]
     *                                 [--package-file-uri]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_managedapp_definition_create(): void {
    }

    /**
     * Delete a managed application definition.
     *
     * Syntax: 
     *
     * az managedapp definition delete [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_managedapp_definition_delete(): void {
    }

    /**
     * List managed application definitions.
     *
     * Syntax: 
     *
     * az managedapp definition list --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_managedapp_definition_list(): void {
    }

    /**
     * Gets a managed application definition.
     *
     * Syntax: 
     *
     * az managedapp definition show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_managedapp_definition_show(): void {
    }
}

/** Manage template solutions provided and maintained by Independent Software Vendors (ISVs). */
class az_managedapp {
    /**
     * Create a managed application.
     *
     * Syntax: 
     *
     * az managedapp create --kind
     *                      --managed-rg-id
     *                      --name
     *                      --resource-group
     *                      [--location]
     *                      [--managedapp-definition-id]
     *                      [--parameters]
     *                      [--plan-name]
     *                      [--plan-product]
     *                      [--plan-publisher]
     *                      [--plan-version]
     *                      [--subscription]
     *                      [--tags]
     */
    az_managedapp_create(): void {
    }

    /**
     * Delete a managed application.
     *
     * Syntax: 
     *
     * az managedapp delete [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_managedapp_delete(): void {
    }

    /**
     * List managed applications.
     *
     * Syntax: 
     *
     * az managedapp list [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_managedapp_list(): void {
    }

    /**
     * Gets a managed application.
     *
     * Syntax: 
     *
     * az managedapp show [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_managedapp_show(): void {
    }
}

/** Manage the registration assignments in Azure. */
class az_managedservices_assignment {
    /**
     * Creates a new registration assignment.
     *
     * Syntax: 
     *
     * az managedservices assignment create --definition
     *                                      [--assignment-id]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_managedservices_assignment_create(): void {
    }

    /**
     * Deletes the registration assignment.
     *
     * Syntax: 
     *
     * az managedservices assignment delete --assignment
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_managedservices_assignment_delete(): void {
    }

    /**
     * List all the registration assignments.
     *
     * Syntax: 
     *
     * az managedservices assignment list [--include-definition {false, true}]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_managedservices_assignment_list(): void {
    }

    /**
     * Gets a registration assignment.
     *
     * Syntax: 
     *
     * az managedservices assignment show --assignment
     *                                    [--include-definition {false, true}]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_managedservices_assignment_show(): void {
    }
}

/** Manage the registration definitions in Azure. */
class az_managedservices_definition {
    /**
     * Creates a new registration definition.
     *
     * Syntax: 
     *
     * az managedservices definition create --name
     *                                      --principal-id
     *                                      --role-definition-id
     *                                      --tenant-id
     *                                      [--definition-id]
     *                                      [--description]
     *                                      [--plan-name]
     *                                      [--plan-product]
     *                                      [--plan-publisher]
     *                                      [--plan-version]
     *                                      [--subscription]
     */
    az_managedservices_definition_create(): void {
    }

    /**
     * Deletes a registration.
     *
     * Syntax: 
     *
     * az managedservices definition delete --definition
     *                                      [--subscription]
     */
    az_managedservices_definition_delete(): void {
    }

    /**
     * List all the registration definitions under the default scope or under the subscription provided.
     *
     * Syntax: 
     *
     * az managedservices definition list [--query-examples]
     *                                    [--subscription]
     */
    az_managedservices_definition_list(): void {
    }

    /**
     * Gets a registration definition.
     *
     * Syntax: 
     *
     * az managedservices definition show --definition
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_managedservices_definition_show(): void {
    }
}

/** Manage the registration assignments and definitions in Azure. */
class az_managedservices {
}

/** Manage Azure Maps account keys. */
class az_maps_account_keys {
    /**
     * List the keys to use with the Maps APIs.
     *
     * Syntax: 
     *
     * az maps account keys list --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_maps_account_keys_list(): void {
    }

    /**
     * Renew either the primary or secondary key for use with the Maps APIs.
     *
     * Syntax: 
     *
     * az maps account keys renew --key {primary, secondary}
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_maps_account_keys_renew(): void {
    }
}

/** Manage Azure Maps accounts. */
class az_maps_account {
    /**
     * Create a maps account.
     *
     * Syntax: 
     *
     * az maps account create --name
     *                        --resource-group
     *                        [--accept-tos]
     *                        [--sku {S0, S1}]
     *                        [--subscription]
     *                        [--tags]
     */
    az_maps_account_create(): void {
    }

    /**
     * Delete a maps account.
     *
     * Syntax: 
     *
     * az maps account delete [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_maps_account_delete(): void {
    }

    /**
     * Show all maps accounts in a subscription or in a resource group.
     *
     * Syntax: 
     *
     * az maps account list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_maps_account_list(): void {
    }

    /**
     * Show the details of a maps account.
     *
     * Syntax: 
     *
     * az maps account show [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_maps_account_show(): void {
    }

    /**
     * Update the properties of a maps account.
     *
     * Syntax: 
     *
     * az maps account update [--add]
     *                        [--force-string]
     *                        [--ids]
     *                        [--name]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--set]
     *                        [--sku {S0, S1}]
     *                        [--subscription]
     *                        [--tags]
     */
    az_maps_account_update(): void {
    }
}

/** Manage Azure Maps. */
class az_maps {
}

/** Manage MariaDB databases on a server. */
class az_mariadb_db {
    /**
     * Create a MariaDB database.
     *
     * Syntax: 
     *
     * az mariadb db create --name
     *                      --resource-group
     *                      --server-name
     *                      [--charset]
     *                      [--collation]
     *                      [--subscription]
     */
    az_mariadb_db_create(): void {
    }

    /**
     * Delete a database.
     *
     * Syntax: 
     *
     * az mariadb db delete --name
     *                      --resource-group
     *                      --server-name
     *                      [--subscription]
     *                      [--yes]
     */
    az_mariadb_db_delete(): void {
    }

    /**
     * List the databases for a server.
     *
     * Syntax: 
     *
     * az mariadb db list --resource-group
     *                    --server-name
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_mariadb_db_list(): void {
    }

    /**
     * Show the details of a database.
     *
     * Syntax: 
     *
     * az mariadb db show --name
     *                    --resource-group
     *                    --server-name
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_mariadb_db_show(): void {
    }
}

/** Manage configuration values for a server. */
class az_mariadb_server_configuration {
    /**
     * List the configuration values for a server.
     *
     * Syntax: 
     *
     * az mariadb server configuration list [--ids]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     */
    az_mariadb_server_configuration_list(): void {
    }

    /**
     * Update the configuration of a server.
     *
     * Syntax: 
     *
     * az mariadb server configuration set [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--server-name]
     *                                     [--subscription]
     *                                     [--value]
     */
    az_mariadb_server_configuration_set(): void {
    }

    /**
     * Get the configuration for a server.".
     *
     * Syntax: 
     *
     * az mariadb server configuration show [--ids]
     *                                      [--name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     */
    az_mariadb_server_configuration_show(): void {
    }
}

/** Manage firewall rules for a server. */
class az_mariadb_server_firewall_rule {
    /**
     * Create a new firewall rule for a server.
     *
     * Syntax: 
     *
     * az mariadb server firewall-rule create --end-ip-address
     *                                        --name
     *                                        --resource-group
     *                                        --server-name
     *                                        --start-ip-address
     *                                        [--subscription]
     */
    az_mariadb_server_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az mariadb server firewall-rule delete [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--server-name]
     *                                        [--subscription]
     *                                        [--yes]
     */
    az_mariadb_server_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules for a server.
     *
     * Syntax: 
     *
     * az mariadb server firewall-rule list [--ids]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     */
    az_mariadb_server_firewall_rule_list(): void {
    }

    /**
     * Get the details of a firewall rule.
     *
     * Syntax: 
     *
     * az mariadb server firewall-rule show [--ids]
     *                                      [--name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     */
    az_mariadb_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az mariadb server firewall-rule update [--add]
     *                                        [--end-ip-address]
     *                                        [--force-string]
     *                                        [--ids]
     *                                        [--name]
     *                                        [--remove]
     *                                        [--resource-group]
     *                                        [--server-name]
     *                                        [--set]
     *                                        [--start-ip-address]
     *                                        [--subscription]
     */
    az_mariadb_server_firewall_rule_update(): void {
    }
}

/** Manage MariaDB server private endpoint connections. */
class az_mariadb_server_private_endpoint_connection {
    /**
     * Approve the specified private endpoint connection associated with a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server private-endpoint-connection approve [--description]
     *                                                       [--id]
     *                                                       [--ids]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--server-name]
     *                                                       [--subscription]
     */
    az_mariadb_server_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete the specified private endpoint connection associated with a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server private-endpoint-connection delete [--id]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--resource-group]
     *                                                      [--server-name]
     *                                                      [--subscription]
     */
    az_mariadb_server_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject the specified private endpoint connection associated with a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server private-endpoint-connection reject [--description]
     *                                                      [--id]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--resource-group]
     *                                                      [--server-name]
     *                                                      [--subscription]
     */
    az_mariadb_server_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection associated with a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server private-endpoint-connection show [--id]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--query-examples]
     *                                                    [--resource-group]
     *                                                    [--server-name]
     *                                                    [--subscription]
     */
    az_mariadb_server_private_endpoint_connection_show(): void {
    }
}

/** Manage MariaDB server private link resources. */
class az_mariadb_server_private_link_resource {
    /**
     * List the private link resources supported for a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server private-link-resource list [--ids]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--server-name]
     *                                              [--subscription]
     */
    az_mariadb_server_private_link_resource_list(): void {
    }
}

/** Manage read replicas. */
class az_mariadb_server_replica {
    /**
     * Create a read replica for a server.
     *
     * Syntax: 
     *
     * az mariadb server replica create --name
     *                                  --resource-group
     *                                  --source-server
     *                                  [--location]
     *                                  [--no-wait]
     *                                  [--sku-name]
     *                                  [--subscription]
     */
    az_mariadb_server_replica_create(): void {
    }

    /**
     * List all read replicas for a given server.
     *
     * Syntax: 
     *
     * az mariadb server replica list [--ids]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--server-name]
     *                                [--subscription]
     */
    az_mariadb_server_replica_list(): void {
    }

    /**
     * Stop replication to a read replica and make it a read/write server.
     *
     * Syntax: 
     *
     * az mariadb server replica stop [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--yes]
     */
    az_mariadb_server_replica_stop(): void {
    }
}

/** Manage a server's virtual network rules. */
class az_mariadb_server_vnet_rule {
    /**
     * Create a virtual network rule to allows access to a MariaDB server.
     *
     * Syntax: 
     *
     * az mariadb server vnet-rule create --name
     *                                    --resource-group
     *                                    --server-name
     *                                    --subnet
     *                                    [--ignore-missing-endpoint {false, true}]
     *                                    [--subscription]
     *                                    [--vnet-name]
     */
    az_mariadb_server_vnet_rule_create(): void {
    }

    /**
     * Deletes the virtual network rule with the given name.
     *
     * Syntax: 
     *
     * az mariadb server vnet-rule delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mariadb_server_vnet_rule_delete(): void {
    }

    /**
     * Gets a list of virtual network rules in a server.
     *
     * Syntax: 
     *
     * az mariadb server vnet-rule list [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_mariadb_server_vnet_rule_list(): void {
    }

    /**
     * Gets a virtual network rule.
     *
     * Syntax: 
     *
     * az mariadb server vnet-rule show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_mariadb_server_vnet_rule_show(): void {
    }

    /**
     * Update a virtual network rule.
     *
     * Syntax: 
     *
     * az mariadb server vnet-rule update --subnet
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--ignore-missing-endpoint {false, true}]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--vnet-name]
     */
    az_mariadb_server_vnet_rule_update(): void {
    }
}

/** Manage server logs. */
class az_mariadb_server_logs {
    /**
     * Download log files.
     *
     * Syntax: 
     *
     * az mariadb server-logs download --name
     *                                 --resource-group
     *                                 --server-name
     *                                 [--subscription]
     */
    az_mariadb_server_logs_download(): void {
    }

    /**
     * List log files for a server.
     *
     * Syntax: 
     *
     * az mariadb server-logs list --resource-group
     *                             --server-name
     *                             [--file-last-written]
     *                             [--filename-contains]
     *                             [--max-file-size]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_mariadb_server_logs_list(): void {
    }
}

/** Manage MariaDB servers. */
class az_mariadb_server {
    /**
     * Create a server.
     *
     * Syntax: 
     *
     * az mariadb server create --admin-password
     *                          --admin-user
     *                          --name
     *                          --resource-group
     *                          --sku-name
     *                          [--assign-identity]
     *                          [--auto-grow {Disabled, Enabled}]
     *                          [--backup-retention]
     *                          [--geo-redundant-backup {Disabled, Enabled}]
     *                          [--infrastructure-encryption {Disabled, Enabled}]
     *                          [--location]
     *                          [--public {Disabled, Enabled}]
     *                          [--ssl-enforcement {Disabled, Enabled}]
     *                          [--storage-size]
     *                          [--subscription]
     *                          [--tags]
     *                          [--version]
     */
    az_mariadb_server_create(): void {
    }

    /**
     * Delete a server.
     *
     * Syntax: 
     *
     * az mariadb server delete [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--yes]
     */
    az_mariadb_server_delete(): void {
    }

    /**
     * Geo-restore a server from backup.
     *
     * Syntax: 
     *
     * az mariadb server georestore --location
     *                              --source-server
     *                              [--backup-retention]
     *                              [--geo-redundant-backup]
     *                              [--ids]
     *                              [--name]
     *                              [--no-wait]
     *                              [--resource-group]
     *                              [--sku-name]
     *                              [--subscription]
     */
    az_mariadb_server_georestore(): void {
    }

    /**
     * List available servers.
     *
     * Syntax: 
     *
     * az mariadb server list [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_mariadb_server_list(): void {
    }

    /**
     * Restart a server.
     *
     * Syntax: 
     *
     * az mariadb server restart [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_mariadb_server_restart(): void {
    }

    /**
     * Restore a server from backup.
     *
     * Syntax: 
     *
     * az mariadb server restore --pitr-time
     *                           --source-server
     *                           [--ids]
     *                           [--name]
     *                           [--no-wait]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_mariadb_server_restore(): void {
    }

    /**
     * Get the details of a server.
     *
     * Syntax: 
     *
     * az mariadb server show [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_mariadb_server_show(): void {
    }

    /**
     * Start a stopped server.
     *
     * Syntax: 
     *
     * az mariadb server start [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_mariadb_server_start(): void {
    }

    /**
     * Stop a running server.
     *
     * Syntax: 
     *
     * az mariadb server stop [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_mariadb_server_stop(): void {
    }

    /**
     * Update a server.
     *
     * Syntax: 
     *
     * az mariadb server update [--add]
     *                          [--admin-password]
     *                          [--assign-identity]
     *                          [--auto-grow {Disabled, Enabled}]
     *                          [--backup-retention]
     *                          [--force-string]
     *                          [--ids]
     *                          [--name]
     *                          [--public {Disabled, Enabled}]
     *                          [--remove]
     *                          [--resource-group]
     *                          [--set]
     *                          [--sku-name]
     *                          [--ssl-enforcement {Disabled, Enabled}]
     *                          [--storage-size]
     *                          [--subscription]
     *                          [--tags]
     */
    az_mariadb_server_update(): void {
    }

    /**
     * Wait for server to satisfy certain conditions.
     *
     * Syntax: 
     *
     * az mariadb server wait [--custom]
     *                        [--exists]
     *                        [--ids]
     *                        [--interval]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_mariadb_server_wait(): void {
    }
}

/** Manage Azure Database for MariaDB servers. */
class az_mariadb {
}

/** Manage action groups. */
class az_monitor_action_group {
    /**
     * Create a new action group.
     *
     * Syntax: 
     *
     * az monitor action-group create --name
     *                                --resource-group
     *                                [--action]
     *                                [--short-name]
     *                                [--subscription]
     *                                [--tags]
     */
    az_monitor_action_group_create(): void {
    }

    /**
     * Delete an action group.
     *
     * Syntax: 
     *
     * az monitor action-group delete [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_monitor_action_group_delete(): void {
    }

    /**
     * Enable a receiver in an action group.
     *
     * Syntax: 
     *
     * az monitor action-group enable-receiver --name
     *                                         [--action-group]
     *                                         [--ids]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_monitor_action_group_enable_receiver(): void {
    }

    /**
     * List action groups under a resource group or the current subscription.
     *
     * Syntax: 
     *
     * az monitor action-group list [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_monitor_action_group_list(): void {
    }

    /**
     * Show the details of an action group.
     *
     * Syntax: 
     *
     * az monitor action-group show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_monitor_action_group_show(): void {
    }

    /**
     * Update an action group.
     *
     * Syntax: 
     *
     * az monitor action-group update [--add]
     *                                [--add-action]
     *                                [--force-string]
     *                                [--ids]
     *                                [--name]
     *                                [--remove]
     *                                [--remove-action]
     *                                [--resource-group]
     *                                [--set]
     *                                [--short-name]
     *                                [--subscription]
     *                                [--tags]
     */
    az_monitor_action_group_update(): void {
    }
}

/** Manage action groups for activity log alerts. */
class az_monitor_activity_log_alert_action_group {
    /**
     * Add action groups to this activity log alert. It can also be used to overwrite existing webhook properties of particular action groups.
     *
     * Syntax: 
     *
     * az monitor activity-log alert action-group add --action-group
     *                                                [--ids]
     *                                                [--name]
     *                                                [--reset]
     *                                                [--resource-group]
     *                                                [--strict]
     *                                                [--subscription]
     *                                                [--webhook-properties]
     */
    az_monitor_activity_log_alert_action_group_add(): void {
    }

    /**
     * Remove action groups from this activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert action-group remove --action-group
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_monitor_activity_log_alert_action_group_remove(): void {
    }
}

/** Manage scopes for activity log alerts. */
class az_monitor_activity_log_alert_scope {
    /**
     * Add scopes to this activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert scope add --scope
     *                                         [--ids]
     *                                         [--name]
     *                                         [--reset]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_monitor_activity_log_alert_scope_add(): void {
    }

    /**
     * Removes scopes from this activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert scope remove --scope
     *                                            [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_monitor_activity_log_alert_scope_remove(): void {
    }
}

/** Manage activity log alerts. */
class az_monitor_activity_log_alert {
    /**
     * Create a default activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert create --name
     *                                      --resource-group
     *                                      [--action-group]
     *                                      [--condition]
     *                                      [--description]
     *                                      [--disable]
     *                                      [--scope]
     *                                      [--subscription]
     *                                      [--tags]
     *                                      [--webhook-properties]
     */
    az_monitor_activity_log_alert_create(): void {
    }

    /**
     * Delete an activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert delete [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_monitor_activity_log_alert_delete(): void {
    }

    /**
     * List activity log alerts under a resource group or the current subscription.
     *
     * Syntax: 
     *
     * az monitor activity-log alert list [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_monitor_activity_log_alert_list(): void {
    }

    /**
     * Get an activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_monitor_activity_log_alert_show(): void {
    }

    /**
     * Update the details of this activity log alert.
     *
     * Syntax: 
     *
     * az monitor activity-log alert update [--add]
     *                                      [--condition]
     *                                      [--description]
     *                                      [--enabled {false, true}]
     *                                      [--force-string]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--remove]
     *                                      [--resource-group]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--tags]
     */
    az_monitor_activity_log_alert_update(): void {
    }
}

/** Manage activity logs. */
class az_monitor_activity_log {
    /**
     * List and query activity log events.
     *
     * Syntax: 
     *
     * az monitor activity-log list [--caller]
     *                              [--correlation-id]
     *                              [--end-time]
     *                              [--filters]
     *                              [--max-events]
     *                              [--namespace]
     *                              [--offset]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--resource-id]
     *                              [--select {authorization, caller, category, claims, correlationId, description, eventDataId, eventName, eventTimestamp, httpRequest, id, level, operationId, operationName, properties, resourceGroupName, resourceId, resourceProviderName, resourceType, status, subStatus, submissionTimestamp, subscriptionId, tenantId}]
     *                              [--start-time]
     *                              [--status]
     *                              [--subscription]
     */
    az_monitor_activity_log_list(): void {
    }

    /**
     * List the event categories of activity logs.
     *
     * Syntax: 
     *
     * az monitor activity-log list-categories [--subscription]
     */
    az_monitor_activity_log_list_categories(): void {
    }
}

/** Manage classic metric-based alert rules. */
class az_monitor_alert {
    /**
     * Create a classic metric-based alert rule.
     *
     * Syntax: 
     *
     * az monitor alert create --condition
     *                         --name
     *                         --target
     *                         [--action]
     *                         [--description]
     *                         [--disabled {false, true}]
     *                         [--email-service-owners {false, true}]
     *                         [--location]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--tags]
     *                         [--target-namespace]
     *                         [--target-parent]
     *                         [--target-type]
     */
    az_monitor_alert_create(): void {
    }

    /**
     * Delete an alert rule.
     *
     * Syntax: 
     *
     * az monitor alert delete [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_monitor_alert_delete(): void {
    }

    /**
     * List alert rules in a resource group.
     *
     * Syntax: 
     *
     * az monitor alert list --resource-group
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_monitor_alert_list(): void {
    }

    /**
     * List all incidents for an alert rule.
     *
     * Syntax: 
     *
     * az monitor alert list-incidents --resource-group
     *                                 --rule-name
     *                                 [--subscription]
     */
    az_monitor_alert_list_incidents(): void {
    }

    /**
     * Show an alert rule.
     *
     * Syntax: 
     *
     * az monitor alert show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_monitor_alert_show(): void {
    }

    /**
     * Get the details of an alert rule incident.
     *
     * Syntax: 
     *
     * az monitor alert show-incident [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--rule-name]
     *                                [--subscription]
     */
    az_monitor_alert_show_incident(): void {
    }

    /**
     * Update a classic metric-based alert rule.
     *
     * Syntax: 
     *
     * az monitor alert update [--add]
     *                         [--add-action]
     *                         [--aggregation {avg, last, max, min, total}]
     *                         [--condition]
     *                         [--description]
     *                         [--email-service-owners {false, true}]
     *                         [--enabled]
     *                         [--force-string]
     *                         [--ids]
     *                         [--metric]
     *                         [--name]
     *                         [--operator {<, <=, >, >=}]
     *                         [--period]
     *                         [--remove]
     *                         [--remove-action]
     *                         [--resource]
     *                         [--resource-group]
     *                         [--resource-namespace]
     *                         [--resource-parent]
     *                         [--resource-type]
     *                         [--set]
     *                         [--subscription]
     *                         [--tags]
     *                         [--threshold]
     */
    az_monitor_alert_update(): void {
    }
}

/** Manage autoscaling profiles. */
class az_monitor_autoscale_profile {
    /**
     * Create a fixed or recurring autoscale profile.
     *
     * Syntax: 
     *
     * az monitor autoscale profile create --autoscale-name
     *                                     --count
     *                                     --name
     *                                     --resource-group
     *                                     --timezone
     *                                     [--copy-rules]
     *                                     [--end]
     *                                     [--max-count]
     *                                     [--min-count]
     *                                     [--recurrence]
     *                                     [--start]
     *                                     [--subscription]
     */
    az_monitor_autoscale_profile_create(): void {
    }

    /**
     * Delete an autoscale profile.
     *
     * Syntax: 
     *
     * az monitor autoscale profile delete --autoscale-name
     *                                     --name
     *                                     --resource-group
     *                                     [--subscription]
     */
    az_monitor_autoscale_profile_delete(): void {
    }

    /**
     * List autoscale profiles.
     *
     * Syntax: 
     *
     * az monitor autoscale profile list --autoscale-name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_monitor_autoscale_profile_list(): void {
    }

    /**
     * Look up time zone information.
     *
     * Syntax: 
     *
     * az monitor autoscale profile list-timezones [--offset]
     *                                             [--search-query]
     *                                             [--subscription]
     */
    az_monitor_autoscale_profile_list_timezones(): void {
    }

    /**
     * Show details of an autoscale profile.
     *
     * Syntax: 
     *
     * az monitor autoscale profile show --autoscale-name
     *                                   --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_monitor_autoscale_profile_show(): void {
    }
}

/** Manage autoscale scaling rules. */
class az_monitor_autoscale_rule {
    /**
     * Copy autoscale rules from one profile to another.
     *
     * Syntax: 
     *
     * az monitor autoscale rule copy --autoscale-name
     *                                --dest-schedule
     *                                --index
     *                                --resource-group
     *                                [--source-schedule]
     *                                [--subscription]
     */
    az_monitor_autoscale_rule_copy(): void {
    }

    /**
     * Add a new autoscale rule.
     *
     * Syntax: 
     *
     * az monitor autoscale rule create --autoscale-name
     *                                  --condition
     *                                  --scale
     *                                  [--cooldown]
     *                                  [--profile-name]
     *                                  [--resource]
     *                                  [--resource-group]
     *                                  [--resource-namespace]
     *                                  [--resource-parent]
     *                                  [--resource-type]
     *                                  [--subscription]
     *                                  [--timegrain]
     */
    az_monitor_autoscale_rule_create(): void {
    }

    /**
     * Remove autoscale rules from a profile.
     *
     * Syntax: 
     *
     * az monitor autoscale rule delete --autoscale-name
     *                                  --index
     *                                  --resource-group
     *                                  [--profile-name]
     *                                  [--subscription]
     */
    az_monitor_autoscale_rule_delete(): void {
    }

    /**
     * List autoscale rules for a profile.
     *
     * Syntax: 
     *
     * az monitor autoscale rule list --autoscale-name
     *                                --resource-group
     *                                [--profile-name]
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_monitor_autoscale_rule_list(): void {
    }
}

/** Manage autoscale settings. */
class az_monitor_autoscale_settings {
    /**
     * Creates or updates an autoscale setting.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings create --name
     *                                      --parameters
     *                                      --resource-group
     *                                      [--subscription]
     */
    az_monitor_autoscale_settings_create(): void {
    }

    /**
     * Deletes and autoscale setting.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings delete [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_monitor_autoscale_settings_delete(): void {
    }

    /**
     * Scaffold fully formed autoscale-settings' parameters as json template.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings get-parameters-template [--subscription]
     */
    az_monitor_autoscale_settings_get_parameters_template(): void {
    }

    /**
     * Lists the autoscale settings for a resource group.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings list --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_monitor_autoscale_settings_list(): void {
    }

    /**
     * Gets an autoscale setting.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_monitor_autoscale_settings_show(): void {
    }

    /**
     * Updates an autoscale setting.
     *
     * Syntax: 
     *
     * az monitor autoscale-settings update --name
     *                                      --resource-group
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     */
    az_monitor_autoscale_settings_update(): void {
    }
}

/** Manage autoscale settings. */
class az_monitor_autoscale {
    /**
     * Create new autoscale settings.
     *
     * Syntax: 
     *
     * az monitor autoscale create --count
     *                             --resource
     *                             [--action]
     *                             [--disabled {false, true}]
     *                             [--email-administrator {false, true}]
     *                             [--email-coadministrators {false, true}]
     *                             [--location]
     *                             [--max-count]
     *                             [--min-count]
     *                             [--name]
     *                             [--resource-group]
     *                             [--resource-namespace]
     *                             [--resource-parent]
     *                             [--resource-type]
     *                             [--subscription]
     *                             [--tags]
     */
    az_monitor_autoscale_create(): void {
    }

    /**
     * Deletes and autoscale setting.
     *
     * Syntax: 
     *
     * az monitor autoscale delete [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_monitor_autoscale_delete(): void {
    }

    /**
     * Lists the autoscale settings for a resource group.
     *
     * Syntax: 
     *
     * az monitor autoscale list --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_monitor_autoscale_list(): void {
    }

    /**
     * Show autoscale setting details.
     *
     * Syntax: 
     *
     * az monitor autoscale show [--ids]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_monitor_autoscale_show(): void {
    }

    /**
     * Update autoscale settings.
     *
     * Syntax: 
     *
     * az monitor autoscale update [--add]
     *                             [--add-action]
     *                             [--count]
     *                             [--email-administrator {false, true}]
     *                             [--email-coadministrators {false, true}]
     *                             [--enabled {false, true}]
     *                             [--force-string]
     *                             [--ids]
     *                             [--max-count]
     *                             [--min-count]
     *                             [--name]
     *                             [--remove]
     *                             [--remove-action]
     *                             [--resource-group]
     *                             [--set]
     *                             [--subscription]
     *                             [--tags]
     */
    az_monitor_autoscale_update(): void {
    }
}

/** Retrieve service diagnostic settings categories. */
class az_monitor_diagnostic_settings_categories {
    /**
     * List the diagnostic settings categories for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings categories list --resource
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--resource-namespace]
     *                                                [--resource-parent]
     *                                                [--resource-type]
     *                                                [--subscription]
     */
    az_monitor_diagnostic_settings_categories_list(): void {
    }

    /**
     * Gets the diagnostic settings category for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings categories show --name
     *                                                --resource
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--resource-namespace]
     *                                                [--resource-parent]
     *                                                [--resource-type]
     *                                                [--subscription]
     */
    az_monitor_diagnostic_settings_categories_show(): void {
    }
}

/** Manage diagnostic settings for subscription. */
class az_monitor_diagnostic_settings_subscription {
    /**
     * Create diagnostic settings for a subscription.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings subscription create --location
     *                                                    --logs
     *                                                    --name
     *                                                    [--event-hub-auth-rule]
     *                                                    [--event-hub-name]
     *                                                    [--service-bus-rule]
     *                                                    [--storage-account]
     *                                                    [--subscription]
     *                                                    [--workspace]
     */
    az_monitor_diagnostic_settings_subscription_create(): void {
    }

    /**
     * Deletes existing subscription diagnostic settings for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings subscription delete --name
     *                                                    [--subscription]
     *                                                    [--yes]
     */
    az_monitor_diagnostic_settings_subscription_delete(): void {
    }

    /**
     * Gets the active subscription diagnostic settings list for the specified subscriptionId.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings subscription list [--query-examples]
     *                                                  [--subscription]
     */
    az_monitor_diagnostic_settings_subscription_list(): void {
    }

    /**
     * Gets the active subscription diagnostic settings for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings subscription show --name
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_monitor_diagnostic_settings_subscription_show(): void {
    }

    /**
     * Update diagnostic settings for a subscription.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings subscription update --name
     *                                                    [--add]
     *                                                    [--event-hub-auth-rule]
     *                                                    [--event-hub-name]
     *                                                    [--force-string]
     *                                                    [--logs]
     *                                                    [--remove]
     *                                                    [--service-bus-rule]
     *                                                    [--set]
     *                                                    [--storage-account]
     *                                                    [--subscription]
     *                                                    [--workspace]
     */
    az_monitor_diagnostic_settings_subscription_update(): void {
    }
}

/** Manage service diagnostic settings. */
class az_monitor_diagnostic_settings {
    /**
     * Create diagnostic settings for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings create --name
     *                                       --resource
     *                                       [--event-hub]
     *                                       [--event-hub-rule]
     *                                       [--export-to-resource-specific {false, true}]
     *                                       [--logs]
     *                                       [--metrics]
     *                                       [--resource-group]
     *                                       [--resource-namespace]
     *                                       [--resource-parent]
     *                                       [--resource-type]
     *                                       [--storage-account]
     *                                       [--subscription]
     *                                       [--workspace]
     */
    az_monitor_diagnostic_settings_create(): void {
    }

    /**
     * Deletes existing diagnostic settings for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings delete --name
     *                                       --resource
     *                                       [--resource-group]
     *                                       [--resource-namespace]
     *                                       [--resource-parent]
     *                                       [--resource-type]
     *                                       [--subscription]
     */
    az_monitor_diagnostic_settings_delete(): void {
    }

    /**
     * Gets the active diagnostic settings list for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings list --resource
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--resource-namespace]
     *                                     [--resource-parent]
     *                                     [--resource-type]
     *                                     [--subscription]
     */
    az_monitor_diagnostic_settings_list(): void {
    }

    /**
     * Gets the active diagnostic settings for the specified resource.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings show --name
     *                                     --resource
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--resource-namespace]
     *                                     [--resource-parent]
     *                                     [--resource-type]
     *                                     [--subscription]
     */
    az_monitor_diagnostic_settings_show(): void {
    }

    /**
     * Update diagnostic settings.
     *
     * Syntax: 
     *
     * az monitor diagnostic-settings update --name
     *                                       --resource
     *                                       [--add]
     *                                       [--force-string]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--resource-namespace]
     *                                       [--resource-parent]
     *                                       [--resource-type]
     *                                       [--set]
     *                                       [--subscription]
     */
    az_monitor_diagnostic_settings_update(): void {
    }
}

/** Manage Azure log analytics cluster. */
class az_monitor_log_analytics_cluster {
    /**
     * Create a cluster instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster create --name
     *                                         --resource-group
     *                                         --sku-capacity
     *                                         [--identity-type]
     *                                         [--location]
     *                                         [--no-wait]
     *                                         [--sku-name]
     *                                         [--subscription]
     *                                         [--tags]
     */
    az_monitor_log_analytics_cluster_create(): void {
    }

    /**
     * Delete a cluster instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster delete --name
     *                                         --resource-group
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_monitor_log_analytics_cluster_delete(): void {
    }

    /**
     * Gets all cluster instances in a resource group or in current subscription.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster list [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_monitor_log_analytics_cluster_list(): void {
    }

    /**
     * Show the properties of a cluster instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster show --name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_monitor_log_analytics_cluster_show(): void {
    }

    /**
     * Update a cluster instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster update --name
     *                                         --resource-group
     *                                         [--key-name]
     *                                         [--key-vault-uri]
     *                                         [--key-version]
     *                                         [--sku-capacity]
     *                                         [--subscription]
     *                                         [--tags]
     */
    az_monitor_log_analytics_cluster_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the cluster is met.
     *
     * Syntax: 
     *
     * az monitor log-analytics cluster wait --name
     *                                       --resource-group
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--subscription]
     *                                       [--timeout]
     *                                       [--updated]
     */
    az_monitor_log_analytics_cluster_wait(): void {
    }
}

/** Manage data export ruls for log analytics workspace. */
class az_monitor_log_analytics_workspace_data_export {
    /**
     * Create a data export rule for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace data-export create --destination
     *                                                       --name
     *                                                       --resource-group
     *                                                       --workspace-name
     *                                                       [--all {false, true}]
     *                                                       [--enable {false, true}]
     *                                                       [--subscription]
     *                                                       [--tables]
     */
    az_monitor_log_analytics_workspace_data_export_create(): void {
    }

    /**
     * Delete a data export rule for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace data-export delete --name
     *                                                       --resource-group
     *                                                       --workspace-name
     *                                                       [--subscription]
     *                                                       [--yes]
     */
    az_monitor_log_analytics_workspace_data_export_delete(): void {
    }

    /**
     * List all data export ruleses for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace data-export list --resource-group
     *                                                     --workspace-name
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_monitor_log_analytics_workspace_data_export_list(): void {
    }

    /**
     * Show a data export rule for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace data-export show --name
     *                                                     --resource-group
     *                                                     --workspace-name
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_monitor_log_analytics_workspace_data_export_show(): void {
    }

    /**
     * Update a data export rule for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace data-export update --name
     *                                                       --resource-group
     *                                                       --workspace-name
     *                                                       [--add]
     *                                                       [--all {false, true}]
     *                                                       [--destination]
     *                                                       [--enable {false, true}]
     *                                                       [--force-string]
     *                                                       [--remove]
     *                                                       [--set]
     *                                                       [--subscription]
     *                                                       [--tables]
     */
    az_monitor_log_analytics_workspace_data_export_update(): void {
    }
}

/** Manage linked service for log analytics workspace. */
class az_monitor_log_analytics_workspace_linked_service {
    /**
     * Create a linked service.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service create --name
     *                                                          --resource-group
     *                                                          --workspace-name
     *                                                          [--no-wait]
     *                                                          [--resource-id]
     *                                                          [--subscription]
     *                                                          [--write-access-resource-id]
     */
    az_monitor_log_analytics_workspace_linked_service_create(): void {
    }

    /**
     * Delete a linked service.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service delete --name
     *                                                          --resource-group
     *                                                          --workspace-name
     *                                                          [--no-wait]
     *                                                          [--subscription]
     *                                                          [--yes]
     */
    az_monitor_log_analytics_workspace_linked_service_delete(): void {
    }

    /**
     * Gets all the linked services in a workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service list --resource-group
     *                                                        --workspace-name
     *                                                        [--query-examples]
     *                                                        [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_service_list(): void {
    }

    /**
     * Show the properties of a linked service.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service show --name
     *                                                        --resource-group
     *                                                        --workspace-name
     *                                                        [--query-examples]
     *                                                        [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_service_show(): void {
    }

    /**
     * Update a linked service.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service update --name
     *                                                          --resource-group
     *                                                          --workspace-name
     *                                                          [--add]
     *                                                          [--force-string]
     *                                                          [--no-wait]
     *                                                          [--remove]
     *                                                          [--resource-id]
     *                                                          [--set]
     *                                                          [--subscription]
     *                                                          [--write-access-resource-id]
     */
    az_monitor_log_analytics_workspace_linked_service_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the linked service is met.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-service wait --name
     *                                                        --resource-group
     *                                                        --workspace-name
     *                                                        [--created]
     *                                                        [--custom]
     *                                                        [--deleted]
     *                                                        [--exists]
     *                                                        [--interval]
     *                                                        [--subscription]
     *                                                        [--timeout]
     *                                                        [--updated]
     */
    az_monitor_log_analytics_workspace_linked_service_wait(): void {
    }
}

/** Manage linked storage account for log analytics workspace. */
class az_monitor_log_analytics_workspace_linked_storage {
    /**
     * Add some linked storage accounts with specific data source type for log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage add --resource-group
     *                                                       --storage-accounts
     *                                                       --type {AzureWatson, CustomLogs}
     *                                                       --workspace-name
     *                                                       [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_storage_add(): void {
    }

    /**
     * Create some linked storage accounts for log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage create --resource-group
     *                                                          --type {AzureWatson, CustomLogs}
     *                                                          --workspace-name
     *                                                          [--storage-accounts]
     *                                                          [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_storage_create(): void {
    }

    /**
     * Delete all linked storage accounts with specific data source type for log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage delete --resource-group
     *                                                          --type {AzureWatson, CustomLogs}
     *                                                          --workspace-name
     *                                                          [--subscription]
     *                                                          [--yes]
     */
    az_monitor_log_analytics_workspace_linked_storage_delete(): void {
    }

    /**
     * List all linked storage accounts for a log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage list --resource-group
     *                                                        --workspace-name
     *                                                        [--query-examples]
     *                                                        [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_storage_list(): void {
    }

    /**
     * Remove some linked storage accounts with specific data source type for log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage remove --resource-group
     *                                                          --storage-accounts
     *                                                          --type {AzureWatson, CustomLogs}
     *                                                          --workspace-name
     *                                                          [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_storage_remove(): void {
    }

    /**
     * List all linked storage accounts with specific data source type for a log analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace linked-storage show --resource-group
     *                                                        --type {AzureWatson, CustomLogs}
     *                                                        --workspace-name
     *                                                        [--query-examples]
     *                                                        [--subscription]
     */
    az_monitor_log_analytics_workspace_linked_storage_show(): void {
    }
}

/** Manage intelligent packs for log analytics workspace. */
class az_monitor_log_analytics_workspace_pack {
    /**
     * Disable an intelligence pack for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace pack disable --name
     *                                                 --resource-group
     *                                                 --workspace-name
     *                                                 [--subscription]
     */
    az_monitor_log_analytics_workspace_pack_disable(): void {
    }

    /**
     * Enable an intelligence pack for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace pack enable --name
     *                                                --resource-group
     *                                                --workspace-name
     *                                                [--subscription]
     */
    az_monitor_log_analytics_workspace_pack_enable(): void {
    }

    /**
     * List all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace pack list --resource-group
     *                                              --workspace-name
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_monitor_log_analytics_workspace_pack_list(): void {
    }
}

/** Manage saved search for log analytics workspace. */
class az_monitor_log_analytics_workspace_saved_search {
    /**
     * Create a saved search for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace saved-search create --category
     *                                                        --display-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        --saved-query
     *                                                        --workspace-name
     *                                                        [--fa]
     *                                                        [--fp]
     *                                                        [--subscription]
     *                                                        [--tags]
     */
    az_monitor_log_analytics_workspace_saved_search_create(): void {
    }

    /**
     * Delete a saved search for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace saved-search delete --name
     *                                                        --resource-group
     *                                                        --workspace-name
     *                                                        [--subscription]
     *                                                        [--yes]
     */
    az_monitor_log_analytics_workspace_saved_search_delete(): void {
    }

    /**
     * List all saved searches for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace saved-search list --resource-group
     *                                                      --workspace-name
     *                                                      [--query-examples]
     *                                                      [--subscription]
     */
    az_monitor_log_analytics_workspace_saved_search_list(): void {
    }

    /**
     * Show a saved search for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace saved-search show --name
     *                                                      --resource-group
     *                                                      --workspace-name
     *                                                      [--query-examples]
     *                                                      [--subscription]
     */
    az_monitor_log_analytics_workspace_saved_search_show(): void {
    }

    /**
     * Update a saved search for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace saved-search update --name
     *                                                        --resource-group
     *                                                        --workspace-name
     *                                                        [--add]
     *                                                        [--category]
     *                                                        [--display-name]
     *                                                        [--fa]
     *                                                        [--force-string]
     *                                                        [--fp]
     *                                                        [--remove]
     *                                                        [--saved-query]
     *                                                        [--set]
     *                                                        [--subscription]
     *                                                        [--tags]
     */
    az_monitor_log_analytics_workspace_saved_search_update(): void {
    }
}

/** Manage tables for log analytics workspace. */
class az_monitor_log_analytics_workspace_table {
    /**
     * List all the tables for the given Log Analytics workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace table list --resource-group
     *                                               --workspace-name
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_monitor_log_analytics_workspace_table_list(): void {
    }

    /**
     * Get a Log Analytics workspace table.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace table show --name
     *                                               --resource-group
     *                                               --workspace-name
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_monitor_log_analytics_workspace_table_show(): void {
    }

    /**
     * Update the properties of a Log Analytics workspace table, currently only support updating retention time.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace table update --name
     *                                                 --resource-group
     *                                                 --retention-time
     *                                                 --workspace-name
     *                                                 [--subscription]
     */
    az_monitor_log_analytics_workspace_table_update(): void {
    }
}

/** Manage Azure log analytics workspace. */
class az_monitor_log_analytics_workspace {
    /**
     * Create a workspace instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace create --resource-group
     *                                           --workspace-name
     *                                           [--capacity-reservation-level]
     *                                           [--ingestion-access {Disabled, Enabled}]
     *                                           [--location]
     *                                           [--no-wait]
     *                                           [--query-access {Disabled, Enabled}]
     *                                           [--quota]
     *                                           [--retention-time]
     *                                           [--sku]
     *                                           [--subscription]
     *                                           [--tags]
     */
    az_monitor_log_analytics_workspace_create(): void {
    }

    /**
     * Delete a workspace instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace delete --resource-group
     *                                           --workspace-name
     *                                           [--force {false, true}]
     *                                           [--subscription]
     *                                           [--yes]
     */
    az_monitor_log_analytics_workspace_delete(): void {
    }

    /**
     * Get the schema for a given workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace get-schema --resource-group
     *                                               --workspace-name
     *                                               [--subscription]
     */
    az_monitor_log_analytics_workspace_get_schema(): void {
    }

    /**
     * Get the shared keys for a workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace get-shared-keys --resource-group
     *                                                    --workspace-name
     *                                                    [--subscription]
     */
    az_monitor_log_analytics_workspace_get_shared_keys(): void {
    }

    /**
     * Get a list of workspaces under a resource group or a subscription.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace list [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_monitor_log_analytics_workspace_list(): void {
    }

    /**
     * Get a list of deleted workspaces that can be recovered in a subscription or a resource group.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace list-deleted-workspaces [--resource-group]
     *                                                            [--subscription]
     */
    az_monitor_log_analytics_workspace_list_deleted_workspaces(): void {
    }

    /**
     * Get a list of management groups connected to a workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace list-management-groups --resource-group
     *                                                           --workspace-name
     *                                                           [--subscription]
     */
    az_monitor_log_analytics_workspace_list_management_groups(): void {
    }

    /**
     * Get a list of usage metrics for a workspace.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace list-usages --resource-group
     *                                                --workspace-name
     *                                                [--subscription]
     */
    az_monitor_log_analytics_workspace_list_usages(): void {
    }

    /**
     * Recover a workspace in a soft-delete state within 14 days.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace recover --workspace-name
     *                                            [--no-wait]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_monitor_log_analytics_workspace_recover(): void {
    }

    /**
     * Show a workspace instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace show --resource-group
     *                                         --workspace-name
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_monitor_log_analytics_workspace_show(): void {
    }

    /**
     * Update a workspace instance.
     *
     * Syntax: 
     *
     * az monitor log-analytics workspace update --resource-group
     *                                           --workspace-name
     *                                           [--add]
     *                                           [--capacity-reservation-level]
     *                                           [--force-string]
     *                                           [--ingestion-access {Disabled, Enabled}]
     *                                           [--query-access {Disabled, Enabled}]
     *                                           [--quota]
     *                                           [--remove]
     *                                           [--retention-time]
     *                                           [--set]
     *                                           [--subscription]
     *                                           [--tags]
     */
    az_monitor_log_analytics_workspace_update(): void {
    }
}

/** Manage Azure log analytics. */
class az_monitor_log_analytics {
}

/** Manage log profiles. */
class az_monitor_log_profiles {
    /**
     * Create a log profile.
     *
     * Syntax: 
     *
     * az monitor log-profiles create --categories
     *                                --days
     *                                --enabled {false, true}
     *                                --location
     *                                --locations
     *                                --name
     *                                [--service-bus-rule-id]
     *                                [--storage-account-id]
     *                                [--subscription]
     *                                [--tags]
     */
    az_monitor_log_profiles_create(): void {
    }

    /**
     * Deletes the log profile.
     *
     * Syntax: 
     *
     * az monitor log-profiles delete --name
     *                                [--subscription]
     */
    az_monitor_log_profiles_delete(): void {
    }

    /**
     * List the log profiles.
     *
     * Syntax: 
     *
     * az monitor log-profiles list [--query-examples]
     *                              [--subscription]
     */
    az_monitor_log_profiles_list(): void {
    }

    /**
     * Gets the log profile.
     *
     * Syntax: 
     *
     * az monitor log-profiles show --name
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_monitor_log_profiles_show(): void {
    }

    /**
     * Update a log profile.
     *
     * Syntax: 
     *
     * az monitor log-profiles update --name
     *                                [--add]
     *                                [--force-string]
     *                                [--remove]
     *                                [--set]
     *                                [--subscription]
     */
    az_monitor_log_profiles_update(): void {
    }
}

/** Manage near-realtime metric alert rules. */
class az_monitor_metrics_alert {
    /**
     * Create a metric-based alert rule.
     *
     * Syntax: 
     *
     * az monitor metrics alert create --condition
     *                                 --name
     *                                 --resource-group
     *                                 --scopes
     *                                 [--action]
     *                                 [--auto-mitigate {false, true}]
     *                                 [--description]
     *                                 [--disabled {false, true}]
     *                                 [--evaluation-frequency]
     *                                 [--region]
     *                                 [--severity]
     *                                 [--subscription]
     *                                 [--tags]
     *                                 [--target-resource-type]
     *                                 [--window-size]
     */
    az_monitor_metrics_alert_create(): void {
    }

    /**
     * Delete a metrics-based alert rule.
     *
     * Syntax: 
     *
     * az monitor metrics alert delete [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_monitor_metrics_alert_delete(): void {
    }

    /**
     * List metric-based alert rules.
     *
     * Syntax: 
     *
     * az monitor metrics alert list [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_monitor_metrics_alert_list(): void {
    }

    /**
     * Show a metrics-based alert rule.
     *
     * Syntax: 
     *
     * az monitor metrics alert show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_monitor_metrics_alert_show(): void {
    }

    /**
     * Update a metric-based alert rule.
     *
     * Syntax: 
     *
     * az monitor metrics alert update [--add]
     *                                 [--add-action]
     *                                 [--add-condition]
     *                                 [--auto-mitigate {false, true}]
     *                                 [--description]
     *                                 [--enabled {false, true}]
     *                                 [--evaluation-frequency]
     *                                 [--force-string]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--remove]
     *                                 [--remove-actions]
     *                                 [--remove-conditions]
     *                                 [--resource-group]
     *                                 [--scopes]
     *                                 [--set]
     *                                 [--severity]
     *                                 [--subscription]
     *                                 [--tags]
     *                                 [--window-size]
     */
    az_monitor_metrics_alert_update(): void {
    }
}

/** View Azure resource metrics. */
class az_monitor_metrics {
    /**
     * List the metric values for a resource.
     *
     * Syntax: 
     *
     * az monitor metrics list --resource
     *                         [--aggregation {Average, Count, Maximum, Minimum, Total}]
     *                         [--dimension]
     *                         [--end-time]
     *                         [--filter]
     *                         [--interval]
     *                         [--metadata]
     *                         [--metrics]
     *                         [--namespace]
     *                         [--offset]
     *                         [--orderby]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--resource-namespace]
     *                         [--resource-parent]
     *                         [--resource-type]
     *                         [--start-time]
     *                         [--subscription]
     *                         [--top]
     */
    az_monitor_metrics_list(): void {
    }

    /**
     * Lists the metric definitions for the resource.
     *
     * Syntax: 
     *
     * az monitor metrics list-definitions --resource
     *                                     [--namespace]
     *                                     [--resource-group]
     *                                     [--resource-namespace]
     *                                     [--resource-parent]
     *                                     [--resource-type]
     *                                     [--subscription]
     */
    az_monitor_metrics_list_definitions(): void {
    }
}

/** Manage private endpoint connection of a private link scope resource. */
class az_monitor_private_link_scope_private_endpoint_connection {
    /**
     * Approve a private endpoint connection of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-endpoint-connection approve [--description]
     *                                                                   [--id]
     *                                                                   [--name]
     *                                                                   [--resource-group]
     *                                                                   [--scope-name]
     *                                                                   [--subscription]
     */
    az_monitor_private_link_scope_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-endpoint-connection delete [--id]
     *                                                                  [--name]
     *                                                                  [--resource-group]
     *                                                                  [--scope-name]
     *                                                                  [--subscription]
     *                                                                  [--yes]
     */
    az_monitor_private_link_scope_private_endpoint_connection_delete(): void {
    }

    /**
     * List all private endpoint connections of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-endpoint-connection list --resource-group
     *                                                                --scope-name
     *                                                                [--query-examples]
     *                                                                [--subscription]
     */
    az_monitor_private_link_scope_private_endpoint_connection_list(): void {
    }

    /**
     * Reject a private endpoint connection of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-endpoint-connection reject [--description]
     *                                                                  [--id]
     *                                                                  [--name]
     *                                                                  [--resource-group]
     *                                                                  [--scope-name]
     *                                                                  [--subscription]
     */
    az_monitor_private_link_scope_private_endpoint_connection_reject(): void {
    }

    /**
     * Show a private endpoint connection of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-endpoint-connection show [--id]
     *                                                                [--name]
     *                                                                [--query-examples]
     *                                                                [--resource-group]
     *                                                                [--scope-name]
     *                                                                [--subscription]
     */
    az_monitor_private_link_scope_private_endpoint_connection_show(): void {
    }
}

/** Manage private link resource of a private link scope resource. */
class az_monitor_private_link_scope_private_link_resource {
    /**
     * List all private link resources of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-link-resource list --resource-group
     *                                                          --scope-name
     *                                                          [--query-examples]
     *                                                          [--subscription]
     */
    az_monitor_private_link_scope_private_link_resource_list(): void {
    }

    /**
     * Show a private link resource of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope private-link-resource show --name
     *                                                          --resource-group
     *                                                          --scope-name
     *                                                          [--query-examples]
     *                                                          [--subscription]
     */
    az_monitor_private_link_scope_private_link_resource_show(): void {
    }
}

/** Manage scoped resource of a private link scope resource. */
class az_monitor_private_link_scope_scoped_resource {
    /**
     * Create a scoped resource for a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope scoped-resource create --linked-resource
     *                                                      --name
     *                                                      --resource-group
     *                                                      --scope-name
     *                                                      [--subscription]
     */
    az_monitor_private_link_scope_scoped_resource_create(): void {
    }

    /**
     * Delete a scoped resource of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope scoped-resource delete --name
     *                                                      --resource-group
     *                                                      --scope-name
     *                                                      [--subscription]
     *                                                      [--yes]
     */
    az_monitor_private_link_scope_scoped_resource_delete(): void {
    }

    /**
     * List all scoped resource of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope scoped-resource list --resource-group
     *                                                    --scope-name
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_monitor_private_link_scope_scoped_resource_list(): void {
    }

    /**
     * Show a scoped resource of a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope scoped-resource show --name
     *                                                    --resource-group
     *                                                    --scope-name
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_monitor_private_link_scope_scoped_resource_show(): void {
    }
}

/** Manage monitor private link scope resource. */
class az_monitor_private_link_scope {
    /**
     * Create a private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope create --name
     *                                      --resource-group
     *                                      [--subscription]
     *                                      [--tags]
     */
    az_monitor_private_link_scope_create(): void {
    }

    /**
     * Delete a monitor private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope delete --name
     *                                      --resource-group
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_monitor_private_link_scope_delete(): void {
    }

    /**
     * List all monitor private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope list [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_monitor_private_link_scope_list(): void {
    }

    /**
     * Show a monitor private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope show --name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_monitor_private_link_scope_show(): void {
    }

    /**
     * Update a monitor private link scope resource.
     *
     * Syntax: 
     *
     * az monitor private-link-scope update --name
     *                                      --resource-group
     *                                      --tags
     *                                      [--subscription]
     */
    az_monitor_private_link_scope_update(): void {
    }
}

/** Manage the Azure Monitor Service. */
class az_monitor {
    /**
     * Clone metrics alert rules from one resource to another resource.
     *
     * Syntax: 
     *
     * az monitor clone --source-resource
     *                  --target-resource
     *                  [--always-clone]
     *                  [--subscription]
     *                  [--types {metricsAlert}]
     */
    az_monitor_clone(): void {
    }
}

/** Manage MySQL databases on a server. */
class az_mysql_db {
    /**
     * Create a MySQL database.
     *
     * Syntax: 
     *
     * az mysql db create --name
     *                    --resource-group
     *                    --server-name
     *                    [--charset]
     *                    [--collation]
     *                    [--subscription]
     */
    az_mysql_db_create(): void {
    }

    /**
     * Delete a database.
     *
     * Syntax: 
     *
     * az mysql db delete --name
     *                    --resource-group
     *                    --server-name
     *                    [--subscription]
     *                    [--yes]
     */
    az_mysql_db_delete(): void {
    }

    /**
     * List the databases for a server.
     *
     * Syntax: 
     *
     * az mysql db list --resource-group
     *                  --server-name
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_mysql_db_list(): void {
    }

    /**
     * Show the details of a database.
     *
     * Syntax: 
     *
     * az mysql db show --name
     *                  --resource-group
     *                  --server-name
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_mysql_db_show(): void {
    }
}

/** Manage MySQL databases on a flexible server. */
class az_mysql_flexible_server_db {
    /**
     * Create a MySQL database on a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server db create --database-name
     *                                    --resource-group
     *                                    --server-name
     *                                    [--charset]
     *                                    [--collation]
     *                                    [--subscription]
     */
    az_mysql_flexible_server_db_create(): void {
    }

    /**
     * Delete a database on a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server db delete [--database-name]
     *                                    [--force]
     *                                    [--ids]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mysql_flexible_server_db_delete(): void {
    }

    /**
     * List the databases for a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server db list --resource-group
     *                                  --server-name
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_mysql_flexible_server_db_list(): void {
    }

    /**
     * Show the details of a database.
     *
     * Syntax: 
     *
     * az mysql flexible-server db show --database-name
     *                                  [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_mysql_flexible_server_db_show(): void {
    }
}

/** Manage firewall rules for a server. */
class az_mysql_flexible_server_firewall_rule {
    /**
     * Create a new firewall rule for a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server firewall-rule create --end-ip-address
     *                                               --name
     *                                               --resource-group
     *                                               --server-name
     *                                               --start-ip-address
     *                                               [--subscription]
     */
    az_mysql_flexible_server_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az mysql flexible-server firewall-rule delete [--ids]
     *                                               [--name]
     *                                               [--prompt]
     *                                               [--resource-group]
     *                                               [--server-name]
     *                                               [--subscription]
     */
    az_mysql_flexible_server_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules for a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server firewall-rule list --resource-group
     *                                             --server-name
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_mysql_flexible_server_firewall_rule_list(): void {
    }

    /**
     * Get the details of a firewall rule.
     *
     * Syntax: 
     *
     * az mysql flexible-server firewall-rule show [--ids]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--server-name]
     *                                             [--subscription]
     */
    az_mysql_flexible_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az mysql flexible-server firewall-rule update [--add]
     *                                               [--end-ip-address]
     *                                               [--force-string]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--remove]
     *                                               [--resource-group]
     *                                               [--server-name]
     *                                               [--set]
     *                                               [--start-ip-address]
     *                                               [--subscription]
     */
    az_mysql_flexible_server_firewall_rule_update(): void {
    }
}

/** Commands for managing server parameter values for flexible server. */
class az_mysql_flexible_server_parameter {
    /**
     * List the parameter values for a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server parameter list --resource-group
     *                                         --server-name
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_mysql_flexible_server_parameter_list(): void {
    }

    /**
     * Update the parameter of a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server parameter set [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--server-name]
     *                                        [--source]
     *                                        [--subscription]
     *                                        [--value]
     */
    az_mysql_flexible_server_parameter_set(): void {
    }

    /**
     * Get the parameter for a flexible server.".
     *
     * Syntax: 
     *
     * az mysql flexible-server parameter show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--server-name]
     *                                         [--subscription]
     */
    az_mysql_flexible_server_parameter_show(): void {
    }
}

/** Manage read replicas. */
class az_mysql_flexible_server_replica {
    /**
     * Create a read replica for a server.
     *
     * Syntax: 
     *
     * az mysql flexible-server replica create --name
     *                                         --resource-group
     *                                         --source-server
     *                                         [--location]
     *                                         [--no-wait]
     *                                         [--sku-name]
     *                                         [--subscription]
     *                                         [--tier]
     */
    az_mysql_flexible_server_replica_create(): void {
    }

    /**
     * List all read replicas for a given server.
     *
     * Syntax: 
     *
     * az mysql flexible-server replica list --name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_mysql_flexible_server_replica_list(): void {
    }

    /**
     * Stop replication to a read replica and make it a read/write server.
     *
     * Syntax: 
     *
     * az mysql flexible-server replica stop-replication [--ids]
     *                                                   [--name]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     *                                                   [--yes]
     */
    az_mysql_flexible_server_replica_stop_replication(): void {
    }
}

/** Manage Azure Database for MySQL Flexible Servers. */
class az_mysql_flexible_server {
    /**
     * Create a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server create [--address-prefixes]
     *                                 [--admin-password]
     *                                 [--admin-user,]
     *                                 [--assign-identity]
     *                                 [--backup-retention]
     *                                 [--high-availability]
     *                                 [--location]
     *                                 [--name]
     *                                 [--public-access]
     *                                 [--resource-group]
     *                                 [--sku-name]
     *                                 [--storage-size]
     *                                 [--subnet]
     *                                 [--subnet-prefixes]
     *                                 [--subscription]
     *                                 [--tags]
     *                                 [--tier]
     *                                 [--version]
     *                                 [--vnet]
     *                                 [--zone,]
     */
    az_mysql_flexible_server_create(): void {
    }

    /**
     * Delete a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server delete [--force]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_mysql_flexible_server_delete(): void {
    }

    /**
     * List available flexible servers.
     *
     * Syntax: 
     *
     * az mysql flexible-server list [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_mysql_flexible_server_list(): void {
    }

    /**
     * Lists available sku's in the given region.
     *
     * Syntax: 
     *
     * az mysql flexible-server list-skus --location
     *                                    [--subscription]
     */
    az_mysql_flexible_server_list_skus(): void {
    }

    /**
     * Restart a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server restart [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_mysql_flexible_server_restart(): void {
    }

    /**
     * Restore a flexible server from backup.
     *
     * Syntax: 
     *
     * az mysql flexible-server restore --source-server
     *                                  --time
     *                                  [--ids]
     *                                  [--location]
     *                                  [--name]
     *                                  [--no-wait]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_mysql_flexible_server_restore(): void {
    }

    /**
     * Get the details of a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_mysql_flexible_server_show(): void {
    }

    /**
     * Show the connection strings for a MySQL flexible-server database.
     *
     * Syntax: 
     *
     * az mysql flexible-server show-connection-string [--admin-password]
     *                                                 [--admin-user]
     *                                                 [--database-name]
     *                                                 [--ids]
     *                                                 [--server-name]
     *                                                 [--subscription]
     */
    az_mysql_flexible_server_show_connection_string(): void {
    }

    /**
     * Start a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server start [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_mysql_flexible_server_start(): void {
    }

    /**
     * Stop a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server stop [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_mysql_flexible_server_stop(): void {
    }

    /**
     * Update a flexible server.
     *
     * Syntax: 
     *
     * az mysql flexible-server update [--add]
     *                                 [--admin-password]
     *                                 [--backup-retention]
     *                                 [--force-string]
     *                                 [--high-availability {Disabled, Enabled}]
     *                                 [--ids]
     *                                 [--maintenance-window]
     *                                 [--name]
     *                                 [--remove]
     *                                 [--replication-role]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--sku-name]
     *                                 [--ssl-enforcement {Disabled, Enabled}]
     *                                 [--storage-auto-grow {Disabled, Enabled}]
     *                                 [--storage-size]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--tags]
     *                                 [--tier]
     */
    az_mysql_flexible_server_update(): void {
    }

    /**
     * Wait for the flexible server to satisfy certain conditions.
     *
     * Syntax: 
     *
     * az mysql flexible-server wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_mysql_flexible_server_wait(): void {
    }
}

/** Manage a MySQL server's Active Directory administrator. */
class az_mysql_server_ad_admin {
    /**
     * Create an Active Directory administrator for MySQL server.
     *
     * Syntax: 
     *
     * az mysql server ad-admin create --resource-group
     *                                 --server-name
     *                                 [--display-name]
     *                                 [--no-wait]
     *                                 [--object-id]
     *                                 [--subscription]
     */
    az_mysql_server_ad_admin_create(): void {
    }

    /**
     * Delete an Active Directory Administrator for MySQL server.
     *
     * Syntax: 
     *
     * az mysql server ad-admin delete [--ids]
     *                                 [--resource-group]
     *                                 [--server-name]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_mysql_server_ad_admin_delete(): void {
    }

    /**
     * List all Active Directory Administrators for MySQL server.
     *
     * Syntax: 
     *
     * az mysql server ad-admin list [--ids]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--server-name]
     *                               [--subscription]
     */
    az_mysql_server_ad_admin_list(): void {
    }

    /**
     * Get Active Directory Administrator information for a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server ad-admin show [--ids]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--server-name]
     *                               [--subscription]
     */
    az_mysql_server_ad_admin_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the MySQL server Active Directory Administrator is met.
     *
     * Syntax: 
     *
     * az mysql server ad-admin wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--resource-group]
     *                               [--server-name]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_mysql_server_ad_admin_wait(): void {
    }
}

/** Manage configuration values for a server. */
class az_mysql_server_configuration {
    /**
     * List the configuration values for a server.
     *
     * Syntax: 
     *
     * az mysql server configuration list [--ids]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mysql_server_configuration_list(): void {
    }

    /**
     * Update the configuration of a server.
     *
     * Syntax: 
     *
     * az mysql server configuration set [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--server-name]
     *                                   [--subscription]
     *                                   [--value]
     */
    az_mysql_server_configuration_set(): void {
    }

    /**
     * Get the configuration for a server.".
     *
     * Syntax: 
     *
     * az mysql server configuration show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mysql_server_configuration_show(): void {
    }
}

/** Manage firewall rules for a server. */
class az_mysql_server_firewall_rule {
    /**
     * Create a new firewall rule for a server.
     *
     * Syntax: 
     *
     * az mysql server firewall-rule create --end-ip-address
     *                                      --name
     *                                      --resource-group
     *                                      --server-name
     *                                      --start-ip-address
     *                                      [--subscription]
     */
    az_mysql_server_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az mysql server firewall-rule delete [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_mysql_server_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules for a server.
     *
     * Syntax: 
     *
     * az mysql server firewall-rule list [--ids]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mysql_server_firewall_rule_list(): void {
    }

    /**
     * Get the details of a firewall rule.
     *
     * Syntax: 
     *
     * az mysql server firewall-rule show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     */
    az_mysql_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az mysql server firewall-rule update [--add]
     *                                      [--end-ip-address]
     *                                      [--force-string]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--remove]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--set]
     *                                      [--start-ip-address]
     *                                      [--subscription]
     */
    az_mysql_server_firewall_rule_update(): void {
    }
}

/** Manage MySQL server keys. */
class az_mysql_server_key {
    /**
     * Create server key.
     *
     * Syntax: 
     *
     * az mysql server key create --kid
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_mysql_server_key_create(): void {
    }

    /**
     * Delete server key.
     *
     * Syntax: 
     *
     * az mysql server key delete --kid
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--yes]
     */
    az_mysql_server_key_delete(): void {
    }

    /**
     * Gets a list of  Server keys.
     *
     * Syntax: 
     *
     * az mysql server key list [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_mysql_server_key_list(): void {
    }

    /**
     * Show server key.
     *
     * Syntax: 
     *
     * az mysql server key show --kid
     *                          [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_mysql_server_key_show(): void {
    }
}

/** Manage MySQL server private endpoint connections. */
class az_mysql_server_private_endpoint_connection {
    /**
     * Approve the specified private endpoint connection associated with a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server private-endpoint-connection approve [--description]
     *                                                     [--id]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--resource-group]
     *                                                     [--server-name]
     *                                                     [--subscription]
     */
    az_mysql_server_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete the specified private endpoint connection associated with a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server private-endpoint-connection delete [--id]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--server-name]
     *                                                    [--subscription]
     */
    az_mysql_server_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject the specified private endpoint connection associated with a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server private-endpoint-connection reject [--description]
     *                                                    [--id]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--server-name]
     *                                                    [--subscription]
     */
    az_mysql_server_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection associated with a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server private-endpoint-connection show [--id]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--server-name]
     *                                                  [--subscription]
     */
    az_mysql_server_private_endpoint_connection_show(): void {
    }
}

/** Manage MySQL server private link resources. */
class az_mysql_server_private_link_resource {
    /**
     * List the private link resources supported for a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server private-link-resource list [--ids]
     *                                            [--query-examples]
     *                                            [--resource-group]
     *                                            [--server-name]
     *                                            [--subscription]
     */
    az_mysql_server_private_link_resource_list(): void {
    }
}

/** Manage read replicas. */
class az_mysql_server_replica {
    /**
     * Create a read replica for a server.
     *
     * Syntax: 
     *
     * az mysql server replica create --name
     *                                --resource-group
     *                                --source-server
     *                                [--location]
     *                                [--no-wait]
     *                                [--sku-name]
     *                                [--subscription]
     */
    az_mysql_server_replica_create(): void {
    }

    /**
     * List all read replicas for a given server.
     *
     * Syntax: 
     *
     * az mysql server replica list [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server-name]
     *                              [--subscription]
     */
    az_mysql_server_replica_list(): void {
    }

    /**
     * Stop replication to a read replica and make it a read/write server.
     *
     * Syntax: 
     *
     * az mysql server replica stop [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--yes]
     */
    az_mysql_server_replica_stop(): void {
    }
}

/** Manage a server's virtual network rules. */
class az_mysql_server_vnet_rule {
    /**
     * Create a virtual network rule to allows access to a MySQL server.
     *
     * Syntax: 
     *
     * az mysql server vnet-rule create --name
     *                                  --resource-group
     *                                  --server-name
     *                                  --subnet
     *                                  [--ignore-missing-endpoint {false, true}]
     *                                  [--subscription]
     *                                  [--vnet-name]
     */
    az_mysql_server_vnet_rule_create(): void {
    }

    /**
     * Deletes the virtual network rule with the given name.
     *
     * Syntax: 
     *
     * az mysql server vnet-rule delete [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_mysql_server_vnet_rule_delete(): void {
    }

    /**
     * Gets a list of virtual network rules in a server.
     *
     * Syntax: 
     *
     * az mysql server vnet-rule list [--ids]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--server-name]
     *                                [--subscription]
     */
    az_mysql_server_vnet_rule_list(): void {
    }

    /**
     * Gets a virtual network rule.
     *
     * Syntax: 
     *
     * az mysql server vnet-rule show [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--server-name]
     *                                [--subscription]
     */
    az_mysql_server_vnet_rule_show(): void {
    }

    /**
     * Update a virtual network rule.
     *
     * Syntax: 
     *
     * az mysql server vnet-rule update --subnet
     *                                  [--add]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--ignore-missing-endpoint {false, true}]
     *                                  [--name]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--set]
     *                                  [--subscription]
     *                                  [--vnet-name]
     */
    az_mysql_server_vnet_rule_update(): void {
    }
}

/** Manage server logs. */
class az_mysql_server_logs {
    /**
     * Download log files.
     *
     * Syntax: 
     *
     * az mysql server-logs download --name
     *                               --resource-group
     *                               --server-name
     *                               [--subscription]
     */
    az_mysql_server_logs_download(): void {
    }

    /**
     * List log files for a server.
     *
     * Syntax: 
     *
     * az mysql server-logs list --resource-group
     *                           --server-name
     *                           [--file-last-written]
     *                           [--filename-contains]
     *                           [--max-file-size]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_mysql_server_logs_list(): void {
    }
}

/** Manage MySQL servers. */
class az_mysql_server {
    /**
     * Create a server.
     *
     * Syntax: 
     *
     * az mysql server create --admin-password
     *                        --admin-user
     *                        --name
     *                        --resource-group
     *                        --sku-name
     *                        [--assign-identity]
     *                        [--auto-grow {Disabled, Enabled}]
     *                        [--backup-retention]
     *                        [--geo-redundant-backup {Disabled, Enabled}]
     *                        [--infrastructure-encryption {Disabled, Enabled}]
     *                        [--location]
     *                        [--minimal-tls-version {TLS1_0, TLS1_1, TLS1_2, TLSEnforcementDisabled}]
     *                        [--public {Disabled, Enabled}]
     *                        [--ssl-enforcement {Disabled, Enabled}]
     *                        [--storage-size]
     *                        [--subscription]
     *                        [--tags]
     *                        [--version]
     */
    az_mysql_server_create(): void {
    }

    /**
     * Delete a server.
     *
     * Syntax: 
     *
     * az mysql server delete [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--yes]
     */
    az_mysql_server_delete(): void {
    }

    /**
     * Geo-restore a server from backup.
     *
     * Syntax: 
     *
     * az mysql server georestore --location
     *                            --source-server
     *                            [--backup-retention]
     *                            [--geo-redundant-backup]
     *                            [--ids]
     *                            [--name]
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--sku-name]
     *                            [--subscription]
     */
    az_mysql_server_georestore(): void {
    }

    /**
     * List available servers.
     *
     * Syntax: 
     *
     * az mysql server list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_mysql_server_list(): void {
    }

    /**
     * Restart a server.
     *
     * Syntax: 
     *
     * az mysql server restart [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_mysql_server_restart(): void {
    }

    /**
     * Restore a server from backup.
     *
     * Syntax: 
     *
     * az mysql server restore --pitr-time
     *                         --source-server
     *                         [--ids]
     *                         [--name]
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_mysql_server_restore(): void {
    }

    /**
     * Get the details of a server.
     *
     * Syntax: 
     *
     * az mysql server show [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_mysql_server_show(): void {
    }

    /**
     * Start a stopped server.
     *
     * Syntax: 
     *
     * az mysql server start [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_mysql_server_start(): void {
    }

    /**
     * Stop a running server.
     *
     * Syntax: 
     *
     * az mysql server stop [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_mysql_server_stop(): void {
    }

    /**
     * Update a server.
     *
     * Syntax: 
     *
     * az mysql server update [--add]
     *                        [--admin-password]
     *                        [--assign-identity]
     *                        [--auto-grow {Disabled, Enabled}]
     *                        [--backup-retention]
     *                        [--force-string]
     *                        [--ids]
     *                        [--minimal-tls-version {TLS1_0, TLS1_1, TLS1_2, TLSEnforcementDisabled}]
     *                        [--name]
     *                        [--public {Disabled, Enabled}]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--set]
     *                        [--sku-name]
     *                        [--ssl-enforcement {Disabled, Enabled}]
     *                        [--storage-size]
     *                        [--subscription]
     *                        [--tags]
     */
    az_mysql_server_update(): void {
    }

    /**
     * Wait for server to satisfy certain conditions.
     *
     * Syntax: 
     *
     * az mysql server wait [--custom]
     *                      [--exists]
     *                      [--ids]
     *                      [--interval]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_mysql_server_wait(): void {
    }
}

/** Manage Azure Database for MySQL servers. */
class az_mysql {
}

/** Manage Azure NetApp Files (ANF) Account active directories. */
class az_netappfiles_account_ad {
    /**
     * Add an active directory to the account.
     *
     * Syntax: 
     *
     * az netappfiles account ad add --dns
     *                               --domain
     *                               --password
     *                               --smb-server-name
     *                               --username
     *                               [--account-name]
     *                               [--add]
     *                               [--force-string]
     *                               [--ids]
     *                               [--organizational-unit]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     */
    az_netappfiles_account_ad_add(): void {
    }

    /**
     * List the active directories of an account.
     *
     * Syntax: 
     *
     * az netappfiles account ad list --account-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_netappfiles_account_ad_list(): void {
    }

    /**
     * Remove an active directory from the account.
     *
     * Syntax: 
     *
     * az netappfiles account ad remove --active-directory
     *                                  [--account-name]
     *                                  [--ids]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_netappfiles_account_ad_remove(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Account Resources. */
class az_netappfiles_account {
    /**
     * Create a new Azure NetApp Files (ANF) account. Note that active directories are added using the subgroup commands.
     *
     * Syntax: 
     *
     * az netappfiles account create --account-name
     *                               --location
     *                               --resource-group
     *                               [--subscription]
     *                               [--tags]
     */
    az_netappfiles_account_create(): void {
    }

    /**
     * Delete the specified ANF account.
     *
     * Syntax: 
     *
     * az netappfiles account delete [--account-name]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_netappfiles_account_delete(): void {
    }

    /**
     * List ANF accounts.
     *
     * Syntax: 
     *
     * az netappfiles account list --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_netappfiles_account_list(): void {
    }

    /**
     * Get the specified ANF account.
     *
     * Syntax: 
     *
     * az netappfiles account show [--account-name]
     *                             [--ids]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_netappfiles_account_show(): void {
    }

    /**
     * Set/modify the tags for a specified ANF account.
     *
     * Syntax: 
     *
     * az netappfiles account update [--account-name]
     *                               [--add]
     *                               [--force-string]
     *                               [--ids]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     *                               [--tags]
     */
    az_netappfiles_account_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Pool Resources. */
class az_netappfiles_pool {
    /**
     * Create a new Azure NetApp Files (ANF) pool.
     *
     * Syntax: 
     *
     * az netappfiles pool create --account-name
     *                            --location
     *                            --name
     *                            --resource-group
     *                            --service-level {Premium, Standard, Ultra}
     *                            --size
     *                            [--subscription]
     *                            [--tags]
     */
    az_netappfiles_pool_create(): void {
    }

    /**
     * Delete the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool delete [--account-name]
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_netappfiles_pool_delete(): void {
    }

    /**
     * L:ist the ANF pools for the specified account.
     *
     * Syntax: 
     *
     * az netappfiles pool list --account-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_netappfiles_pool_list(): void {
    }

    /**
     * Get the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool show [--account-name]
     *                          [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_netappfiles_pool_show(): void {
    }

    /**
     * Update the tags of the specified ANF pool.
     *
     * Syntax: 
     *
     * az netappfiles pool update [--account-name]
     *                            [--add]
     *                            [--force-string]
     *                            [--ids]
     *                            [--name]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--service-level {Premium, Standard, Ultra}]
     *                            [--set]
     *                            [--size]
     *                            [--subscription]
     *                            [--tags]
     */
    az_netappfiles_pool_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Snapshot Resources. */
class az_netappfiles_snapshot {
    /**
     * Create a new Azure NetApp Files (ANF) snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot create --account-name
     *                                --location
     *                                --name
     *                                --pool-name
     *                                --resource-group
     *                                --volume-name
     *                                [--subscription]
     */
    az_netappfiles_snapshot_create(): void {
    }

    /**
     * Delete the specified ANF snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot delete [--account-name]
     *                                [--ids]
     *                                [--name]
     *                                [--pool-name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--volume-name]
     */
    az_netappfiles_snapshot_delete(): void {
    }

    /**
     * List the snapshots of an ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles snapshot list --account-name
     *                              --pool-name
     *                              --resource-group
     *                              --volume-name
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_netappfiles_snapshot_list(): void {
    }

    /**
     * Get the specified ANF snapshot.
     *
     * Syntax: 
     *
     * az netappfiles snapshot show [--account-name]
     *                              [--ids]
     *                              [--name]
     *                              [--pool-name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--volume-name]
     */
    az_netappfiles_snapshot_show(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Volume export policies. */
class az_netappfiles_volume_export_policy {
    /**
     * Add a new rule to the export policy for a volume.
     *
     * Syntax: 
     *
     * az netappfiles volume export-policy add --allowed-clients
     *                                         --cifs {false, true}
     *                                         --nfsv3 {false, true}
     *                                         --nfsv41 {false, true}
     *                                         --rule-index
     *                                         --unix-read-only {false, true}
     *                                         --unix-read-write {false, true}
     *                                         [--account-name]
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--pool-name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--set]
     *                                         [--subscription]
     */
    az_netappfiles_volume_export_policy_add(): void {
    }

    /**
     * List the export policy rules for a volume.
     *
     * Syntax: 
     *
     * az netappfiles volume export-policy list --account-name
     *                                          --name
     *                                          --pool-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_netappfiles_volume_export_policy_list(): void {
    }

    /**
     * Remove a rule from the export policy for a volume by rule index. The current rules can be obtained by performing the subgroup list command.
     *
     * Syntax: 
     *
     * az netappfiles volume export-policy remove --rule-index
     *                                            [--account-name]
     *                                            [--add]
     *                                            [--force-string]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--pool-name]
     *                                            [--remove]
     *                                            [--resource-group]
     *                                            [--set]
     *                                            [--subscription]
     */
    az_netappfiles_volume_export_policy_remove(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Volume replication operations. */
class az_netappfiles_volume_replication {
    /**
     * Authorize a volume as a replication destination for a specified source.
     *
     * Syntax: 
     *
     * az netappfiles volume replication approve --account-name
     *                                           --name
     *                                           --pool-name
     *                                           --remote-volume-resource-id
     *                                           --resource-group
     *                                           [--subscription]
     */
    az_netappfiles_volume_replication_approve(): void {
    }

    /**
     * Delete a volume replication for the specified destination volume. The data replication objects of source and destination volumes will be removed.
     *
     * Syntax: 
     *
     * az netappfiles volume replication remove [--account-name]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--pool-name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_netappfiles_volume_replication_remove(): void {
    }

    /**
     * Resync a volume replication for the specified destination volume. The replication process is resumed from source to destination.
     *
     * Syntax: 
     *
     * az netappfiles volume replication resume [--account-name]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--pool-name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_netappfiles_volume_replication_resume(): void {
    }

    /**
     * Get the replication status for the specified replication volume.
     *
     * Syntax: 
     *
     * az netappfiles volume replication status [--account-name]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--pool-name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_netappfiles_volume_replication_status(): void {
    }

    /**
     * Suspend/break a volume replication for the specified destination volume. The replication process is suspended until resumed or deleted.
     *
     * Syntax: 
     *
     * az netappfiles volume replication suspend [--account-name]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--pool-name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_netappfiles_volume_replication_suspend(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Volume Resources. */
class az_netappfiles_volume {
    /**
     * Create a new Azure NetApp Files (ANF) volume. Export policies are applied with the subgroup commands but note that volumes are always created with a default export policy.
     *
     * Syntax: 
     *
     * az netappfiles volume create --account-name
     *                              --file-path
     *                              --location
     *                              --name
     *                              --pool-name
     *                              --resource-group
     *                              --usage-threshold
     *                              --vnet
     *                              [--endpoint-type]
     *                              [--protocol-types]
     *                              [--remote-volume-resource-id]
     *                              [--replication-schedule]
     *                              [--service-level {Premium, Standard, Ultra}]
     *                              [--snapshot-id]
     *                              [--subnet]
     *                              [--subscription]
     *                              [--tags]
     *                              [--volume-type]
     */
    az_netappfiles_volume_create(): void {
    }

    /**
     * Delete the specified ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles volume delete [--account-name]
     *                              [--ids]
     *                              [--name]
     *                              [--pool-name]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_netappfiles_volume_delete(): void {
    }

    /**
     * List the ANF Pools for the specified account.
     *
     * Syntax: 
     *
     * az netappfiles volume list --account-name
     *                            --pool-name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_netappfiles_volume_list(): void {
    }

    /**
     * Revert a volume to one of its snapshots.
     *
     * Syntax: 
     *
     * az netappfiles volume revert --account-name
     *                              --name
     *                              --pool-name
     *                              --resource-group
     *                              --snapshot-id
     *                              [--subscription]
     */
    az_netappfiles_volume_revert(): void {
    }

    /**
     * Get the specified ANF volume.
     *
     * Syntax: 
     *
     * az netappfiles volume show [--account-name]
     *                            [--ids]
     *                            [--name]
     *                            [--pool-name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_netappfiles_volume_show(): void {
    }

    /**
     * Update the specified ANF volume with the values provided. Unspecified values will remain unchanged. Export policies are amended/created with the subgroup commands.
     *
     * Syntax: 
     *
     * az netappfiles volume update [--account-name]
     *                              [--add]
     *                              [--force-string]
     *                              [--ids]
     *                              [--name]
     *                              [--pool-name]
     *                              [--protocol-types]
     *                              [--remove]
     *                              [--resource-group]
     *                              [--service-level {Premium, Standard, Ultra}]
     *                              [--set]
     *                              [--subscription]
     *                              [--tags]
     *                              [--usage-threshold]
     */
    az_netappfiles_volume_update(): void {
    }
}

/** Manage Azure NetApp Files (ANF) Resources. */
class az_netappfiles {
}

/** Manage address pools of an application gateway. */
class az_network_application_gateway_address_pool {
    /**
     * Create an address pool.
     *
     * Syntax: 
     *
     * az network application-gateway address-pool create --gateway-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    [--no-wait]
     *                                                    [--servers]
     *                                                    [--subscription]
     */
    az_network_application_gateway_address_pool_create(): void {
    }

    /**
     * Delete an address pool.
     *
     * Syntax: 
     *
     * az network application-gateway address-pool delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_application_gateway_address_pool_delete(): void {
    }

    /**
     * List address pools.
     *
     * Syntax: 
     *
     * az network application-gateway address-pool list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_network_application_gateway_address_pool_list(): void {
    }

    /**
     * Get the details of an address pool.
     *
     * Syntax: 
     *
     * az network application-gateway address-pool show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_application_gateway_address_pool_show(): void {
    }

    /**
     * Update an address pool.
     *
     * Syntax: 
     *
     * az network application-gateway address-pool update [--add]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--servers]
     *                                                    [--set]
     *                                                    [--subscription]
     */
    az_network_application_gateway_address_pool_update(): void {
    }
}

/** Manage authorization certificates of an application gateway. */
class az_network_application_gateway_auth_cert {
    /**
     * Create an authorization certificate.
     *
     * Syntax: 
     *
     * az network application-gateway auth-cert create --cert-file
     *                                                 --gateway-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--no-wait]
     *                                                 [--subscription]
     */
    az_network_application_gateway_auth_cert_create(): void {
    }

    /**
     * Delete an authorization certificate.
     *
     * Syntax: 
     *
     * az network application-gateway auth-cert delete [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_network_application_gateway_auth_cert_delete(): void {
    }

    /**
     * List authorization certificates.
     *
     * Syntax: 
     *
     * az network application-gateway auth-cert list --gateway-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_network_application_gateway_auth_cert_list(): void {
    }

    /**
     * Show an authorization certificate.
     *
     * Syntax: 
     *
     * az network application-gateway auth-cert show [--gateway-name]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_network_application_gateway_auth_cert_show(): void {
    }

    /**
     * Update an authorization certificate.
     *
     * Syntax: 
     *
     * az network application-gateway auth-cert update --cert-file
     *                                                 [--add]
     *                                                 [--force-string]
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--remove]
     *                                                 [--resource-group]
     *                                                 [--set]
     *                                                 [--subscription]
     */
    az_network_application_gateway_auth_cert_update(): void {
    }
}

/** Manage frontend IP addresses of an application gateway. */
class az_network_application_gateway_frontend_ip {
    /**
     * Create a frontend IP address.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-ip create --gateway-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--no-wait]
     *                                                   [--private-ip-address]
     *                                                   [--public-ip-address]
     *                                                   [--subnet]
     *                                                   [--subscription]
     *                                                   [--vnet-name]
     */
    az_network_application_gateway_frontend_ip_create(): void {
    }

    /**
     * Delete a frontend IP address.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-ip delete [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--no-wait]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_network_application_gateway_frontend_ip_delete(): void {
    }

    /**
     * List frontend IP addresses.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-ip list --gateway-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_network_application_gateway_frontend_ip_list(): void {
    }

    /**
     * Get the details of a frontend IP address.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-ip show [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--query-examples]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_network_application_gateway_frontend_ip_show(): void {
    }

    /**
     * Update a frontend IP address.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-ip update [--add]
     *                                                   [--force-string]
     *                                                   [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--no-wait]
     *                                                   [--private-ip-address]
     *                                                   [--public-ip-address]
     *                                                   [--remove]
     *                                                   [--resource-group]
     *                                                   [--set]
     *                                                   [--subnet]
     *                                                   [--subscription]
     *                                                   [--vnet-name]
     */
    az_network_application_gateway_frontend_ip_update(): void {
    }
}

/** Manage frontend ports of an application gateway. */
class az_network_application_gateway_frontend_port {
    /**
     * Create a frontend port.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-port create --gateway-name
     *                                                     --name
     *                                                     --port
     *                                                     --resource-group
     *                                                     [--no-wait]
     *                                                     [--subscription]
     */
    az_network_application_gateway_frontend_port_create(): void {
    }

    /**
     * Delete a frontend port.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-port delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_network_application_gateway_frontend_port_delete(): void {
    }

    /**
     * List frontend ports.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-port list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_network_application_gateway_frontend_port_list(): void {
    }

    /**
     * Get the details of a frontend port.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-port show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_network_application_gateway_frontend_port_show(): void {
    }

    /**
     * Update a frontend port.
     *
     * Syntax: 
     *
     * az network application-gateway frontend-port update [--add]
     *                                                     [--force-string]
     *                                                     [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--port]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--set]
     *                                                     [--subscription]
     */
    az_network_application_gateway_frontend_port_update(): void {
    }
}

/** Manage HTTP listeners of an application gateway. */
class az_network_application_gateway_http_listener {
    /**
     * Create an HTTP listener.
     *
     * Syntax: 
     *
     * az network application-gateway http-listener create --frontend-port
     *                                                     --gateway-name
     *                                                     --name
     *                                                     --resource-group
     *                                                     [--frontend-ip]
     *                                                     [--host-name]
     *                                                     [--host-names]
     *                                                     [--no-wait]
     *                                                     [--ssl-cert]
     *                                                     [--subscription]
     *                                                     [--waf-policy]
     */
    az_network_application_gateway_http_listener_create(): void {
    }

    /**
     * Delete an HTTP listener.
     *
     * Syntax: 
     *
     * az network application-gateway http-listener delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_network_application_gateway_http_listener_delete(): void {
    }

    /**
     * List HTTP listeners.
     *
     * Syntax: 
     *
     * az network application-gateway http-listener list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_network_application_gateway_http_listener_list(): void {
    }

    /**
     * Get the details of an HTTP listener.
     *
     * Syntax: 
     *
     * az network application-gateway http-listener show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_network_application_gateway_http_listener_show(): void {
    }

    /**
     * Update an HTTP listener.
     *
     * Syntax: 
     *
     * az network application-gateway http-listener update [--add]
     *                                                     [--force-string]
     *                                                     [--frontend-ip]
     *                                                     [--frontend-port]
     *                                                     [--gateway-name]
     *                                                     [--host-name]
     *                                                     [--host-names]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--set]
     *                                                     [--ssl-cert]
     *                                                     [--subscription]
     *                                                     [--waf-policy]
     */
    az_network_application_gateway_http_listener_update(): void {
    }
}

/** Manage HTTP settings of an application gateway. */
class az_network_application_gateway_http_settings {
    /**
     * Create HTTP settings.
     *
     * Syntax: 
     *
     * az network application-gateway http-settings create --gateway-name
     *                                                     --name
     *                                                     --port
     *                                                     --resource-group
     *                                                     [--affinity-cookie-name]
     *                                                     [--auth-certs]
     *                                                     [--connection-draining-timeout]
     *                                                     [--cookie-based-affinity {Disabled, Enabled}]
     *                                                     [--enable-probe {false, true}]
     *                                                     [--host-name]
     *                                                     [--host-name-from-backend-pool {false, true}]
     *                                                     [--no-wait]
     *                                                     [--path]
     *                                                     [--probe]
     *                                                     [--protocol {Http, Https}]
     *                                                     [--root-certs]
     *                                                     [--subscription]
     *                                                     [--timeout]
     */
    az_network_application_gateway_http_settings_create(): void {
    }

    /**
     * Delete HTTP settings.
     *
     * Syntax: 
     *
     * az network application-gateway http-settings delete [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_network_application_gateway_http_settings_delete(): void {
    }

    /**
     * List HTTP settings.
     *
     * Syntax: 
     *
     * az network application-gateway http-settings list --gateway-name
     *                                                   --resource-group
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_network_application_gateway_http_settings_list(): void {
    }

    /**
     * Get the details of a gateway's HTTP settings.
     *
     * Syntax: 
     *
     * az network application-gateway http-settings show [--gateway-name]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--query-examples]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_network_application_gateway_http_settings_show(): void {
    }

    /**
     * Update HTTP settings.
     *
     * Syntax: 
     *
     * az network application-gateway http-settings update [--add]
     *                                                     [--affinity-cookie-name]
     *                                                     [--auth-certs]
     *                                                     [--connection-draining-timeout]
     *                                                     [--cookie-based-affinity {Disabled, Enabled}]
     *                                                     [--enable-probe {false, true}]
     *                                                     [--force-string]
     *                                                     [--gateway-name]
     *                                                     [--host-name]
     *                                                     [--host-name-from-backend-pool {false, true}]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--no-wait]
     *                                                     [--path]
     *                                                     [--port]
     *                                                     [--probe]
     *                                                     [--protocol {Http, Https}]
     *                                                     [--remove]
     *                                                     [--resource-group]
     *                                                     [--root-certs]
     *                                                     [--set]
     *                                                     [--subscription]
     *                                                     [--timeout]
     */
    az_network_application_gateway_http_settings_update(): void {
    }
}

/** Manage the managed service identity of an application gateway. */
class az_network_application_gateway_identity {
    /**
     * Assign a managed service identity to an application-gateway.
     *
     * Syntax: 
     *
     * az network application-gateway identity assign --identity
     *                                                [--gateway-name]
     *                                                [--ids]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_identity_assign(): void {
    }

    /**
     * Remove the managed service identity of an application-gateway.
     *
     * Syntax: 
     *
     * az network application-gateway identity remove [--gateway-name]
     *                                                [--ids]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_identity_remove(): void {
    }

    /**
     * Show the managed service identity of an application-gateway.
     *
     * Syntax: 
     *
     * az network application-gateway identity show [--gateway-name]
     *                                              [--ids]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_network_application_gateway_identity_show(): void {
    }
}

/** Manage IP configuration of a Private Link to configure its capability. */
class az_network_application_gateway_private_link_ip_config {
    /**
     * Add an IP configuration to a Private Link to scale up its capability.
     *
     * Syntax: 
     *
     * az network application-gateway private-link ip-config add --name
     *                                                           --private-link
     *                                                           [--gateway-name]
     *                                                           [--ids]
     *                                                           [--ip-address]
     *                                                           [--no-wait]
     *                                                           [--primary {false, true}]
     *                                                           [--resource-group]
     *                                                           [--subscription]
     */
    az_network_application_gateway_private_link_ip_config_add(): void {
    }

    /**
     * List all the IP configuration of a Private Link.
     *
     * Syntax: 
     *
     * az network application-gateway private-link ip-config list --gateway-name
     *                                                            --private-link
     *                                                            --resource-group
     *                                                            [--query-examples]
     *                                                            [--subscription]
     */
    az_network_application_gateway_private_link_ip_config_list(): void {
    }

    /**
     * Remove an IP configuration from a Private Link to scale down its capability.
     *
     * Syntax: 
     *
     * az network application-gateway private-link ip-config remove --name
     *                                                              --private-link
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--no-wait]
     *                                                              [--resource-group]
     *                                                              [--subscription]
     *                                                              [--yes]
     */
    az_network_application_gateway_private_link_ip_config_remove(): void {
    }

    /**
     * Show an IP configuration of a Private Link.
     *
     * Syntax: 
     *
     * az network application-gateway private-link ip-config show --name
     *                                                            --private-link
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     */
    az_network_application_gateway_private_link_ip_config_show(): void {
    }

    /**
     * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
     *
     * Syntax: 
     *
     * az network application-gateway private-link ip-config wait [--created]
     *                                                            [--custom]
     *                                                            [--deleted]
     *                                                            [--exists]
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--interval]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     *                                                            [--timeout]
     *                                                            [--updated]
     */
    az_network_application_gateway_private_link_ip_config_wait(): void {
    }
}

/** Manage Private Link of an Application Gateway. */
class az_network_application_gateway_private_link {
    /**
     * Add a new Private Link with a default IP Configuration and associate it with an existing Frontend IP.
     *
     * Syntax: 
     *
     * az network application-gateway private-link add --frontend-ip
     *                                                 --name
     *                                                 --subnet
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--ip-address]
     *                                                 [--no-wait]
     *                                                 [--primary {false, true}]
     *                                                 [--resource-group]
     *                                                 [--subnet-prefix]
     *                                                 [--subscription]
     */
    az_network_application_gateway_private_link_add(): void {
    }

    /**
     * List all the Private Link.
     *
     * Syntax: 
     *
     * az network application-gateway private-link list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_network_application_gateway_private_link_list(): void {
    }

    /**
     * Remove a Private Link and clear association with Frontend IP. The subnet associate with a Private Link might need to clear manually.
     *
     * Syntax: 
     *
     * az network application-gateway private-link remove --name
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     *                                                    [--yes]
     */
    az_network_application_gateway_private_link_remove(): void {
    }

    /**
     * Show a Private Link.
     *
     * Syntax: 
     *
     * az network application-gateway private-link show --name
     *                                                  [--gateway-name]
     *                                                  [--ids]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_application_gateway_private_link_show(): void {
    }

    /**
     * Place the CLI in a waiting state until the condition of corresponding application gateway is met.
     *
     * Syntax: 
     *
     * az network application-gateway private-link wait [--created]
     *                                                  [--custom]
     *                                                  [--deleted]
     *                                                  [--exists]
     *                                                  [--gateway-name]
     *                                                  [--ids]
     *                                                  [--interval]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     *                                                  [--timeout]
     *                                                  [--updated]
     */
    az_network_application_gateway_private_link_wait(): void {
    }
}

/** Manage probes to gather and evaluate information on a gateway. */
class az_network_application_gateway_probe {
    /**
     * Create a probe.
     *
     * Syntax: 
     *
     * az network application-gateway probe create --gateway-name
     *                                             --name
     *                                             --path
     *                                             --protocol {Http, Https}
     *                                             --resource-group
     *                                             [--host]
     *                                             [--host-name-from-http-settings {false, true}]
     *                                             [--interval]
     *                                             [--match-body]
     *                                             [--match-status-codes]
     *                                             [--min-servers]
     *                                             [--no-wait]
     *                                             [--port]
     *                                             [--subscription]
     *                                             [--threshold]
     *                                             [--timeout]
     */
    az_network_application_gateway_probe_create(): void {
    }

    /**
     * Delete a probe.
     *
     * Syntax: 
     *
     * az network application-gateway probe delete [--gateway-name]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--no-wait]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_network_application_gateway_probe_delete(): void {
    }

    /**
     * List probes.
     *
     * Syntax: 
     *
     * az network application-gateway probe list --gateway-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_network_application_gateway_probe_list(): void {
    }

    /**
     * Get the details of a probe.
     *
     * Syntax: 
     *
     * az network application-gateway probe show [--gateway-name]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_application_gateway_probe_show(): void {
    }

    /**
     * Update a probe.
     *
     * Syntax: 
     *
     * az network application-gateway probe update [--add]
     *                                             [--force-string]
     *                                             [--gateway-name]
     *                                             [--host]
     *                                             [--host-name-from-http-settings {false, true}]
     *                                             [--ids]
     *                                             [--interval]
     *                                             [--match-body]
     *                                             [--match-status-codes]
     *                                             [--min-servers]
     *                                             [--name]
     *                                             [--no-wait]
     *                                             [--path]
     *                                             [--port]
     *                                             [--protocol {Http, Https}]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--threshold]
     *                                             [--timeout]
     */
    az_network_application_gateway_probe_update(): void {
    }
}

/** Manage redirect configurations. */
class az_network_application_gateway_redirect_config {
    /**
     * Create a redirect configuration.
     *
     * Syntax: 
     *
     * az network application-gateway redirect-config create --gateway-name
     *                                                       --name
     *                                                       --resource-group
     *                                                       --type {Found, Permanent, SeeOther, Temporary}
     *                                                       [--include-path {false, true}]
     *                                                       [--include-query-string {false, true}]
     *                                                       [--no-wait]
     *                                                       [--subscription]
     *                                                       [--target-listener]
     *                                                       [--target-url]
     */
    az_network_application_gateway_redirect_config_create(): void {
    }

    /**
     * Delete a redirect configuration.
     *
     * Syntax: 
     *
     * az network application-gateway redirect-config delete [--gateway-name]
     *                                                       [--ids]
     *                                                       [--name]
     *                                                       [--no-wait]
     *                                                       [--resource-group]
     *                                                       [--subscription]
     */
    az_network_application_gateway_redirect_config_delete(): void {
    }

    /**
     * List redirect configurations.
     *
     * Syntax: 
     *
     * az network application-gateway redirect-config list --gateway-name
     *                                                     --resource-group
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_network_application_gateway_redirect_config_list(): void {
    }

    /**
     * Get the details of a redirect configuration.
     *
     * Syntax: 
     *
     * az network application-gateway redirect-config show [--gateway-name]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--query-examples]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_network_application_gateway_redirect_config_show(): void {
    }

    /**
     * Update a redirect configuration.
     *
     * Syntax: 
     *
     * az network application-gateway redirect-config update [--add]
     *                                                       [--force-string]
     *                                                       [--gateway-name]
     *                                                       [--ids]
     *                                                       [--include-path {false, true}]
     *                                                       [--include-query-string {false, true}]
     *                                                       [--name]
     *                                                       [--no-wait]
     *                                                       [--remove]
     *                                                       [--resource-group]
     *                                                       [--set]
     *                                                       [--subscription]
     *                                                       [--target-listener]
     *                                                       [--target-url]
     *                                                       [--type {Found, Permanent, SeeOther, Temporary}]
     */
    az_network_application_gateway_redirect_config_update(): void {
    }
}

/** Manage rewrite rule conditions of an application gateway. */
class az_network_application_gateway_rewrite_rule_condition {
    /**
     * Create a rewrite rule condition.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition create --gateway-name
     *                                                              --resource-group
     *                                                              --rule-name
     *                                                              --rule-set-name
     *                                                              --variable
     *                                                              [--ignore-case {false, true}]
     *                                                              [--negate {false, true}]
     *                                                              [--no-wait]
     *                                                              [--pattern]
     *                                                              [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_create(): void {
    }

    /**
     * Delete a rewrite rule condition.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition delete --variable
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--no-wait]
     *                                                              [--resource-group]
     *                                                              [--rule-name]
     *                                                              [--rule-set-name]
     *                                                              [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_delete(): void {
    }

    /**
     * List rewrite rule conditions.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition list --gateway-name
     *                                                            --resource-group
     *                                                            --rule-name
     *                                                            --rule-set-name
     *                                                            [--query-examples]
     *                                                            [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_list(): void {
    }

    /**
     * Lists all available server variables.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition list-server-variables [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_list_server_variables(): void {
    }

    /**
     * Get the details of a rewrite rule condition.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition show --variable
     *                                                            [--gateway-name]
     *                                                            [--ids]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--rule-name]
     *                                                            [--rule-set-name]
     *                                                            [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_show(): void {
    }

    /**
     * Update a rewrite rule condition.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule condition update --variable
     *                                                              [--add]
     *                                                              [--force-string]
     *                                                              [--gateway-name]
     *                                                              [--ids]
     *                                                              [--ignore-case {false, true}]
     *                                                              [--negate {false, true}]
     *                                                              [--no-wait]
     *                                                              [--pattern]
     *                                                              [--remove]
     *                                                              [--resource-group]
     *                                                              [--rule-name]
     *                                                              [--rule-set-name]
     *                                                              [--set]
     *                                                              [--subscription]
     */
    az_network_application_gateway_rewrite_rule_condition_update(): void {
    }
}

/** Manage rewrite rule sets of an application gateway. */
class az_network_application_gateway_rewrite_rule_set {
    /**
     * Create a rewrite rule set.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule set create --gateway-name
     *                                                        --name
     *                                                        --resource-group
     *                                                        [--no-wait]
     *                                                        [--subscription]
     */
    az_network_application_gateway_rewrite_rule_set_create(): void {
    }

    /**
     * Delete a rewrite rule set.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule set delete [--gateway-name]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--no-wait]
     *                                                        [--resource-group]
     *                                                        [--subscription]
     */
    az_network_application_gateway_rewrite_rule_set_delete(): void {
    }

    /**
     * List rewrite rule sets.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule set list --gateway-name
     *                                                      --resource-group
     *                                                      [--query-examples]
     *                                                      [--subscription]
     */
    az_network_application_gateway_rewrite_rule_set_list(): void {
    }

    /**
     * Get the details of a rewrite rule set.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule set show [--gateway-name]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--query-examples]
     *                                                      [--resource-group]
     *                                                      [--subscription]
     */
    az_network_application_gateway_rewrite_rule_set_show(): void {
    }

    /**
     * Update a rewrite rule set.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule set update [--add]
     *                                                        [--force-string]
     *                                                        [--gateway-name]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--no-wait]
     *                                                        [--remove]
     *                                                        [--resource-group]
     *                                                        [--set]
     *                                                        [--subscription]
     */
    az_network_application_gateway_rewrite_rule_set_update(): void {
    }
}

/** Manage rewrite rules of an application gateway. */
class az_network_application_gateway_rewrite_rule {
    /**
     * Create a rewrite rule.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule create --gateway-name
     *                                                    --name
     *                                                    --resource-group
     *                                                    --rule-set-name
     *                                                    [--enable-reroute {false, true}]
     *                                                    [--modified-path]
     *                                                    [--modified-query-string]
     *                                                    [--no-wait]
     *                                                    [--request-headers]
     *                                                    [--response-headers]
     *                                                    [--sequence]
     *                                                    [--subscription]
     */
    az_network_application_gateway_rewrite_rule_create(): void {
    }

    /**
     * Delete a rewrite rule.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--rule-set-name]
     *                                                    [--subscription]
     */
    az_network_application_gateway_rewrite_rule_delete(): void {
    }

    /**
     * List rewrite rules.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule list --gateway-name
     *                                                  --resource-group
     *                                                  --rule-set-name
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_network_application_gateway_rewrite_rule_list(): void {
    }

    /**
     * Lists all available request headers.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule list-request-headers [--subscription]
     */
    az_network_application_gateway_rewrite_rule_list_request_headers(): void {
    }

    /**
     * Lists all available response headers.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule list-response-headers [--subscription]
     */
    az_network_application_gateway_rewrite_rule_list_response_headers(): void {
    }

    /**
     * Get the details of a rewrite rule.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--rule-set-name]
     *                                                  [--subscription]
     */
    az_network_application_gateway_rewrite_rule_show(): void {
    }

    /**
     * Update a rewrite rule.
     *
     * Syntax: 
     *
     * az network application-gateway rewrite-rule update [--add]
     *                                                    [--enable-reroute {false, true}]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--modified-path]
     *                                                    [--modified-query-string]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--request-headers]
     *                                                    [--resource-group]
     *                                                    [--response-headers]
     *                                                    [--rule-set-name]
     *                                                    [--sequence]
     *                                                    [--set]
     *                                                    [--subscription]
     */
    az_network_application_gateway_rewrite_rule_update(): void {
    }
}

/** Manage trusted root certificates of an application gateway. */
class az_network_application_gateway_root_cert {
    /**
     * Upload a trusted root certificate.
     *
     * Syntax: 
     *
     * az network application-gateway root-cert create --gateway-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--cert-file]
     *                                                 [--keyvault-secret]
     *                                                 [--no-wait]
     *                                                 [--subscription]
     */
    az_network_application_gateway_root_cert_create(): void {
    }

    /**
     * Delete a trusted root certificate.
     *
     * Syntax: 
     *
     * az network application-gateway root-cert delete [--gateway-name]
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_network_application_gateway_root_cert_delete(): void {
    }

    /**
     * List trusted root certificates.
     *
     * Syntax: 
     *
     * az network application-gateway root-cert list --gateway-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_network_application_gateway_root_cert_list(): void {
    }

    /**
     * Get the details of a trusted root certificate.
     *
     * Syntax: 
     *
     * az network application-gateway root-cert show [--gateway-name]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_network_application_gateway_root_cert_show(): void {
    }

    /**
     * Update a trusted root certificate.
     *
     * Syntax: 
     *
     * az network application-gateway root-cert update [--add]
     *                                                 [--cert-file]
     *                                                 [--force-string]
     *                                                 [--gateway-name]
     *                                                 [--ids]
     *                                                 [--keyvault-secret]
     *                                                 [--name]
     *                                                 [--no-wait]
     *                                                 [--remove]
     *                                                 [--resource-group]
     *                                                 [--set]
     *                                                 [--subscription]
     */
    az_network_application_gateway_root_cert_update(): void {
    }
}

/** Evaluate probe information and define routing rules. */
class az_network_application_gateway_rule {
    /**
     * Create a rule.
     *
     * Syntax: 
     *
     * az network application-gateway rule create --gateway-name
     *                                            --name
     *                                            --resource-group
     *                                            [--address-pool]
     *                                            [--http-listener]
     *                                            [--http-settings]
     *                                            [--no-wait]
     *                                            [--redirect-config]
     *                                            [--rewrite-rule-set]
     *                                            [--rule-type]
     *                                            [--subscription]
     *                                            [--url-path-map]
     */
    az_network_application_gateway_rule_create(): void {
    }

    /**
     * Delete a rule.
     *
     * Syntax: 
     *
     * az network application-gateway rule delete [--gateway-name]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--no-wait]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_network_application_gateway_rule_delete(): void {
    }

    /**
     * List rules.
     *
     * Syntax: 
     *
     * az network application-gateway rule list --gateway-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_network_application_gateway_rule_list(): void {
    }

    /**
     * Get the details of a rule.
     *
     * Syntax: 
     *
     * az network application-gateway rule show [--gateway-name]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_network_application_gateway_rule_show(): void {
    }

    /**
     * Update a rule.
     *
     * Syntax: 
     *
     * az network application-gateway rule update [--add]
     *                                            [--address-pool]
     *                                            [--force-string]
     *                                            [--gateway-name]
     *                                            [--http-listener]
     *                                            [--http-settings]
     *                                            [--ids]
     *                                            [--name]
     *                                            [--no-wait]
     *                                            [--redirect-config]
     *                                            [--remove]
     *                                            [--resource-group]
     *                                            [--rewrite-rule-set]
     *                                            [--rule-type]
     *                                            [--set]
     *                                            [--subscription]
     *                                            [--url-path-map]
     */
    az_network_application_gateway_rule_update(): void {
    }
}

/** Manage SSL certificates of an application gateway. */
class az_network_application_gateway_ssl_cert {
    /**
     * Upload an SSL certificate.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-cert create --gateway-name
     *                                                --name
     *                                                --resource-group
     *                                                [--cert-file]
     *                                                [--cert-password]
     *                                                [--key-vault-secret-id]
     *                                                [--no-wait]
     *                                                [--subscription]
     */
    az_network_application_gateway_ssl_cert_create(): void {
    }

    /**
     * Delete an SSL certificate.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-cert delete [--gateway-name]
     *                                                [--ids]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_ssl_cert_delete(): void {
    }

    /**
     * List SSL certificates.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-cert list --gateway-name
     *                                              --resource-group
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_network_application_gateway_ssl_cert_list(): void {
    }

    /**
     * Get the details of an SSL certificate.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-cert show [--gateway-name]
     *                                              [--ids]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_network_application_gateway_ssl_cert_show(): void {
    }

    /**
     * Update an SSL certificate.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-cert update [--add]
     *                                                [--cert-file]
     *                                                [--cert-password]
     *                                                [--force-string]
     *                                                [--gateway-name]
     *                                                [--ids]
     *                                                [--key-vault-secret-id]
     *                                                [--name]
     *                                                [--no-wait]
     *                                                [--remove]
     *                                                [--resource-group]
     *                                                [--set]
     *                                                [--subscription]
     */
    az_network_application_gateway_ssl_cert_update(): void {
    }
}

/** Get information on predefined SSL policies. */
class az_network_application_gateway_ssl_policy_predefined {
    /**
     * Lists all SSL predefined policies for configuring SSL policy.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-policy predefined list [--query-examples]
     *                                                           [--subscription]
     */
    az_network_application_gateway_ssl_policy_predefined_list(): void {
    }

    /**
     * Gets SSL predefined policy with the specified policy name.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-policy predefined show --name
     *                                                           [--query-examples]
     *                                                           [--subscription]
     */
    az_network_application_gateway_ssl_policy_predefined_show(): void {
    }
}

/** Manage the SSL policy of an application gateway. */
class az_network_application_gateway_ssl_policy {
    /**
     * Lists available SSL options for configuring SSL policy.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-policy list-options [--subscription]
     */
    az_network_application_gateway_ssl_policy_list_options(): void {
    }

    /**
     * Update or clear SSL policy settings.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-policy set [--cipher-suites]
     *                                               [--disabled-ssl-protocols]
     *                                               [--gateway-name]
     *                                               [--ids]
     *                                               [--min-protocol-version]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--policy-type]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_network_application_gateway_ssl_policy_set(): void {
    }

    /**
     * Get the details of gateway's SSL policy settings.
     *
     * Syntax: 
     *
     * az network application-gateway ssl-policy show [--gateway-name]
     *                                                [--ids]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_ssl_policy_show(): void {
    }
}

/** Manage the rules of a URL path map. */
class az_network_application_gateway_url_path_map_rule {
    /**
     * Create a rule for a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map rule create --gateway-name
     *                                                         --name
     *                                                         --path-map-name
     *                                                         --paths
     *                                                         --resource-group
     *                                                         [--address-pool]
     *                                                         [--http-settings]
     *                                                         [--no-wait]
     *                                                         [--redirect-config]
     *                                                         [--rewrite-rule-set]
     *                                                         [--subscription]
     *                                                         [--waf-policy]
     */
    az_network_application_gateway_url_path_map_rule_create(): void {
    }

    /**
     * Delete a rule of a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map rule delete [--gateway-name]
     *                                                         [--ids]
     *                                                         [--name]
     *                                                         [--no-wait]
     *                                                         [--path-map-name]
     *                                                         [--resource-group]
     *                                                         [--subscription]
     */
    az_network_application_gateway_url_path_map_rule_delete(): void {
    }
}

/** Manage URL path maps of an application gateway. */
class az_network_application_gateway_url_path_map {
    /**
     * Create a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map create --gateway-name
     *                                                    --name
     *                                                    --paths
     *                                                    --resource-group
     *                                                    [--address-pool]
     *                                                    [--default-address-pool]
     *                                                    [--default-http-settings]
     *                                                    [--default-redirect-config]
     *                                                    [--default-rewrite-rule-set]
     *                                                    [--http-settings]
     *                                                    [--no-wait]
     *                                                    [--redirect-config]
     *                                                    [--rewrite-rule-set]
     *                                                    [--rule-name]
     *                                                    [--subscription]
     *                                                    [--waf-policy]
     */
    az_network_application_gateway_url_path_map_create(): void {
    }

    /**
     * Delete a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_application_gateway_url_path_map_delete(): void {
    }

    /**
     * List URL path maps.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_network_application_gateway_url_path_map_list(): void {
    }

    /**
     * Get the details of a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_application_gateway_url_path_map_show(): void {
    }

    /**
     * Update a URL path map.
     *
     * Syntax: 
     *
     * az network application-gateway url-path-map update [--add]
     *                                                    [--default-address-pool]
     *                                                    [--default-http-settings]
     *                                                    [--default-redirect-config]
     *                                                    [--default-rewrite-rule-set]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--no-wait]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--set]
     *                                                    [--subscription]
     */
    az_network_application_gateway_url_path_map_update(): void {
    }
}

/** Configure the settings of a web application firewall. */
class az_network_application_gateway_waf_config {
    /**
     * Get information on available WAF rule sets, rule groups, and rule IDs.
     *
     * Syntax: 
     *
     * az network application-gateway waf-config list-rule-sets [--group]
     *                                                          [--subscription]
     *                                                          [--type]
     *                                                          [--version]
     */
    az_network_application_gateway_waf_config_list_rule_sets(): void {
    }

    /**
     * Update the firewall configuration of a web application.
     *
     * Syntax: 
     *
     * az network application-gateway waf-config set --enabled {false, true}
     *                                               [--disabled-rule-groups]
     *                                               [--disabled-rules]
     *                                               [--exclusion]
     *                                               [--file-upload-limit]
     *                                               [--firewall-mode {Detection, Prevention}]
     *                                               [--gateway-name]
     *                                               [--ids]
     *                                               [--max-request-body-size]
     *                                               [--no-wait]
     *                                               [--request-body-check {false, true}]
     *                                               [--resource-group]
     *                                               [--rule-set-type]
     *                                               [--rule-set-version]
     *                                               [--subscription]
     */
    az_network_application_gateway_waf_config_set(): void {
    }

    /**
     * Get the firewall configuration of a web application.
     *
     * Syntax: 
     *
     * az network application-gateway waf-config show [--gateway-name]
     *                                                [--ids]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_waf_config_show(): void {
    }
}

/** Manage application gateway web application firewall (WAF) policies. */
class az_network_application_gateway_waf_policy_custom_rule_match_condition {
    /**
     * A match condition to an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule match-condition add --match-variables
     *                                                                           --operator {BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual, Regex}
     *                                                                           --values
     *                                                                           [--ids]
     *                                                                           [--name]
     *                                                                           [--negate {false, true}]
     *                                                                           [--policy-name]
     *                                                                           [--resource-group]
     *                                                                           [--subscription]
     *                                                                           [--transforms {HtmlEntityDecode, Lowercase, RemoveNulls, Trim, UrlDecode, UrlEncode}]
     */
    az_network_application_gateway_waf_policy_custom_rule_match_condition_add(): void {
    }

    /**
     * List application gateway WAF policy custom rule match conditions.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule match-condition list --name
     *                                                                            --policy-name
     *                                                                            --resource-group
     *                                                                            [--query-examples]
     *                                                                            [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_match_condition_list(): void {
    }

    /**
     * Remove a match condition from an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule match-condition remove --index
     *                                                                              [--ids]
     *                                                                              [--name]
     *                                                                              [--policy-name]
     *                                                                              [--resource-group]
     *                                                                              [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_match_condition_remove(): void {
    }
}

/** Manage application gateway web application firewall (WAF) policy custom rules. */
class az_network_application_gateway_waf_policy_custom_rule {
    /**
     * Create an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule create --action {Allow, Block, Log}
     *                                                              --name
     *                                                              --policy-name
     *                                                              --priority
     *                                                              --resource-group
     *                                                              --rule-type {Invalid, MatchRule}
     *                                                              [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_create(): void {
    }

    /**
     * Delete an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule delete [--ids]
     *                                                              [--name]
     *                                                              [--policy-name]
     *                                                              [--resource-group]
     *                                                              [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_delete(): void {
    }

    /**
     * List application gateway WAF policy custom rules.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule list --policy-name
     *                                                            --resource-group
     *                                                            [--query-examples]
     *                                                            [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_list(): void {
    }

    /**
     * Get the details of an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule show [--ids]
     *                                                            [--name]
     *                                                            [--policy-name]
     *                                                            [--query-examples]
     *                                                            [--resource-group]
     *                                                            [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_show(): void {
    }

    /**
     * Update an application gateway WAF policy custom rule.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy custom-rule update [--action {Allow, Block, Log}]
     *                                                              [--add]
     *                                                              [--force-string]
     *                                                              [--ids]
     *                                                              [--name]
     *                                                              [--policy-name]
     *                                                              [--priority]
     *                                                              [--remove]
     *                                                              [--resource-group]
     *                                                              [--rule-type {Invalid, MatchRule}]
     *                                                              [--set]
     *                                                              [--subscription]
     */
    az_network_application_gateway_waf_policy_custom_rule_update(): void {
    }
}

/** Manage OWASP CRS exclusions that are applied on a WAF policy managed rules. */
class az_network_application_gateway_waf_policy_managed_rule_exclusion {
    /**
     * Add an OWASP CRS exclusion rule to the WAF policy managed rules.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule exclusion add --match-variable {RequestArgNames, RequestCookieNames, RequestHeaderNames}
     *                                                                      --policy-name
     *                                                                      --resource-group
     *                                                                      --selector
     *                                                                      --selector-match-operator {Contains, EndsWith, Equals, EqualsAny, StartsWith}
     *                                                                      [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_exclusion_add(): void {
    }

    /**
     * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule exclusion list --policy-name
     *                                                                       --resource-group
     *                                                                       [--query-examples]
     *                                                                       [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_exclusion_list(): void {
    }

    /**
     * List all OWASP CRS exclusion rules that are applied on a Waf policy managed rules.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule exclusion remove --policy-name
     *                                                                         --resource-group
     *                                                                         [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_exclusion_remove(): void {
    }
}

/** Manage managed rule set of managed rules of a WAF policy. */
class az_network_application_gateway_waf_policy_managed_rule_rule_set {
    /**
     * Add managed rule set to the WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule rule-set add --policy-name
     *                                                                     --resource-group
     *                                                                     --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                     --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                     [--group-name]
     *                                                                     [--rules]
     *                                                                     [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_rule_set_add(): void {
    }

    /**
     * List all managed rule set.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule rule-set list --policy-name
     *                                                                      --resource-group
     *                                                                      [--query-examples]
     *                                                                      [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_rule_set_list(): void {
    }

    /**
     * Remove a managed rule set by rule set group name if rule_group_name is specified. Otherwise, remove all rule set.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule rule-set remove --policy-name
     *                                                                        --resource-group
     *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                        [--group-name]
     *                                                                        [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_rule_set_remove(): void {
    }

    /**
     * Update(Override) existing rule set of a WAF policy managed rules. For rule set and rules, please visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules">https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-crs-rulegroups-rules</a>.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy managed-rule rule-set update --group-name
     *                                                                        --policy-name
     *                                                                        --resource-group
     *                                                                        --type {Microsoft_BotManagerRuleSet, OWASP}
     *                                                                        --version {0.1, 2.2.9, 3.0, 3.1}
     *                                                                        [--add]
     *                                                                        [--force-string]
     *                                                                        [--remove]
     *                                                                        [--rules]
     *                                                                        [--set]
     *                                                                        [--subscription]
     */
    az_network_application_gateway_waf_policy_managed_rule_rule_set_update(): void {
    }
}

/** Manage managed rules of a waf-policy. Visit: <a href="https://docs.microsoft.com/en-us/azure/web-application-firewall/afds/afds-overview">https://docs.microsoft.com/en-us/azure/web-application-firewall/afds/afds-overview</a>. */
class az_network_application_gateway_waf_policy_managed_rule {
}

/** Defines contents of a web application firewall global configuration. */
class az_network_application_gateway_waf_policy_policy_setting {
    /**
     * List properties of a web application firewall global configuration.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy policy-setting list --policy-name
     *                                                               --resource-group
     *                                                               [--query-examples]
     *                                                               [--subscription]
     */
    az_network_application_gateway_waf_policy_policy_setting_list(): void {
    }

    /**
     * Update properties of a web application firewall global configuration.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy policy-setting update --policy-name
     *                                                                 --resource-group
     *                                                                 [--add]
     *                                                                 [--file-upload-limit-in-mb]
     *                                                                 [--force-string]
     *                                                                 [--max-request-body-size-in-kb]
     *                                                                 [--mode {Detection, Prevention}]
     *                                                                 [--remove]
     *                                                                 [--request-body-check {false, true}]
     *                                                                 [--set]
     *                                                                 [--state {Disabled, Enabled}]
     *                                                                 [--subscription]
     */
    az_network_application_gateway_waf_policy_policy_setting_update(): void {
    }
}

/** Manage application gateway web application firewall (WAF) policies. */
class az_network_application_gateway_waf_policy {
    /**
     * Create an application gateway WAF policy.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy create --name
     *                                                  --resource-group
     *                                                  [--location]
     *                                                  [--subscription]
     *                                                  [--tags]
     *                                                  [--type {Microsoft_BotManagerRuleSet, OWASP}]
     *                                                  [--version {0.1, 2.2.9, 3.0, 3.1}]
     */
    az_network_application_gateway_waf_policy_create(): void {
    }

    /**
     * Delete an application gateway WAF policy.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy delete [--ids]
     *                                                  [--name]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_application_gateway_waf_policy_delete(): void {
    }

    /**
     * List application gateway WAF policies.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy list [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_waf_policy_list(): void {
    }

    /**
     * Get the details of an application gateway WAF policy.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy show [--ids]
     *                                                [--name]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_application_gateway_waf_policy_show(): void {
    }

    /**
     * Update an application gateway WAF policy.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy update [--add]
     *                                                  [--force-string]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--remove]
     *                                                  [--resource-group]
     *                                                  [--set]
     *                                                  [--subscription]
     *                                                  [--tags]
     */
    az_network_application_gateway_waf_policy_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the application gateway WAF policy is met.
     *
     * Syntax: 
     *
     * az network application-gateway waf-policy wait [--created]
     *                                                [--custom]
     *                                                [--deleted]
     *                                                [--exists]
     *                                                [--ids]
     *                                                [--interval]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     *                                                [--timeout]
     *                                                [--updated]
     */
    az_network_application_gateway_waf_policy_wait(): void {
    }
}

/** Manage application-level routing and load balancing services. */
class az_network_application_gateway {
    /**
     * Create an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway create --name
     *                                       --resource-group
     *                                       [--capacity]
     *                                       [--cert-file]
     *                                       [--cert-password]
     *                                       [--connection-draining-timeout]
     *                                       [--custom-error-pages]
     *                                       [--enable-private-link]
     *                                       [--frontend-port]
     *                                       [--http-settings-cookie-based-affinity {Disabled, Enabled}]
     *                                       [--http-settings-port]
     *                                       [--http-settings-protocol {Http, Https}]
     *                                       [--http2 {Disabled, Enabled}]
     *                                       [--identity]
     *                                       [--key-vault-secret-id]
     *                                       [--location]
     *                                       [--max-capacity]
     *                                       [--min-capacity]
     *                                       [--no-wait]
     *                                       [--private-ip-address]
     *                                       [--private-link-ip-address]
     *                                       [--private-link-primary {false, true}]
     *                                       [--private-link-subnet]
     *                                       [--private-link-subnet-prefix]
     *                                       [--public-ip-address]
     *                                       [--public-ip-address-allocation]
     *                                       [--routing-rule-type {Basic, PathBasedRouting}]
     *                                       [--servers]
     *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
     *                                       [--subnet]
     *                                       [--subnet-address-prefix]
     *                                       [--subscription]
     *                                       [--tags]
     *                                       [--validate]
     *                                       [--vnet-address-prefix]
     *                                       [--vnet-name]
     *                                       [--waf-policy]
     *                                       [--zones {1, 2, 3}]
     */
    az_network_application_gateway_create(): void {
    }

    /**
     * Delete an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway delete [--ids]
     *                                       [--name]
     *                                       [--no-wait]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_network_application_gateway_delete(): void {
    }

    /**
     * List application gateways.
     *
     * Syntax: 
     *
     * az network application-gateway list [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_network_application_gateway_list(): void {
    }

    /**
     * Get the details of an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway show [--ids]
     *                                     [--name]
     *                                     [--query-examples]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_network_application_gateway_show(): void {
    }

    /**
     * Get information on the backend health of an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway show-backend-health [--expand]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_application_gateway_show_backend_health(): void {
    }

    /**
     * Start an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway start [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_network_application_gateway_start(): void {
    }

    /**
     * Stop an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway stop [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_network_application_gateway_stop(): void {
    }

    /**
     * Update an application gateway.
     *
     * Syntax: 
     *
     * az network application-gateway update [--add]
     *                                       [--capacity]
     *                                       [--custom-error-pages]
     *                                       [--force-string]
     *                                       [--http2 {Disabled, Enabled}]
     *                                       [--ids]
     *                                       [--max-capacity]
     *                                       [--min-capacity]
     *                                       [--name]
     *                                       [--no-wait]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--sku {Standard_Large, Standard_Medium, Standard_Small, Standard_v2, WAF_Large, WAF_Medium, WAF_v2}]
     *                                       [--subscription]
     *                                       [--tags]
     */
    az_network_application_gateway_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the application gateway is met.
     *
     * Syntax: 
     *
     * az network application-gateway wait [--created]
     *                                     [--custom]
     *                                     [--deleted]
     *                                     [--exists]
     *                                     [--ids]
     *                                     [--interval]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     *                                     [--timeout]
     *                                     [--updated]
     */
    az_network_application_gateway_wait(): void {
    }
}

/** Manage application security groups (ASGs). */
class az_network_asg {
    /**
     * Create an application security group.
     *
     * Syntax: 
     *
     * az network asg create --name
     *                       --resource-group
     *                       [--location]
     *                       [--subscription]
     *                       [--tags]
     */
    az_network_asg_create(): void {
    }

    /**
     * Delete an application security group.
     *
     * Syntax: 
     *
     * az network asg delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_network_asg_delete(): void {
    }

    /**
     * List all application security groups in a subscription.
     *
     * Syntax: 
     *
     * az network asg list [--query-examples]
     *                     [--subscription]
     */
    az_network_asg_list(): void {
    }

    /**
     * Get details of an application security group.
     *
     * Syntax: 
     *
     * az network asg show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_network_asg_show(): void {
    }

    /**
     * Update an application security group.
     *
     * Syntax: 
     *
     * az network asg update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     *                       [--tags]
     */
    az_network_asg_update(): void {
    }
}

/** Manage Azure bastion host. */
class az_network_bastion {
    /**
     * Create a Azure bastion host machine.
     *
     * Syntax: 
     *
     * az network bastion create --name
     *                           --public-ip-address
     *                           --resource-group
     *                           --vnet-name
     *                           [--location]
     *                           [--subscription]
     */
    az_network_bastion_create(): void {
    }

    /**
     * Delete a Azure bastion host machine.
     *
     * Syntax: 
     *
     * az network bastion delete --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_network_bastion_delete(): void {
    }

    /**
     * List all Azure bastion host machines.
     *
     * Syntax: 
     *
     * az network bastion list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_network_bastion_list(): void {
    }

    /**
     * Show a Azure bastion host machine.
     *
     * Syntax: 
     *
     * az network bastion show --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_network_bastion_show(): void {
    }
}

/** Manage DDoS Protection Plans. */
class az_network_ddos_protection {
    /**
     * Create a DDoS protection plan.
     *
     * Syntax: 
     *
     * az network ddos-protection create --name
     *                                   --resource-group
     *                                   [--location]
     *                                   [--subscription]
     *                                   [--tags]
     *                                   [--vnets]
     */
    az_network_ddos_protection_create(): void {
    }

    /**
     * Delete a DDoS protection plan.
     *
     * Syntax: 
     *
     * az network ddos-protection delete [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_network_ddos_protection_delete(): void {
    }

    /**
     * List DDoS protection plans.
     *
     * Syntax: 
     *
     * az network ddos-protection list [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_ddos_protection_list(): void {
    }

    /**
     * Show details of a DDoS protection plan.
     *
     * Syntax: 
     *
     * az network ddos-protection show [--ids]
     *                                 [--name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_ddos_protection_show(): void {
    }

    /**
     * Update a DDoS protection plan.
     *
     * Syntax: 
     *
     * az network ddos-protection update [--add]
     *                                   [--force-string]
     *                                   [--ids]
     *                                   [--location]
     *                                   [--name]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--set]
     *                                   [--subscription]
     *                                   [--tags]
     *                                   [--vnets]
     */
    az_network_ddos_protection_update(): void {
    }
}

/** Manage DNS A records. */
class az_network_dns_record_set_a {
    /**
     * Add an A record.
     *
     * Syntax: 
     *
     * az network dns record-set a add-record --ipv4-address
     *                                        --record-set-name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-none-match]
     *                                        [--subscription]
     *                                        [--ttl]
     */
    az_network_dns_record_set_a_add_record(): void {
    }

    /**
     * Create an empty A record set.
     *
     * Syntax: 
     *
     * az network dns record-set a create --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--if-match]
     *                                    [--if-none-match]
     *                                    [--metadata]
     *                                    [--subscription]
     *                                    [--target-resource]
     *                                    [--ttl]
     */
    az_network_dns_record_set_a_create(): void {
    }

    /**
     * Delete an A record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set a delete --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--if-match]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_network_dns_record_set_a_delete(): void {
    }

    /**
     * List all A record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set a list --resource-group
     *                                  --zone-name
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_dns_record_set_a_list(): void {
    }

    /**
     * Remove an A record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set a remove-record --ipv4-address
     *                                           --record-set-name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--keep-empty-record-set]
     *                                           [--subscription]
     */
    az_network_dns_record_set_a_remove_record(): void {
    }

    /**
     * Get the details of an A record set.
     *
     * Syntax: 
     *
     * az network dns record-set a show --name
     *                                  --resource-group
     *                                  --zone-name
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_dns_record_set_a_show(): void {
    }

    /**
     * Update an A record set.
     *
     * Syntax: 
     *
     * az network dns record-set a update --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--if-match]
     *                                    [--if-none-match]
     *                                    [--metadata]
     *                                    [--remove]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--target-resource]
     */
    az_network_dns_record_set_a_update(): void {
    }
}

/** Manage DNS AAAA records. */
class az_network_dns_record_set_aaaa {
    /**
     * Add an AAAA record.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa add-record --ipv6-address
     *                                           --record-set-name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--if-none-match]
     *                                           [--subscription]
     *                                           [--ttl]
     */
    az_network_dns_record_set_aaaa_add_record(): void {
    }

    /**
     * Create an empty AAAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa create --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--if-match]
     *                                       [--if-none-match]
     *                                       [--metadata]
     *                                       [--subscription]
     *                                       [--target-resource]
     *                                       [--ttl]
     */
    az_network_dns_record_set_aaaa_create(): void {
    }

    /**
     * Delete an AAAA record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa delete --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--if-match]
     *                                       [--subscription]
     *                                       [--yes]
     */
    az_network_dns_record_set_aaaa_delete(): void {
    }

    /**
     * List all AAAA record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa list --resource-group
     *                                     --zone-name
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_dns_record_set_aaaa_list(): void {
    }

    /**
     * Remove AAAA record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa remove-record --ipv6-address
     *                                              --record-set-name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--keep-empty-record-set]
     *                                              [--subscription]
     */
    az_network_dns_record_set_aaaa_remove_record(): void {
    }

    /**
     * Get the details of an AAAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa show --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_dns_record_set_aaaa_show(): void {
    }

    /**
     * Update an AAAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set aaaa update --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--add]
     *                                       [--force-string]
     *                                       [--if-match]
     *                                       [--if-none-match]
     *                                       [--metadata]
     *                                       [--remove]
     *                                       [--set]
     *                                       [--subscription]
     *                                       [--target-resource]
     */
    az_network_dns_record_set_aaaa_update(): void {
    }
}

/** Manage DNS CAA records. */
class az_network_dns_record_set_caa {
    /**
     * Add a CAA record.
     *
     * Syntax: 
     *
     * az network dns record-set caa add-record --flags
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --tag
     *                                          --value
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     *                                          [--ttl]
     */
    az_network_dns_record_set_caa_add_record(): void {
    }

    /**
     * Create an empty CAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set caa create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     */
    az_network_dns_record_set_caa_create(): void {
    }

    /**
     * Delete a CAA record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set caa delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_network_dns_record_set_caa_delete(): void {
    }

    /**
     * List all CAA record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set caa list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_caa_list(): void {
    }

    /**
     * Remove a CAA record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set caa remove-record --flags
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --tag
     *                                             --value
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     */
    az_network_dns_record_set_caa_remove_record(): void {
    }

    /**
     * Get the details of a CAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set caa show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_caa_show(): void {
    }

    /**
     * Update a CAA record set.
     *
     * Syntax: 
     *
     * az network dns record-set caa update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     */
    az_network_dns_record_set_caa_update(): void {
    }
}

/** Manage DNS CNAME records. */
class az_network_dns_record_set_cname {
    /**
     * Create an empty CNAME record set.
     *
     * Syntax: 
     *
     * az network dns record-set cname create --name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-match]
     *                                        [--if-none-match]
     *                                        [--metadata]
     *                                        [--subscription]
     *                                        [--target-resource]
     *                                        [--ttl]
     */
    az_network_dns_record_set_cname_create(): void {
    }

    /**
     * Delete a CNAME record set and its associated record.
     *
     * Syntax: 
     *
     * az network dns record-set cname delete --name
     *                                        --resource-group
     *                                        --zone-name
     *                                        [--if-match]
     *                                        [--subscription]
     *                                        [--yes]
     */
    az_network_dns_record_set_cname_delete(): void {
    }

    /**
     * List the CNAME record set in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set cname list --resource-group
     *                                      --zone-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_network_dns_record_set_cname_list(): void {
    }

    /**
     * Remove a CNAME record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set cname remove-record --cname
     *                                               --record-set-name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--keep-empty-record-set]
     *                                               [--subscription]
     */
    az_network_dns_record_set_cname_remove_record(): void {
    }

    /**
     * Set the value of a CNAME record.
     *
     * Syntax: 
     *
     * az network dns record-set cname set-record --cname
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--if-none-match]
     *                                            [--subscription]
     *                                            [--ttl]
     */
    az_network_dns_record_set_cname_set_record(): void {
    }

    /**
     * Get the details of a CNAME record set.
     *
     * Syntax: 
     *
     * az network dns record-set cname show --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_network_dns_record_set_cname_show(): void {
    }
}

/** Manage DNS MX records. */
class az_network_dns_record_set_mx {
    /**
     * Add an MX record.
     *
     * Syntax: 
     *
     * az network dns record-set mx add-record --exchange
     *                                         --preference
     *                                         --record-set-name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-none-match]
     *                                         [--subscription]
     *                                         [--ttl]
     */
    az_network_dns_record_set_mx_add_record(): void {
    }

    /**
     * Create an empty MX record set.
     *
     * Syntax: 
     *
     * az network dns record-set mx create --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--subscription]
     *                                     [--target-resource]
     *                                     [--ttl]
     */
    az_network_dns_record_set_mx_create(): void {
    }

    /**
     * Delete an MX record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set mx delete --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_network_dns_record_set_mx_delete(): void {
    }

    /**
     * List all MX record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set mx list --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_dns_record_set_mx_list(): void {
    }

    /**
     * Remove an MX record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set mx remove-record --exchange
     *                                            --preference
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--keep-empty-record-set]
     *                                            [--subscription]
     */
    az_network_dns_record_set_mx_remove_record(): void {
    }

    /**
     * Get the details of an MX record set.
     *
     * Syntax: 
     *
     * az network dns record-set mx show --name
     *                                   --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_dns_record_set_mx_show(): void {
    }

    /**
     * Update an MX record set.
     *
     * Syntax: 
     *
     * az network dns record-set mx update --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--target-resource]
     */
    az_network_dns_record_set_mx_update(): void {
    }
}

/** Manage DNS NS records. */
class az_network_dns_record_set_ns {
    /**
     * Add an NS record.
     *
     * Syntax: 
     *
     * az network dns record-set ns add-record --nsdname
     *                                         --record-set-name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-none-match]
     *                                         [--subscriptionid]
     *                                         [--ttl]
     */
    az_network_dns_record_set_ns_add_record(): void {
    }

    /**
     * Create an empty NS record set.
     *
     * Syntax: 
     *
     * az network dns record-set ns create --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--subscription]
     *                                     [--target-resource]
     *                                     [--ttl]
     */
    az_network_dns_record_set_ns_create(): void {
    }

    /**
     * Delete an NS record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set ns delete --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--if-match]
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_network_dns_record_set_ns_delete(): void {
    }

    /**
     * List all NS record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set ns list --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_dns_record_set_ns_list(): void {
    }

    /**
     * Remove an NS record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set ns remove-record --nsdname
     *                                            --record-set-name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--keep-empty-record-set]
     *                                            [--subscription]
     */
    az_network_dns_record_set_ns_remove_record(): void {
    }

    /**
     * Get the details of an NS record set.
     *
     * Syntax: 
     *
     * az network dns record-set ns show --name
     *                                   --resource-group
     *                                   --zone-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_dns_record_set_ns_show(): void {
    }

    /**
     * Update an NS record set.
     *
     * Syntax: 
     *
     * az network dns record-set ns update --name
     *                                     --resource-group
     *                                     --zone-name
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--if-match]
     *                                     [--if-none-match]
     *                                     [--metadata]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--target-resource]
     */
    az_network_dns_record_set_ns_update(): void {
    }
}

/** Manage DNS PTR records. */
class az_network_dns_record_set_ptr {
    /**
     * Add a PTR record.
     *
     * Syntax: 
     *
     * az network dns record-set ptr add-record --ptrdname
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     *                                          [--ttl]
     */
    az_network_dns_record_set_ptr_add_record(): void {
    }

    /**
     * Create an empty PTR record set.
     *
     * Syntax: 
     *
     * az network dns record-set ptr create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     */
    az_network_dns_record_set_ptr_create(): void {
    }

    /**
     * Delete a PTR record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set ptr delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_network_dns_record_set_ptr_delete(): void {
    }

    /**
     * List all PTR record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set ptr list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_ptr_list(): void {
    }

    /**
     * Remove a PTR record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set ptr remove-record --ptrdname
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     */
    az_network_dns_record_set_ptr_remove_record(): void {
    }

    /**
     * Get the details of a PTR record set.
     *
     * Syntax: 
     *
     * az network dns record-set ptr show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_ptr_show(): void {
    }

    /**
     * Update a PTR record set.
     *
     * Syntax: 
     *
     * az network dns record-set ptr update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     */
    az_network_dns_record_set_ptr_update(): void {
    }
}

/** Manage a DNS SOA record. */
class az_network_dns_record_set_soa {
    /**
     * Get the details of an SOA record.
     *
     * Syntax: 
     *
     * az network dns record-set soa show --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_soa_show(): void {
    }

    /**
     * Update properties of an SOA record.
     *
     * Syntax: 
     *
     * az network dns record-set soa update --resource-group
     *                                      --zone-name
     *                                      [--email]
     *                                      [--expire-time]
     *                                      [--host]
     *                                      [--if-none-match]
     *                                      [--minimum-ttl]
     *                                      [--refresh-time]
     *                                      [--retry-time]
     *                                      [--serial-number]
     *                                      [--subscription]
     */
    az_network_dns_record_set_soa_update(): void {
    }
}

/** Manage DNS SRV records. */
class az_network_dns_record_set_srv {
    /**
     * Add an SRV record.
     *
     * Syntax: 
     *
     * az network dns record-set srv add-record --port
     *                                          --priority
     *                                          --record-set-name
     *                                          --resource-group
     *                                          --target
     *                                          --weight
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     */
    az_network_dns_record_set_srv_add_record(): void {
    }

    /**
     * Create an empty SRV record set.
     *
     * Syntax: 
     *
     * az network dns record-set srv create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     */
    az_network_dns_record_set_srv_create(): void {
    }

    /**
     * Delete an SRV record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set srv delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_network_dns_record_set_srv_delete(): void {
    }

    /**
     * List all SRV record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set srv list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_srv_list(): void {
    }

    /**
     * Remove an SRV record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set srv remove-record --port
     *                                             --priority
     *                                             --record-set-name
     *                                             --resource-group
     *                                             --target
     *                                             --weight
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     */
    az_network_dns_record_set_srv_remove_record(): void {
    }

    /**
     * Get the details of an SRV record set.
     *
     * Syntax: 
     *
     * az network dns record-set srv show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_srv_show(): void {
    }

    /**
     * Update an SRV record set.
     *
     * Syntax: 
     *
     * az network dns record-set srv update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     */
    az_network_dns_record_set_srv_update(): void {
    }
}

/** Manage DNS TXT records. */
class az_network_dns_record_set_txt {
    /**
     * Add a TXT record.
     *
     * Syntax: 
     *
     * az network dns record-set txt add-record --record-set-name
     *                                          --resource-group
     *                                          --value
     *                                          --zone-name
     *                                          [--if-none-match]
     *                                          [--subscription]
     */
    az_network_dns_record_set_txt_add_record(): void {
    }

    /**
     * Create an empty TXT record set.
     *
     * Syntax: 
     *
     * az network dns record-set txt create --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--subscription]
     *                                      [--target-resource]
     *                                      [--ttl]
     */
    az_network_dns_record_set_txt_create(): void {
    }

    /**
     * Delete a TXT record set and all associated records.
     *
     * Syntax: 
     *
     * az network dns record-set txt delete --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--if-match]
     *                                      [--subscription]
     *                                      [--yes]
     */
    az_network_dns_record_set_txt_delete(): void {
    }

    /**
     * List all TXT record sets in a zone.
     *
     * Syntax: 
     *
     * az network dns record-set txt list --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_txt_list(): void {
    }

    /**
     * Remove a TXT record from its record set.
     *
     * Syntax: 
     *
     * az network dns record-set txt remove-record --record-set-name
     *                                             --resource-group
     *                                             --value
     *                                             --zone-name
     *                                             [--keep-empty-record-set]
     *                                             [--subscription]
     */
    az_network_dns_record_set_txt_remove_record(): void {
    }

    /**
     * Get the details of a TXT record set.
     *
     * Syntax: 
     *
     * az network dns record-set txt show --name
     *                                    --resource-group
     *                                    --zone-name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_dns_record_set_txt_show(): void {
    }

    /**
     * Update a TXT record set.
     *
     * Syntax: 
     *
     * az network dns record-set txt update --name
     *                                      --resource-group
     *                                      --zone-name
     *                                      [--add]
     *                                      [--force-string]
     *                                      [--if-match]
     *                                      [--if-none-match]
     *                                      [--metadata]
     *                                      [--remove]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--target-resource]
     */
    az_network_dns_record_set_txt_update(): void {
    }
}

/** Manage DNS records and record sets. */
class az_network_dns_record_set {
    /**
     * List all record sets within a DNS zone.
     *
     * Syntax: 
     *
     * az network dns record-set list --resource-group
     *                                --zone-name
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_network_dns_record_set_list(): void {
    }
}

/** Manage DNS zones. */
class az_network_dns_zone {
    /**
     * Create a DNS zone.
     *
     * Syntax: 
     *
     * az network dns zone create --name
     *                            --resource-group
     *                            [--if-none-match]
     *                            [--parent-name]
     *                            [--registration-vnets]
     *                            [--resolution-vnets]
     *                            [--subscription]
     *                            [--tags]
     *                            [--zone-type {Private, Public}]
     */
    az_network_dns_zone_create(): void {
    }

    /**
     * Delete a DNS zone and all associated records.
     *
     * Syntax: 
     *
     * az network dns zone delete --name
     *                            --resource-group
     *                            [--if-match]
     *                            [--subscription]
     *                            [--yes]
     */
    az_network_dns_zone_delete(): void {
    }

    /**
     * Export a DNS zone as a DNS zone file.
     *
     * Syntax: 
     *
     * az network dns zone export --name
     *                            --resource-group
     *                            [--file-name]
     *                            [--subscription]
     */
    az_network_dns_zone_export(): void {
    }

    /**
     * Create a DNS zone using a DNS zone file.
     *
     * Syntax: 
     *
     * az network dns zone import --file-name
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_network_dns_zone_import(): void {
    }

    /**
     * List DNS zones.
     *
     * Syntax: 
     *
     * az network dns zone list [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_network_dns_zone_list(): void {
    }

    /**
     * Get a DNS zone parameters. Does not show DNS records within the zone.
     *
     * Syntax: 
     *
     * az network dns zone show --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_network_dns_zone_show(): void {
    }

    /**
     * Update a DNS zone properties. Does not modify DNS records within the zone.
     *
     * Syntax: 
     *
     * az network dns zone update --name
     *                            --resource-group
     *                            [--add]
     *                            [--force-string]
     *                            [--if-match]
     *                            [--registration-vnets]
     *                            [--remove]
     *                            [--resolution-vnets]
     *                            [--set]
     *                            [--subscription]
     *                            [--tags]
     *                            [--zone-type {Private, Public}]
     */
    az_network_dns_zone_update(): void {
    }
}

/** Manage DNS domains in Azure. */
class az_network_dns {
    /**
     * Returns the DNS records specified by the referencing targetResourceIds.
     *
     * Syntax: 
     *
     * az network dns list-references [--subscription]
     *                                [--target-resources]
     */
    az_network_dns_list_references(): void {
    }
}

/** Manage authentication of an ExpressRoute circuit. */
class az_network_express_route_auth {
    /**
     * Create a new link authorization for an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route auth create --circuit-name
     *                                      --name
     *                                      --resource-group
     *                                      [--subscription]
     */
    az_network_express_route_auth_create(): void {
    }

    /**
     * Delete a link authorization of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route auth delete [--circuit-name]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_network_express_route_auth_delete(): void {
    }

    /**
     * List link authorizations of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route auth list --circuit-name
     *                                    --resource-group
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_network_express_route_auth_list(): void {
    }

    /**
     * Get the details of a link authorization of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route auth show [--circuit-name]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_express_route_auth_show(): void {
    }
}

/** Manage ExpressRoute gateway connections. */
class az_network_express_route_gateway_connection {
    /**
     * Create an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection create --gateway-name
     *                                                    --name
     *                                                    --peering
     *                                                    --resource-group
     *                                                    [--associated]
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--internet-security {false, true}]
     *                                                    [--labels]
     *                                                    [--propagated]
     *                                                    [--routing-weight]
     *                                                    [--subscription]
     */
    az_network_express_route_gateway_connection_create(): void {
    }

    /**
     * Delete an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection delete [--gateway-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_express_route_gateway_connection_delete(): void {
    }

    /**
     * List ExpressRoute gateway connections.
     *
     * Syntax: 
     *
     * az network express-route gateway connection list --gateway-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_network_express_route_gateway_connection_list(): void {
    }

    /**
     * Get the details of an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection show [--gateway-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_express_route_gateway_connection_show(): void {
    }

    /**
     * Update an ExpressRoute gateway connection.
     *
     * Syntax: 
     *
     * az network express-route gateway connection update [--add]
     *                                                    [--associated]
     *                                                    [--authorization-key]
     *                                                    [--circuit-name]
     *                                                    [--force-string]
     *                                                    [--gateway-name]
     *                                                    [--ids]
     *                                                    [--internet-security {false, true}]
     *                                                    [--labels]
     *                                                    [--name]
     *                                                    [--peering]
     *                                                    [--propagated]
     *                                                    [--remove]
     *                                                    [--resource-group]
     *                                                    [--routing-weight]
     *                                                    [--set]
     *                                                    [--subscription]
     */
    az_network_express_route_gateway_connection_update(): void {
    }
}

/** Manage ExpressRoute gateways. */
class az_network_express_route_gateway {
    /**
     * Create an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway create --name
     *                                         --resource-group
     *                                         [--location]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--subscription]
     *                                         [--tags]
     *                                         [--virtual-hub]
     */
    az_network_express_route_gateway_create(): void {
    }

    /**
     * Delete an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway delete [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_express_route_gateway_delete(): void {
    }

    /**
     * List ExpressRoute gateways.
     *
     * Syntax: 
     *
     * az network express-route gateway list [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_network_express_route_gateway_list(): void {
    }

    /**
     * Get the details of an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway show [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_network_express_route_gateway_show(): void {
    }

    /**
     * Update settings of an ExpressRoute gateway.
     *
     * Syntax: 
     *
     * az network express-route gateway update [--add]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--max-val]
     *                                         [--min-val]
     *                                         [--name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--set]
     *                                         [--subscription]
     *                                         [--tags]
     */
    az_network_express_route_gateway_update(): void {
    }
}

/** Manage ExpressRoute circuit connections. */
class az_network_express_route_peering_connection {
    /**
     * Create connections between two ExpressRoute circuits.
     *
     * Syntax: 
     *
     * az network express-route peering connection create --address-prefix
     *                                                    --circuit-name
     *                                                    --name
     *                                                    --peer-circuit
     *                                                    --peering-name
     *                                                    --resource-group
     *                                                    [--authorization-key]
     *                                                    [--subscription]
     */
    az_network_express_route_peering_connection_create(): void {
    }

    /**
     * Delete an ExpressRoute circuit connection.
     *
     * Syntax: 
     *
     * az network express-route peering connection delete [--circuit-name]
     *                                                    [--ids]
     *                                                    [--name]
     *                                                    [--peering-name]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_express_route_peering_connection_delete(): void {
    }

    /**
     * Get the details of an ExpressRoute circuit connection.
     *
     * Syntax: 
     *
     * az network express-route peering connection show [--circuit-name]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--peering-name]
     *                                                  [--query-examples]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_network_express_route_peering_connection_show(): void {
    }
}

/** Manage ExpressRoute circuit peer connections. */
class az_network_express_route_peering_peer_connection {
    /**
     * Gets all global reach peer connections associated with a private peering in an express route circuit.
     *
     * Syntax: 
     *
     * az network express-route peering peer-connection list --circuit-name
     *                                                       --peering-name
     *                                                       --resource-group
     *                                                       [--query-examples]
     *                                                       [--subscription]
     */
    az_network_express_route_peering_peer_connection_list(): void {
    }

    /**
     * Gets the specified Peer Express Route Circuit Connection from the specified express route circuit.
     *
     * Syntax: 
     *
     * az network express-route peering peer-connection show --circuit-name
     *                                                       --name
     *                                                       --peering-name
     *                                                       --resource-group
     *                                                       [--query-examples]
     *                                                       [--subscription]
     */
    az_network_express_route_peering_peer_connection_show(): void {
    }
}

/** Manage ExpressRoute peering of an ExpressRoute circuit. */
class az_network_express_route_peering {
    /**
     * Create peering settings for an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route peering create --circuit-name
     *                                         --peer-asn
     *                                         --peering-type {AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering}
     *                                         --primary-peer-subnet
     *                                         --resource-group
     *                                         --secondary-peer-subnet
     *                                         --vlan-id
     *                                         [--advertised-public-prefixes]
     *                                         [--customer-asn]
     *                                         [--legacy-mode]
     *                                         [--route-filter]
     *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                         [--shared-key]
     *                                         [--subscription]
     */
    az_network_express_route_peering_create(): void {
    }

    /**
     * Delete peering settings.
     *
     * Syntax: 
     *
     * az network express-route peering delete [--circuit-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_express_route_peering_delete(): void {
    }

    /**
     * List peering settings of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route peering list --circuit-name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_network_express_route_peering_list(): void {
    }

    /**
     * Get the details of an express route peering.
     *
     * Syntax: 
     *
     * az network express-route peering show [--circuit-name]
     *                                       [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_network_express_route_peering_show(): void {
    }

    /**
     * Update peering settings of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route peering update [--add]
     *                                         [--advertised-public-prefixes]
     *                                         [--circuit-name]
     *                                         [--customer-asn]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--ip-version {IPv4, IPv6}]
     *                                         [--legacy-mode]
     *                                         [--name]
     *                                         [--peer-asn]
     *                                         [--primary-peer-subnet]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--route-filter]
     *                                         [--routing-registry-name {AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC}]
     *                                         [--secondary-peer-subnet]
     *                                         [--set]
     *                                         [--shared-key]
     *                                         [--subscription]
     *                                         [--vlan-id]
     */
    az_network_express_route_peering_update(): void {
    }
}

/** Manage the managed service identity of an ExpressRoute Port. */
class az_network_express_route_port_identity {
    /**
     * Assign a managed service identity to an ExpressRoute Port.
     *
     * Syntax: 
     *
     * az network express-route port identity assign --identity
     *                                               [--ids]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_network_express_route_port_identity_assign(): void {
    }

    /**
     * Remove the managed service identity of an ExpressRoute Port.
     *
     * Syntax: 
     *
     * az network express-route port identity remove [--ids]
     *                                               [--name]
     *                                               [--no-wait]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_network_express_route_port_identity_remove(): void {
    }

    /**
     * Show the managed service identity of an ExpressRoute Port.
     *
     * Syntax: 
     *
     * az network express-route port identity show [--ids]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_network_express_route_port_identity_show(): void {
    }
}

/** View ExpressRoute links. */
class az_network_express_route_port_link {
    /**
     * List ExpressRoute links.
     *
     * Syntax: 
     *
     * az network express-route port link list --port-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_network_express_route_port_link_list(): void {
    }

    /**
     * Get the details of an ExpressRoute link.
     *
     * Syntax: 
     *
     * az network express-route port link show [--ids]
     *                                         [--name]
     *                                         [--port-name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_express_route_port_link_show(): void {
    }

    /**
     * Manage MACsec configuration of an ExpressRoute Link.
     *
     * Syntax: 
     *
     * az network express-route port link update [--add]
     *                                           [--admin-state {Disabled, Enabled}]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--macsec-cak-secret-identifier]
     *                                           [--macsec-cipher {GcmAes128, GcmAes256, GcmAesXpn128, GcmAesXpn256}]
     *                                           [--macsec-ckn-secret-identifier]
     *                                           [--name]
     *                                           [--no-wait]
     *                                           [--port-name]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--set]
     *                                           [--subscription]
     */
    az_network_express_route_port_link_update(): void {
    }
}

/** View ExpressRoute port location information. */
class az_network_express_route_port_location {
    /**
     * List ExpressRoute port locations.
     *
     * Syntax: 
     *
     * az network express-route port location list [--query-examples]
     *                                             [--subscription]
     */
    az_network_express_route_port_location_list(): void {
    }

    /**
     * Get the details of an ExpressRoute port location.
     *
     * Syntax: 
     *
     * az network express-route port location show --location
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_network_express_route_port_location_show(): void {
    }
}

/** Manage ExpressRoute ports. */
class az_network_express_route_port {
    /**
     * Create an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port create --name
     *                                      --resource-group
     *                                      [--bandwidth]
     *                                      [--encapsulation {Dot1Q, QinQ}]
     *                                      [--location]
     *                                      [--peering-location]
     *                                      [--subscription]
     *                                      [--tags]
     */
    az_network_express_route_port_create(): void {
    }

    /**
     * Delete an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port delete [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_network_express_route_port_delete(): void {
    }

    /**
     * List ExpressRoute ports.
     *
     * Syntax: 
     *
     * az network express-route port list [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_express_route_port_list(): void {
    }

    /**
     * Get the details of an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port show [--ids]
     *                                    [--name]
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_express_route_port_show(): void {
    }

    /**
     * Update settings of an ExpressRoute port.
     *
     * Syntax: 
     *
     * az network express-route port update [--add]
     *                                      [--force-string]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--remove]
     *                                      [--resource-group]
     *                                      [--set]
     *                                      [--subscription]
     *                                      [--tags]
     */
    az_network_express_route_port_update(): void {
    }
}

/** Manage dedicated private network fiber connections to Azure. */
class az_network_express_route {
    /**
     * Create an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route create --bandwidth
     *                                 --name
     *                                 --peering-location
     *                                 --provider
     *                                 --resource-group
     *                                 [--allow-classic-operations {false, true}]
     *                                 [--allow-global-reach {false, true}]
     *                                 [--express-route-port]
     *                                 [--location]
     *                                 [--no-wait]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Basic, Local, Premium, Standard}]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_network_express_route_create(): void {
    }

    /**
     * Delete an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route delete [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_express_route_delete(): void {
    }

    /**
     * Get the statistics of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route get-stats [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_express_route_get_stats(): void {
    }

    /**
     * List all ExpressRoute circuits for the current subscription.
     *
     * Syntax: 
     *
     * az network express-route list [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_express_route_list(): void {
    }

    /**
     * Show the current Address Resolution Protocol (ARP) table of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route list-arp-tables --path {primary, secondary}
     *                                          --peering-name
     *                                          [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_network_express_route_list_arp_tables(): void {
    }

    /**
     * Show the current routing table of an ExpressRoute circuit peering.
     *
     * Syntax: 
     *
     * az network express-route list-route-tables --path {primary, secondary}
     *                                            --peering-name
     *                                            [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_network_express_route_list_route_tables(): void {
    }

    /**
     * List available ExpressRoute service providers.
     *
     * Syntax: 
     *
     * az network express-route list-service-providers [--subscription]
     */
    az_network_express_route_list_service_providers(): void {
    }

    /**
     * Get the details of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_express_route_show(): void {
    }

    /**
     * Update settings of an ExpressRoute circuit.
     *
     * Syntax: 
     *
     * az network express-route update [--add]
     *                                 [--allow-classic-operations {false, true}]
     *                                 [--allow-global-reach {false, true}]
     *                                 [--bandwidth]
     *                                 [--express-route-port]
     *                                 [--force-string]
     *                                 [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--peering-location]
     *                                 [--provider]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--sku-family {MeteredData, UnlimitedData}]
     *                                 [--sku-tier {Basic, Local, Premium, Standard}]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_network_express_route_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the ExpressRoute is met.
     *
     * Syntax: 
     *
     * az network express-route wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_network_express_route_wait(): void {
    }
}

/** Manage backend addresses of the load balance backend address pool. */
class az_network_lb_address_pool_address {
    /**
     * Add one backend address into the load balance backend address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool address add --ip-address
     *                                        --lb-name
     *                                        --name
     *                                        --pool-name
     *                                        --resource-group
     *                                        --vnet
     *                                        [--subscription]
     */
    az_network_lb_address_pool_address_add(): void {
    }

    /**
     * List all backend addresses of the load balance backend address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool address list --lb-name
     *                                         --pool-name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_network_lb_address_pool_address_list(): void {
    }

    /**
     * Remove one backend address from the load balance backend address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool address remove --lb-name
     *                                           --name
     *                                           --pool-name
     *                                           --resource-group
     *                                           [--subscription]
     */
    az_network_lb_address_pool_address_remove(): void {
    }
}

/** Manage address pools of a load balancer. */
class az_network_lb_address_pool {
    /**
     * Create an address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool create --lb-name
     *                                   --name
     *                                   --resource-group
     *                                   [--backend-address]
     *                                   [--backend-addresses-config-file]
     *                                   [--subscription]
     *                                   [--vnet]
     */
    az_network_lb_address_pool_create(): void {
    }

    /**
     * Delete an address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool delete --lb-name
     *                                   --name
     *                                   --resource-group
     *                                   [--subscription]
     */
    az_network_lb_address_pool_delete(): void {
    }

    /**
     * List address pools.
     *
     * Syntax: 
     *
     * az network lb address-pool list --lb-name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_network_lb_address_pool_list(): void {
    }

    /**
     * Get the details of an address pool.
     *
     * Syntax: 
     *
     * az network lb address-pool show --lb-name
     *                                 --name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_network_lb_address_pool_show(): void {
    }
}

/** Manage frontend IP addresses of a load balancer. */
class az_network_lb_frontend_ip {
    /**
     * Create a frontend IP address.
     *
     * Syntax: 
     *
     * az network lb frontend-ip create --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--private-ip-address]
     *                                  [--private-ip-address-version {IPv4, IPv6}]
     *                                  [--public-ip-address]
     *                                  [--public-ip-prefix]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet-name]
     *                                  [--zone {1, 2, 3}]
     */
    az_network_lb_frontend_ip_create(): void {
    }

    /**
     * Delete a frontend IP address.
     *
     * Syntax: 
     *
     * az network lb frontend-ip delete --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--subscription]
     */
    az_network_lb_frontend_ip_delete(): void {
    }

    /**
     * List frontend IP addresses.
     *
     * Syntax: 
     *
     * az network lb frontend-ip list --lb-name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_network_lb_frontend_ip_list(): void {
    }

    /**
     * Get the details of a frontend IP address.
     *
     * Syntax: 
     *
     * az network lb frontend-ip show --lb-name
     *                                --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_network_lb_frontend_ip_show(): void {
    }

    /**
     * Update a frontend IP address.
     *
     * Syntax: 
     *
     * az network lb frontend-ip update [--add]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--lb-name]
     *                                  [--name]
     *                                  [--private-ip-address]
     *                                  [--public-ip-address]
     *                                  [--public-ip-prefix]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--set]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet-name]
     */
    az_network_lb_frontend_ip_update(): void {
    }
}

/** Manage inbound NAT address pools of a load balancer. */
class az_network_lb_inbound_nat_pool {
    /**
     * Create an inbound NAT address pool.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-pool create --backend-port
     *                                       --frontend-port-range-end
     *                                       --frontend-port-range-start
     *                                       --lb-name
     *                                       --name
     *                                       --protocol {All, Tcp, Udp}
     *                                       --resource-group
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--frontend-ip-name]
     *                                       [--idle-timeout]
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_pool_create(): void {
    }

    /**
     * Delete an inbound NAT address pool.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-pool delete --lb-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_pool_delete(): void {
    }

    /**
     * List inbound NAT address pools.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-pool list --lb-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_lb_inbound_nat_pool_list(): void {
    }

    /**
     * Get the details of an inbound NAT address pool.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-pool show --lb-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_lb_inbound_nat_pool_show(): void {
    }

    /**
     * Update an inbound NAT address pool.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-pool update [--add]
     *                                       [--backend-port]
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--force-string]
     *                                       [--frontend-ip-name]
     *                                       [--frontend-port-range-end]
     *                                       [--frontend-port-range-start]
     *                                       [--idle-timeout]
     *                                       [--ids]
     *                                       [--lb-name]
     *                                       [--name]
     *                                       [--protocol {All, Tcp, Udp}]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_pool_update(): void {
    }
}

/** Manage inbound NAT rules of a load balancer. */
class az_network_lb_inbound_nat_rule {
    /**
     * Create an inbound NAT rule.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-rule create --backend-port
     *                                       --frontend-port
     *                                       --lb-name
     *                                       --name
     *                                       --protocol {All, Tcp, Udp}
     *                                       --resource-group
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--frontend-ip-name]
     *                                       [--idle-timeout]
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_rule_create(): void {
    }

    /**
     * Delete an inbound NAT rule.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-rule delete --lb-name
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_rule_delete(): void {
    }

    /**
     * List inbound NAT rules.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-rule list --lb-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_lb_inbound_nat_rule_list(): void {
    }

    /**
     * Get the details of an inbound NAT rule.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-rule show --lb-name
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_network_lb_inbound_nat_rule_show(): void {
    }

    /**
     * Update an inbound NAT rule.
     *
     * Syntax: 
     *
     * az network lb inbound-nat-rule update [--add]
     *                                       [--backend-port]
     *                                       [--enable-tcp-reset {false, true}]
     *                                       [--floating-ip {false, true}]
     *                                       [--force-string]
     *                                       [--frontend-ip-name]
     *                                       [--frontend-port]
     *                                       [--idle-timeout]
     *                                       [--ids]
     *                                       [--lb-name]
     *                                       [--name]
     *                                       [--protocol {All, Tcp, Udp}]
     *                                       [--remove]
     *                                       [--resource-group]
     *                                       [--set]
     *                                       [--subscription]
     */
    az_network_lb_inbound_nat_rule_update(): void {
    }
}

/** Manage outbound rules of a load balancer. */
class az_network_lb_outbound_rule {
    /**
     * Create an outbound-rule.
     *
     * Syntax: 
     *
     * az network lb outbound-rule create --address-pool
     *                                    --frontend-ip-configs
     *                                    --lb-name
     *                                    --name
     *                                    --protocol {All, Tcp, Udp}
     *                                    --resource-group
     *                                    [--enable-tcp-reset {false, true}]
     *                                    [--idle-timeout]
     *                                    [--outbound-ports]
     *                                    [--subscription]
     */
    az_network_lb_outbound_rule_create(): void {
    }

    /**
     * Delete an outbound-rule.
     *
     * Syntax: 
     *
     * az network lb outbound-rule delete --lb-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_network_lb_outbound_rule_delete(): void {
    }

    /**
     * List outbound rules.
     *
     * Syntax: 
     *
     * az network lb outbound-rule list --lb-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_lb_outbound_rule_list(): void {
    }

    /**
     * Get the details of an outbound rule.
     *
     * Syntax: 
     *
     * az network lb outbound-rule show --lb-name
     *                                  --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_lb_outbound_rule_show(): void {
    }

    /**
     * Update an outbound-rule.
     *
     * Syntax: 
     *
     * az network lb outbound-rule update [--add]
     *                                    [--address-pool]
     *                                    [--enable-tcp-reset {false, true}]
     *                                    [--force-string]
     *                                    [--frontend-ip-configs]
     *                                    [--idle-timeout]
     *                                    [--ids]
     *                                    [--lb-name]
     *                                    [--name]
     *                                    [--outbound-ports]
     *                                    [--protocol {All, Tcp, Udp}]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     */
    az_network_lb_outbound_rule_update(): void {
    }
}

/** Evaluate probe information and define routing rules. */
class az_network_lb_probe {
    /**
     * Create a probe.
     *
     * Syntax: 
     *
     * az network lb probe create --lb-name
     *                            --name
     *                            --port
     *                            --protocol {Http, Https, Tcp}
     *                            --resource-group
     *                            [--interval]
     *                            [--path]
     *                            [--subscription]
     *                            [--threshold]
     */
    az_network_lb_probe_create(): void {
    }

    /**
     * Delete a probe.
     *
     * Syntax: 
     *
     * az network lb probe delete --lb-name
     *                            --name
     *                            --resource-group
     *                            [--subscription]
     */
    az_network_lb_probe_delete(): void {
    }

    /**
     * List probes.
     *
     * Syntax: 
     *
     * az network lb probe list --lb-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_network_lb_probe_list(): void {
    }

    /**
     * Get the details of a probe.
     *
     * Syntax: 
     *
     * az network lb probe show --lb-name
     *                          --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_network_lb_probe_show(): void {
    }

    /**
     * Update a probe.
     *
     * Syntax: 
     *
     * az network lb probe update [--add]
     *                            [--force-string]
     *                            [--ids]
     *                            [--interval]
     *                            [--lb-name]
     *                            [--name]
     *                            [--path]
     *                            [--port]
     *                            [--protocol {Http, Https, Tcp}]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--subscription]
     *                            [--threshold]
     */
    az_network_lb_probe_update(): void {
    }
}

/** Manage load balancing rules. */
class az_network_lb_rule {
    /**
     * Create a load balancing rule.
     *
     * Syntax: 
     *
     * az network lb rule create --backend-port
     *                           --frontend-port
     *                           --lb-name
     *                           --name
     *                           --protocol {All, Tcp, Udp}
     *                           --resource-group
     *                           [--backend-pool-name]
     *                           [--disable-outbound-snat {false, true}]
     *                           [--enable-tcp-reset {false, true}]
     *                           [--floating-ip {false, true}]
     *                           [--frontend-ip-name]
     *                           [--idle-timeout]
     *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
     *                           [--probe-name]
     *                           [--subscription]
     */
    az_network_lb_rule_create(): void {
    }

    /**
     * Delete a load balancing rule.
     *
     * Syntax: 
     *
     * az network lb rule delete --lb-name
     *                           --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_network_lb_rule_delete(): void {
    }

    /**
     * List load balancing rules.
     *
     * Syntax: 
     *
     * az network lb rule list --lb-name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_network_lb_rule_list(): void {
    }

    /**
     * Get the details of a load balancing rule.
     *
     * Syntax: 
     *
     * az network lb rule show --lb-name
     *                         --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_network_lb_rule_show(): void {
    }

    /**
     * Update a load balancing rule.
     *
     * Syntax: 
     *
     * az network lb rule update [--add]
     *                           [--backend-pool-name]
     *                           [--backend-port]
     *                           [--disable-outbound-snat {false, true}]
     *                           [--enable-tcp-reset {false, true}]
     *                           [--floating-ip {false, true}]
     *                           [--force-string]
     *                           [--frontend-ip-name]
     *                           [--frontend-port]
     *                           [--idle-timeout]
     *                           [--ids]
     *                           [--lb-name]
     *                           [--load-distribution {Default, SourceIP, SourceIPProtocol}]
     *                           [--name]
     *                           [--probe-name]
     *                           [--protocol {All, Tcp, Udp}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--subscription]
     */
    az_network_lb_rule_update(): void {
    }
}

/** Manage and configure load balancers. */
class az_network_lb {
    /**
     * Create a load balancer.
     *
     * Syntax: 
     *
     * az network lb create --name
     *                      --resource-group
     *                      [--backend-pool-name]
     *                      [--frontend-ip-name]
     *                      [--frontend-ip-zone {1, 2, 3}]
     *                      [--location]
     *                      [--no-wait]
     *                      [--private-ip-address]
     *                      [--private-ip-address-version {IPv4, IPv6}]
     *                      [--public-ip-address]
     *                      [--public-ip-address-allocation {Dynamic, Static}]
     *                      [--public-ip-dns-name]
     *                      [--public-ip-zone {1, 2, 3}]
     *                      [--sku {Basic, Standard}]
     *                      [--subnet]
     *                      [--subnet-address-prefix]
     *                      [--subscription]
     *                      [--tags]
     *                      [--validate]
     *                      [--vnet-address-prefix]
     *                      [--vnet-name]
     */
    az_network_lb_create(): void {
    }

    /**
     * Delete a load balancer.
     *
     * Syntax: 
     *
     * az network lb delete [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_network_lb_delete(): void {
    }

    /**
     * List load balancers.
     *
     * Syntax: 
     *
     * az network lb list [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_network_lb_list(): void {
    }

    /**
     * Get the details of a load balancer.
     *
     * Syntax: 
     *
     * az network lb show [--expand]
     *                    [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_network_lb_show(): void {
    }

    /**
     * Update a load balancer.
     *
     * Syntax: 
     *
     * az network lb update [--add]
     *                      [--force-string]
     *                      [--ids]
     *                      [--name]
     *                      [--remove]
     *                      [--resource-group]
     *                      [--set]
     *                      [--subscription]
     */
    az_network_lb_update(): void {
    }
}

/** Manage local gateways. */
class az_network_local_gateway {
    /**
     * Create a local VPN gateway.
     *
     * Syntax: 
     *
     * az network local-gateway create --gateway-ip-address
     *                                 --name
     *                                 --resource-group
     *                                 [--asn]
     *                                 [--bgp-peering-address]
     *                                 [--local-address-prefixes]
     *                                 [--location]
     *                                 [--no-wait]
     *                                 [--peer-weight]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_network_local_gateway_create(): void {
    }

    /**
     * Delete a local VPN gateway.
     *
     * Syntax: 
     *
     * az network local-gateway delete [--ids]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_local_gateway_delete(): void {
    }

    /**
     * List all local VPN gateways in a resource group.
     *
     * Syntax: 
     *
     * az network local-gateway list --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_network_local_gateway_list(): void {
    }

    /**
     * Get the details of a local VPN gateway.
     *
     * Syntax: 
     *
     * az network local-gateway show [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_local_gateway_show(): void {
    }

    /**
     * Update a local VPN gateway.
     *
     * Syntax: 
     *
     * az network local-gateway update [--add]
     *                                 [--asn]
     *                                 [--bgp-peering-address]
     *                                 [--force-string]
     *                                 [--gateway-ip-address]
     *                                 [--ids]
     *                                 [--local-address-prefixes]
     *                                 [--name]
     *                                 [--no-wait]
     *                                 [--peer-weight]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_network_local_gateway_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the local gateway is met.
     *
     * Syntax: 
     *
     * az network local-gateway wait [--created]
     *                               [--custom]
     *                               [--deleted]
     *                               [--exists]
     *                               [--ids]
     *                               [--interval]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--timeout]
     *                               [--updated]
     */
    az_network_local_gateway_wait(): void {
    }
}

/** Commands to manage NAT gateways. */
class az_network_nat_gateway {
    /**
     * Create a NAT gateway.
     *
     * Syntax: 
     *
     * az network nat gateway create --name
     *                               --resource-group
     *                               [--idle-timeout]
     *                               [--location]
     *                               [--no-wait]
     *                               [--public-ip-addresses]
     *                               [--public-ip-prefixes]
     *                               [--subscription]
     *                               [--zone {1, 2, 3}]
     */
    az_network_nat_gateway_create(): void {
    }

    /**
     * Delete a NAT gateway.
     *
     * Syntax: 
     *
     * az network nat gateway delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_nat_gateway_delete(): void {
    }

    /**
     * List NAT gateways.
     *
     * Syntax: 
     *
     * az network nat gateway list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_network_nat_gateway_list(): void {
    }

    /**
     * Show details of a NAT gateway.
     *
     * Syntax: 
     *
     * az network nat gateway show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_network_nat_gateway_show(): void {
    }

    /**
     * Update a NAT gateway.
     *
     * Syntax: 
     *
     * az network nat gateway update [--add]
     *                               [--force-string]
     *                               [--idle-timeout]
     *                               [--ids]
     *                               [--name]
     *                               [--public-ip-addresses]
     *                               [--public-ip-prefixes]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     */
    az_network_nat_gateway_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the NAT gateway is met.
     *
     * Syntax: 
     *
     * az network nat gateway wait [--created]
     *                             [--custom]
     *                             [--deleted]
     *                             [--exists]
     *                             [--ids]
     *                             [--interval]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--timeout]
     *                             [--updated]
     */
    az_network_nat_gateway_wait(): void {
    }
}

/** Commands to manage NAT resources. */
class az_network_nat {
}

/** Manage address pools in an IP configuration. */
class az_network_nic_ip_config_address_pool {
    /**
     * Add an address pool to an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config address-pool add --address-pool
     *                                           --ip-config-name
     *                                           --nic-name
     *                                           --resource-group
     *                                           [--gateway-name]
     *                                           [--lb-name]
     *                                           [--subscription]
     */
    az_network_nic_ip_config_address_pool_add(): void {
    }

    /**
     * Remove an address pool of an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config address-pool remove --address-pool
     *                                              --ip-config-name
     *                                              --nic-name
     *                                              --resource-group
     *                                              [--gateway-name]
     *                                              [--lb-name]
     *                                              [--subscription]
     */
    az_network_nic_ip_config_address_pool_remove(): void {
    }
}

/** Manage inbound NAT rules of an IP configuration. */
class az_network_nic_ip_config_inbound_nat_rule {
    /**
     * Add an inbound NAT rule to an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config inbound-nat-rule add --inbound-nat-rule
     *                                               --ip-config-name
     *                                               --nic-name
     *                                               --resource-group
     *                                               [--lb-name]
     *                                               [--subscription]
     */
    az_network_nic_ip_config_inbound_nat_rule_add(): void {
    }

    /**
     * Remove an inbound NAT rule of an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config inbound-nat-rule remove --inbound-nat-rule
     *                                                  --ip-config-name
     *                                                  --nic-name
     *                                                  --resource-group
     *                                                  [--lb-name]
     *                                                  [--subscription]
     */
    az_network_nic_ip_config_inbound_nat_rule_remove(): void {
    }
}

/** Manage IP configurations of a network interface. */
class az_network_nic_ip_config {
    /**
     * Create an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config create --name
     *                                 --nic-name
     *                                 --resource-group
     *                                 [--app-gateway-address-pools]
     *                                 [--application-security-groups]
     *                                 [--gateway-name]
     *                                 [--lb-address-pools]
     *                                 [--lb-inbound-nat-rules]
     *                                 [--lb-name]
     *                                 [--make-primary]
     *                                 [--private-ip-address]
     *                                 [--private-ip-address-version {IPv4, IPv6}]
     *                                 [--public-ip-address]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--vnet-name]
     */
    az_network_nic_ip_config_create(): void {
    }

    /**
     * Delete an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config delete [--ids]
     *                                 [--name]
     *                                 [--nic-name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_nic_ip_config_delete(): void {
    }

    /**
     * List the IP configurations of a NIC.
     *
     * Syntax: 
     *
     * az network nic ip-config list --nic-name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_network_nic_ip_config_list(): void {
    }

    /**
     * Show the details of an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config show [--ids]
     *                               [--name]
     *                               [--nic-name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_nic_ip_config_show(): void {
    }

    /**
     * Update an IP configuration.
     *
     * Syntax: 
     *
     * az network nic ip-config update [--add]
     *                                 [--app-gateway-address-pools]
     *                                 [--application-security-groups]
     *                                 [--force-string]
     *                                 [--gateway-name]
     *                                 [--ids]
     *                                 [--lb-address-pools]
     *                                 [--lb-inbound-nat-rules]
     *                                 [--lb-name]
     *                                 [--make-primary]
     *                                 [--name]
     *                                 [--nic-name]
     *                                 [--private-ip-address]
     *                                 [--private-ip-address-version {IPv4, IPv6}]
     *                                 [--public-ip-address]
     *                                 [--remove]
     *                                 [--resource-group]
     *                                 [--set]
     *                                 [--subnet]
     *                                 [--subscription]
     *                                 [--vnet-name]
     */
    az_network_nic_ip_config_update(): void {
    }
}

/** Manage network interfaces. */
class az_network_nic {
    /**
     * Create a network interface.
     *
     * Syntax: 
     *
     * az network nic create --name
     *                       --resource-group
     *                       --subnet
     *                       [--accelerated-networking {false, true}]
     *                       [--app-gateway-address-pools]
     *                       [--application-security-groups]
     *                       [--dns-servers]
     *                       [--gateway-name]
     *                       [--internal-dns-name]
     *                       [--ip-forwarding {false, true}]
     *                       [--lb-address-pools]
     *                       [--lb-inbound-nat-rules]
     *                       [--lb-name]
     *                       [--location]
     *                       [--network-security-group]
     *                       [--no-wait]
     *                       [--private-ip-address]
     *                       [--private-ip-address-version {IPv4, IPv6}]
     *                       [--public-ip-address]
     *                       [--subscription]
     *                       [--tags]
     *                       [--vnet-name]
     */
    az_network_nic_create(): void {
    }

    /**
     * Delete a network interface.
     *
     * Syntax: 
     *
     * az network nic delete [--ids]
     *                       [--name]
     *                       [--no-wait]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_network_nic_delete(): void {
    }

    /**
     * List network interfaces.
     *
     * Syntax: 
     *
     * az network nic list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_network_nic_list(): void {
    }

    /**
     * List all effective network security groups applied to a network interface.
     *
     * Syntax: 
     *
     * az network nic list-effective-nsg [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_network_nic_list_effective_nsg(): void {
    }

    /**
     * Get the details of a network interface.
     *
     * Syntax: 
     *
     * az network nic show [--expand]
     *                     [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_network_nic_show(): void {
    }

    /**
     * Show the effective route table applied to a network interface.
     *
     * Syntax: 
     *
     * az network nic show-effective-route-table [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_nic_show_effective_route_table(): void {
    }

    /**
     * Update a network interface.
     *
     * Syntax: 
     *
     * az network nic update [--accelerated-networking {false, true}]
     *                       [--add]
     *                       [--dns-servers]
     *                       [--force-string]
     *                       [--ids]
     *                       [--internal-dns-name]
     *                       [--ip-forwarding {false, true}]
     *                       [--name]
     *                       [--network-security-group]
     *                       [--no-wait]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     */
    az_network_nic_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the network interface is met.
     *
     * Syntax: 
     *
     * az network nic wait [--created]
     *                     [--custom]
     *                     [--deleted]
     *                     [--exists]
     *                     [--expand]
     *                     [--ids]
     *                     [--interval]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--timeout]
     *                     [--updated]
     */
    az_network_nic_wait(): void {
    }
}

/** Manage network security group rules. */
class az_network_nsg_rule {
    /**
     * Create a network security group rule.
     *
     * Syntax: 
     *
     * az network nsg rule create --name
     *                            --nsg-name
     *                            --priority
     *                            --resource-group
     *                            [--access {Allow, Deny}]
     *                            [--description]
     *                            [--destination-address-prefixes]
     *                            [--destination-asgs]
     *                            [--destination-port-ranges]
     *                            [--direction {Inbound, Outbound}]
     *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
     *                            [--source-address-prefixes]
     *                            [--source-asgs]
     *                            [--source-port-ranges]
     *                            [--subscription]
     */
    az_network_nsg_rule_create(): void {
    }

    /**
     * Delete a network security group rule.
     *
     * Syntax: 
     *
     * az network nsg rule delete [--ids]
     *                            [--name]
     *                            [--nsg-name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_network_nsg_rule_delete(): void {
    }

    /**
     * List all rules in a network security group.
     *
     * Syntax: 
     *
     * az network nsg rule list --nsg-name
     *                          --resource-group
     *                          [--include-default]
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_network_nsg_rule_list(): void {
    }

    /**
     * Get the details of a network security group rule.
     *
     * Syntax: 
     *
     * az network nsg rule show [--ids]
     *                          [--name]
     *                          [--nsg-name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_network_nsg_rule_show(): void {
    }

    /**
     * Update a network security group rule.
     *
     * Syntax: 
     *
     * az network nsg rule update [--access {Allow, Deny}]
     *                            [--add]
     *                            [--description]
     *                            [--destination-address-prefixes]
     *                            [--destination-asgs]
     *                            [--destination-port-ranges]
     *                            [--direction {Inbound, Outbound}]
     *                            [--force-string]
     *                            [--ids]
     *                            [--name]
     *                            [--nsg-name]
     *                            [--priority]
     *                            [--protocol {*, Ah, Esp, Icmp, Tcp, Udp}]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--source-address-prefixes]
     *                            [--source-asgs]
     *                            [--source-port-ranges]
     *                            [--subscription]
     */
    az_network_nsg_rule_update(): void {
    }
}

/** Manage Azure Network Security Groups (NSGs). */
class az_network_nsg {
    /**
     * Create a network security group.
     *
     * Syntax: 
     *
     * az network nsg create --name
     *                       --resource-group
     *                       [--location]
     *                       [--subscription]
     *                       [--tags]
     */
    az_network_nsg_create(): void {
    }

    /**
     * Delete a network security group.
     *
     * Syntax: 
     *
     * az network nsg delete [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_network_nsg_delete(): void {
    }

    /**
     * List network security groups.
     *
     * Syntax: 
     *
     * az network nsg list [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_network_nsg_list(): void {
    }

    /**
     * Get information about a network security group.
     *
     * Syntax: 
     *
     * az network nsg show [--expand]
     *                     [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_network_nsg_show(): void {
    }

    /**
     * Update a network security group.
     *
     * Syntax: 
     *
     * az network nsg update [--add]
     *                       [--force-string]
     *                       [--ids]
     *                       [--name]
     *                       [--remove]
     *                       [--resource-group]
     *                       [--set]
     *                       [--subscription]
     */
    az_network_nsg_update(): void {
    }
}

/** Manage virtual network links to the specified Private DNS zone. */
class az_network_private_dns_link_vnet {
    /**
     * Create a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet create --name
     *                                         --registration-enabled {false, true}
     *                                         --resource-group
     *                                         --virtual-network
     *                                         --zone-name
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--tags]
     */
    az_network_private_dns_link_vnet_create(): void {
    }

    /**
     * Delete a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet delete --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_network_private_dns_link_vnet_delete(): void {
    }

    /**
     * List the virtual network links to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet list --resource-group
     *                                       --zone-name
     *                                       [--query-examples]
     *                                       [--subscription]
     *                                       [--top]
     */
    az_network_private_dns_link_vnet_list(): void {
    }

    /**
     * Get a virtual network link to the specified Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns link vnet show --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_network_private_dns_link_vnet_show(): void {
    }

    /**
     * Update a virtual network link's properties. Does not modify virtual network within the link.
     *
     * Syntax: 
     *
     * az network private-dns link vnet update --name
     *                                         --resource-group
     *                                         --zone-name
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--if-match]
     *                                         [--no-wait]
     *                                         [--registration-enabled {false, true}]
     *                                         [--remove]
     *                                         [--set]
     *                                         [--subscription]
     *                                         [--tags]
     */
    az_network_private_dns_link_vnet_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the virtual network link to the specified Private DNS zone is met.
     *
     * Syntax: 
     *
     * az network private-dns link vnet wait --name
     *                                       --resource-group
     *                                       --zone-name
     *                                       [--created]
     *                                       [--custom]
     *                                       [--deleted]
     *                                       [--exists]
     *                                       [--interval]
     *                                       [--subscription]
     *                                       [--timeout]
     *                                       [--updated]
     */
    az_network_private_dns_link_vnet_wait(): void {
    }
}

/** Manage Private DNS links. */
class az_network_private_dns_link {
}

/** Manage Private DNS A records. */
class az_network_private_dns_record_set_a {
    /**
     * Add an A record.
     *
     * Syntax: 
     *
     * az network private-dns record-set a add-record --ipv4-address
     *                                                --record-set-name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--subscription]
     */
    az_network_private_dns_record_set_a_add_record(): void {
    }

    /**
     * Create an empty A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a create --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--metadata]
     *                                            [--subscription]
     *                                            [--ttl]
     */
    az_network_private_dns_record_set_a_create(): void {
    }

    /**
     * Delete an A record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set a delete --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--if-match]
     *                                            [--subscription]
     *                                            [--yes]
     */
    az_network_private_dns_record_set_a_delete(): void {
    }

    /**
     * List all A record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set a list --resource-group
     *                                          --zone-name
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_network_private_dns_record_set_a_list(): void {
    }

    /**
     * Remove an A record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a remove-record --ipv4-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--keep-empty-record-set]
     *                                                   [--subscription]
     */
    az_network_private_dns_record_set_a_remove_record(): void {
    }

    /**
     * Get the details of an A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a show --name
     *                                          --resource-group
     *                                          --zone-name
     *                                          [--query-examples]
     *                                          [--subscription]
     */
    az_network_private_dns_record_set_a_show(): void {
    }

    /**
     * Update an A record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set a update --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--add]
     *                                            [--force-string]
     *                                            [--if-match]
     *                                            [--metadata]
     *                                            [--remove]
     *                                            [--set]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_a_update(): void {
    }
}

/** Manage Private DNS AAAA records. */
class az_network_private_dns_record_set_aaaa {
    /**
     * Add an AAAA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa add-record --ipv6-address
     *                                                   --record-set-name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     */
    az_network_private_dns_record_set_aaaa_add_record(): void {
    }

    /**
     * Create an empty AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa create --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--metadata]
     *                                               [--subscription]
     *                                               [--ttl]
     */
    az_network_private_dns_record_set_aaaa_create(): void {
    }

    /**
     * Delete an AAAA record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa delete --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--if-match]
     *                                               [--subscription]
     *                                               [--yes]
     */
    az_network_private_dns_record_set_aaaa_delete(): void {
    }

    /**
     * List all AAAA record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa list --resource-group
     *                                             --zone-name
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_network_private_dns_record_set_aaaa_list(): void {
    }

    /**
     * Remove AAAA record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa remove-record --ipv6-address
     *                                                      --record-set-name
     *                                                      --resource-group
     *                                                      --zone-name
     *                                                      [--keep-empty-record-set]
     *                                                      [--subscription]
     */
    az_network_private_dns_record_set_aaaa_remove_record(): void {
    }

    /**
     * Get the details of an AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa show --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_network_private_dns_record_set_aaaa_show(): void {
    }

    /**
     * Update an AAAA record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set aaaa update --name
     *                                               --resource-group
     *                                               --zone-name
     *                                               [--add]
     *                                               [--force-string]
     *                                               [--if-match]
     *                                               [--metadata]
     *                                               [--remove]
     *                                               [--set]
     *                                               [--subscription]
     */
    az_network_private_dns_record_set_aaaa_update(): void {
    }
}

/** Manage Private DNS CNAME records. */
class az_network_private_dns_record_set_cname {
    /**
     * Create an empty CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname create --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--metadata]
     *                                                [--subscription]
     *                                                [--ttl]
     */
    az_network_private_dns_record_set_cname_create(): void {
    }

    /**
     * Delete a CNAME record set and its associated record.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname delete --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--if-match]
     *                                                [--subscription]
     *                                                [--yes]
     */
    az_network_private_dns_record_set_cname_delete(): void {
    }

    /**
     * List the CNAME record set in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname list --resource-group
     *                                              --zone-name
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_cname_list(): void {
    }

    /**
     * Remove a CNAME record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname remove-record --cname
     *                                                       --record-set-name
     *                                                       --resource-group
     *                                                       --zone-name
     *                                                       [--keep-empty-record-set]
     *                                                       [--subscription]
     */
    az_network_private_dns_record_set_cname_remove_record(): void {
    }

    /**
     * Set the value of a CNAME record.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname set-record --cname
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     *                                                    [--subscription]
     */
    az_network_private_dns_record_set_cname_set_record(): void {
    }

    /**
     * Get the details of a CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname show --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_cname_show(): void {
    }

    /**
     * Update a CNAME record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set cname update --name
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--add]
     *                                                [--force-string]
     *                                                [--if-match]
     *                                                [--metadata]
     *                                                [--remove]
     *                                                [--set]
     *                                                [--subscription]
     */
    az_network_private_dns_record_set_cname_update(): void {
    }
}

/** Manage Private DNS MX records. */
class az_network_private_dns_record_set_mx {
    /**
     * Add an MX record.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx add-record --exchange
     *                                                 --preference
     *                                                 --record-set-name
     *                                                 --resource-group
     *                                                 --zone-name
     *                                                 [--subscription]
     */
    az_network_private_dns_record_set_mx_add_record(): void {
    }

    /**
     * Create an empty MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx create --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--metadata]
     *                                             [--subscription]
     *                                             [--ttl]
     */
    az_network_private_dns_record_set_mx_create(): void {
    }

    /**
     * Delete an MX record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx delete --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--if-match]
     *                                             [--subscription]
     *                                             [--yes]
     */
    az_network_private_dns_record_set_mx_delete(): void {
    }

    /**
     * List all MX record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx list --resource-group
     *                                           --zone-name
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_network_private_dns_record_set_mx_list(): void {
    }

    /**
     * Remove an MX record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx remove-record --exchange
     *                                                    --preference
     *                                                    --record-set-name
     *                                                    --resource-group
     *                                                    --zone-name
     *                                                    [--keep-empty-record-set]
     *                                                    [--subscription]
     */
    az_network_private_dns_record_set_mx_remove_record(): void {
    }

    /**
     * Get the details of an MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx show --name
     *                                           --resource-group
     *                                           --zone-name
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_network_private_dns_record_set_mx_show(): void {
    }

    /**
     * Update an MX record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set mx update --name
     *                                             --resource-group
     *                                             --zone-name
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--if-match]
     *                                             [--metadata]
     *                                             [--remove]
     *                                             [--set]
     *                                             [--subscription]
     */
    az_network_private_dns_record_set_mx_update(): void {
    }
}

/** Manage Private DNS PTR records. */
class az_network_private_dns_record_set_ptr {
    /**
     * Add a PTR record.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr add-record --ptrdname
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --zone-name
     *                                                  [--subscription]
     */
    az_network_private_dns_record_set_ptr_add_record(): void {
    }

    /**
     * Create an empty PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     */
    az_network_private_dns_record_set_ptr_create(): void {
    }

    /**
     * Delete a PTR record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     */
    az_network_private_dns_record_set_ptr_delete(): void {
    }

    /**
     * List all PTR record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_ptr_list(): void {
    }

    /**
     * Remove a PTR record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr remove-record --ptrdname
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     */
    az_network_private_dns_record_set_ptr_remove_record(): void {
    }

    /**
     * Get the details of a PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_ptr_show(): void {
    }

    /**
     * Update a PTR record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set ptr update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_ptr_update(): void {
    }
}

/** Manage Private DNS SOA record. */
class az_network_private_dns_record_set_soa {
    /**
     * Get the details of an SOA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set soa show --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_soa_show(): void {
    }

    /**
     * Update properties of an SOA record.
     *
     * Syntax: 
     *
     * az network private-dns record-set soa update --resource-group
     *                                              --zone-name
     *                                              [--email]
     *                                              [--expire-time]
     *                                              [--host]
     *                                              [--minimum-ttl]
     *                                              [--refresh-time]
     *                                              [--retry-time]
     *                                              [--serial-number]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_soa_update(): void {
    }
}

/** Manage Private DNS SRV records. */
class az_network_private_dns_record_set_srv {
    /**
     * Add an SRV record.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv add-record --port
     *                                                  --priority
     *                                                  --record-set-name
     *                                                  --resource-group
     *                                                  --target
     *                                                  --weight
     *                                                  --zone-name
     *                                                  [--subscription]
     */
    az_network_private_dns_record_set_srv_add_record(): void {
    }

    /**
     * Create an empty SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     */
    az_network_private_dns_record_set_srv_create(): void {
    }

    /**
     * Delete an SRV record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     */
    az_network_private_dns_record_set_srv_delete(): void {
    }

    /**
     * List all SRV record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_srv_list(): void {
    }

    /**
     * Remove an SRV record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv remove-record --port
     *                                                     --priority
     *                                                     --record-set-name
     *                                                     --resource-group
     *                                                     --target
     *                                                     --weight
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     */
    az_network_private_dns_record_set_srv_remove_record(): void {
    }

    /**
     * Get the details of an SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_srv_show(): void {
    }

    /**
     * Update an SRV record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set srv update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_srv_update(): void {
    }
}

/** Manage Private DNS TXT records. */
class az_network_private_dns_record_set_txt {
    /**
     * Add a TXT record.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt add-record --record-set-name
     *                                                  --resource-group
     *                                                  --value
     *                                                  --zone-name
     *                                                  [--subscription]
     */
    az_network_private_dns_record_set_txt_add_record(): void {
    }

    /**
     * Create an empty TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt create --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--metadata]
     *                                              [--subscription]
     *                                              [--ttl]
     */
    az_network_private_dns_record_set_txt_create(): void {
    }

    /**
     * Delete a TXT record set and all associated records.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt delete --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--if-match]
     *                                              [--subscription]
     *                                              [--yes]
     */
    az_network_private_dns_record_set_txt_delete(): void {
    }

    /**
     * List all TXT record sets in a zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt list --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_txt_list(): void {
    }

    /**
     * Remove a TXT record from its record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt remove-record --record-set-name
     *                                                     --resource-group
     *                                                     --value
     *                                                     --zone-name
     *                                                     [--keep-empty-record-set]
     *                                                     [--subscription]
     */
    az_network_private_dns_record_set_txt_remove_record(): void {
    }

    /**
     * Get the details of a TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt show --name
     *                                            --resource-group
     *                                            --zone-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_private_dns_record_set_txt_show(): void {
    }

    /**
     * Update a TXT record set.
     *
     * Syntax: 
     *
     * az network private-dns record-set txt update --name
     *                                              --resource-group
     *                                              --zone-name
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--if-match]
     *                                              [--metadata]
     *                                              [--remove]
     *                                              [--set]
     *                                              [--subscription]
     */
    az_network_private_dns_record_set_txt_update(): void {
    }
}

/** Manage Private DNS records and record sets. */
class az_network_private_dns_record_set {
    /**
     * List all record sets within a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns record-set list --resource-group
     *                                        --zone-name
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_network_private_dns_record_set_list(): void {
    }
}

/** Manage Private DNS zones. */
class az_network_private_dns_zone {
    /**
     * Create a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone create --name
     *                                    --resource-group
     *                                    [--no-wait]
     *                                    [--subscription]
     *                                    [--tags]
     */
    az_network_private_dns_zone_create(): void {
    }

    /**
     * Delete a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone delete --name
     *                                    --resource-group
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_network_private_dns_zone_delete(): void {
    }

    /**
     * Export a Private DNS zone as a DNS zone file.
     *
     * Syntax: 
     *
     * az network private-dns zone export --name
     *                                    --resource-group
     *                                    [--file-name]
     *                                    [--subscription]
     */
    az_network_private_dns_zone_export(): void {
    }

    /**
     * Create a Private DNS zone using a DNS zone file.
     *
     * Syntax: 
     *
     * az network private-dns zone import --file-name
     *                                    --name
     *                                    --resource-group
     *                                    [--subscription]
     */
    az_network_private_dns_zone_import(): void {
    }

    /**
     * List Private DNS zones.
     *
     * Syntax: 
     *
     * az network private-dns zone list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_private_dns_zone_list(): void {
    }

    /**
     * Get a Private DNS zone.
     *
     * Syntax: 
     *
     * az network private-dns zone show --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_private_dns_zone_show(): void {
    }

    /**
     * Update a Private DNS zone's properties. Does not modify Private DNS records or virtual network links within the zone.
     *
     * Syntax: 
     *
     * az network private-dns zone update --name
     *                                    --resource-group
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--if-match]
     *                                    [--no-wait]
     *                                    [--remove]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     */
    az_network_private_dns_zone_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the Private DNS zone is met.
     *
     * Syntax: 
     *
     * az network private-dns zone wait --name
     *                                  --resource-group
     *                                  [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--interval]
     *                                  [--subscription]
     *                                  [--timeout]
     *                                  [--updated]
     */
    az_network_private_dns_zone_wait(): void {
    }
}

/** Manage Private DNS domains in Azure. */
class az_network_private_dns {
}

/** Manage private endpoint dns zone group. */
class az_network_private_endpoint_dns_zone_group {
    /**
     * Add a private endpoint dns zone into a dns zone group.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group add --endpoint-name
     *                                                --name
     *                                                --private-dns-zone
     *                                                --resource-group
     *                                                --zone-name
     *                                                [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_add(): void {
    }

    /**
     * Create a private endpoint dns zone group.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group create --endpoint-name
     *                                                   --name
     *                                                   --private-dns-zone
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_create(): void {
    }

    /**
     * Delete a private endpoint dns zone group.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group delete --endpoint-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_delete(): void {
    }

    /**
     * List all private endpoint dns zone groups.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group list --endpoint-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_list(): void {
    }

    /**
     * Remove a private endpoint dns zone into a dns zone group.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group remove --endpoint-name
     *                                                   --name
     *                                                   --resource-group
     *                                                   --zone-name
     *                                                   [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_remove(): void {
    }

    /**
     * Show a private endpoint dns zone group.
     *
     * Syntax: 
     *
     * az network private-endpoint dns-zone-group show --endpoint-name
     *                                                 --name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_network_private_endpoint_dns_zone_group_show(): void {
    }
}

/** Manage private endpoint connections. */
class az_network_private_endpoint_connection {
    /**
     * Approve a private endpoint connection.
     *
     * Syntax: 
     *
     * az network private-endpoint-connection approve [--description]
     *                                                [--id]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--resource-name]
     *                                                [--subscription]
     *                                                [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     */
    az_network_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection.
     *
     * Syntax: 
     *
     * az network private-endpoint-connection delete [--id]
     *                                               [--name]
     *                                               [--resource-group]
     *                                               [--resource-name]
     *                                               [--subscription]
     *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     *                                               [--yes]
     */
    az_network_private_endpoint_connection_delete(): void {
    }

    /**
     * List all private endpoint connections.
     *
     * Syntax: 
     *
     * az network private-endpoint-connection list [--id]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--subscription]
     *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     */
    az_network_private_endpoint_connection_list(): void {
    }

    /**
     * Reject a private endpoint connection.
     *
     * Syntax: 
     *
     * az network private-endpoint-connection reject [--description]
     *                                               [--id]
     *                                               [--name]
     *                                               [--resource-group]
     *                                               [--resource-name]
     *                                               [--subscription]
     *                                               [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     */
    az_network_private_endpoint_connection_reject(): void {
    }

    /**
     * Show a private endpoint connection.
     *
     * Syntax: 
     *
     * az network private-endpoint-connection show [--id]
     *                                             [--name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--resource-name]
     *                                             [--subscription]
     *                                             [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     */
    az_network_private_endpoint_connection_show(): void {
    }
}

/** Manage private endpoints. */
class az_network_private_endpoint {
    /**
     * Create a private endpoint.
     *
     * Syntax: 
     *
     * az network private-endpoint create --connection-name
     *                                    --name
     *                                    --private-connection-resource-id
     *                                    --resource-group
     *                                    --subnet
     *                                    [--group-id]
     *                                    [--group-ids]
     *                                    [--location]
     *                                    [--manual-request {false, true}]
     *                                    [--request-message]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--vnet-name]
     */
    az_network_private_endpoint_create(): void {
    }

    /**
     * Delete a private endpoint.
     *
     * Syntax: 
     *
     * az network private-endpoint delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_private_endpoint_delete(): void {
    }

    /**
     * List private endpoints.
     *
     * Syntax: 
     *
     * az network private-endpoint list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_private_endpoint_list(): void {
    }

    /**
     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
     *
     * Syntax: 
     *
     * az network private-endpoint list-types --location
     *                                        [--subscription]
     */
    az_network_private_endpoint_list_types(): void {
    }

    /**
     * Get the details of a private endpoint.
     *
     * Syntax: 
     *
     * az network private-endpoint show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_private_endpoint_show(): void {
    }

    /**
     * Update a private endpoint.
     *
     * Syntax: 
     *
     * az network private-endpoint update [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--request-message]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     */
    az_network_private_endpoint_update(): void {
    }
}

/** Manage private link resources. */
class az_network_private_link_resource {
    /**
     * List all private link resources.
     *
     * Syntax: 
     *
     * az network private-link-resource list [--id]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     *                                       [--type {Microsoft.AppConfiguration/configurationStores, Microsoft.Batch/batchAccounts, Microsoft.CognitiveServices/accounts, Microsoft.Compute/diskAccesses, Microsoft.ContainerRegistry/registries, Microsoft.DBforMariaDB/servers, Microsoft.DBforMySQL/servers, Microsoft.DBforPostgreSQL/servers, Microsoft.Devices/IotHubs, Microsoft.DocumentDB/databaseAccounts, Microsoft.EventGrid/domains, Microsoft.EventGrid/topics, Microsoft.Keyvault/vaults, Microsoft.Network/applicationGateways, Microsoft.SignalRService/signalr, Microsoft.Storage/storageAccounts, Microsoft.Web/sites, microsoft.insights/privateLinkScopes}]
     */
    az_network_private_link_resource_list(): void {
    }
}

/** Manage private link service endpoint connections. */
class az_network_private_link_service_connection {
    /**
     * Delete a private link service endpoint connection.
     *
     * Syntax: 
     *
     * az network private-link-service connection delete --name
     *                                                   --resource-group
     *                                                   --service-name
     *                                                   [--subscription]
     */
    az_network_private_link_service_connection_delete(): void {
    }

    /**
     * Update a private link service endpoint connection.
     *
     * Syntax: 
     *
     * az network private-link-service connection update --connection-status {Approved, Rejected, Removed}
     *                                                   --name
     *                                                   --resource-group
     *                                                   --service-name
     *                                                   [--action-required]
     *                                                   [--description]
     *                                                   [--subscription]
     */
    az_network_private_link_service_connection_update(): void {
    }
}

/** Manage private link services. */
class az_network_private_link_service {
    /**
     * Create a private link service.
     *
     * Syntax: 
     *
     * az network private-link-service create --lb-frontend-ip-configs
     *                                        --name
     *                                        --resource-group
     *                                        --subnet
     *                                        [--auto-approval]
     *                                        [--enable-proxy-protocol {false, true}]
     *                                        [--fqdns]
     *                                        [--lb-name]
     *                                        [--location]
     *                                        [--private-ip-address]
     *                                        [--private-ip-address-version {IPv4, IPv6}]
     *                                        [--private-ip-allocation-method {Dynamic, Static}]
     *                                        [--public-ip-address]
     *                                        [--subscription]
     *                                        [--tags]
     *                                        [--visibility]
     *                                        [--vnet-name]
     */
    az_network_private_link_service_create(): void {
    }

    /**
     * Delete a private link service.
     *
     * Syntax: 
     *
     * az network private-link-service delete [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_network_private_link_service_delete(): void {
    }

    /**
     * List private link services.
     *
     * Syntax: 
     *
     * az network private-link-service list [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_network_private_link_service_list(): void {
    }

    /**
     * Get the details of a private link service.
     *
     * Syntax: 
     *
     * az network private-link-service show [--expand]
     *                                      [--ids]
     *                                      [--name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_network_private_link_service_show(): void {
    }

    /**
     * Update a private link service.
     *
     * Syntax: 
     *
     * az network private-link-service update [--add]
     *                                        [--auto-approval]
     *                                        [--enable-proxy-protocol {false, true}]
     *                                        [--force-string]
     *                                        [--fqdns]
     *                                        [--ids]
     *                                        [--lb-frontend-ip-configs]
     *                                        [--lb-name]
     *                                        [--name]
     *                                        [--remove]
     *                                        [--resource-group]
     *                                        [--set]
     *                                        [--subscription]
     *                                        [--tags]
     *                                        [--visibility]
     */
    az_network_private_link_service_update(): void {
    }
}

/** Manage network profiles. */
class az_network_profile {
    /**
     * Delete a network profile.
     *
     * Syntax: 
     *
     * az network profile delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--yes]
     */
    az_network_profile_delete(): void {
    }

    /**
     * List network profiles.
     *
     * Syntax: 
     *
     * az network profile list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_network_profile_list(): void {
    }

    /**
     * Get the details of a network profile.
     *
     * Syntax: 
     *
     * az network profile show [--expand]
     *                         [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_network_profile_show(): void {
    }
}

/** Manage public IP prefix resources. */
class az_network_public_ip_prefix {
    /**
     * Create a public IP prefix resource.
     *
     * Syntax: 
     *
     * az network public-ip prefix create --length
     *                                    --name
     *                                    --resource-group
     *                                    [--location]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--version {IPv4, IPv6}]
     *                                    [--zone {1, 2, 3}]
     */
    az_network_public_ip_prefix_create(): void {
    }

    /**
     * Delete a public IP prefix resource.
     *
     * Syntax: 
     *
     * az network public-ip prefix delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_public_ip_prefix_delete(): void {
    }

    /**
     * List public IP prefix resources.
     *
     * Syntax: 
     *
     * az network public-ip prefix list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_public_ip_prefix_list(): void {
    }

    /**
     * Get the details of a public IP prefix resource.
     *
     * Syntax: 
     *
     * az network public-ip prefix show [--expand]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_public_ip_prefix_show(): void {
    }

    /**
     * Update a public IP prefix resource.
     *
     * Syntax: 
     *
     * az network public-ip prefix update [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--subscription]
     *                                    [--tags]
     */
    az_network_public_ip_prefix_update(): void {
    }
}

/** Manage public IP addresses. */
class az_network_public_ip {
    /**
     * Create a public IP address.
     *
     * Syntax: 
     *
     * az network public-ip create --name
     *                             --resource-group
     *                             [--allocation-method {Dynamic, Static}]
     *                             [--dns-name]
     *                             [--idle-timeout]
     *                             [--ip-tags]
     *                             [--location]
     *                             [--public-ip-prefix]
     *                             [--reverse-fqdn]
     *                             [--sku {Basic, Standard}]
     *                             [--subscription]
     *                             [--tags]
     *                             [--version {IPv4, IPv6}]
     *                             [--zone {1, 2, 3}]
     */
    az_network_public_ip_create(): void {
    }

    /**
     * Delete a public IP address.
     *
     * Syntax: 
     *
     * az network public-ip delete [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_network_public_ip_delete(): void {
    }

    /**
     * List public IP addresses.
     *
     * Syntax: 
     *
     * az network public-ip list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_network_public_ip_list(): void {
    }

    /**
     * Get the details of a public IP address.
     *
     * Syntax: 
     *
     * az network public-ip show [--expand]
     *                           [--ids]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_network_public_ip_show(): void {
    }

    /**
     * Update a public IP address.
     *
     * Syntax: 
     *
     * az network public-ip update [--add]
     *                             [--allocation-method {Dynamic, Static}]
     *                             [--dns-name]
     *                             [--force-string]
     *                             [--idle-timeout]
     *                             [--ids]
     *                             [--ip-tags]
     *                             [--name]
     *                             [--public-ip-prefix]
     *                             [--remove]
     *                             [--resource-group]
     *                             [--reverse-fqdn]
     *                             [--set]
     *                             [--sku {Basic, Standard}]
     *                             [--subscription]
     *                             [--tags]
     *                             [--version {IPv4, IPv6}]
     */
    az_network_public_ip_update(): void {
    }
}

/** Manage rules in a route filter. */
class az_network_route_filter_rule {
    /**
     * Create a rule in a route filter.
     *
     * Syntax: 
     *
     * az network route-filter rule create --access {Allow, Deny}
     *                                     --communities
     *                                     --filter-name
     *                                     --name
     *                                     --resource-group
     *                                     [--location]
     *                                     [--subscription]
     */
    az_network_route_filter_rule_create(): void {
    }

    /**
     * Delete a rule from a route filter.
     *
     * Syntax: 
     *
     * az network route-filter rule delete [--filter-name]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_network_route_filter_rule_delete(): void {
    }

    /**
     * List rules in a route filter.
     *
     * Syntax: 
     *
     * az network route-filter rule list --filter-name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_route_filter_rule_list(): void {
    }

    /**
     * Gets all the available BGP service communities.
     *
     * Syntax: 
     *
     * az network route-filter rule list-service-communities [--subscription]
     */
    az_network_route_filter_rule_list_service_communities(): void {
    }

    /**
     * Get the details of a rule in a route filter.
     *
     * Syntax: 
     *
     * az network route-filter rule show [--filter-name]
     *                                   [--ids]
     *                                   [--name]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_network_route_filter_rule_show(): void {
    }

    /**
     * Update a rule in a route filter.
     *
     * Syntax: 
     *
     * az network route-filter rule update [--add]
     *                                     [--filter-name]
     *                                     [--force-string]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--set]
     *                                     [--subscription]
     */
    az_network_route_filter_rule_update(): void {
    }
}

/** Manage route filters. */
class az_network_route_filter {
    /**
     * Create a route filter.
     *
     * Syntax: 
     *
     * az network route-filter create --name
     *                                --resource-group
     *                                [--location]
     *                                [--subscription]
     *                                [--tags]
     */
    az_network_route_filter_create(): void {
    }

    /**
     * Delete a route filter.
     *
     * Syntax: 
     *
     * az network route-filter delete --name
     *                                --resource-group
     *                                [--subscription]
     */
    az_network_route_filter_delete(): void {
    }

    /**
     * List route filters.
     *
     * Syntax: 
     *
     * az network route-filter list [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_network_route_filter_list(): void {
    }

    /**
     * Get the details of a route filter.
     *
     * Syntax: 
     *
     * az network route-filter show --name
     *                              --resource-group
     *                              [--expand {peerings}]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_network_route_filter_show(): void {
    }

    /**
     * Update a route filter.
     *
     * Syntax: 
     *
     * az network route-filter update --name
     *                                --resource-group
     *                                [--add]
     *                                [--force-string]
     *                                [--remove]
     *                                [--set]
     *                                [--subscription]
     */
    az_network_route_filter_update(): void {
    }
}

/** Manage routes in a route table. */
class az_network_route_table_route {
    /**
     * Create a route in a route table.
     *
     * Syntax: 
     *
     * az network route-table route create --address-prefix
     *                                     --name
     *                                     --next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}
     *                                     --resource-group
     *                                     --route-table-name
     *                                     [--next-hop-ip-address]
     *                                     [--subscription]
     */
    az_network_route_table_route_create(): void {
    }

    /**
     * Delete a route from a route table.
     *
     * Syntax: 
     *
     * az network route-table route delete [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--route-table-name]
     *                                     [--subscription]
     */
    az_network_route_table_route_delete(): void {
    }

    /**
     * List routes in a route table.
     *
     * Syntax: 
     *
     * az network route-table route list --resource-group
     *                                   --route-table-name
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_route_table_route_list(): void {
    }

    /**
     * Get the details of a route in a route table.
     *
     * Syntax: 
     *
     * az network route-table route show [--ids]
     *                                   [--name]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--route-table-name]
     *                                   [--subscription]
     */
    az_network_route_table_route_show(): void {
    }

    /**
     * Update a route in a route table.
     *
     * Syntax: 
     *
     * az network route-table route update [--add]
     *                                     [--address-prefix]
     *                                     [--force-string]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--next-hop-ip-address]
     *                                     [--next-hop-type {Internet, None, VirtualAppliance, VirtualNetworkGateway, VnetLocal}]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--route-table-name]
     *                                     [--set]
     *                                     [--subscription]
     */
    az_network_route_table_route_update(): void {
    }
}

/** Manage route tables. */
class az_network_route_table {
    /**
     * Create a route table.
     *
     * Syntax: 
     *
     * az network route-table create --name
     *                               --resource-group
     *                               [--disable-bgp-route-propagation {false, true}]
     *                               [--location]
     *                               [--subscription]
     *                               [--tags]
     */
    az_network_route_table_create(): void {
    }

    /**
     * Delete a route table.
     *
     * Syntax: 
     *
     * az network route-table delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_route_table_delete(): void {
    }

    /**
     * List route tables.
     *
     * Syntax: 
     *
     * az network route-table list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_network_route_table_list(): void {
    }

    /**
     * Get the details of a route table.
     *
     * Syntax: 
     *
     * az network route-table show [--expand]
     *                             [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_network_route_table_show(): void {
    }

    /**
     * Update a route table.
     *
     * Syntax: 
     *
     * az network route-table update [--add]
     *                               [--disable-bgp-route-propagation {false, true}]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     *                               [--tags]
     */
    az_network_route_table_update(): void {
    }
}

/** Manage Azure security partner provider. */
class az_network_security_partner_provider {
    /**
     * Create a Azure security partner provider.
     *
     * Syntax: 
     *
     * az network security-partner-provider create --name
     *                                             --provider {Checkpoint, IBoss, ZScaler}
     *                                             --resource-group
     *                                             --vhub
     *                                             [--location]
     *                                             [--subscription]
     *                                             [--tags]
     */
    az_network_security_partner_provider_create(): void {
    }

    /**
     * Delete a Azure security partner provider.
     *
     * Syntax: 
     *
     * az network security-partner-provider delete --name
     *                                             --resource-group
     *                                             [--subscription]
     */
    az_network_security_partner_provider_delete(): void {
    }

    /**
     * List all Azure security partner provider.
     *
     * Syntax: 
     *
     * az network security-partner-provider list [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_security_partner_provider_list(): void {
    }

    /**
     * Show a Azure security partner provider.
     *
     * Syntax: 
     *
     * az network security-partner-provider show --name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_network_security_partner_provider_show(): void {
    }

    /**
     * Update a Azure security partner provider.
     *
     * Syntax: 
     *
     * az network security-partner-provider update --name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--provider {Checkpoint, IBoss, ZScaler}]
     *                                             [--remove]
     *                                             [--set]
     *                                             [--subscription]
     *                                             [--tags]
     *                                             [--vhub]
     */
    az_network_security_partner_provider_update(): void {
    }
}

/** Manage service endpoint policy definitions. */
class az_network_service_endpoint_policy_definition {
    /**
     * Create a service endpoint policy definition.
     *
     * Syntax: 
     *
     * az network service-endpoint policy-definition create --name
     *                                                      --policy-name
     *                                                      --resource-group
     *                                                      --service
     *                                                      --service-resources
     *                                                      [--description]
     *                                                      [--subscription]
     */
    az_network_service_endpoint_policy_definition_create(): void {
    }

    /**
     * Delete a service endpoint policy definition.
     *
     * Syntax: 
     *
     * az network service-endpoint policy-definition delete [--ids]
     *                                                      [--name]
     *                                                      [--policy-name]
     *                                                      [--resource-group]
     *                                                      [--subscription]
     */
    az_network_service_endpoint_policy_definition_delete(): void {
    }

    /**
     * List service endpoint policy definitions.
     *
     * Syntax: 
     *
     * az network service-endpoint policy-definition list --policy-name
     *                                                    --resource-group
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_network_service_endpoint_policy_definition_list(): void {
    }

    /**
     * Get the details of a service endpoint policy definition.
     *
     * Syntax: 
     *
     * az network service-endpoint policy-definition show [--ids]
     *                                                    [--name]
     *                                                    [--policy-name]
     *                                                    [--query-examples]
     *                                                    [--resource-group]
     *                                                    [--subscription]
     */
    az_network_service_endpoint_policy_definition_show(): void {
    }

    /**
     * Update a service endpoint policy definition.
     *
     * Syntax: 
     *
     * az network service-endpoint policy-definition update [--add]
     *                                                      [--description]
     *                                                      [--force-string]
     *                                                      [--ids]
     *                                                      [--name]
     *                                                      [--policy-name]
     *                                                      [--remove]
     *                                                      [--resource-group]
     *                                                      [--service]
     *                                                      [--service-resources]
     *                                                      [--set]
     *                                                      [--subscription]
     */
    az_network_service_endpoint_policy_definition_update(): void {
    }
}

/** Manage service endpoint policies. */
class az_network_service_endpoint_policy {
    /**
     * Create a service endpoint policy.
     *
     * Syntax: 
     *
     * az network service-endpoint policy create --name
     *                                           --resource-group
     *                                           [--location]
     *                                           [--subscription]
     *                                           [--tags]
     */
    az_network_service_endpoint_policy_create(): void {
    }

    /**
     * Delete a service endpoint policy.
     *
     * Syntax: 
     *
     * az network service-endpoint policy delete [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_service_endpoint_policy_delete(): void {
    }

    /**
     * List service endpoint policies.
     *
     * Syntax: 
     *
     * az network service-endpoint policy list [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_service_endpoint_policy_list(): void {
    }

    /**
     * Get the details of a service endpoint policy.
     *
     * Syntax: 
     *
     * az network service-endpoint policy show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_service_endpoint_policy_show(): void {
    }

    /**
     * Update a service endpoint policy.
     *
     * Syntax: 
     *
     * az network service-endpoint policy update [--add]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--name]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--set]
     *                                           [--subscription]
     *                                           [--tags]
     */
    az_network_service_endpoint_policy_update(): void {
    }
}

/** Manage policies related to service endpoints. */
class az_network_service_endpoint {
    /**
     * List what values of endpoint services are available for use.
     *
     * Syntax: 
     *
     * az network service-endpoint list --location
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_service_endpoint_list(): void {
    }
}

/** Manage Azure Traffic Manager end points. */
class az_network_traffic_manager_endpoint {
    /**
     * Create a traffic manager endpoint.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint create --name
     *                                            --profile-name
     *                                            --resource-group
     *                                            --type {azureEndpoints, externalEndpoints, nestedEndpoints}
     *                                            [--custom-headers]
     *                                            [--endpoint-location]
     *                                            [--endpoint-monitor-status]
     *                                            [--endpoint-status {Disabled, Enabled}]
     *                                            [--geo-mapping]
     *                                            [--min-child-endpoints]
     *                                            [--priority]
     *                                            [--subnets]
     *                                            [--subscription]
     *                                            [--target]
     *                                            [--target-resource-id]
     *                                            [--weight]
     */
    az_network_traffic_manager_endpoint_create(): void {
    }

    /**
     * Delete a traffic manager endpoint.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint delete [--ids]
     *                                            [--name]
     *                                            [--profile-name]
     *                                            [--resource-group]
     *                                            [--subscription]
     *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     */
    az_network_traffic_manager_endpoint_delete(): void {
    }

    /**
     * List traffic manager endpoints.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint list --profile-name
     *                                          --resource-group
     *                                          [--query-examples]
     *                                          [--subscription]
     *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     */
    az_network_traffic_manager_endpoint_list(): void {
    }

    /**
     * Get the details of a traffic manager endpoint.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint show [--ids]
     *                                          [--name]
     *                                          [--profile-name]
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     *                                          [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     */
    az_network_traffic_manager_endpoint_show(): void {
    }

    /**
     * Get the default geographic hierarchy used by the geographic traffic routing method.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint show-geographic-hierarchy [--subscription]
     */
    az_network_traffic_manager_endpoint_show_geographic_hierarchy(): void {
    }

    /**
     * Update a traffic manager endpoint.
     *
     * Syntax: 
     *
     * az network traffic-manager endpoint update [--add]
     *                                            [--custom-headers]
     *                                            [--endpoint-location]
     *                                            [--endpoint-monitor-status]
     *                                            [--endpoint-status {Disabled, Enabled}]
     *                                            [--force-string]
     *                                            [--geo-mapping]
     *                                            [--ids]
     *                                            [--min-child-endpoints]
     *                                            [--name]
     *                                            [--priority]
     *                                            [--profile-name]
     *                                            [--remove]
     *                                            [--resource-group]
     *                                            [--set]
     *                                            [--subnets]
     *                                            [--subscription]
     *                                            [--target]
     *                                            [--target-resource-id]
     *                                            [--type {azureEndpoints, externalEndpoints, nestedEndpoints}]
     *                                            [--weight]
     */
    az_network_traffic_manager_endpoint_update(): void {
    }
}

/** Manage Azure Traffic Manager profiles. */
class az_network_traffic_manager_profile {
    /**
     * Check the availability of a relative DNS name.
     *
     * Syntax: 
     *
     * az network traffic-manager profile check-dns --name
     *                                              [--subscription]
     */
    az_network_traffic_manager_profile_check_dns(): void {
    }

    /**
     * Create a traffic manager profile.
     *
     * Syntax: 
     *
     * az network traffic-manager profile create --name
     *                                           --resource-group
     *                                           --routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}
     *                                           --unique-dns-name
     *                                           [--custom-headers]
     *                                           [--interval]
     *                                           [--max-failures]
     *                                           [--path]
     *                                           [--port]
     *                                           [--protocol {HTTP, HTTPS, TCP}]
     *                                           [--status {Disabled, Enabled}]
     *                                           [--status-code-ranges]
     *                                           [--subscription]
     *                                           [--tags]
     *                                           [--timeout]
     *                                           [--ttl]
     */
    az_network_traffic_manager_profile_create(): void {
    }

    /**
     * Delete a traffic manager profile.
     *
     * Syntax: 
     *
     * az network traffic-manager profile delete [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_traffic_manager_profile_delete(): void {
    }

    /**
     * List traffic manager profiles.
     *
     * Syntax: 
     *
     * az network traffic-manager profile list [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_traffic_manager_profile_list(): void {
    }

    /**
     * Get the details of a traffic manager profile.
     *
     * Syntax: 
     *
     * az network traffic-manager profile show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_network_traffic_manager_profile_show(): void {
    }

    /**
     * Update a traffic manager profile.
     *
     * Syntax: 
     *
     * az network traffic-manager profile update [--add]
     *                                           [--custom-headers]
     *                                           [--force-string]
     *                                           [--ids]
     *                                           [--interval]
     *                                           [--max-failures]
     *                                           [--name]
     *                                           [--path]
     *                                           [--port]
     *                                           [--protocol {HTTP, HTTPS, TCP}]
     *                                           [--remove]
     *                                           [--resource-group]
     *                                           [--routing-method {Geographic, Multivalue, Performance, Priority, Subnet, Weighted}]
     *                                           [--set]
     *                                           [--status {Disabled, Enabled}]
     *                                           [--status-code-ranges]
     *                                           [--subscription]
     *                                           [--tags]
     *                                           [--timeout]
     *                                           [--ttl]
     */
    az_network_traffic_manager_profile_update(): void {
    }
}

/** Manage the routing of incoming traffic. */
class az_network_traffic_manager {
}

/** Manage Azure Network Virtual Appliance Site. */
class az_network_virtual_appliance_site {
    /**
     * Create an Azure network virtual appliance site.
     *
     * Syntax: 
     *
     * az network virtual-appliance site create --address-prefix
     *                                          --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--allow {false, true}]
     *                                          [--default {false, true}]
     *                                          [--optimize {false, true}]
     *                                          [--subscription]
     */
    az_network_virtual_appliance_site_create(): void {
    }

    /**
     * Delete an Azure network virtual appliance site.
     *
     * Syntax: 
     *
     * az network virtual-appliance site delete --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--subscription]
     *                                          [--yes]
     */
    az_network_virtual_appliance_site_delete(): void {
    }

    /**
     * List all Azure network virtual appliance site.
     *
     * Syntax: 
     *
     * az network virtual-appliance site list --appliance-name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_network_virtual_appliance_site_list(): void {
    }

    /**
     * Show the detail of an Azure network virtual appliance site.
     *
     * Syntax: 
     *
     * az network virtual-appliance site show --appliance-name
     *                                        --name
     *                                        --resource-group
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_network_virtual_appliance_site_show(): void {
    }

    /**
     * Update an Azure network virtual appliance site.
     *
     * Syntax: 
     *
     * az network virtual-appliance site update --address-prefix
     *                                          --appliance-name
     *                                          --name
     *                                          --resource-group
     *                                          [--add]
     *                                          [--allow {false, true}]
     *                                          [--default {false, true}]
     *                                          [--force-string]
     *                                          [--optimize {false, true}]
     *                                          [--remove]
     *                                          [--set]
     *                                          [--subscription]
     */
    az_network_virtual_appliance_site_update(): void {
    }
}

/** Manage Azure Network Virtual Appliance Sku. */
class az_network_virtual_appliance_sku {
    /**
     * List all Azure network virtual appliance sku.
     *
     * Syntax: 
     *
     * az network virtual-appliance sku list [--query-examples]
     *                                       [--subscription]
     */
    az_network_virtual_appliance_sku_list(): void {
    }

    /**
     * Show the detail of an Azure network virtual appliance sku.
     *
     * Syntax: 
     *
     * az network virtual-appliance sku show --name
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_network_virtual_appliance_sku_show(): void {
    }
}

/** Manage Azure Network Virtual Appliance. */
class az_network_virtual_appliance {
    /**
     * Create an Azure network virtual appliance.
     *
     * Syntax: 
     *
     * az network virtual-appliance create --name
     *                                     --resource-group
     *                                     --scale-unit
     *                                     --vendor
     *                                     --version
     *                                     --vhub
     *                                     [--asn]
     *                                     [--boot-blobs]
     *                                     [--cloud-blobs]
     *                                     [--cloud-init-config]
     *                                     [--location]
     *                                     [--subscription]
     *                                     [--tags]
     */
    az_network_virtual_appliance_create(): void {
    }

    /**
     * Delete an Azure network virtual appliance.
     *
     * Syntax: 
     *
     * az network virtual-appliance delete --name
     *                                     --resource-group
     *                                     [--subscription]
     *                                     [--yes]
     */
    az_network_virtual_appliance_delete(): void {
    }

    /**
     * List all Azure network virtual appliance.
     *
     * Syntax: 
     *
     * az network virtual-appliance list [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_network_virtual_appliance_list(): void {
    }

    /**
     * Show the detail of an Azure network virtual appliance.
     *
     * Syntax: 
     *
     * az network virtual-appliance show --name
     *                                   --resource-group
     *                                   [--expand]
     *                                   [--query-examples]
     *                                   [--subscription]
     */
    az_network_virtual_appliance_show(): void {
    }

    /**
     * Update an Azure network virtual appliance.
     *
     * Syntax: 
     *
     * az network virtual-appliance update --name
     *                                     --resource-group
     *                                     [--add]
     *                                     [--asn]
     *                                     [--cloud-init-config]
     *                                     [--force-string]
     *                                     [--remove]
     *                                     [--set]
     *                                     [--subscription]
     */
    az_network_virtual_appliance_update(): void {
    }
}

/** Manage peering connections between Azure Virtual Networks. */
class az_network_vnet_peering {
    /**
     * Create a virtual network peering connection.
     *
     * Syntax: 
     *
     * az network vnet peering create --name
     *                                --remote-vnet
     *                                --resource-group
     *                                --vnet-name
     *                                [--allow-forwarded-traffic]
     *                                [--allow-gateway-transit]
     *                                [--allow-vnet-access]
     *                                [--subscription]
     *                                [--use-remote-gateways]
     */
    az_network_vnet_peering_create(): void {
    }

    /**
     * Delete a peering.
     *
     * Syntax: 
     *
     * az network vnet peering delete [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--vnet-name]
     */
    az_network_vnet_peering_delete(): void {
    }

    /**
     * List peerings.
     *
     * Syntax: 
     *
     * az network vnet peering list --resource-group
     *                              --vnet-name
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_network_vnet_peering_list(): void {
    }

    /**
     * Show details of a peering.
     *
     * Syntax: 
     *
     * az network vnet peering show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--vnet-name]
     */
    az_network_vnet_peering_show(): void {
    }

    /**
     * Update a peering.
     *
     * Syntax: 
     *
     * az network vnet peering update [--add]
     *                                [--force-string]
     *                                [--ids]
     *                                [--name]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--set]
     *                                [--subscription]
     *                                [--vnet-name]
     */
    az_network_vnet_peering_update(): void {
    }
}

/** Manage subnets in an Azure Virtual Network. */
class az_network_vnet_subnet {
    /**
     * Create a subnet and associate an existing NSG and route table.
     *
     * Syntax: 
     *
     * az network vnet subnet create --address-prefixes
     *                               --name
     *                               --resource-group
     *                               --vnet-name
     *                               [--defer]
     *                               [--delegations]
     *                               [--disable-private-endpoint-network-policies {false, true}]
     *                               [--disable-private-link-service-network-policies {false, true}]
     *                               [--nat-gateway]
     *                               [--network-security-group]
     *                               [--route-table]
     *                               [--service-endpoint-policy]
     *                               [--service-endpoints]
     *                               [--subscription]
     */
    az_network_vnet_subnet_create(): void {
    }

    /**
     * Delete a subnet.
     *
     * Syntax: 
     *
     * az network vnet subnet delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--vnet-name]
     */
    az_network_vnet_subnet_delete(): void {
    }

    /**
     * List the subnets in a virtual network.
     *
     * Syntax: 
     *
     * az network vnet subnet list --resource-group
     *                             --vnet-name
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_network_vnet_subnet_list(): void {
    }

    /**
     * List the services available for subnet delegation.
     *
     * Syntax: 
     *
     * az network vnet subnet list-available-delegations [--location]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_network_vnet_subnet_list_available_delegations(): void {
    }

    /**
     * Show details of a subnet.
     *
     * Syntax: 
     *
     * az network vnet subnet show [--expand]
     *                             [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--vnet-name]
     */
    az_network_vnet_subnet_show(): void {
    }

    /**
     * Update a subnet.
     *
     * Syntax: 
     *
     * az network vnet subnet update [--add]
     *                               [--address-prefixes]
     *                               [--delegations]
     *                               [--disable-private-endpoint-network-policies {false, true}]
     *                               [--disable-private-link-service-network-policies {false, true}]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--nat-gateway]
     *                               [--network-security-group]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--route-table]
     *                               [--service-endpoint-policy]
     *                               [--service-endpoints]
     *                               [--set]
     *                               [--subscription]
     *                               [--vnet-name]
     */
    az_network_vnet_subnet_update(): void {
    }
}

/** Manage AAD(Azure Active Directory) authentication of a virtual network gateway. */
class az_network_vnet_gateway_aad {
    /**
     * Assign/Update AAD(Azure Active Directory) authentication to a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway aad assign --audience
     *                                    --gateway-name
     *                                    --issuer
     *                                    --resource-group
     *                                    --tenant
     *                                    [--no-wait]
     *                                    [--subscription]
     */
    az_network_vnet_gateway_aad_assign(): void {
    }

    /**
     * Remove AAD(Azure Active Directory) authentication from a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway aad remove --gateway-name
     *                                    --resource-group
     *                                    [--no-wait]
     *                                    [--subscription]
     */
    az_network_vnet_gateway_aad_remove(): void {
    }

    /**
     * Show AAD(Azure Active Directory) authentication of a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway aad show --gateway-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_vnet_gateway_aad_show(): void {
    }
}

/** Manage virtual network gateway IPSec policies. */
class az_network_vnet_gateway_ipsec_policy {
    /**
     * Add a virtual network gateway IPSec policy.
     *
     * Syntax: 
     *
     * az network vnet-gateway ipsec-policy add --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                          --gateway-name
     *                                          --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                          --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                          --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                          --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                          --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                          --resource-group
     *                                          --sa-lifetime
     *                                          --sa-max-size
     *                                          [--no-wait]
     *                                          [--subscription]
     */
    az_network_vnet_gateway_ipsec_policy_add(): void {
    }

    /**
     * Delete all IPsec policies on a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway ipsec-policy clear --gateway-name
     *                                            --resource-group
     *                                            [--no-wait]
     *                                            [--subscription]
     */
    az_network_vnet_gateway_ipsec_policy_clear(): void {
    }

    /**
     * List IPSec policies associated with a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway ipsec-policy list --gateway-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_network_vnet_gateway_ipsec_policy_list(): void {
    }
}

/** Manage revoked certificates in a virtual network gateway. */
class az_network_vnet_gateway_revoked_cert {
    /**
     * Revoke a certificate.
     *
     * Syntax: 
     *
     * az network vnet-gateway revoked-cert create --gateway-name
     *                                             --name
     *                                             --resource-group
     *                                             --thumbprint
     *                                             [--subscription]
     */
    az_network_vnet_gateway_revoked_cert_create(): void {
    }

    /**
     * Delete a revoked certificate.
     *
     * Syntax: 
     *
     * az network vnet-gateway revoked-cert delete --gateway-name
     *                                             --name
     *                                             --resource-group
     *                                             [--subscription]
     */
    az_network_vnet_gateway_revoked_cert_delete(): void {
    }
}

/** Manage root certificates of a virtual network gateway. */
class az_network_vnet_gateway_root_cert {
    /**
     * Upload a root certificate.
     *
     * Syntax: 
     *
     * az network vnet-gateway root-cert create --gateway-name
     *                                          --name
     *                                          --public-cert-data
     *                                          --resource-group
     *                                          [--subscription]
     */
    az_network_vnet_gateway_root_cert_create(): void {
    }

    /**
     * Delete a root certificate.
     *
     * Syntax: 
     *
     * az network vnet-gateway root-cert delete --gateway-name
     *                                          --name
     *                                          --resource-group
     *                                          [--subscription]
     */
    az_network_vnet_gateway_root_cert_delete(): void {
    }
}

/** Download a VPN client configuration required to connect to Azure via point-to-site. */
class az_network_vnet_gateway_vpn_client {
    /**
     * Generate VPN client configuration.
     *
     * Syntax: 
     *
     * az network vnet-gateway vpn-client generate [--authentication-method {EAPMSCHAPv2, EAPTLS}]
     *                                             [--client-root-certificates]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--processor-architecture {Amd64, X86}]
     *                                             [--radius-server-auth-certificate]
     *                                             [--resource-group]
     *                                             [--subscription]
     *                                             [--use-legacy {false, true}]
     */
    az_network_vnet_gateway_vpn_client_generate(): void {
    }

    /**
     * Retrieve a pre-generated VPN client configuration.
     *
     * Syntax: 
     *
     * az network vnet-gateway vpn-client show-url [--ids]
     *                                             [--name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_network_vnet_gateway_vpn_client_show_url(): void {
    }
}

/** Use an Azure Virtual Network Gateway to establish secure, cross-premises connectivity. */
class az_network_vnet_gateway {
    /**
     * Create a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway create --name
     *                                --public-ip-addresses
     *                                --resource-group
     *                                --vnet
     *                                [--address-prefixes]
     *                                [--asn]
     *                                [--bgp-peering-address]
     *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
     *                                [--custom-routes]
     *                                [--gateway-default-site]
     *                                [--gateway-type {ExpressRoute, Vpn}]
     *                                [--location]
     *                                [--no-wait]
     *                                [--peer-weight]
     *                                [--radius-secret]
     *                                [--radius-server]
     *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--vpn-gateway-generation {Generation1, Generation2}]
     *                                [--vpn-type {PolicyBased, RouteBased}]
     */
    az_network_vnet_gateway_create(): void {
    }

    /**
     * Delete a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway delete [--ids]
     *                                [--name]
     *                                [--no-wait]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_network_vnet_gateway_delete(): void {
    }

    /**
     * List virtual network gateways.
     *
     * Syntax: 
     *
     * az network vnet-gateway list --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_network_vnet_gateway_list(): void {
    }

    /**
     * List the routes of a virtual network gateway advertised to the specified peer.
     *
     * Syntax: 
     *
     * az network vnet-gateway list-advertised-routes --peer
     *                                                [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--subscription]
     */
    az_network_vnet_gateway_list_advertised_routes(): void {
    }

    /**
     * Retrieve the status of BGP peers.
     *
     * Syntax: 
     *
     * az network vnet-gateway list-bgp-peer-status [--ids]
     *                                              [--name]
     *                                              [--peer]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_network_vnet_gateway_list_bgp_peer_status(): void {
    }

    /**
     * This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.
     *
     * Syntax: 
     *
     * az network vnet-gateway list-learned-routes [--ids]
     *                                             [--name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_network_vnet_gateway_list_learned_routes(): void {
    }

    /**
     * Reset a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway reset [--gateway-vip]
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_network_vnet_gateway_reset(): void {
    }

    /**
     * Get the details of a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_network_vnet_gateway_show(): void {
    }

    /**
     * Update a virtual network gateway.
     *
     * Syntax: 
     *
     * az network vnet-gateway update [--add]
     *                                [--address-prefixes]
     *                                [--asn]
     *                                [--bgp-peering-address]
     *                                [--client-protocol {IkeV2, OpenVPN, SSTP}]
     *                                [--custom-routes]
     *                                [--enable-bgp {false, true}]
     *                                [--force-string]
     *                                [--gateway-default-site]
     *                                [--gateway-type {ExpressRoute, Vpn}]
     *                                [--ids]
     *                                [--name]
     *                                [--no-wait]
     *                                [--peer-weight]
     *                                [--public-ip-addresses]
     *                                [--radius-secret]
     *                                [--radius-server]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--set]
     *                                [--sku {Basic, ErGw1AZ, ErGw2AZ, ErGw3AZ, HighPerformance, Standard, UltraPerformance, VpnGw1, VpnGw1AZ, VpnGw2, VpnGw2AZ, VpnGw3, VpnGw3AZ, VpnGw4, VpnGw4AZ, VpnGw5, VpnGw5AZ}]
     *                                [--subscription]
     *                                [--tags]
     *                                [--vnet]
     *                                [--vpn-type {PolicyBased, RouteBased}]
     */
    az_network_vnet_gateway_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the virtual network gateway is met.
     *
     * Syntax: 
     *
     * az network vnet-gateway wait [--created]
     *                              [--custom]
     *                              [--deleted]
     *                              [--exists]
     *                              [--ids]
     *                              [--interval]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--timeout]
     *                              [--updated]
     */
    az_network_vnet_gateway_wait(): void {
    }
}

/** Manage Azure Virtual Networks. */
class az_network_vnet {
    /**
     * Check if a private IP address is available for use within a virtual network.
     *
     * Syntax: 
     *
     * az network vnet check-ip-address --ip-address
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_vnet_check_ip_address(): void {
    }

    /**
     * Create a virtual network.
     *
     * Syntax: 
     *
     * az network vnet create --name
     *                        --resource-group
     *                        [--address-prefixes]
     *                        [--ddos-protection {false, true}]
     *                        [--ddos-protection-plan]
     *                        [--defer]
     *                        [--dns-servers]
     *                        [--location]
     *                        [--network-security-group]
     *                        [--subnet-name]
     *                        [--subnet-prefixes]
     *                        [--subscription]
     *                        [--tags]
     *                        [--vm-protection {false, true}]
     */
    az_network_vnet_create(): void {
    }

    /**
     * Delete a virtual network.
     *
     * Syntax: 
     *
     * az network vnet delete [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_network_vnet_delete(): void {
    }

    /**
     * List virtual networks.
     *
     * Syntax: 
     *
     * az network vnet list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_network_vnet_list(): void {
    }

    /**
     * List some available ips in the vnet.
     *
     * Syntax: 
     *
     * az network vnet list-available-ips [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_network_vnet_list_available_ips(): void {
    }

    /**
     * List which services support VNET service tunneling in a given region.
     *
     * Syntax: 
     *
     * az network vnet list-endpoint-services --location
     *                                        [--subscription]
     */
    az_network_vnet_list_endpoint_services(): void {
    }

    /**
     * Get the details of a virtual network.
     *
     * Syntax: 
     *
     * az network vnet show [--expand]
     *                      [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_network_vnet_show(): void {
    }

    /**
     * Update a virtual network.
     *
     * Syntax: 
     *
     * az network vnet update [--add]
     *                        [--address-prefixes]
     *                        [--ddos-protection {false, true}]
     *                        [--ddos-protection-plan]
     *                        [--defer]
     *                        [--dns-servers]
     *                        [--force-string]
     *                        [--ids]
     *                        [--name]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--set]
     *                        [--subscription]
     *                        [--vm-protection {false, true}]
     */
    az_network_vnet_update(): void {
    }
}

/** Manage VPN connection IPSec policies. */
class az_network_vpn_connection_ipsec_policy {
    /**
     * Add a VPN connection IPSec policy.
     *
     * Syntax: 
     *
     * az network vpn-connection ipsec-policy add --connection-name
     *                                            --dh-group {DHGroup1, DHGroup14, DHGroup2, DHGroup2048, DHGroup24, ECP256, ECP384, None}
     *                                            --ike-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES256}
     *                                            --ike-integrity {GCMAES128, GCMAES256, MD5, SHA1, SHA256, SHA384}
     *                                            --ipsec-encryption {AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256, None}
     *                                            --ipsec-integrity {GCMAES128, GCMAES192, GCMAES256, MD5, SHA1, SHA256}
     *                                            --pfs-group {ECP256, ECP384, None, PFS1, PFS14, PFS2, PFS2048, PFS24, PFSMM}
     *                                            --resource-group
     *                                            --sa-lifetime
     *                                            --sa-max-size
     *                                            [--no-wait]
     *                                            [--subscription]
     */
    az_network_vpn_connection_ipsec_policy_add(): void {
    }

    /**
     * Delete all IPsec policies on a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection ipsec-policy clear --connection-name
     *                                              --resource-group
     *                                              [--no-wait]
     *                                              [--subscription]
     */
    az_network_vpn_connection_ipsec_policy_clear(): void {
    }

    /**
     * List IPSec policies associated with a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection ipsec-policy list --connection-name
     *                                             --resource-group
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_network_vpn_connection_ipsec_policy_list(): void {
    }
}

/** Manage VPN shared keys. */
class az_network_vpn_connection_shared_key {
    /**
     * Reset a VPN connection shared key.
     *
     * Syntax: 
     *
     * az network vpn-connection shared-key reset --key-length
     *                                            [--connection-name]
     *                                            [--ids]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_network_vpn_connection_shared_key_reset(): void {
    }

    /**
     * Retrieve a VPN connection shared key.
     *
     * Syntax: 
     *
     * az network vpn-connection shared-key show [--connection-name]
     *                                           [--ids]
     *                                           [--query-examples]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_network_vpn_connection_shared_key_show(): void {
    }

    /**
     * Update a VPN connection shared key.
     *
     * Syntax: 
     *
     * az network vpn-connection shared-key update --value
     *                                             [--add]
     *                                             [--connection-name]
     *                                             [--force-string]
     *                                             [--id]
     *                                             [--ids]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     */
    az_network_vpn_connection_shared_key_update(): void {
    }
}

/** Manage VPN connections. */
class az_network_vpn_connection {
    /**
     * Create a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection create --name
     *                                  --resource-group
     *                                  --vnet-gateway1
     *                                  [--authorization-key]
     *                                  [--enable-bgp]
     *                                  [--express-route-circuit2]
     *                                  [--express-route-gateway-bypass {false, true}]
     *                                  [--local-gateway2]
     *                                  [--location]
     *                                  [--routing-weight]
     *                                  [--shared-key]
     *                                  [--subscription]
     *                                  [--tags]
     *                                  [--use-policy-based-traffic-selectors {false, true}]
     *                                  [--validate]
     *                                  [--vnet-gateway2]
     */
    az_network_vpn_connection_create(): void {
    }

    /**
     * Delete a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection delete [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_vpn_connection_delete(): void {
    }

    /**
     * List all VPN connections in a resource group.
     *
     * Syntax: 
     *
     * az network vpn-connection list --resource-group
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_network_vpn_connection_list(): void {
    }

    /**
     * Get the details of a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection show [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_network_vpn_connection_show(): void {
    }

    /**
     * Update a VPN connection.
     *
     * Syntax: 
     *
     * az network vpn-connection update [--add]
     *                                  [--enable-bgp {false, true}]
     *                                  [--express-route-gateway-bypass {false, true}]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--routing-weight]
     *                                  [--set]
     *                                  [--shared-key]
     *                                  [--subscription]
     *                                  [--tags]
     *                                  [--use-policy-based-traffic-selectors {false, true}]
     */
    az_network_vpn_connection_update(): void {
    }
}

/** Manage the virtual router peering. */
class az_network_vrouter_peering {
    /**
     * Create a virtual router peering.
     *
     * Syntax: 
     *
     * az network vrouter peering create --name
     *                                   --peer-asn
     *                                   --peer-ip
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--subscription]
     */
    az_network_vrouter_peering_create(): void {
    }

    /**
     * Delete a virtual router peering.
     *
     * Syntax: 
     *
     * az network vrouter peering delete --name
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--subscription]
     */
    az_network_vrouter_peering_delete(): void {
    }

    /**
     * List all virtual router peerings under a resource group.
     *
     * Syntax: 
     *
     * az network vrouter peering list --resource-group
     *                                 --vrouter-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_network_vrouter_peering_list(): void {
    }

    /**
     * Show a virtual router peering.
     *
     * Syntax: 
     *
     * az network vrouter peering show --name
     *                                 --resource-group
     *                                 --vrouter-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_network_vrouter_peering_show(): void {
    }

    /**
     * Update a virtual router peering.
     *
     * Syntax: 
     *
     * az network vrouter peering update --name
     *                                   --resource-group
     *                                   --vrouter-name
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--peer-asn]
     *                                   [--peer-ip]
     *                                   [--remove]
     *                                   [--set]
     *                                   [--subscription]
     */
    az_network_vrouter_peering_update(): void {
    }
}

/** Manage the virtual router. This feature supports both VirtualHub and VirtualRouter. Considering VirtualRouter is depcated, we recommand to create VirtualRouter instead. */
class az_network_vrouter {
    /**
     * Create a virtual router.
     *
     * Syntax: 
     *
     * az network vrouter create --name
     *                           --resource-group
     *                           [--hosted-gateway]
     *                           [--hosted-subnet]
     *                           [--location]
     *                           [--subscription]
     *                           [--tags]
     */
    az_network_vrouter_create(): void {
    }

    /**
     * Delete a virtual router under a resource group.
     *
     * Syntax: 
     *
     * az network vrouter delete --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_network_vrouter_delete(): void {
    }

    /**
     * List all virtual routers under a subscription or a resource group.
     *
     * Syntax: 
     *
     * az network vrouter list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_network_vrouter_list(): void {
    }

    /**
     * Show a virtual router.
     *
     * Syntax: 
     *
     * az network vrouter show --name
     *                         --resource-group
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_network_vrouter_show(): void {
    }

    /**
     * Update a virtual router.
     *
     * Syntax: 
     *
     * az network vrouter update --name
     *                           --resource-group
     *                           [--add]
     *                           [--force-string]
     *                           [--remove]
     *                           [--set]
     *                           [--subscription]
     *                           [--tags]
     */
    az_network_vrouter_update(): void {
    }
}

/** Manage endpoint of a connection monitor. */
class az_network_watcher_connection_monitor_endpoint {
    /**
     * Add an endpoint to a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor endpoint add --connection-monitor
     *                                                    --location
     *                                                    --name
     *                                                    [--address]
     *                                                    [--address-exclude]
     *                                                    [--address-include]
     *                                                    [--coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                                    [--dest-test-groups]
     *                                                    [--filter-item]
     *                                                    [--filter-type {Include}]
     *                                                    [--resource-id]
     *                                                    [--source-test-groups]
     *                                                    [--subscription]
     *                                                    [--type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     */
    az_network_watcher_connection_monitor_endpoint_add(): void {
    }

    /**
     * List all endpoints form a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor endpoint list --connection-monitor
     *                                                     --location
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_network_watcher_connection_monitor_endpoint_list(): void {
    }

    /**
     * Remove an endpoint from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor endpoint remove --connection-monitor
     *                                                       --location
     *                                                       --name
     *                                                       [--subscription]
     *                                                       [--test-groups]
     */
    az_network_watcher_connection_monitor_endpoint_remove(): void {
    }

    /**
     * Show an endpoint from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor endpoint show --connection-monitor
     *                                                     --location
     *                                                     --name
     *                                                     [--query-examples]
     *                                                     [--subscription]
     */
    az_network_watcher_connection_monitor_endpoint_show(): void {
    }
}

/** Manage output of connection monitor. */
class az_network_watcher_connection_monitor_output {
    /**
     * Add an output to a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor output add --connection-monitor
     *                                                  --location
     *                                                  --type {Workspace}
     *                                                  [--subscription]
     *                                                  [--workspace-id]
     */
    az_network_watcher_connection_monitor_output_add(): void {
    }

    /**
     * List all output from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor output list --connection-monitor
     *                                                   --location
     *                                                   [--query-examples]
     *                                                   [--subscription]
     */
    az_network_watcher_connection_monitor_output_list(): void {
    }

    /**
     * Remove all outputs from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor output remove --connection-monitor
     *                                                     --location
     *                                                     [--subscription]
     */
    az_network_watcher_connection_monitor_output_remove(): void {
    }
}

/** Manage test configuration of a connection monitor. */
class az_network_watcher_connection_monitor_test_configuration {
    /**
     * Add a test configuration to a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-configuration add --connection-monitor
     *                                                              --location
     *                                                              --name
     *                                                              --protocol {Http, Icmp, Tcp}
     *                                                              --test-groups
     *                                                              [--frequency]
     *                                                              [--http-method {Get, Post}]
     *                                                              [--http-path]
     *                                                              [--http-port]
     *                                                              [--http-prefer-https {false, true}]
     *                                                              [--http-request-header]
     *                                                              [--http-valid-status-codes]
     *                                                              [--icmp-disable-trace-route {false, true}]
     *                                                              [--preferred-ip-version {IPv4, IPv6}]
     *                                                              [--subscription]
     *                                                              [--tcp-disable-trace-route {false, true}]
     *                                                              [--tcp-port]
     *                                                              [--tcp-port-behavior {ListenIfAvailable, None}]
     *                                                              [--threshold-failed-percent]
     *                                                              [--threshold-round-trip-time]
     */
    az_network_watcher_connection_monitor_test_configuration_add(): void {
    }

    /**
     * List all test configurations of a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-configuration list --connection-monitor
     *                                                               --location
     *                                                               [--query-examples]
     *                                                               [--subscription]
     */
    az_network_watcher_connection_monitor_test_configuration_list(): void {
    }

    /**
     * Remove a test configuration from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-configuration remove --connection-monitor
     *                                                                 --location
     *                                                                 --name
     *                                                                 [--subscription]
     *                                                                 [--test-groups]
     */
    az_network_watcher_connection_monitor_test_configuration_remove(): void {
    }

    /**
     * Show a test configuration from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-configuration show --connection-monitor
     *                                                               --location
     *                                                               --name
     *                                                               [--query-examples]
     *                                                               [--subscription]
     */
    az_network_watcher_connection_monitor_test_configuration_show(): void {
    }
}

/** Manage a test group of a connection monitor. */
class az_network_watcher_connection_monitor_test_group {
    /**
     * Add a test group along with new-added/existing endpoint and test configuration to a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-group add --connection-monitor
     *                                                      --endpoint-dest-name
     *                                                      --endpoint-source-name
     *                                                      --location
     *                                                      --name
     *                                                      --test-config-name
     *                                                      [--disable {false, true}]
     *                                                      [--endpoint-dest-address]
     *                                                      [--endpoint-dest-resource-id]
     *                                                      [--endpoint-source-address]
     *                                                      [--endpoint-source-resource-id]
     *                                                      [--frequency]
     *                                                      [--http-method {Get, Post}]
     *                                                      [--http-path]
     *                                                      [--http-port]
     *                                                      [--http-valid-status-codes]
     *                                                      [--https-prefer {false, true}]
     *                                                      [--icmp-disable-trace-route {false, true}]
     *                                                      [--preferred-ip-version {IPv4, IPv6}]
     *                                                      [--protocol {Http, Icmp, Tcp}]
     *                                                      [--subscription]
     *                                                      [--tcp-disable-trace-route {false, true}]
     *                                                      [--tcp-port]
     *                                                      [--threshold-failed-percent]
     *                                                      [--threshold-round-trip-time]
     */
    az_network_watcher_connection_monitor_test_group_add(): void {
    }

    /**
     * List all test groups of a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-group list --connection-monitor
     *                                                       --location
     *                                                       [--query-examples]
     *                                                       [--subscription]
     */
    az_network_watcher_connection_monitor_test_group_list(): void {
    }

    /**
     * Remove test group from a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-group remove --connection-monitor
     *                                                         --location
     *                                                         --name
     *                                                         [--subscription]
     */
    az_network_watcher_connection_monitor_test_group_remove(): void {
    }

    /**
     * Show a test group of a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor test-group show --connection-monitor
     *                                                       --location
     *                                                       --name
     *                                                       [--query-examples]
     *                                                       [--subscription]
     */
    az_network_watcher_connection_monitor_test_group_show(): void {
    }
}

/** Manage connection monitoring between an Azure Virtual Machine and any IP resource. */
class az_network_watcher_connection_monitor {
    /**
     * Create a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor create --name
     *                                              [--dest-address]
     *                                              [--dest-port]
     *                                              [--dest-resource]
     *                                              [--do-not-start]
     *                                              [--endpoint-dest-address]
     *                                              [--endpoint-dest-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                              [--endpoint-dest-name]
     *                                              [--endpoint-dest-resource-id]
     *                                              [--endpoint-dest-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     *                                              [--endpoint-source-address]
     *                                              [--endpoint-source-coverage-level {AboveAverage, Average, BelowAverage, Default, Full, Low}]
     *                                              [--endpoint-source-name]
     *                                              [--endpoint-source-resource-id]
     *                                              [--endpoint-source-type {AzureSubnet, AzureVM, AzureVNet, ExternalAddress, MMAWorkspaceMachine, MMAWorkspaceNetwork}]
     *                                              [--frequency]
     *                                              [--http-method {Get, Post}]
     *                                              [--http-path]
     *                                              [--http-port]
     *                                              [--http-valid-status-codes]
     *                                              [--https-prefer {false, true}]
     *                                              [--icmp-disable-trace-route {false, true}]
     *                                              [--location]
     *                                              [--monitoring-interval]
     *                                              [--notes]
     *                                              [--output-type {Workspace}]
     *                                              [--preferred-ip-version {IPv4, IPv6}]
     *                                              [--protocol {Http, Icmp, Tcp}]
     *                                              [--resource-group]
     *                                              [--source-port]
     *                                              [--source-resource]
     *                                              [--subscription]
     *                                              [--tags]
     *                                              [--tcp-disable-trace-route {false, true}]
     *                                              [--tcp-port]
     *                                              [--tcp-port-behavior {ListenIfAvailable, None}]
     *                                              [--test-config-name]
     *                                              [--test-group-disable {false, true}]
     *                                              [--test-group-name]
     *                                              [--threshold-failed-percent]
     *                                              [--threshold-round-trip-time]
     *                                              [--workspace-ids]
     */
    az_network_watcher_connection_monitor_create(): void {
    }

    /**
     * Delete a connection monitor for the given region.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor delete --location
     *                                              --name
     *                                              [--subscription]
     */
    az_network_watcher_connection_monitor_delete(): void {
    }

    /**
     * List connection monitors for the given region.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor list --location
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_watcher_connection_monitor_list(): void {
    }

    /**
     * Query a snapshot of the most recent connection state of a connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor query --location
     *                                             --name
     *                                             [--subscription]
     */
    az_network_watcher_connection_monitor_query(): void {
    }

    /**
     * Shows a connection monitor by name.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor show --location
     *                                            --name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_network_watcher_connection_monitor_show(): void {
    }

    /**
     * Start the specified connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor start --location
     *                                             --name
     *                                             [--subscription]
     */
    az_network_watcher_connection_monitor_start(): void {
    }

    /**
     * Stop the specified connection monitor.
     *
     * Syntax: 
     *
     * az network watcher connection-monitor stop --location
     *                                            --name
     *                                            [--subscription]
     */
    az_network_watcher_connection_monitor_stop(): void {
    }
}

/** Manage network security group flow logging. */
class az_network_watcher_flow_log {
    /**
     * Configure flow logging on a network security group.
     *
     * Syntax: 
     *
     * az network watcher flow-log configure --nsg
     *                                       [--enabled {false, true}]
     *                                       [--format {JSON}]
     *                                       [--interval]
     *                                       [--log-version]
     *                                       [--resource-group]
     *                                       [--retention]
     *                                       [--storage-account]
     *                                       [--subscription]
     *                                       [--traffic-analytics {false, true}]
     *                                       [--workspace]
     */
    az_network_watcher_flow_log_configure(): void {
    }

    /**
     * Create a flow log on a network security group.
     *
     * Syntax: 
     *
     * az network watcher flow-log create --location
     *                                    --name
     *                                    --nsg
     *                                    [--enabled {false, true}]
     *                                    [--format {JSON}]
     *                                    [--interval]
     *                                    [--log-version]
     *                                    [--resource-group]
     *                                    [--retention]
     *                                    [--storage-account]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--traffic-analytics {false, true}]
     *                                    [--workspace]
     */
    az_network_watcher_flow_log_create(): void {
    }

    /**
     * Delete the specified flow log resource.
     *
     * Syntax: 
     *
     * az network watcher flow-log delete --location
     *                                    --name
     *                                    [--subscription]
     */
    az_network_watcher_flow_log_delete(): void {
    }

    /**
     * List all flow log resources for the specified Network Watcher.
     *
     * Syntax: 
     *
     * az network watcher flow-log list --location
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_network_watcher_flow_log_list(): void {
    }

    /**
     * Get the flow log configuration of a network security group.
     *
     * Syntax: 
     *
     * az network watcher flow-log show [--location]
     *                                  [--name]
     *                                  [--nsg]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_network_watcher_flow_log_show(): void {
    }

    /**
     * Update the flow log configuration of a network security group.
     *
     * Syntax: 
     *
     * az network watcher flow-log update --location
     *                                    --name
     *                                    [--add]
     *                                    [--enabled {false, true}]
     *                                    [--force-string]
     *                                    [--format {JSON}]
     *                                    [--interval]
     *                                    [--log-version]
     *                                    [--nsg]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--retention]
     *                                    [--set]
     *                                    [--storage-account]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--traffic-analytics {false, true}]
     *                                    [--workspace]
     */
    az_network_watcher_flow_log_update(): void {
    }
}

/** Manage packet capture sessions on VMs. */
class az_network_watcher_packet_capture {
    /**
     * Create and start a packet capture session.
     *
     * Syntax: 
     *
     * az network watcher packet-capture create --name
     *                                          --resource-group
     *                                          --vm
     *                                          [--capture-limit]
     *                                          [--capture-size]
     *                                          [--file-path]
     *                                          [--filters]
     *                                          [--storage-account]
     *                                          [--storage-path]
     *                                          [--subscription]
     *                                          [--time-limit]
     */
    az_network_watcher_packet_capture_create(): void {
    }

    /**
     * Delete a packet capture session.
     *
     * Syntax: 
     *
     * az network watcher packet-capture delete --location
     *                                          --name
     *                                          [--subscription]
     */
    az_network_watcher_packet_capture_delete(): void {
    }

    /**
     * List all packet capture sessions within a resource group.
     *
     * Syntax: 
     *
     * az network watcher packet-capture list --location
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_network_watcher_packet_capture_list(): void {
    }

    /**
     * Show details of a packet capture session.
     *
     * Syntax: 
     *
     * az network watcher packet-capture show --location
     *                                        --name
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_network_watcher_packet_capture_show(): void {
    }

    /**
     * Show the status of a packet capture session.
     *
     * Syntax: 
     *
     * az network watcher packet-capture show-status --location
     *                                               --name
     *                                               [--subscription]
     */
    az_network_watcher_packet_capture_show_status(): void {
    }

    /**
     * Stop a running packet capture session.
     *
     * Syntax: 
     *
     * az network watcher packet-capture stop --location
     *                                        --name
     *                                        [--subscription]
     */
    az_network_watcher_packet_capture_stop(): void {
    }
}

/** Manage Network Watcher troubleshooting sessions. */
class az_network_watcher_troubleshooting {
    /**
     * Get the results of the last troubleshooting operation.
     *
     * Syntax: 
     *
     * az network watcher troubleshooting show --resource
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--resource-type {vnetGateway, vpnConnection}]
     *                                         [--subscription]
     */
    az_network_watcher_troubleshooting_show(): void {
    }

    /**
     * Troubleshoot issues with VPN connections or gateway connectivity.
     *
     * Syntax: 
     *
     * az network watcher troubleshooting start --resource
     *                                          --storage-account
     *                                          --storage-path
     *                                          [--no-wait]
     *                                          [--resource-group]
     *                                          [--resource-type {vnetGateway, vpnConnection}]
     *                                          [--subscription]
     */
    az_network_watcher_troubleshooting_start(): void {
    }
}

/** Manage the Azure Network Watcher. */
class az_network_watcher {
    /**
     * Configure the Network Watcher service for different regions.
     *
     * Syntax: 
     *
     * az network watcher configure --locations
     *                              [--enabled {false, true}]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--tags]
     */
    az_network_watcher_configure(): void {
    }

    /**
     * List Network Watchers.
     *
     * Syntax: 
     *
     * az network watcher list [--query-examples]
     *                         [--subscription]
     */
    az_network_watcher_list(): void {
    }

    /**
     * Run a configuration diagnostic on a target resource.
     *
     * Syntax: 
     *
     * az network watcher run-configuration-diagnostic --resource
     *                                                 [--destination]
     *                                                 [--direction {Inbound, Outbound}]
     *                                                 [--parent]
     *                                                 [--port]
     *                                                 [--protocol {Http, Https, Icmp, Tcp}]
     *                                                 [--queries]
     *                                                 [--resource-group]
     *                                                 [--resource-type {applicationGateways, networkInterfaces, virtualMachines}]
     *                                                 [--source]
     *                                                 [--subscription]
     */
    az_network_watcher_run_configuration_diagnostic(): void {
    }

    /**
     * Get information on the 'next hop' of a VM.
     *
     * Syntax: 
     *
     * az network watcher show-next-hop --dest-ip
     *                                  --resource-group
     *                                  --source-ip
     *                                  --vm
     *                                  [--nic]
     *                                  [--subscription]
     */
    az_network_watcher_show_next_hop(): void {
    }

    /**
     * Get detailed security information on a VM for the currently configured network security group.
     *
     * Syntax: 
     *
     * az network watcher show-security-group-view --resource-group
     *                                             --vm
     *                                             [--subscription]
     */
    az_network_watcher_show_security_group_view(): void {
    }

    /**
     * Get the network topology of a resource group, virtual network or subnet.
     *
     * Syntax: 
     *
     * az network watcher show-topology [--location]
     *                                  [--resource-group]
     *                                  [--subnet]
     *                                  [--subscription]
     *                                  [--vnet]
     */
    az_network_watcher_show_topology(): void {
    }

    /**
     * Test if a connection can be established between a Virtual Machine and a given endpoint.
     *
     * Syntax: 
     *
     * az network watcher test-connectivity --source-resource
     *                                      [--dest-address]
     *                                      [--dest-port]
     *                                      [--dest-resource]
     *                                      [--headers]
     *                                      [--method {Get}]
     *                                      [--protocol {Http, Https, Icmp, Tcp}]
     *                                      [--resource-group]
     *                                      [--source-port]
     *                                      [--subscription]
     *                                      [--valid-status-codes]
     */
    az_network_watcher_test_connectivity(): void {
    }

    /**
     * Test IP flow to/from a VM given the currently configured network security group rules.
     *
     * Syntax: 
     *
     * az network watcher test-ip-flow --direction {Inbound, Outbound}
     *                                 --local
     *                                 --protocol {Http, Https, Icmp, Tcp}
     *                                 --remote
     *                                 --vm
     *                                 [--nic]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_watcher_test_ip_flow(): void {
    }
}

/** Manage Azure Network resources. */
class az_network {
    /**
     * List available service aliases in the region which can be used for Service Endpoint Policies.
     *
     * Syntax: 
     *
     * az network list-service-aliases --location
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_network_list_service_aliases(): void {
    }

    /**
     * List all service tags which are below to different resources.
     *
     * Syntax: 
     *
     * az network list-service-tags --location
     *                              [--subscription]
     */
    az_network_list_service_tags(): void {
    }

    /**
     * List the number of network resources in a region that are used against a subscription quota.
     *
     * Syntax: 
     *
     * az network list-usages --location
     *                        [--subscription]
     */
    az_network_list_usages(): void {
    }
}

/** Commands to manage Log Analytics monitoring. Requires "--workspace-id". */
class az_openshift_monitor {
    /**
     * Disable Log Analytics monitoring.
     *
     * Syntax: 
     *
     * az openshift monitor disable --name
     *                              --resource-group
     *                              [--no-wait]
     *                              [--subscription]
     */
    az_openshift_monitor_disable(): void {
    }

    /**
     * Enable Log Analytics monitoring. Requires "--workspace-id".
     *
     * Syntax: 
     *
     * az openshift monitor enable --name
     *                             --resource-group
     *                             --workspace-id
     *                             [--no-wait]
     *                             [--subscription]
     */
    az_openshift_monitor_enable(): void {
    }
}

/** Manage Azure Red Hat OpenShift Services. */
class az_openshift {
    /**
     * Create a new managed OpenShift cluster.
     *
     * Syntax: 
     *
     * az openshift create --name
     *                     --resource-group
     *                     [--aad-client-app-id]
     *                     [--aad-client-app-secret]
     *                     [--aad-tenant-id]
     *                     [--compute-count]
     *                     [--compute-vm-size]
     *                     [--customer-admin-group-id]
     *                     [--location]
     *                     [--no-wait]
     *                     [--subnet-prefix]
     *                     [--subscription]
     *                     [--tags]
     *                     [--vnet-peer]
     *                     [--vnet-prefix]
     *                     [--workspace-id]
     */
    az_openshift_create(): void {
    }

    /**
     * Delete a managed OpenShift cluster.
     *
     * Syntax: 
     *
     * az openshift delete --name
     *                     --resource-group
     *                     [--no-wait]
     *                     [--subscription]
     *                     [--yes]
     */
    az_openshift_delete(): void {
    }

    /**
     * List managed OpenShift clusters.
     *
     * Syntax: 
     *
     * az openshift list [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_openshift_list(): void {
    }

    /**
     * Scale the compute pool in a managed OpenShift cluster.
     *
     * Syntax: 
     *
     * az openshift scale --compute-count
     *                    --name
     *                    --resource-group
     *                    [--no-wait]
     *                    [--subscription]
     */
    az_openshift_scale(): void {
    }

    /**
     * Show the details for a managed OpenShift cluster.
     *
     * Syntax: 
     *
     * az openshift show --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     */
    az_openshift_show(): void {
    }

    /**
     * Wait for a managed OpenShift cluster to reach a desired state.
     *
     * Syntax: 
     *
     * az openshift wait --name
     *                   --resource-group
     *                   [--created]
     *                   [--custom]
     *                   [--deleted]
     *                   [--exists]
     *                   [--interval]
     *                   [--subscription]
     *                   [--timeout]
     *                   [--updated]
     */
    az_openshift_wait(): void {
    }
}

/** Manage agents. */
class az_pipelines_agent {
    /**
     * Get a list of agents in a pool.
     *
     * Syntax: 
     *
     * az pipelines agent list --pool-id
     *                         [--agent-name]
     *                         [--demands]
     *                         [--detect {false, true}]
     *                         [--include-assigned-request {false, true}]
     *                         [--include-capabilities {false, true}]
     *                         [--include-last-completed-request {false, true}]
     *                         [--org]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_pipelines_agent_list(): void {
    }

    /**
     * Show agent details.
     *
     * Syntax: 
     *
     * az pipelines agent show --agent-id
     *                         --pool-id
     *                         [--detect {false, true}]
     *                         [--include-assigned-request {false, true}]
     *                         [--include-capabilities {false, true}]
     *                         [--include-last-completed-request {false, true}]
     *                         [--org]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_pipelines_agent_show(): void {
    }
}

/** Manage build definitions. */
class az_pipelines_build_definition {
    /**
     * List build definitions.
     *
     * Syntax: 
     *
     * az pipelines build definition list [--detect {false, true}]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     *                                    [--query-examples]
     *                                    [--repository]
     *                                    [--repository-type {bitbucket, git, github, githubenterprise, svn, tfsgit, tfsversioncontrol}]
     *                                    [--subscription]
     *                                    [--top]
     */
    az_pipelines_build_definition_list(): void {
    }

    /**
     * Get the details of a build definition.
     *
     * Syntax: 
     *
     * az pipelines build definition show [--detect {false, true}]
     *                                    [--id]
     *                                    [--name]
     *                                    [--open]
     *                                    [--org]
     *                                    [--project]
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_pipelines_build_definition_show(): void {
    }
}

/** Manage build tags. */
class az_pipelines_build_tag {
    /**
     * Add tag(s) for a build.
     *
     * Syntax: 
     *
     * az pipelines build tag add --build-id
     *                            --tags
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_pipelines_build_tag_add(): void {
    }

    /**
     * Delete a build tag.
     *
     * Syntax: 
     *
     * az pipelines build tag delete --build-id
     *                               --tag
     *                               [--detect {false, true}]
     *                               [--org]
     *                               [--project]
     *                               [--subscription]
     */
    az_pipelines_build_tag_delete(): void {
    }

    /**
     * Get tags for a build.
     *
     * Syntax: 
     *
     * az pipelines build tag list --build-id
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--project]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_pipelines_build_tag_list(): void {
    }
}

/** Manage builds. */
class az_pipelines_build {
    /**
     * List build results.
     *
     * Syntax: 
     *
     * az pipelines build list [--branch]
     *                         [--definition-ids]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--query-examples]
     *                         [--reason {all, batchedCI, buildCompletion, checkInShelveset, individualCI, manual, pullRequest, schedule, triggered, userCreated, validateShelveset}]
     *                         [--requested-for]
     *                         [--result {canceled, failed, none, partiallySucceeded, succeeded}]
     *                         [--status {all, cancelling, completed, inProgress, none, notStarted, postponed}]
     *                         [--subscription]
     *                         [--tags]
     *                         [--top]
     */
    az_pipelines_build_list(): void {
    }

    /**
     * Request (queue) a build.
     *
     * Syntax: 
     *
     * az pipelines build queue [--branch]
     *                          [--commit-id]
     *                          [--definition-id]
     *                          [--definition-name]
     *                          [--detect {false, true}]
     *                          [--open]
     *                          [--org]
     *                          [--project]
     *                          [--queue-id]
     *                          [--subscription]
     *                          [--variables]
     */
    az_pipelines_build_queue(): void {
    }

    /**
     * Get the details of a build.
     *
     * Syntax: 
     *
     * az pipelines build show --id
     *                         [--detect {false, true}]
     *                         [--open]
     *                         [--org]
     *                         [--project]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_pipelines_build_show(): void {
    }
}

/** Manage folders for organizing pipelines. */
class az_pipelines_folder {
    /**
     * Create a folder.
     *
     * Syntax: 
     *
     * az pipelines folder create --path
     *                            [--description]
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_pipelines_folder_create(): void {
    }

    /**
     * Delete a folder.
     *
     * Syntax: 
     *
     * az pipelines folder delete --path
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     *                            [--yes]
     */
    az_pipelines_folder_delete(): void {
    }

    /**
     * List all folders.
     *
     * Syntax: 
     *
     * az pipelines folder list [--detect {false, true}]
     *                          [--org]
     *                          [--path]
     *                          [--project]
     *                          [--query-examples]
     *                          [--query-order {Asc, Desc, None}]
     *                          [--subscription]
     */
    az_pipelines_folder_list(): void {
    }

    /**
     * Update a folder name or description.
     *
     * Syntax: 
     *
     * az pipelines folder update --path
     *                            [--detect {false, true}]
     *                            [--new-description]
     *                            [--new-path]
     *                            [--org]
     *                            [--project]
     *                            [--subscription]
     */
    az_pipelines_folder_update(): void {
    }
}

/** Manage agent pools. */
class az_pipelines_pool {
    /**
     * List agent pools.
     *
     * Syntax: 
     *
     * az pipelines pool list [--action {manage, none, use}]
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--pool-name]
     *                        [--pool-type {automation, deployment}]
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_pipelines_pool_list(): void {
    }

    /**
     * Show agent pool details.
     *
     * Syntax: 
     *
     * az pipelines pool show --id
     *                        [--action {manage, none, use}]
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_pipelines_pool_show(): void {
    }
}

/** Manage agent queues. */
class az_pipelines_queue {
    /**
     * List agent queues.
     *
     * Syntax: 
     *
     * az pipelines queue list [--action {manage, none, use}]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--query-examples]
     *                         [--queue-name]
     *                         [--subscription]
     */
    az_pipelines_queue_list(): void {
    }

    /**
     * Show details of agent queue.
     *
     * Syntax: 
     *
     * az pipelines queue show --id
     *                         [--action {manage, none, use}]
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--project]
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_pipelines_queue_show(): void {
    }
}

/** Manage release definitions. */
class az_pipelines_release_definition {
    /**
     * List release definitions.
     *
     * Syntax: 
     *
     * az pipelines release definition list [--artifact-source-id]
     *                                      [--artifact-type {build, externaltfsbuild, git, github, jenkins, tfvc}]
     *                                      [--detect {false, true}]
     *                                      [--name]
     *                                      [--org]
     *                                      [--project]
     *                                      [--query-examples]
     *                                      [--subscription]
     *                                      [--top]
     */
    az_pipelines_release_definition_list(): void {
    }

    /**
     * Get the details of a release definition.
     *
     * Syntax: 
     *
     * az pipelines release definition show [--detect {false, true}]
     *                                      [--id]
     *                                      [--name]
     *                                      [--open]
     *                                      [--org]
     *                                      [--project]
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_pipelines_release_definition_show(): void {
    }
}

/** Manage releases. */
class az_pipelines_release {
    /**
     * Request (create) a release.
     *
     * Syntax: 
     *
     * az pipelines release create [--artifact-metadata-list]
     *                             [--definition-id]
     *                             [--definition-name]
     *                             [--description]
     *                             [--detect {false, true}]
     *                             [--open]
     *                             [--org]
     *                             [--project]
     *                             [--subscription]
     */
    az_pipelines_release_create(): void {
    }

    /**
     * List release results.
     *
     * Syntax: 
     *
     * az pipelines release list [--definition-id]
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--project]
     *                           [--query-examples]
     *                           [--source-branch]
     *                           [--status]
     *                           [--subscription]
     *                           [--top]
     */
    az_pipelines_release_list(): void {
    }

    /**
     * Get the details of a release.
     *
     * Syntax: 
     *
     * az pipelines release show --id
     *                           [--detect {false, true}]
     *                           [--open]
     *                           [--org]
     *                           [--project]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_pipelines_release_show(): void {
    }
}

/** Manage pipeline run artifacts. */
class az_pipelines_runs_artifact {
    /**
     * Download a pipeline artifact.
     *
     * Syntax: 
     *
     * az pipelines runs artifact download --artifact-name
     *                                     --path
     *                                     --run-id
     *                                     [--detect {false, true}]
     *                                     [--org]
     *                                     [--project]
     *                                     [--subscription]
     */
    az_pipelines_runs_artifact_download(): void {
    }

    /**
     * List artifacts associated with a run.
     *
     * Syntax: 
     *
     * az pipelines runs artifact list --run-id
     *                                 [--detect {false, true}]
     *                                 [--org]
     *                                 [--project]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_pipelines_runs_artifact_list(): void {
    }

    /**
     * Upload a pipeline artifact.
     *
     * Syntax: 
     *
     * az pipelines runs artifact upload --artifact-name
     *                                   --path
     *                                   --run-id
     *                                   [--detect {false, true}]
     *                                   [--org]
     *                                   [--project]
     *                                   [--subscription]
     */
    az_pipelines_runs_artifact_upload(): void {
    }
}

/** Manage pipeline run tags. */
class az_pipelines_runs_tag {
    /**
     * Add tag(s) for a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs tag add --run-id
     *                           --tags
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--project]
     *                           [--subscription]
     */
    az_pipelines_runs_tag_add(): void {
    }

    /**
     * Delete a pipeline run tag.
     *
     * Syntax: 
     *
     * az pipelines runs tag delete --run-id
     *                              --tag
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--project]
     *                              [--subscription]
     */
    az_pipelines_runs_tag_delete(): void {
    }

    /**
     * Get tags for a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs tag list --run-id
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--project]
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_pipelines_runs_tag_list(): void {
    }
}

/** Manage pipeline runs. */
class az_pipelines_runs {
    /**
     * List the pipeline runs in a project.
     *
     * Syntax: 
     *
     * az pipelines runs list [--branch]
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--pipeline-ids]
     *                        [--project]
     *                        [--query-examples]
     *                        [--query-order {FinishTimeAsc, FinishTimeDesc, QueueTimeAsc, QueueTimeDesc, StartTimeAsc, StartTimeDesc}]
     *                        [--reason {all, batchedCI, buildCompletion, checkInShelveset, individualCI, manual, pullRequest, schedule, triggered, userCreated, validateShelveset}]
     *                        [--requested-for]
     *                        [--result {canceled, failed, none, partiallySucceeded, succeeded}]
     *                        [--status {all, cancelling, completed, inProgress, none, notStarted, postponed}]
     *                        [--subscription]
     *                        [--tags]
     *                        [--top]
     */
    az_pipelines_runs_list(): void {
    }

    /**
     * Show details of a pipeline run.
     *
     * Syntax: 
     *
     * az pipelines runs show --id
     *                        [--detect {false, true}]
     *                        [--open]
     *                        [--org]
     *                        [--project]
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_pipelines_runs_show(): void {
    }
}

/** Manage variables in a variable group. */
class az_pipelines_variable_group_variable {
    /**
     * Add a variable to a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable create --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--org]
     *                                             [--project]
     *                                             [--secret {false, true}]
     *                                             [--subscription]
     *                                             [--value]
     */
    az_pipelines_variable_group_variable_create(): void {
    }

    /**
     * Delete a variable from variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable delete --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--org]
     *                                             [--project]
     *                                             [--subscription]
     *                                             [--yes]
     */
    az_pipelines_variable_group_variable_delete(): void {
    }

    /**
     * List the variables in a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable list --group-id
     *                                           [--detect {false, true}]
     *                                           [--org]
     *                                           [--project]
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_pipelines_variable_group_variable_list(): void {
    }

    /**
     * Update a variable in a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group variable update --group-id
     *                                             --name
     *                                             [--detect {false, true}]
     *                                             [--new-name]
     *                                             [--org]
     *                                             [--project]
     *                                             [--prompt-value {false, true}]
     *                                             [--secret {false, true}]
     *                                             [--subscription]
     *                                             [--value]
     */
    az_pipelines_variable_group_variable_update(): void {
    }
}

/** Manage variable groups. */
class az_pipelines_variable_group {
    /**
     * Create a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group create --name
     *                                    --variables
     *                                    [--authorize {false, true}]
     *                                    [--description]
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     *                                    [--subscription]
     */
    az_pipelines_variable_group_create(): void {
    }

    /**
     * Delete a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group delete --group-id
     *                                    [--detect {false, true}]
     *                                    [--org]
     *                                    [--project]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_pipelines_variable_group_delete(): void {
    }

    /**
     * List variable groups.
     *
     * Syntax: 
     *
     * az pipelines variable-group list [--action {manage, none, use}]
     *                                  [--continuation-token]
     *                                  [--detect {false, true}]
     *                                  [--group-name]
     *                                  [--org]
     *                                  [--project]
     *                                  [--query-examples]
     *                                  [--query-order {Asc, Desc}]
     *                                  [--subscription]
     *                                  [--top]
     */
    az_pipelines_variable_group_list(): void {
    }

    /**
     * Show variable group details.
     *
     * Syntax: 
     *
     * az pipelines variable-group show --group-id
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_pipelines_variable_group_show(): void {
    }

    /**
     * Update a variable group.
     *
     * Syntax: 
     *
     * az pipelines variable-group update --group-id
     *                                    [--authorize {false, true}]
     *                                    [--description]
     *                                    [--detect {false, true}]
     *                                    [--name]
     *                                    [--org]
     *                                    [--project]
     *                                    [--subscription]
     */
    az_pipelines_variable_group_update(): void {
    }
}

/** Manage pipeline variables. */
class az_pipelines_variable {
    /**
     * Add a variable to a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable create --name
     *                              [--allow-override {false, true}]
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--secret {false, true}]
     *                              [--subscription]
     *                              [--value]
     */
    az_pipelines_variable_create(): void {
    }

    /**
     * Delete a variable from pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable delete --name
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--subscription]
     *                              [--yes]
     */
    az_pipelines_variable_delete(): void {
    }

    /**
     * List the variables in a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable list [--detect {false, true}]
     *                            [--org]
     *                            [--pipeline-id]
     *                            [--pipeline-name]
     *                            [--project]
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_pipelines_variable_list(): void {
    }

    /**
     * Update a variable in a pipeline.
     *
     * Syntax: 
     *
     * az pipelines variable update --name
     *                              [--allow-override {false, true}]
     *                              [--detect {false, true}]
     *                              [--new-name]
     *                              [--org]
     *                              [--pipeline-id]
     *                              [--pipeline-name]
     *                              [--project]
     *                              [--prompt-value {false, true}]
     *                              [--secret {false, true}]
     *                              [--subscription]
     *                              [--value]
     */
    az_pipelines_variable_update(): void {
    }
}

/** Manage Azure Pipelines. */
class az_pipelines {
    /**
     * Create a new Azure Pipeline (YAML based).
     *
     * Syntax: 
     *
     * az pipelines create --name
     *                     [--branch]
     *                     [--description]
     *                     [--detect {false, true}]
     *                     [--folder-path]
     *                     [--org]
     *                     [--project]
     *                     [--queue-id]
     *                     [--repository]
     *                     [--repository-type {github, tfsgit}]
     *                     [--service-connection]
     *                     [--skip-first-run {false, true}]
     *                     [--subscription]
     *                     [--yaml-path]
     */
    az_pipelines_create(): void {
    }

    /**
     * Delete a pipeline.
     *
     * Syntax: 
     *
     * az pipelines delete --id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--subscription]
     *                     [--yes]
     */
    az_pipelines_delete(): void {
    }

    /**
     * List pipelines.
     *
     * Syntax: 
     *
     * az pipelines list [--detect {false, true}]
     *                   [--folder-path]
     *                   [--name]
     *                   [--org]
     *                   [--project]
     *                   [--query-examples]
     *                   [--query-order {ModifiedAsc, ModifiedDesc, NameAsc, NameDesc, None}]
     *                   [--repository]
     *                   [--repository-type {bitbucket, git, github, githubenterprise, svn, tfsgit, tfsversioncontrol}]
     *                   [--subscription]
     *                   [--top]
     */
    az_pipelines_list(): void {
    }

    /**
     * Queue (run) a pipeline.
     *
     * Syntax: 
     *
     * az pipelines run [--branch]
     *                  [--commit-id]
     *                  [--detect {false, true}]
     *                  [--folder-path]
     *                  [--id]
     *                  [--name]
     *                  [--open]
     *                  [--org]
     *                  [--project]
     *                  [--subscription]
     *                  [--variables]
     */
    az_pipelines_run(): void {
    }

    /**
     * Get the details of a pipeline.
     *
     * Syntax: 
     *
     * az pipelines show [--detect {false, true}]
     *                   [--folder-path]
     *                   [--id]
     *                   [--name]
     *                   [--open]
     *                   [--org]
     *                   [--project]
     *                   [--query-examples]
     *                   [--subscription]
     */
    az_pipelines_show(): void {
    }

    /**
     * Update a pipeline.
     *
     * Syntax: 
     *
     * az pipelines update [--branch]
     *                     [--description]
     *                     [--detect {false, true}]
     *                     [--id]
     *                     [--name]
     *                     [--new-folder-path]
     *                     [--new-name]
     *                     [--org]
     *                     [--project]
     *                     [--queue-id]
     *                     [--subscription]
     *                     [--yaml-path]
     */
    az_pipelines_update(): void {
    }
}

/** Manage a policy assignment's managed identity. */
class az_policy_assignment_identity {
    /**
     * Add a system assigned identity to a policy assignment.
     *
     * Syntax: 
     *
     * az policy assignment identity assign --name
     *                                      [--identity-scope]
     *                                      [--resource-group]
     *                                      [--role]
     *                                      [--scope]
     */
    az_policy_assignment_identity_assign(): void {
    }

    /**
     * Remove a managed identity from a policy assignment.
     *
     * Syntax: 
     *
     * az policy assignment identity remove --name
     *                                      [--resource-group]
     *                                      [--scope]
     */
    az_policy_assignment_identity_remove(): void {
    }

    /**
     * Show a policy assignment's managed identity.
     *
     * Syntax: 
     *
     * az policy assignment identity show --name
     *                                    [--query-examples]
     *                                    [--resource-group]
     *                                    [--scope]
     */
    az_policy_assignment_identity_show(): void {
    }
}

/** Manage resource policy assignments. */
class az_policy_assignment {
    /**
     * Create a resource policy assignment.
     *
     * Syntax: 
     *
     * az policy assignment create [--assign-identity]
     *                             [--display-name]
     *                             [--enforcement-mode {Default, DoNotEnforce}]
     *                             [--identity-scope]
     *                             [--location]
     *                             [--name]
     *                             [--not-scopes]
     *                             [--params]
     *                             [--policy]
     *                             [--policy-set-definition]
     *                             [--resource-group]
     *                             [--role]
     *                             [--scope]
     *                             [--sku {free, standard}]
     */
    az_policy_assignment_create(): void {
    }

    /**
     * Delete a resource policy assignment.
     *
     * Syntax: 
     *
     * az policy assignment delete --name
     *                             [--resource-group]
     *                             [--scope]
     */
    az_policy_assignment_delete(): void {
    }

    /**
     * List resource policy assignments.
     *
     * Syntax: 
     *
     * az policy assignment list [--disable-scope-strict-match]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--scope]
     */
    az_policy_assignment_list(): void {
    }

    /**
     * Show a resource policy assignment.
     *
     * Syntax: 
     *
     * az policy assignment show --name
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--scope]
     */
    az_policy_assignment_show(): void {
    }
}

/** Manage resource policy definitions. */
class az_policy_definition {
    /**
     * Create a policy definition.
     *
     * Syntax: 
     *
     * az policy definition create --name
     *                             [--description]
     *                             [--display-name]
     *                             [--management-group]
     *                             [--metadata]
     *                             [--mode]
     *                             [--params]
     *                             [--rules]
     *                             [--subscription]
     */
    az_policy_definition_create(): void {
    }

    /**
     * Delete a policy definition.
     *
     * Syntax: 
     *
     * az policy definition delete --name
     *                             [--management-group]
     *                             [--subscription]
     */
    az_policy_definition_delete(): void {
    }

    /**
     * List policy definitions.
     *
     * Syntax: 
     *
     * az policy definition list [--management-group]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_policy_definition_list(): void {
    }

    /**
     * Show a policy definition.
     *
     * Syntax: 
     *
     * az policy definition show --name
     *                           [--management-group]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_policy_definition_show(): void {
    }

    /**
     * Update a policy definition.
     *
     * Syntax: 
     *
     * az policy definition update --name
     *                             [--description]
     *                             [--display-name]
     *                             [--management-group]
     *                             [--metadata]
     *                             [--mode]
     *                             [--params]
     *                             [--rules]
     *                             [--subscription]
     */
    az_policy_definition_update(): void {
    }
}

/** Manage policy events. */
class az_policy_event {
    /**
     * List policy events.
     *
     * Syntax: 
     *
     * az policy event list [--apply]
     *                      [--filter]
     *                      [--from]
     *                      [--management-group]
     *                      [--namespace]
     *                      [--order-by]
     *                      [--parent]
     *                      [--policy-assignment]
     *                      [--policy-definition]
     *                      [--policy-set-definition]
     *                      [--query-examples]
     *                      [--resource]
     *                      [--resource-group]
     *                      [--resource-type]
     *                      [--select]
     *                      [--subscription]
     *                      [--to]
     *                      [--top]
     */
    az_policy_event_list(): void {
    }
}

/** Get policy metadata resources. */
class az_policy_metadata {
    /**
     * List policy metadata resources.
     *
     * Syntax: 
     *
     * az policy metadata list [--query-examples]
     *                         [--subscription]
     *                         [--top]
     */
    az_policy_metadata_list(): void {
    }

    /**
     * Get a single policy metadata resource.
     *
     * Syntax: 
     *
     * az policy metadata show --name
     *                         [--query-examples]
     *                         [--subscription]
     */
    az_policy_metadata_show(): void {
    }
}

/** Manage resource policy remediation deployments. */
class az_policy_remediation_deployment {
    /**
     * Lists deployments for a resource policy remediation.
     *
     * Syntax: 
     *
     * az policy remediation deployment list --name
     *                                       [--management-group]
     *                                       [--namespace]
     *                                       [--parent]
     *                                       [--query-examples]
     *                                       [--resource]
     *                                       [--resource-group]
     *                                       [--resource-type]
     *                                       [--subscription]
     */
    az_policy_remediation_deployment_list(): void {
    }
}

/** Manage resource policy remediations. */
class az_policy_remediation {
    /**
     * Cancel a resource policy remediation.
     *
     * Syntax: 
     *
     * az policy remediation cancel --name
     *                              [--management-group]
     *                              [--namespace]
     *                              [--parent]
     *                              [--resource]
     *                              [--resource-group]
     *                              [--resource-type]
     *                              [--subscription]
     */
    az_policy_remediation_cancel(): void {
    }

    /**
     * Create a resource policy remediation.
     *
     * Syntax: 
     *
     * az policy remediation create --name
     *                              --policy-assignment
     *                              [--definition-reference-id]
     *                              [--location-filters]
     *                              [--management-group]
     *                              [--namespace]
     *                              [--parent]
     *                              [--resource]
     *                              [--resource-discovery-mode {ExistingNonCompliant, ReEvaluateCompliance}]
     *                              [--resource-group]
     *                              [--resource-type]
     *                              [--subscription]
     */
    az_policy_remediation_create(): void {
    }

    /**
     * Delete a resource policy remediation.
     *
     * Syntax: 
     *
     * az policy remediation delete --name
     *                              [--management-group]
     *                              [--namespace]
     *                              [--parent]
     *                              [--resource]
     *                              [--resource-group]
     *                              [--resource-type]
     *                              [--subscription]
     */
    az_policy_remediation_delete(): void {
    }

    /**
     * List resource policy remediations.
     *
     * Syntax: 
     *
     * az policy remediation list [--management-group]
     *                            [--namespace]
     *                            [--parent]
     *                            [--query-examples]
     *                            [--resource]
     *                            [--resource-group]
     *                            [--resource-type]
     *                            [--subscription]
     */
    az_policy_remediation_list(): void {
    }

    /**
     * Show a resource policy remediation.
     *
     * Syntax: 
     *
     * az policy remediation show --name
     *                            [--management-group]
     *                            [--namespace]
     *                            [--parent]
     *                            [--query-examples]
     *                            [--resource]
     *                            [--resource-group]
     *                            [--resource-type]
     *                            [--subscription]
     */
    az_policy_remediation_show(): void {
    }
}

/** Manage resource policy set definitions. */
class az_policy_set_definition {
    /**
     * Create a policy set definition.
     *
     * Syntax: 
     *
     * az policy set-definition create --definitions
     *                                 --name
     *                                 [--definition-groups]
     *                                 [--description]
     *                                 [--display-name]
     *                                 [--management-group]
     *                                 [--metadata]
     *                                 [--params]
     *                                 [--subscription]
     */
    az_policy_set_definition_create(): void {
    }

    /**
     * Delete a policy set definition.
     *
     * Syntax: 
     *
     * az policy set-definition delete --name
     *                                 [--management-group]
     *                                 [--subscription]
     */
    az_policy_set_definition_delete(): void {
    }

    /**
     * List policy set definitions.
     *
     * Syntax: 
     *
     * az policy set-definition list [--management-group]
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_policy_set_definition_list(): void {
    }

    /**
     * Show a policy set definition.
     *
     * Syntax: 
     *
     * az policy set-definition show --name
     *                               [--management-group]
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_policy_set_definition_show(): void {
    }

    /**
     * Update a policy set definition.
     *
     * Syntax: 
     *
     * az policy set-definition update --name
     *                                 [--definition-groups]
     *                                 [--definitions]
     *                                 [--description]
     *                                 [--display-name]
     *                                 [--management-group]
     *                                 [--metadata]
     *                                 [--params]
     *                                 [--subscription]
     */
    az_policy_set_definition_update(): void {
    }
}

/** Manage policy compliance states. */
class az_policy_state {
    /**
     * List policy compliance states.
     *
     * Syntax: 
     *
     * az policy state list [--all]
     *                      [--apply]
     *                      [--expand]
     *                      [--filter]
     *                      [--from]
     *                      [--management-group]
     *                      [--namespace]
     *                      [--order-by]
     *                      [--parent]
     *                      [--policy-assignment]
     *                      [--policy-definition]
     *                      [--policy-set-definition]
     *                      [--query-examples]
     *                      [--resource]
     *                      [--resource-group]
     *                      [--resource-type]
     *                      [--select]
     *                      [--subscription]
     *                      [--to]
     *                      [--top]
     */
    az_policy_state_list(): void {
    }

    /**
     * Summarize policy compliance states.
     *
     * Syntax: 
     *
     * az policy state summarize [--filter]
     *                           [--from]
     *                           [--management-group]
     *                           [--namespace]
     *                           [--parent]
     *                           [--policy-assignment]
     *                           [--policy-definition]
     *                           [--policy-set-definition]
     *                           [--resource]
     *                           [--resource-group]
     *                           [--resource-type]
     *                           [--subscription]
     *                           [--to]
     *                           [--top]
     */
    az_policy_state_summarize(): void {
    }

    /**
     * Trigger a policy compliance evaluation for a scope.
     *
     * Syntax: 
     *
     * az policy state trigger-scan [--no-wait]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_policy_state_trigger_scan(): void {
    }
}

/** Manage resource policies. */
class az_policy {
}

/** Manage PostgreSQL databases on a server. */
class az_postgres_db {
    /**
     * Create a PostgreSQL database.
     *
     * Syntax: 
     *
     * az postgres db create --name
     *                       --resource-group
     *                       --server-name
     *                       [--charset]
     *                       [--collation]
     *                       [--subscription]
     */
    az_postgres_db_create(): void {
    }

    /**
     * Delete a database.
     *
     * Syntax: 
     *
     * az postgres db delete --name
     *                       --resource-group
     *                       --server-name
     *                       [--subscription]
     *                       [--yes]
     */
    az_postgres_db_delete(): void {
    }

    /**
     * List the databases for a server.
     *
     * Syntax: 
     *
     * az postgres db list --resource-group
     *                     --server-name
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_postgres_db_list(): void {
    }

    /**
     * Show the details of a database.
     *
     * Syntax: 
     *
     * az postgres db show --name
     *                     --resource-group
     *                     --server-name
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_postgres_db_show(): void {
    }
}

/** Manage firewall rules for a server. */
class az_postgres_flexible_server_firewall_rule {
    /**
     * Create a new firewall rule for a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server firewall-rule create --end-ip-address
     *                                                  --name
     *                                                  --resource-group
     *                                                  --server-name
     *                                                  --start-ip-address
     *                                                  [--subscription]
     */
    az_postgres_flexible_server_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az postgres flexible-server firewall-rule delete [--ids]
     *                                                  [--name]
     *                                                  [--prompt]
     *                                                  [--resource-group]
     *                                                  [--server-name]
     *                                                  [--subscription]
     */
    az_postgres_flexible_server_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules for a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server firewall-rule list --resource-group
     *                                                --server-name
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_postgres_flexible_server_firewall_rule_list(): void {
    }

    /**
     * Get the details of a firewall rule.
     *
     * Syntax: 
     *
     * az postgres flexible-server firewall-rule show [--ids]
     *                                                [--name]
     *                                                [--query-examples]
     *                                                [--resource-group]
     *                                                [--server-name]
     *                                                [--subscription]
     */
    az_postgres_flexible_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az postgres flexible-server firewall-rule update [--add]
     *                                                  [--end-ip-address]
     *                                                  [--force-string]
     *                                                  [--ids]
     *                                                  [--name]
     *                                                  [--remove]
     *                                                  [--resource-group]
     *                                                  [--server-name]
     *                                                  [--set]
     *                                                  [--start-ip-address]
     *                                                  [--subscription]
     */
    az_postgres_flexible_server_firewall_rule_update(): void {
    }
}

/** Commands for managing server parameter values for flexible server. */
class az_postgres_flexible_server_parameter {
    /**
     * List the parameter values for a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server parameter list --resource-group
     *                                            --server-name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_postgres_flexible_server_parameter_list(): void {
    }

    /**
     * Update the parameter of a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server parameter set [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--server-name]
     *                                           [--source]
     *                                           [--subscription]
     *                                           [--value]
     */
    az_postgres_flexible_server_parameter_set(): void {
    }

    /**
     * Get the parameter for a flexible server.".
     *
     * Syntax: 
     *
     * az postgres flexible-server parameter show [--ids]
     *                                            [--name]
     *                                            [--query-examples]
     *                                            [--resource-group]
     *                                            [--server-name]
     *                                            [--subscription]
     */
    az_postgres_flexible_server_parameter_show(): void {
    }
}

/** Manage Azure Database for PostgreSQL Flexible Servers. */
class az_postgres_flexible_server {
    /**
     * Create a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server create [--address-prefixes]
     *                                    [--admin-password]
     *                                    [--admin-user,]
     *                                    [--assign-identity]
     *                                    [--backup-retention]
     *                                    [--high-availability]
     *                                    [--location]
     *                                    [--name]
     *                                    [--public-access]
     *                                    [--resource-group]
     *                                    [--sku-name]
     *                                    [--storage-size]
     *                                    [--subnet]
     *                                    [--subnet-prefixes]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--tier]
     *                                    [--version]
     *                                    [--vnet]
     *                                    [--zone,]
     */
    az_postgres_flexible_server_create(): void {
    }

    /**
     * Delete a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server delete [--force]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_postgres_flexible_server_delete(): void {
    }

    /**
     * List available flexible servers.
     *
     * Syntax: 
     *
     * az postgres flexible-server list [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_postgres_flexible_server_list(): void {
    }

    /**
     * Lists available sku's in the given region.
     *
     * Syntax: 
     *
     * az postgres flexible-server list-skus --location
     *                                       [--subscription]
     */
    az_postgres_flexible_server_list_skus(): void {
    }

    /**
     * Restart a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server restart [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_postgres_flexible_server_restart(): void {
    }

    /**
     * Restore a flexible server from backup.
     *
     * Syntax: 
     *
     * az postgres flexible-server restore --source-server
     *                                     --time
     *                                     [--ids]
     *                                     [--location]
     *                                     [--name]
     *                                     [--no-wait]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_postgres_flexible_server_restore(): void {
    }

    /**
     * Get the details of a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_postgres_flexible_server_show(): void {
    }

    /**
     * Show the connection strings for a PostgreSQL flexible-server database.
     *
     * Syntax: 
     *
     * az postgres flexible-server show-connection-string [--admin-password]
     *                                                    [--admin-user]
     *                                                    [--database-name]
     *                                                    [--ids]
     *                                                    [--server-name]
     *                                                    [--subscription]
     */
    az_postgres_flexible_server_show_connection_string(): void {
    }

    /**
     * Start a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server start [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_postgres_flexible_server_start(): void {
    }

    /**
     * Stop a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server stop [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_postgres_flexible_server_stop(): void {
    }

    /**
     * Update a flexible server.
     *
     * Syntax: 
     *
     * az postgres flexible-server update [--add]
     *                                    [--admin-password]
     *                                    [--backup-retention]
     *                                    [--force-string]
     *                                    [--high-availability {Disabled, Enabled}]
     *                                    [--ids]
     *                                    [--maintenance-window]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--sku-name]
     *                                    [--storage-size]
     *                                    [--subscription]
     *                                    [--tags]
     *                                    [--tier]
     */
    az_postgres_flexible_server_update(): void {
    }

    /**
     * Wait for the flexible server to satisfy certain conditions.
     *
     * Syntax: 
     *
     * az postgres flexible-server wait [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--ids]
     *                                  [--interval]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     *                                  [--timeout]
     *                                  [--updated]
     */
    az_postgres_flexible_server_wait(): void {
    }
}

/** Manage a postgres server's Active Directory administrator. */
class az_postgres_server_ad_admin {
    /**
     * Create an Active Directory Administrator for PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server ad-admin create --resource-group
     *                                    --server-name
     *                                    [--display-name]
     *                                    [--no-wait]
     *                                    [--object-id]
     *                                    [--subscription]
     */
    az_postgres_server_ad_admin_create(): void {
    }

    /**
     * Delete an Active Directory Administrator for PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server ad-admin delete [--ids]
     *                                    [--resource-group]
     *                                    [--server-name]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_postgres_server_ad_admin_delete(): void {
    }

    /**
     * List all Active Directory Administrators for PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server ad-admin list [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_postgres_server_ad_admin_list(): void {
    }

    /**
     * Get Active Directory Administrator information for a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server ad-admin show [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     */
    az_postgres_server_ad_admin_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the PostgreSQL server Active Directory Administrator is met.
     *
     * Syntax: 
     *
     * az postgres server ad-admin wait [--created]
     *                                  [--custom]
     *                                  [--deleted]
     *                                  [--exists]
     *                                  [--ids]
     *                                  [--interval]
     *                                  [--resource-group]
     *                                  [--server-name]
     *                                  [--subscription]
     *                                  [--timeout]
     *                                  [--updated]
     */
    az_postgres_server_ad_admin_wait(): void {
    }
}

/** Manage configuration values for a server. */
class az_postgres_server_configuration {
    /**
     * List the configuration values for a server.
     *
     * Syntax: 
     *
     * az postgres server configuration list [--ids]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--server-name]
     *                                       [--subscription]
     */
    az_postgres_server_configuration_list(): void {
    }

    /**
     * Update the configuration of a server.
     *
     * Syntax: 
     *
     * az postgres server configuration set [--ids]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--server-name]
     *                                      [--subscription]
     *                                      [--value]
     */
    az_postgres_server_configuration_set(): void {
    }

    /**
     * Get the configuration for a server.".
     *
     * Syntax: 
     *
     * az postgres server configuration show [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--server-name]
     *                                       [--subscription]
     */
    az_postgres_server_configuration_show(): void {
    }
}

/** Manage firewall rules for a server. */
class az_postgres_server_firewall_rule {
    /**
     * Create a new firewall rule for a server.
     *
     * Syntax: 
     *
     * az postgres server firewall-rule create --end-ip-address
     *                                         --name
     *                                         --resource-group
     *                                         --server-name
     *                                         --start-ip-address
     *                                         [--subscription]
     */
    az_postgres_server_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az postgres server firewall-rule delete [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--server-name]
     *                                         [--subscription]
     *                                         [--yes]
     */
    az_postgres_server_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules for a server.
     *
     * Syntax: 
     *
     * az postgres server firewall-rule list [--ids]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--server-name]
     *                                       [--subscription]
     */
    az_postgres_server_firewall_rule_list(): void {
    }

    /**
     * Get the details of a firewall rule.
     *
     * Syntax: 
     *
     * az postgres server firewall-rule show [--ids]
     *                                       [--name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--server-name]
     *                                       [--subscription]
     */
    az_postgres_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az postgres server firewall-rule update [--add]
     *                                         [--end-ip-address]
     *                                         [--force-string]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--server-name]
     *                                         [--set]
     *                                         [--start-ip-address]
     *                                         [--subscription]
     */
    az_postgres_server_firewall_rule_update(): void {
    }
}

/** Manage PostgreSQL server keys. */
class az_postgres_server_key {
    /**
     * Create server key.
     *
     * Syntax: 
     *
     * az postgres server key create --kid
     *                               --name
     *                               --resource-group
     *                               [--subscription]
     */
    az_postgres_server_key_create(): void {
    }

    /**
     * Delete server key.
     *
     * Syntax: 
     *
     * az postgres server key delete --kid
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     *                               [--yes]
     */
    az_postgres_server_key_delete(): void {
    }

    /**
     * Gets a list of  Server keys.
     *
     * Syntax: 
     *
     * az postgres server key list [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_postgres_server_key_list(): void {
    }

    /**
     * Show server key.
     *
     * Syntax: 
     *
     * az postgres server key show --kid
     *                             [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_postgres_server_key_show(): void {
    }
}

/** Manage PostgreSQL server private endpoint connections. */
class az_postgres_server_private_endpoint_connection {
    /**
     * Approve the specified private endpoint connection associated with a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server private-endpoint-connection approve [--description]
     *                                                        [--id]
     *                                                        [--ids]
     *                                                        [--name]
     *                                                        [--resource-group]
     *                                                        [--server-name]
     *                                                        [--subscription]
     */
    az_postgres_server_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete the specified private endpoint connection associated with a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server private-endpoint-connection delete [--id]
     *                                                       [--ids]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--server-name]
     *                                                       [--subscription]
     */
    az_postgres_server_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject the specified private endpoint connection associated with a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server private-endpoint-connection reject [--description]
     *                                                       [--id]
     *                                                       [--ids]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--server-name]
     *                                                       [--subscription]
     */
    az_postgres_server_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection associated with a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server private-endpoint-connection show [--id]
     *                                                     [--ids]
     *                                                     [--name]
     *                                                     [--query-examples]
     *                                                     [--resource-group]
     *                                                     [--server-name]
     *                                                     [--subscription]
     */
    az_postgres_server_private_endpoint_connection_show(): void {
    }
}

/** Manage PostgreSQL server private link resources. */
class az_postgres_server_private_link_resource {
    /**
     * List the private link resources supported for a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server private-link-resource list [--ids]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--server-name]
     *                                               [--subscription]
     */
    az_postgres_server_private_link_resource_list(): void {
    }
}

/** Manage read replicas. */
class az_postgres_server_replica {
    /**
     * Create a read replica for a server.
     *
     * Syntax: 
     *
     * az postgres server replica create --name
     *                                   --resource-group
     *                                   --source-server
     *                                   [--location]
     *                                   [--no-wait]
     *                                   [--sku-name]
     *                                   [--subscription]
     */
    az_postgres_server_replica_create(): void {
    }

    /**
     * List all read replicas for a given server.
     *
     * Syntax: 
     *
     * az postgres server replica list [--ids]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--server-name]
     *                                 [--subscription]
     */
    az_postgres_server_replica_list(): void {
    }

    /**
     * Stop replication to a read replica and make it a read/write server.
     *
     * Syntax: 
     *
     * az postgres server replica stop [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_postgres_server_replica_stop(): void {
    }
}

/** Manage a server's virtual network rules. */
class az_postgres_server_vnet_rule {
    /**
     * Create a virtual network rule to allows access to a PostgreSQL server.
     *
     * Syntax: 
     *
     * az postgres server vnet-rule create --name
     *                                     --resource-group
     *                                     --server-name
     *                                     --subnet
     *                                     [--ignore-missing-endpoint {false, true}]
     *                                     [--subscription]
     *                                     [--vnet-name]
     */
    az_postgres_server_vnet_rule_create(): void {
    }

    /**
     * Deletes the virtual network rule with the given name.
     *
     * Syntax: 
     *
     * az postgres server vnet-rule delete [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--server-name]
     *                                     [--subscription]
     */
    az_postgres_server_vnet_rule_delete(): void {
    }

    /**
     * Gets a list of virtual network rules in a server.
     *
     * Syntax: 
     *
     * az postgres server vnet-rule list [--ids]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--server-name]
     *                                   [--subscription]
     */
    az_postgres_server_vnet_rule_list(): void {
    }

    /**
     * Gets a virtual network rule.
     *
     * Syntax: 
     *
     * az postgres server vnet-rule show [--ids]
     *                                   [--name]
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--server-name]
     *                                   [--subscription]
     */
    az_postgres_server_vnet_rule_show(): void {
    }

    /**
     * Update a virtual network rule.
     *
     * Syntax: 
     *
     * az postgres server vnet-rule update --subnet
     *                                     [--add]
     *                                     [--force-string]
     *                                     [--ids]
     *                                     [--ignore-missing-endpoint {false, true}]
     *                                     [--name]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--server-name]
     *                                     [--set]
     *                                     [--subscription]
     *                                     [--vnet-name]
     */
    az_postgres_server_vnet_rule_update(): void {
    }
}

/** Manage server logs. */
class az_postgres_server_logs {
    /**
     * Download log files.
     *
     * Syntax: 
     *
     * az postgres server-logs download --name
     *                                  --resource-group
     *                                  --server-name
     *                                  [--subscription]
     */
    az_postgres_server_logs_download(): void {
    }

    /**
     * List log files for a server.
     *
     * Syntax: 
     *
     * az postgres server-logs list --resource-group
     *                              --server-name
     *                              [--file-last-written]
     *                              [--filename-contains]
     *                              [--max-file-size]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_postgres_server_logs_list(): void {
    }
}

/** Manage PostgreSQL servers. */
class az_postgres_server {
    /**
     * Create a server.
     *
     * Syntax: 
     *
     * az postgres server create --admin-password
     *                           --admin-user
     *                           --name
     *                           --resource-group
     *                           --sku-name
     *                           [--assign-identity]
     *                           [--auto-grow {Disabled, Enabled}]
     *                           [--backup-retention]
     *                           [--geo-redundant-backup {Disabled, Enabled}]
     *                           [--infrastructure-encryption {Disabled, Enabled}]
     *                           [--location]
     *                           [--minimal-tls-version {TLS1_0, TLS1_1, TLS1_2, TLSEnforcementDisabled}]
     *                           [--public {Disabled, Enabled}]
     *                           [--ssl-enforcement {Disabled, Enabled}]
     *                           [--storage-size]
     *                           [--subscription]
     *                           [--tags]
     *                           [--version]
     */
    az_postgres_server_create(): void {
    }

    /**
     * Delete a server.
     *
     * Syntax: 
     *
     * az postgres server delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--yes]
     */
    az_postgres_server_delete(): void {
    }

    /**
     * Geo-restore a server from backup.
     *
     * Syntax: 
     *
     * az postgres server georestore --location
     *                               --source-server
     *                               [--backup-retention]
     *                               [--geo-redundant-backup]
     *                               [--ids]
     *                               [--name]
     *                               [--no-wait]
     *                               [--resource-group]
     *                               [--sku-name]
     *                               [--subscription]
     */
    az_postgres_server_georestore(): void {
    }

    /**
     * List available servers.
     *
     * Syntax: 
     *
     * az postgres server list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_postgres_server_list(): void {
    }

    /**
     * Restart a server.
     *
     * Syntax: 
     *
     * az postgres server restart [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_postgres_server_restart(): void {
    }

    /**
     * Restore a server from backup.
     *
     * Syntax: 
     *
     * az postgres server restore --pitr-time
     *                            --source-server
     *                            [--ids]
     *                            [--name]
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_postgres_server_restore(): void {
    }

    /**
     * Get the details of a server.
     *
     * Syntax: 
     *
     * az postgres server show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_postgres_server_show(): void {
    }

    /**
     * Update a server.
     *
     * Syntax: 
     *
     * az postgres server update [--add]
     *                           [--admin-password]
     *                           [--assign-identity]
     *                           [--auto-grow {Disabled, Enabled}]
     *                           [--backup-retention]
     *                           [--force-string]
     *                           [--ids]
     *                           [--minimal-tls-version {TLS1_0, TLS1_1, TLS1_2, TLSEnforcementDisabled}]
     *                           [--name]
     *                           [--public {Disabled, Enabled}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--sku-name]
     *                           [--ssl-enforcement {Disabled, Enabled}]
     *                           [--storage-size]
     *                           [--subscription]
     *                           [--tags]
     */
    az_postgres_server_update(): void {
    }

    /**
     * Wait for server to satisfy certain conditions.
     *
     * Syntax: 
     *
     * az postgres server wait [--custom]
     *                         [--exists]
     *                         [--ids]
     *                         [--interval]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_postgres_server_wait(): void {
    }
}

/** Manage Azure Database for PostgreSQL servers. */
class az_postgres {
}

/** Manage Proximity Placement Groups. */
class az_ppg {
    /**
     * Create a proximity placement group.
     *
     * Syntax: 
     *
     * az ppg create --name
     *               --resource-group
     *               [--location]
     *               [--subscription]
     *               [--tags]
     *               [--type]
     */
    az_ppg_create(): void {
    }

    /**
     * Delete a proximity placement group.
     *
     * Syntax: 
     *
     * az ppg delete --name
     *               --resource-group
     *               [--subscription]
     */
    az_ppg_delete(): void {
    }

    /**
     * List proximity placement groups.
     *
     * Syntax: 
     *
     * az ppg list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_ppg_list(): void {
    }

    /**
     * Get a proximity placement group.
     *
     * Syntax: 
     *
     * az ppg show --name
     *             --resource-group
     *             [--include-colocation-status]
     *             [--query-examples]
     *             [--subscription]
     */
    az_ppg_show(): void {
    }

    /**
     * Update a proximity placement group.
     *
     * Syntax: 
     *
     * az ppg update --name
     *               --resource-group
     *               [--add]
     *               [--force-string]
     *               [--include-colocation-status]
     *               [--remove]
     *               [--set]
     *               [--subscription]
     */
    az_ppg_update(): void {
    }
}

/** Get provider operations metadatas. */
class az_provider_operation {
    /**
     * Get operations from all providers.
     *
     * Syntax: 
     *
     * az provider operation list [--query-examples]
     *                            [--subscription]
     */
    az_provider_operation_list(): void {
    }

    /**
     * Get an individual provider's operations.
     *
     * Syntax: 
     *
     * az provider operation show --namespace
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_provider_operation_show(): void {
    }
}

/** Manage resource providers. */
class az_provider {
    /**
     * Gets all resource providers for a subscription.
     *
     * Syntax: 
     *
     * az provider list [--expand]
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_provider_list(): void {
    }

    /**
     * Register a provider.
     *
     * Syntax: 
     *
     * az provider register --namespace
     *                      [--subscription]
     *                      [--wait]
     */
    az_provider_register(): void {
    }

    /**
     * Gets the specified resource provider.
     *
     * Syntax: 
     *
     * az provider show --namespace
     *                  [--expand]
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_provider_show(): void {
    }

    /**
     * Unregister a provider.
     *
     * Syntax: 
     *
     * az provider unregister --namespace
     *                        [--subscription]
     *                        [--wait]
     */
    az_provider_unregister(): void {
    }
}

/** Manage Redis firewall rules. */
class az_redis_firewall_rules {
    /**
     * Create a redis cache firewall rule.
     *
     * Syntax: 
     *
     * az redis firewall-rules create --end-ip
     *                                --name
     *                                --resource-group
     *                                --rule-name
     *                                --start-ip
     *                                [--subscription]
     */
    az_redis_firewall_rules_create(): void {
    }

    /**
     * Deletes a single firewall rule in a specified redis cache.
     *
     * Syntax: 
     *
     * az redis firewall-rules delete --rule-name
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_redis_firewall_rules_delete(): void {
    }

    /**
     * Gets all firewall rules in the specified redis cache.
     *
     * Syntax: 
     *
     * az redis firewall-rules list --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_redis_firewall_rules_list(): void {
    }

    /**
     * Gets a single firewall rule in a specified redis cache.
     *
     * Syntax: 
     *
     * az redis firewall-rules show --rule-name
     *                              [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_redis_firewall_rules_show(): void {
    }

    /**
     * Update a redis cache firewall rule.
     *
     * Syntax: 
     *
     * az redis firewall-rules update --end-ip
     *                                --rule-name
     *                                --start-ip
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_redis_firewall_rules_update(): void {
    }
}

/** Manage Redis patch schedules. */
class az_redis_patch_schedule {
    /**
     * Create patching schedule for Redis cache.
     *
     * Syntax: 
     *
     * az redis patch-schedule create --name
     *                                --resource-group
     *                                --schedule-entries
     *                                [--subscription]
     */
    az_redis_patch_schedule_create(): void {
    }

    /**
     * Deletes the patching schedule of a redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis patch-schedule delete --name
     *                                --resource-group
     *                                [--subscription]
     */
    az_redis_patch_schedule_delete(): void {
    }

    /**
     * Gets the patching schedule of a redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis patch-schedule show --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_redis_patch_schedule_show(): void {
    }

    /**
     * Update the patching schedule for Redis cache.
     *
     * Syntax: 
     *
     * az redis patch-schedule update --name
     *                                --resource-group
     *                                --schedule-entries
     *                                [--subscription]
     */
    az_redis_patch_schedule_update(): void {
    }
}

/** Manage Redis server links. */
class az_redis_server_link {
    /**
     * Adds a server link to the Redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis server-link create --name
     *                             --replication-role {Primary, Secondary}
     *                             --resource-group
     *                             --server-to-link
     *                             [--subscription]
     */
    az_redis_server_link_create(): void {
    }

    /**
     * Deletes the linked server from a redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis server-link delete --linked-server-name
     *                             --name
     *                             --resource-group
     *                             [--subscription]
     */
    az_redis_server_link_delete(): void {
    }

    /**
     * Gets the list of linked servers associated with this redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis server-link list --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_redis_server_link_list(): void {
    }

    /**
     * Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
     *
     * Syntax: 
     *
     * az redis server-link show --linked-server-name
     *                           --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_redis_server_link_show(): void {
    }
}

/** Manage dedicated Redis caches for your Azure applications. */
class az_redis {
    /**
     * Create new Redis Cache instance.
     *
     * Syntax: 
     *
     * az redis create --location
     *                 --name
     *                 --resource-group
     *                 --sku {Basic, Premium, Standard}
     *                 --vm-size {c0, c1, c2, c3, c4, c5, c6, p1, p2, p3, p4, p5}
     *                 [--enable-non-ssl-port]
     *                 [--minimum-tls-version {1.0, 1.1, 1.2}]
     *                 [--redis-configuration]
     *                 [--replicas-per-master]
     *                 [--shard-count]
     *                 [--static-ip]
     *                 [--subnet-id]
     *                 [--subscription]
     *                 [--tags]
     *                 [--tenant-settings]
     *                 [--zones {1, 2, 3}]
     */
    az_redis_create(): void {
    }

    /**
     * Deletes a Redis cache.
     *
     * Syntax: 
     *
     * az redis delete [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--subscription]
     *                 [--yes]
     */
    az_redis_delete(): void {
    }

    /**
     * Export data stored in a Redis cache.
     *
     * Syntax: 
     *
     * az redis export --container
     *                 --prefix
     *                 [--file-format]
     *                 [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_redis_export(): void {
    }

    /**
     * Reboot specified Redis node(s).
     *
     * Syntax: 
     *
     * az redis force-reboot --reboot-type {AllNodes, PrimaryNode, SecondaryNode}
     *                       [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--shard-id]
     *                       [--subscription]
     */
    az_redis_force_reboot(): void {
    }

    /**
     * Import data into a Redis cache.
     *
     * Syntax: 
     *
     * az redis import --files
     *                 [--file-format]
     *                 [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_redis_import(): void {
    }

    /**
     * Import data into Redis cache.
     *
     * Syntax: 
     *
     * az redis import-method --files
     *                        [--file-format]
     *                        [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_redis_import_method(): void {
    }

    /**
     * List Redis Caches.
     *
     * Syntax: 
     *
     * az redis list [--query-examples]
     *               [--resource-group]
     *               [--subscription]
     */
    az_redis_list(): void {
    }

    /**
     * Retrieve a Redis cache's access keys.
     *
     * Syntax: 
     *
     * az redis list-keys [--ids]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_redis_list_keys(): void {
    }

    /**
     * Regenerate Redis cache's access keys.
     *
     * Syntax: 
     *
     * az redis regenerate-keys --key-type {Primary, Secondary}
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_redis_regenerate_keys(): void {
    }

    /**
     * Gets a Redis cache (resource description).
     *
     * Syntax: 
     *
     * az redis show [--ids]
     *               [--name]
     *               [--query-examples]
     *               [--resource-group]
     *               [--subscription]
     */
    az_redis_show(): void {
    }

    /**
     * Update a Redis cache.
     *
     * Syntax: 
     *
     * az redis update [--add]
     *                 [--force-string]
     *                 [--ids]
     *                 [--name]
     *                 [--remove]
     *                 [--resource-group]
     *                 [--set]
     *                 [--sku {Basic, Premium, Standard}]
     *                 [--subscription]
     *                 [--vm-size {c0, c1, c2, c3, c4, c5, c6, p1, p2, p3, p4, p5}]
     */
    az_redis_update(): void {
    }
}

/** */
class az {
    /**
     * Manage Azure CLI configuration. This command is interactive.
     *
     * Syntax: 
     *
     * az configure [--defaults]
     *              [--list-defaults {false, true}]
     *              [--scope {global, local}]
     */
    az_configure(): void {
    }

    /**
     * Send feedback to the Azure CLI Team!
     *
     * Syntax: 
     *
     * az feedback
     */
    az_feedback(): void {
    }

    /**
     * I'm an AI robot, my advice is based on our Azure documentation as well as the usage patterns of Azure CLI and Azure ARM users. Using me improves Azure products and documentation.
     *
     * Syntax: 
     *
     * az find [<CLI_TERM>]
     */
    az_find(): void {
    }

    /**
     * Start interactive mode. Installs the Interactive extension if not installed already.
     *
     * Syntax: 
     *
     * az interactive [--style {bg, br, contrast, default, grey, halloween, neon, none, pastel, primary, purple, quiet}]
     *                [--update]
     */
    az_interactive(): void {
    }

    /**
     * Log in to Azure.
     *
     * Syntax: 
     *
     * az login [--allow-no-subscriptions]
     *          [--identity]
     *          [--password]
     *          [--service-principal]
     *          [--tenant]
     *          [--use-cert-sn-issuer]
     *          [--use-device-code]
     *          [--username]
     */
    az_login(): void {
    }

    /**
     * Log out to remove access to Azure subscriptions.
     *
     * Syntax: 
     *
     * az logout [--username]
     */
    az_logout(): void {
    }

    /**
     * Invoke a custom request.
     *
     * Syntax: 
     *
     * az rest --uri
     *         [--body]
     *         [--headers]
     *         [--method {delete, get, head, options, patch, post, put}]
     *         [--output-file]
     *         [--resource]
     *         [--skip-authorization-header]
     *         [--subscription]
     *         [--uri-parameters]
     */
    az_rest(): void {
    }

    /**
     * Runs a self-test of the CLI.
     *
     * Syntax: 
     *
     * az self-test [--subscription]
     */
    az_self_test(): void {
    }

    /**
     * Upgrade Azure CLI and extensions.
     *
     * Syntax: 
     *
     * az upgrade [--all {false, true}]
     *            [--subscription]
     *            [--yes]
     */
    az_upgrade(): void {
    }

    /**
     * Show the versions of Azure CLI modules and extensions in JSON format by default or format configured by --output.
     *
     * Syntax: 
     *
     * az version [--subscription]
     */
    az_version(): void {
    }
}

/** Manage Azure Authorization Rule keys for Relay Service Hybrid Connection. */
class az_relay_hyco_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule keys list --hybrid-connection-name
     *                                            --name
     *                                            --namespace-name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_relay_hyco_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                             [--hybrid-connection-name]
     *                                             [--ids]
     *                                             [--key-value]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_relay_hyco_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Relay Service Hybrid Connection Authorization Rule. */
class az_relay_hyco_authorization_rule {
    /**
     * Create Authorization Rule for given Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule create --hybrid-connection-name
     *                                         --name
     *                                         --namespace-name
     *                                         --resource-group
     *                                         [--rights {Listen, Manage, Send}]
     *                                         [--subscription]
     */
    az_relay_hyco_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorization Rule of the given Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule delete [--hybrid-connection-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--namespace-name]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_relay_hyco_authorization_rule_delete(): void {
    }

    /**
     * Shows list of Authorization Rule by Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule list --hybrid-connection-name
     *                                       --namespace-name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--subscription]
     */
    az_relay_hyco_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Authorization Rule for given Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule show [--hybrid-connection-name]
     *                                       [--ids]
     *                                       [--name]
     *                                       [--namespace-name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_relay_hyco_authorization_rule_show(): void {
    }

    /**
     * Create Authorization Rule for given Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco authorization-rule update --rights {Listen, Manage, Send}
     *                                         [--add]
     *                                         [--force-string]
     *                                         [--hybrid-connection-name]
     *                                         [--ids]
     *                                         [--name]
     *                                         [--namespace-name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--set]
     *                                         [--subscription]
     */
    az_relay_hyco_authorization_rule_update(): void {
    }
}

/** Manage Azure Relay Service Hybrid Connection and Authorization Rule. */
class az_relay_hyco {
    /**
     * Create the Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco create --name
     *                      --namespace-name
     *                      --resource-group
     *                      [--requires-client-authorization {false, true}]
     *                      [--subscription]
     *                      [--user-metadata]
     */
    az_relay_hyco_create(): void {
    }

    /**
     * Deletes the Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco delete [--ids]
     *                      [--name]
     *                      [--namespace-name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_relay_hyco_delete(): void {
    }

    /**
     * List the Hybrid Connection by Relay Service Namepsace.
     *
     * Syntax: 
     *
     * az relay hyco list --namespace-name
     *                    --resource-group
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_relay_hyco_list(): void {
    }

    /**
     * Shows the Relay Service Hybrid Connection Details.
     *
     * Syntax: 
     *
     * az relay hyco show [--ids]
     *                    [--name]
     *                    [--namespace-name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_relay_hyco_show(): void {
    }

    /**
     * Updates the Relay Service Hybrid Connection.
     *
     * Syntax: 
     *
     * az relay hyco update [--add]
     *                      [--force-string]
     *                      [--ids]
     *                      [--name]
     *                      [--namespace-name]
     *                      [--remove]
     *                      [--requires-client-authorization {false, true}]
     *                      [--resource-group]
     *                      [--set]
     *                      [--status {Active, Disabled, ReceiveDisabled, SendDisabled}]
     *                      [--subscription]
     *                      [--user-metadata]
     */
    az_relay_hyco_update(): void {
    }
}

/** Manage Azure Authorization Rule connection strings for Namespace. */
class az_relay_namespace_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule keys list --name
     *                                                 --namespace-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_relay_namespace_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for the Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                  [--ids]
     *                                                  [--key-value]
     *                                                  [--name]
     *                                                  [--namespace-name]
     *                                                  [--resource-group]
     *                                                  [--subscription]
     */
    az_relay_namespace_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Relay Service Namespace Authorization Rule. */
class az_relay_namespace_authorization_rule {
    /**
     * Create Authorization Rule for the given Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule create --name
     *                                              --namespace-name
     *                                              --resource-group
     *                                              [--rights {Listen, Manage, Send}]
     *                                              [--subscription]
     */
    az_relay_namespace_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorization Rule of the Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule delete [--ids]
     *                                              [--name]
     *                                              [--namespace-name]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_relay_namespace_authorization_rule_delete(): void {
    }

    /**
     * Shows the list of Authorization Rule by Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule list --namespace-name
     *                                            --resource-group
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_relay_namespace_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Relay Service Namespace Authorization Rule.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule show [--ids]
     *                                            [--name]
     *                                            [--namespace-name]
     *                                            [--query-examples]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_relay_namespace_authorization_rule_show(): void {
    }

    /**
     * Updates Authorization Rule for the given Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace authorization-rule update --rights {Listen, Manage, Send}
     *                                              [--add]
     *                                              [--force-string]
     *                                              [--ids]
     *                                              [--name]
     *                                              [--namespace-name]
     *                                              [--remove]
     *                                              [--resource-group]
     *                                              [--set]
     *                                              [--subscription]
     */
    az_relay_namespace_authorization_rule_update(): void {
    }
}

/** Manage Azure Relay Service Namespace. */
class az_relay_namespace {
    /**
     * Create a Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace create --name
     *                           --resource-group
     *                           [--location]
     *                           [--subscription]
     *                           [--tags]
     */
    az_relay_namespace_create(): void {
    }

    /**
     * Deletes the Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_relay_namespace_delete(): void {
    }

    /**
     * Check for the availability of the given name for the Namespace.
     *
     * Syntax: 
     *
     * az relay namespace exists --name
     *                           [--subscription]
     */
    az_relay_namespace_exists(): void {
    }

    /**
     * List the Relay Service Namespaces.
     *
     * Syntax: 
     *
     * az relay namespace list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_relay_namespace_list(): void {
    }

    /**
     * Shows the Relay Service Namespace details.
     *
     * Syntax: 
     *
     * az relay namespace show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_relay_namespace_show(): void {
    }

    /**
     * Updates a Relay Service Namespace.
     *
     * Syntax: 
     *
     * az relay namespace update [--add]
     *                           [--force-string]
     *                           [--ids]
     *                           [--name]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--set]
     *                           [--subscription]
     *                           [--tags]
     */
    az_relay_namespace_update(): void {
    }
}

/** Manage Azure Authorization Rule keys for Relay Service WCF Relay. */
class az_relay_wcfrelay_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for the given Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule keys list --name
     *                                                --namespace-name
     *                                                --relay-name
     *                                                --resource-group
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                 [--ids]
     *                                                 [--key-value]
     *                                                 [--name]
     *                                                 [--namespace-name]
     *                                                 [--relay-name]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Relay Service WCF Relay Authorization Rule. */
class az_relay_wcfrelay_authorization_rule {
    /**
     * Create Authorization Rule for the given Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule create --name
     *                                             --namespace-name
     *                                             --relay-name
     *                                             --resource-group
     *                                             [--rights {Listen, Manage, Send}]
     *                                             [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_create(): void {
    }

    /**
     * Delete the Authorization Rule of Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule delete [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--relay-name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_delete(): void {
    }

    /**
     * List of Authorization Rule by Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule list --namespace-name
     *                                           --relay-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_list(): void {
    }

    /**
     * Show properties of Authorization Rule for the given Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule show [--ids]
     *                                           [--name]
     *                                           [--namespace-name]
     *                                           [--query-examples]
     *                                           [--relay-name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_show(): void {
    }

    /**
     * Update Authorization Rule for the given Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay authorization-rule update --rights {Listen, Manage, Send}
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--relay-name]
     *                                             [--remove]
     *                                             [--resource-group]
     *                                             [--set]
     *                                             [--subscription]
     */
    az_relay_wcfrelay_authorization_rule_update(): void {
    }
}

/** Manage Azure Relay Service WCF Relay and Authorization Rule. */
class az_relay_wcfrelay {
    /**
     * Create the Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay create --name
     *                          --namespace-name
     *                          --relay-type {Http, NetTcp}
     *                          --resource-group
     *                          [--requires-client-authorization {false, true}]
     *                          [--requires-transport-security {false, true}]
     *                          [--subscription]
     *                          [--user-metadata]
     */
    az_relay_wcfrelay_create(): void {
    }

    /**
     * Deletes the Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay delete [--ids]
     *                          [--name]
     *                          [--namespace-name]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_relay_wcfrelay_delete(): void {
    }

    /**
     * List the WCF Relay by Relay Service Namepsace.
     *
     * Syntax: 
     *
     * az relay wcfrelay list --namespace-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_relay_wcfrelay_list(): void {
    }

    /**
     * Shows the Relay Service WCF Relay Details.
     *
     * Syntax: 
     *
     * az relay wcfrelay show [--ids]
     *                        [--name]
     *                        [--namespace-name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_relay_wcfrelay_show(): void {
    }

    /**
     * Updates existing Relay Service WCF Relay.
     *
     * Syntax: 
     *
     * az relay wcfrelay update [--add]
     *                          [--force-string]
     *                          [--ids]
     *                          [--name]
     *                          [--namespace-name]
     *                          [--relay-type {Http, NetTcp}]
     *                          [--remove]
     *                          [--resource-group]
     *                          [--set]
     *                          [--status {Active, Disabled, ReceiveDisabled, SendDisabled}]
     *                          [--subscription]
     *                          [--user-metadata]
     */
    az_relay_wcfrelay_update(): void {
    }
}

/** Manage Azure Relay Service namespaces, WCF relays, hybrid connections, and rules. */
class az_relay {
}

/** Manage Git repositories import. */
class az_repos_import {
    /**
     * Create a git import request.
     *
     * Syntax: 
     *
     * az repos import create --git-source-url
     *                        [--detect {false, true}]
     *                        [--git-service-endpoint-id]
     *                        [--org]
     *                        [--project]
     *                        [--repository]
     *                        [--requires-authorization]
     *                        [--subscription]
     *                        [--user-name]
     */
    az_repos_import_create(): void {
    }
}

/** Manage approver count policy. */
class az_repos_policy_approver_count {
    /**
     * Create approver count policy.
     *
     * Syntax: 
     *
     * az repos policy approver-count create --allow-downvotes {false, true}
     *                                       --blocking {false, true}
     *                                       --branch
     *                                       --creator-vote-counts {false, true}
     *                                       --enabled {false, true}
     *                                       --minimum-approver-count
     *                                       --repository-id
     *                                       --reset-on-source-push {false, true}
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--org]
     *                                       [--project]
     *                                       [--subscription]
     */
    az_repos_policy_approver_count_create(): void {
    }

    /**
     * Update approver count policy.
     *
     * Syntax: 
     *
     * az repos policy approver-count update --id
     *                                       [--allow-downvotes {false, true}]
     *                                       [--blocking {false, true}]
     *                                       [--branch]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--creator-vote-counts {false, true}]
     *                                       [--detect {false, true}]
     *                                       [--enabled {false, true}]
     *                                       [--minimum-approver-count]
     *                                       [--org]
     *                                       [--project]
     *                                       [--repository-id]
     *                                       [--reset-on-source-push {false, true}]
     *                                       [--subscription]
     */
    az_repos_policy_approver_count_update(): void {
    }
}

/** Manage build policy. */
class az_repos_policy_build {
    /**
     * Create build policy.
     *
     * Syntax: 
     *
     * az repos policy build create --blocking {false, true}
     *                              --branch
     *                              --build-definition-id
     *                              --display-name
     *                              --enabled {false, true}
     *                              --manual-queue-only {false, true}
     *                              --queue-on-source-update-only {false, true}
     *                              --repository-id
     *                              --valid-duration
     *                              [--branch-match-type {exact, prefix}]
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--path-filter]
     *                              [--project]
     *                              [--subscription]
     */
    az_repos_policy_build_create(): void {
    }

    /**
     * Update build policy.
     *
     * Syntax: 
     *
     * az repos policy build update --id
     *                              [--blocking {false, true}]
     *                              [--branch]
     *                              [--branch-match-type {exact, prefix}]
     *                              [--build-definition-id]
     *                              [--detect {false, true}]
     *                              [--display-name]
     *                              [--enabled {false, true}]
     *                              [--manual-queue-only {false, true}]
     *                              [--org]
     *                              [--path-filter]
     *                              [--project]
     *                              [--queue-on-source-update-only {false, true}]
     *                              [--repository-id]
     *                              [--subscription]
     *                              [--valid-duration]
     */
    az_repos_policy_build_update(): void {
    }
}

/** Manage case enforcement policy. */
class az_repos_policy_case_enforcement {
    /**
     * Create case enforcement policy.
     *
     * Syntax: 
     *
     * az repos policy case-enforcement create --blocking {false, true}
     *                                         --enabled {false, true}
     *                                         --repository-id
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--subscription]
     */
    az_repos_policy_case_enforcement_create(): void {
    }

    /**
     * Update case enforcement policy.
     *
     * Syntax: 
     *
     * az repos policy case-enforcement update --id
     *                                         [--blocking {false, true}]
     *                                         [--detect {false, true}]
     *                                         [--enabled {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--repository-id]
     *                                         [--subscription]
     */
    az_repos_policy_case_enforcement_update(): void {
    }
}

/** Manage comment required policy. */
class az_repos_policy_comment_required {
    /**
     * Create comment resolution required policy.
     *
     * Syntax: 
     *
     * az repos policy comment-required create --blocking {false, true}
     *                                         --branch
     *                                         --enabled {false, true}
     *                                         --repository-id
     *                                         [--branch-match-type {exact, prefix}]
     *                                         [--detect {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--subscription]
     */
    az_repos_policy_comment_required_create(): void {
    }

    /**
     * Update comment resolution required policy.
     *
     * Syntax: 
     *
     * az repos policy comment-required update --id
     *                                         [--blocking {false, true}]
     *                                         [--branch]
     *                                         [--branch-match-type {exact, prefix}]
     *                                         [--detect {false, true}]
     *                                         [--enabled {false, true}]
     *                                         [--org]
     *                                         [--project]
     *                                         [--repository-id]
     *                                         [--subscription]
     */
    az_repos_policy_comment_required_update(): void {
    }
}

/** Manage file size policy. */
class az_repos_policy_file_size {
    /**
     * Create file size policy.
     *
     * Syntax: 
     *
     * az repos policy file-size create --blocking {false, true}
     *                                  --enabled {false, true}
     *                                  --maximum-git-blob-size
     *                                  --repository-id
     *                                  --use-uncompressed-size {false, true}
     *                                  [--detect {false, true}]
     *                                  [--org]
     *                                  [--project]
     *                                  [--subscription]
     */
    az_repos_policy_file_size_create(): void {
    }

    /**
     * Update file size policy.
     *
     * Syntax: 
     *
     * az repos policy file-size update --id
     *                                  [--blocking {false, true}]
     *                                  [--detect {false, true}]
     *                                  [--enabled {false, true}]
     *                                  [--maximum-git-blob-size]
     *                                  [--org]
     *                                  [--project]
     *                                  [--repository-id]
     *                                  [--subscription]
     *                                  [--use-uncompressed-size {false, true}]
     */
    az_repos_policy_file_size_update(): void {
    }
}

/** Manage merge strategy policy. */
class az_repos_policy_merge_strategy {
    /**
     * Create merge strategy policy.
     *
     * Syntax: 
     *
     * az repos policy merge-strategy create --blocking {false, true}
     *                                       --branch
     *                                       --enabled {false, true}
     *                                       --repository-id
     *                                       [--allow-no-fast-forward {false, true}]
     *                                       [--allow-rebase {false, true}]
     *                                       [--allow-rebase-merge {false, true}]
     *                                       [--allow-squash {false, true}]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--org]
     *                                       [--project]
     *                                       [--subscription]
     *                                       [--use-squash-merge {false, true}]
     */
    az_repos_policy_merge_strategy_create(): void {
    }

    /**
     * Update merge strategy policy.
     *
     * Syntax: 
     *
     * az repos policy merge-strategy update --id
     *                                       [--allow-no-fast-forward {false, true}]
     *                                       [--allow-rebase {false, true}]
     *                                       [--allow-rebase-merge {false, true}]
     *                                       [--allow-squash {false, true}]
     *                                       [--blocking {false, true}]
     *                                       [--branch]
     *                                       [--branch-match-type {exact, prefix}]
     *                                       [--detect {false, true}]
     *                                       [--enabled {false, true}]
     *                                       [--org]
     *                                       [--project]
     *                                       [--repository-id]
     *                                       [--subscription]
     *                                       [--use-squash-merge {false, true}]
     */
    az_repos_policy_merge_strategy_update(): void {
    }
}

/** Manage required reviewer policy. */
class az_repos_policy_required_reviewer {
    /**
     * Create required reviewer policy.
     *
     * Syntax: 
     *
     * az repos policy required-reviewer create --blocking {false, true}
     *                                          --branch
     *                                          --enabled {false, true}
     *                                          --message
     *                                          --repository-id
     *                                          --required-reviewer-ids
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--path-filter]
     *                                          [--project]
     *                                          [--subscription]
     */
    az_repos_policy_required_reviewer_create(): void {
    }

    /**
     * Update required reviewer policy.
     *
     * Syntax: 
     *
     * az repos policy required-reviewer update --id
     *                                          [--blocking {false, true}]
     *                                          [--branch]
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--enabled {false, true}]
     *                                          [--message]
     *                                          [--org]
     *                                          [--path-filter]
     *                                          [--project]
     *                                          [--repository-id]
     *                                          [--required-reviewer-ids]
     *                                          [--subscription]
     */
    az_repos_policy_required_reviewer_update(): void {
    }
}

/** Manage work item linking policy. */
class az_repos_policy_work_item_linking {
    /**
     * Create work item linking policy.
     *
     * Syntax: 
     *
     * az repos policy work-item-linking create --blocking {false, true}
     *                                          --branch
     *                                          --enabled {false, true}
     *                                          --repository-id
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--org]
     *                                          [--project]
     *                                          [--subscription]
     */
    az_repos_policy_work_item_linking_create(): void {
    }

    /**
     * Update work item linking policy.
     *
     * Syntax: 
     *
     * az repos policy work-item-linking update --id
     *                                          [--blocking {false, true}]
     *                                          [--branch]
     *                                          [--branch-match-type {exact, prefix}]
     *                                          [--detect {false, true}]
     *                                          [--enabled {false, true}]
     *                                          [--org]
     *                                          [--project]
     *                                          [--repository-id]
     *                                          [--subscription]
     */
    az_repos_policy_work_item_linking_update(): void {
    }
}

/** Manage branch policy. */
class az_repos_policy {
    /**
     * Create a policy using a configuration file.
     *
     * Syntax: 
     *
     * az repos policy create --config
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     *                        [--subscription]
     */
    az_repos_policy_create(): void {
    }

    /**
     * Delete a policy.
     *
     * Syntax: 
     *
     * az repos policy delete --id
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     *                        [--subscription]
     *                        [--yes]
     */
    az_repos_policy_delete(): void {
    }

    /**
     * List all policies in a project.
     *
     * Syntax: 
     *
     * az repos policy list [--branch]
     *                      [--detect {false, true}]
     *                      [--org]
     *                      [--project]
     *                      [--query-examples]
     *                      [--repository-id]
     *                      [--subscription]
     */
    az_repos_policy_list(): void {
    }

    /**
     * Show policy details.
     *
     * Syntax: 
     *
     * az repos policy show --id
     *                      [--detect {false, true}]
     *                      [--org]
     *                      [--project]
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_repos_policy_show(): void {
    }

    /**
     * Update a policy using a configuration file.
     *
     * Syntax: 
     *
     * az repos policy update --config
     *                        --id
     *                        [--detect {false, true}]
     *                        [--org]
     *                        [--project]
     *                        [--subscription]
     */
    az_repos_policy_update(): void {
    }
}

/** Manage pull request policy. */
class az_repos_pr_policy {
    /**
     * List policies of a pull request.
     *
     * Syntax: 
     *
     * az repos pr policy list --id
     *                         [--detect {false, true}]
     *                         [--org]
     *                         [--query-examples]
     *                         [--skip]
     *                         [--subscription]
     *                         [--top]
     */
    az_repos_pr_policy_list(): void {
    }

    /**
     * Queue an evaluation of a policy for a pull request.
     *
     * Syntax: 
     *
     * az repos pr policy queue --evaluation-id
     *                          --id
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--subscription]
     */
    az_repos_pr_policy_queue(): void {
    }
}

/** Manage pull request reviewers. */
class az_repos_pr_reviewer {
    /**
     * Add one or more reviewers to a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer add --id
     *                          --reviewers
     *                          [--detect {false, true}]
     *                          [--org]
     *                          [--subscription]
     */
    az_repos_pr_reviewer_add(): void {
    }

    /**
     * List reviewers of a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer list --id
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_repos_pr_reviewer_list(): void {
    }

    /**
     * Remove one or more reviewers from a pull request.
     *
     * Syntax: 
     *
     * az repos pr reviewer remove --id
     *                             --reviewers
     *                             [--detect {false, true}]
     *                             [--org]
     *                             [--subscription]
     */
    az_repos_pr_reviewer_remove(): void {
    }
}

/** Manage work items associated with pull requests. */
class az_repos_pr_work_item {
    /**
     * Link one or more work items to a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item add --id
     *                           --work-items
     *                           [--detect {false, true}]
     *                           [--org]
     *                           [--subscription]
     */
    az_repos_pr_work_item_add(): void {
    }

    /**
     * List linked work items for a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item list --id
     *                            [--detect {false, true}]
     *                            [--org]
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_repos_pr_work_item_list(): void {
    }

    /**
     * Unlink one or more work items from a pull request.
     *
     * Syntax: 
     *
     * az repos pr work-item remove --id
     *                              --work-items
     *                              [--detect {false, true}]
     *                              [--org]
     *                              [--subscription]
     */
    az_repos_pr_work_item_remove(): void {
    }
}

/** Manage pull requests. */
class az_repos_pr {
    /**
     * Checkout the PR source branch locally, if no local changes are present.
     *
     * Syntax: 
     *
     * az repos pr checkout --id
     *                      [--remote-name]
     *                      [--subscription]
     */
    az_repos_pr_checkout(): void {
    }

    /**
     * Create a pull request.
     *
     * Syntax: 
     *
     * az repos pr create [--auto-complete {false, true}]
     *                    [--bypass-policy {false, true}]
     *                    [--bypass-policy-reason]
     *                    [--delete-source-branch {false, true}]
     *                    [--description]
     *                    [--detect {false, true}]
     *                    [--draft {false, true}]
     *                    [--merge-commit-message]
     *                    [--open]
     *                    [--org]
     *                    [--project]
     *                    [--repository]
     *                    [--reviewers]
     *                    [--source-branch]
     *                    [--squash {false, true}]
     *                    [--subscription]
     *                    [--target-branch]
     *                    [--title]
     *                    [--transition-work-items {false, true}]
     *                    [--work-items]
     */
    az_repos_pr_create(): void {
    }

    /**
     * List pull requests.
     *
     * Syntax: 
     *
     * az repos pr list [--creator]
     *                  [--detect {false, true}]
     *                  [--include-links]
     *                  [--org]
     *                  [--project]
     *                  [--query-examples]
     *                  [--repository]
     *                  [--reviewer]
     *                  [--skip]
     *                  [--source-branch]
     *                  [--status {abandoned, active, all, completed}]
     *                  [--subscription]
     *                  [--target-branch]
     *                  [--top]
     */
    az_repos_pr_list(): void {
    }

    /**
     * Vote on a pull request.
     *
     * Syntax: 
     *
     * az repos pr set-vote --id
     *                      --vote {approve, approve-with-suggestions, reject, reset, wait-for-author}
     *                      [--detect {false, true}]
     *                      [--org]
     *                      [--subscription]
     */
    az_repos_pr_set_vote(): void {
    }

    /**
     * Get the details of a pull request.
     *
     * Syntax: 
     *
     * az repos pr show --id
     *                  [--detect {false, true}]
     *                  [--open]
     *                  [--org]
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_repos_pr_show(): void {
    }

    /**
     * Update a pull request.
     *
     * Syntax: 
     *
     * az repos pr update --id
     *                    [--auto-complete {false, true}]
     *                    [--bypass-policy {false, true}]
     *                    [--bypass-policy-reason]
     *                    [--delete-source-branch {false, true}]
     *                    [--description]
     *                    [--detect {false, true}]
     *                    [--draft {false, true}]
     *                    [--merge-commit-message]
     *                    [--org]
     *                    [--squash {false, true}]
     *                    [--status {abandoned, active, completed}]
     *                    [--subscription]
     *                    [--title]
     *                    [--transition-work-items {false, true}]
     */
    az_repos_pr_update(): void {
    }
}

/** Manage Git references. */
class az_repos_ref {
    /**
     * Create a reference.
     *
     * Syntax: 
     *
     * az repos ref create --name
     *                     --object-id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     *                     [--subscription]
     */
    az_repos_ref_create(): void {
    }

    /**
     * Delete a reference.
     *
     * Syntax: 
     *
     * az repos ref delete --name
     *                     --object-id
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     *                     [--subscription]
     */
    az_repos_ref_delete(): void {
    }

    /**
     * List the references.
     *
     * Syntax: 
     *
     * az repos ref list [--detect {false, true}]
     *                   [--filter]
     *                   [--org]
     *                   [--project]
     *                   [--query-examples]
     *                   [--repository]
     *                   [--subscription]
     */
    az_repos_ref_list(): void {
    }

    /**
     * Lock a reference.
     *
     * Syntax: 
     *
     * az repos ref lock --name
     *                   [--detect {false, true}]
     *                   [--org]
     *                   [--project]
     *                   [--repository]
     *                   [--subscription]
     */
    az_repos_ref_lock(): void {
    }

    /**
     * Unlock a reference.
     *
     * Syntax: 
     *
     * az repos ref unlock --name
     *                     [--detect {false, true}]
     *                     [--org]
     *                     [--project]
     *                     [--repository]
     *                     [--subscription]
     */
    az_repos_ref_unlock(): void {
    }
}

/** Manage Azure Repos. */
class az_repos {
    /**
     * Create a Git repository in a team project.
     *
     * Syntax: 
     *
     * az repos create --name
     *                 [--detect {false, true}]
     *                 [--open]
     *                 [--org]
     *                 [--project]
     *                 [--subscription]
     */
    az_repos_create(): void {
    }

    /**
     * Delete a Git repository in a team project.
     *
     * Syntax: 
     *
     * az repos delete --id
     *                 [--detect {false, true}]
     *                 [--org]
     *                 [--project]
     *                 [--subscription]
     *                 [--yes]
     */
    az_repos_delete(): void {
    }

    /**
     * List Git repositories of a team project.
     *
     * Syntax: 
     *
     * az repos list [--detect {false, true}]
     *               [--org]
     *               [--project]
     *               [--query-examples]
     *               [--subscription]
     */
    az_repos_list(): void {
    }

    /**
     * Get the details of a Git repository.
     *
     * Syntax: 
     *
     * az repos show --repository
     *               [--detect {false, true}]
     *               [--open]
     *               [--org]
     *               [--project]
     *               [--query-examples]
     *               [--subscription]
     */
    az_repos_show(): void {
    }

    /**
     * Update the Git repository.
     *
     * Syntax: 
     *
     * az repos update --repository
     *                 [--default-branch]
     *                 [--detect {false, true}]
     *                 [--name]
     *                 [--org]
     *                 [--project]
     *                 [--subscription]
     */
    az_repos_update(): void {
    }
}

/** See catalog of available reservations. */
class az_reservations_catalog {
    /**
     * Get catalog of available reservation.
     *
     * Syntax: 
     *
     * az reservations catalog show --reserved-resource-type {CosmosDb, RedHat, RedHatOsa, SqlDataWarehouse, SqlDatabases, SuseLinux, VMwareCloudSimple, VirtualMachines}
     *                              --subscription-id
     *                              [--location]
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_reservations_catalog_show(): void {
    }
}

/** See reservation order ids that are applied to subscription. */
class az_reservations_reservation_order_id {
    /**
     * Get list of applicable reservation order ids.
     *
     * Syntax: 
     *
     * az reservations reservation-order-id list --subscription-id
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_reservations_reservation_order_id_list(): void {
    }
}

/** Manage reservation order, which is container for reservations. */
class az_reservations_reservation_order {
    /**
     * Calculate price for a reservation order.
     *
     * Syntax: 
     *
     * az reservations reservation-order calculate --applied-scope-type {Shared, Single}
     *                                             --billing-scope
     *                                             --display-name
     *                                             --quantity
     *                                             --reserved-resource-type {CosmosDb, RedHat, RedHatOsa, SqlDataWarehouse, SqlDatabases, SuseLinux, VMwareCloudSimple, VirtualMachines}
     *                                             --sku
     *                                             --term {P1Y, P3Y}
     *                                             [--applied-scope]
     *                                             [--billing-plan {Monthly, Upfront}]
     *                                             [--instance-flexibility]
     *                                             [--location]
     *                                             [--renew {false, true}]
     *                                             [--subscription]
     */
    az_reservations_reservation_order_calculate(): void {
    }

    /**
     * Get all reservation orders.
     *
     * Syntax: 
     *
     * az reservations reservation-order list [--query-examples]
     *                                        [--subscription]
     */
    az_reservations_reservation_order_list(): void {
    }

    /**
     * Purchase reservation order.
     *
     * Syntax: 
     *
     * az reservations reservation-order purchase --applied-scope-type {Shared, Single}
     *                                            --billing-scope
     *                                            --display-name
     *                                            --quantity
     *                                            --reservation-order-id
     *                                            --reserved-resource-type {CosmosDb, RedHat, RedHatOsa, SqlDataWarehouse, SqlDatabases, SuseLinux, VMwareCloudSimple, VirtualMachines}
     *                                            --sku
     *                                            --term {P1Y, P3Y}
     *                                            [--applied-scope]
     *                                            [--billing-plan {Monthly, Upfront}]
     *                                            [--instance-flexibility]
     *                                            [--location]
     *                                            [--renew {false, true}]
     *                                            [--subscription]
     */
    az_reservations_reservation_order_purchase(): void {
    }

    /**
     * Get a specific reservation order.
     *
     * Syntax: 
     *
     * az reservations reservation-order show --reservation-order-id
     *                                        [--expand]
     *                                        [--query-examples]
     *                                        [--subscription]
     */
    az_reservations_reservation_order_show(): void {
    }
}

/** Manage reservation entities. */
class az_reservations_reservation {
    /**
     * Get all reservations.
     *
     * Syntax: 
     *
     * az reservations reservation list --reservation-order-id
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_reservations_reservation_list(): void {
    }

    /**
     * Get history of a reservation.
     *
     * Syntax: 
     *
     * az reservations reservation list-history --reservation-id
     *                                          --reservation-order-id
     *                                          [--subscription]
     */
    az_reservations_reservation_list_history(): void {
    }

    /**
     * Merge two reservations.
     *
     * Syntax: 
     *
     * az reservations reservation merge --reservation-id-1
     *                                   --reservation-id-2
     *                                   --reservation-order-id
     *                                   [--subscription]
     */
    az_reservations_reservation_merge(): void {
    }

    /**
     * Get details of a reservation.
     *
     * Syntax: 
     *
     * az reservations reservation show --reservation-id
     *                                  --reservation-order-id
     *                                  [--expand]
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_reservations_reservation_show(): void {
    }

    /**
     * Split a reservation.
     *
     * Syntax: 
     *
     * az reservations reservation split --quantity-1
     *                                   --quantity-2
     *                                   --reservation-id
     *                                   --reservation-order-id
     *                                   [--subscription]
     */
    az_reservations_reservation_split(): void {
    }

    /**
     * Updates the applied scopes of the reservation.
     *
     * Syntax: 
     *
     * az reservations reservation update --applied-scope-type {Shared, Single}
     *                                    --reservation-id
     *                                    --reservation-order-id
     *                                    [--applied-scopes]
     *                                    [--instance-flexibility {Off, On}]
     *                                    [--subscription]
     */
    az_reservations_reservation_update(): void {
    }
}

/** Manage Azure Reservations. */
class az_reservations {
}

/** Manage links between resources. */
class az_resource_link {
    /**
     * Create a new link between resources.
     *
     * Syntax: 
     *
     * az resource link create --link
     *                         --target
     *                         [--notes]
     *                         [--subscription]
     */
    az_resource_link_create(): void {
    }

    /**
     * Delete a link between resources.
     *
     * Syntax: 
     *
     * az resource link delete --link
     *                         [--subscription]
     */
    az_resource_link_delete(): void {
    }

    /**
     * List resource links.
     *
     * Syntax: 
     *
     * az resource link list [--filter]
     *                       [--query-examples]
     *                       [--scope]
     *                       [--subscription]
     */
    az_resource_link_list(): void {
    }

    /**
     * Gets a resource link with the specified ID.
     *
     * Syntax: 
     *
     * az resource link show --link
     *                       [--query-examples]
     *                       [--subscription]
     */
    az_resource_link_show(): void {
    }

    /**
     * Update link between resources.
     *
     * Syntax: 
     *
     * az resource link update --link
     *                         [--notes]
     *                         [--subscription]
     *                         [--target]
     */
    az_resource_link_update(): void {
    }
}

/** Manage Azure resource level locks. */
class az_resource_lock {
    /**
     * Create a resource-level lock.
     *
     * Syntax: 
     *
     * az resource lock create --lock-type {CanNotDelete, ReadOnly}
     *                         --name
     *                         [--namespace]
     *                         [--notes]
     *                         [--parent]
     *                         [--resource]
     *                         [--resource-group]
     *                         [--resource-type]
     *                         [--subscription]
     */
    az_resource_lock_create(): void {
    }

    /**
     * Delete a resource-level lock.
     *
     * Syntax: 
     *
     * az resource lock delete [--ids]
     *                         [--name]
     *                         [--namespace]
     *                         [--parent]
     *                         [--resource]
     *                         [--resource-group]
     *                         [--resource-type]
     *                         [--subscription]
     */
    az_resource_lock_delete(): void {
    }

    /**
     * List lock information in the resource-level.
     *
     * Syntax: 
     *
     * az resource lock list [--filter-string]
     *                       [--namespace]
     *                       [--parent]
     *                       [--query-examples]
     *                       [--resource]
     *                       [--resource-group]
     *                       [--resource-type]
     *                       [--subscription]
     */
    az_resource_lock_list(): void {
    }

    /**
     * Show the details of a resource-level lock.
     *
     * Syntax: 
     *
     * az resource lock show [--ids]
     *                       [--name]
     *                       [--namespace]
     *                       [--parent]
     *                       [--query-examples]
     *                       [--resource]
     *                       [--resource-group]
     *                       [--resource-type]
     *                       [--subscription]
     */
    az_resource_lock_show(): void {
    }

    /**
     * Update a resource-level lock.
     *
     * Syntax: 
     *
     * az resource lock update [--ids]
     *                         [--lock-type {CanNotDelete, ReadOnly}]
     *                         [--name]
     *                         [--namespace]
     *                         [--notes]
     *                         [--parent]
     *                         [--resource]
     *                         [--resource-group]
     *                         [--resource-type]
     *                         [--subscription]
     */
    az_resource_lock_update(): void {
    }
}

/** Manage Azure resources. */
class az_resource {
    /**
     * Create a resource.
     *
     * Syntax: 
     *
     * az resource create --properties
     *                    [--api-version]
     *                    [--id]
     *                    [--is-full-object]
     *                    [--latest-include-preview]
     *                    [--location]
     *                    [--name]
     *                    [--namespace]
     *                    [--parent]
     *                    [--resource-group]
     *                    [--resource-type]
     *                    [--subscription]
     */
    az_resource_create(): void {
    }

    /**
     * Delete a resource.
     *
     * Syntax: 
     *
     * az resource delete [--api-version]
     *                    [--ids]
     *                    [--latest-include-preview]
     *                    [--name]
     *                    [--namespace]
     *                    [--parent]
     *                    [--resource-group]
     *                    [--resource-type]
     *                    [--subscription]
     */
    az_resource_delete(): void {
    }

    /**
     * Invoke an action on the resource.
     *
     * Syntax: 
     *
     * az resource invoke-action --action
     *                           [--api-version]
     *                           [--ids]
     *                           [--latest-include-preview]
     *                           [--name]
     *                           [--namespace]
     *                           [--parent]
     *                           [--request-body]
     *                           [--resource-group]
     *                           [--resource-type]
     *                           [--subscription]
     */
    az_resource_invoke_action(): void {
    }

    /**
     * List resources.
     *
     * Syntax: 
     *
     * az resource list [--location]
     *                  [--name]
     *                  [--namespace]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--resource-type]
     *                  [--subscription]
     *                  [--tag]
     */
    az_resource_list(): void {
    }

    /**
     * Moves resources from one resource group to another(can be under different subscription).
     *
     * Syntax: 
     *
     * az resource move --destination-group
     *                  --ids
     *                  [--destination-subscription-id]
     *                  [--subscription]
     */
    az_resource_move(): void {
    }

    /**
     * Get the details of a resource.
     *
     * Syntax: 
     *
     * az resource show [--api-version]
     *                  [--ids]
     *                  [--include-response-body {false, true}]
     *                  [--latest-include-preview]
     *                  [--name]
     *                  [--namespace]
     *                  [--parent]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--resource-type]
     *                  [--subscription]
     */
    az_resource_show(): void {
    }

    /**
     * Tag a resource.
     *
     * Syntax: 
     *
     * az resource tag --tags
     *                 [--api-version]
     *                 [--ids]
     *                 [--is-incremental]
     *                 [--latest-include-preview]
     *                 [--name]
     *                 [--namespace]
     *                 [--parent]
     *                 [--resource-group]
     *                 [--resource-type]
     *                 [--subscription]
     */
    az_resource_tag(): void {
    }

    /**
     * Update a resource.
     *
     * Syntax: 
     *
     * az resource update [--add]
     *                    [--api-version]
     *                    [--force-string]
     *                    [--ids]
     *                    [--include-response-body {false, true}]
     *                    [--latest-include-preview]
     *                    [--name]
     *                    [--namespace]
     *                    [--parent]
     *                    [--remove]
     *                    [--resource-group]
     *                    [--resource-type]
     *                    [--set]
     *                    [--subscription]
     */
    az_resource_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a resources is met.
     *
     * Syntax: 
     *
     * az resource wait [--api-version]
     *                  [--created]
     *                  [--custom]
     *                  [--deleted]
     *                  [--exists]
     *                  [--ids]
     *                  [--include-response-body {false, true}]
     *                  [--interval]
     *                  [--name]
     *                  [--namespace]
     *                  [--parent]
     *                  [--resource-group]
     *                  [--resource-type]
     *                  [--subscription]
     *                  [--timeout]
     *                  [--updated]
     */
    az_resource_wait(): void {
    }
}

/** Manage role assignments. */
class az_role_assignment {
    /**
     * Create a new role assignment for a user, group, or service principal.
     *
     * Syntax: 
     *
     * az role assignment create --role
     *                           [--assignee]
     *                           [--assignee-object-id]
     *                           [--assignee-principal-type {Application, DirectoryObjectOrGroup, DirectoryRoleTemplate, Everyone, ForeignGroup, Group, MSI, ServicePrincipal, Unknown, User}]
     *                           [--condition]
     *                           [--condition-version]
     *                           [--description]
     *                           [--resource-group]
     *                           [--scope]
     *                           [--subscription]
     */
    az_role_assignment_create(): void {
    }

    /**
     * Delete role assignments.
     *
     * Syntax: 
     *
     * az role assignment delete [--assignee]
     *                           [--ids]
     *                           [--include-inherited]
     *                           [--resource-group]
     *                           [--role]
     *                           [--scope]
     *                           [--subscription]
     *                           [--yes]
     */
    az_role_assignment_delete(): void {
    }

    /**
     * List role assignments.
     *
     * Syntax: 
     *
     * az role assignment list [--all]
     *                         [--assignee]
     *                         [--include-classic-administrators {false, true}]
     *                         [--include-groups]
     *                         [--include-inherited]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--role]
     *                         [--scope]
     *                         [--subscription]
     */
    az_role_assignment_list(): void {
    }

    /**
     * List changelogs for role assignments.
     *
     * Syntax: 
     *
     * az role assignment list-changelogs [--end-time]
     *                                    [--start-time]
     *                                    [--subscription]
     */
    az_role_assignment_list_changelogs(): void {
    }

    /**
     * Update an existing role assignment for a user, group, or service principal.
     *
     * Syntax: 
     *
     * az role assignment update --role-assignment
     *                           [--subscription]
     */
    az_role_assignment_update(): void {
    }
}

/** Manage role definitions. */
class az_role_definition {
    /**
     * Create a custom role definition.
     *
     * Syntax: 
     *
     * az role definition create --role-definition
     *                           [--subscription]
     */
    az_role_definition_create(): void {
    }

    /**
     * Delete a role definition.
     *
     * Syntax: 
     *
     * az role definition delete --name
     *                           [--custom-role-only {false, true}]
     *                           [--resource-group]
     *                           [--scope]
     *                           [--subscription]
     */
    az_role_definition_delete(): void {
    }

    /**
     * List role definitions.
     *
     * Syntax: 
     *
     * az role definition list [--custom-role-only {false, true}]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--scope]
     *                         [--subscription]
     */
    az_role_definition_list(): void {
    }

    /**
     * Update a role definition.
     *
     * Syntax: 
     *
     * az role definition update --role-definition
     *                           [--subscription]
     */
    az_role_definition_update(): void {
    }
}

/** Manage user roles for access control with Azure Active Directory and service principals. */
class az_role {
}

/** Manage Azure Search admin keys. */
class az_search_admin_key {
    /**
     * Regenerates either the primary or secondary admin API key.
     *
     * Syntax: 
     *
     * az search admin-key renew --key-kind
     *                           --resource-group
     *                           --service-name
     *                           [--subscription]
     */
    az_search_admin_key_renew(): void {
    }

    /**
     * Gets the primary and secondary admin API keys for the specified Azure Search service.
     *
     * Syntax: 
     *
     * az search admin-key show --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_search_admin_key_show(): void {
    }
}

/** Manage Azure Search query keys. */
class az_search_query_key {
    /**
     * Generates a new query key for the specified Search service.
     *
     * Syntax: 
     *
     * az search query-key create --name
     *                            --resource-group
     *                            --service-name
     *                            [--subscription]
     */
    az_search_query_key_create(): void {
    }

    /**
     * Deletes the specified query key.
     *
     * Syntax: 
     *
     * az search query-key delete --key-value
     *                            --resource-group
     *                            --service-name
     *                            [--subscription]
     */
    az_search_query_key_delete(): void {
    }

    /**
     * Returns the list of query API keys for the given Azure Search service.
     *
     * Syntax: 
     *
     * az search query-key list --resource-group
     *                          --service-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_search_query_key_list(): void {
    }
}

/** Manage Azure Search services. */
class az_search_service {
    /**
     * Creates a Search service in the given resource group.
     *
     * Syntax: 
     *
     * az search service create --name
     *                          --resource-group
     *                          --sku
     *                          [--location]
     *                          [--partition-count]
     *                          [--replica-count]
     *                          [--subscription]
     */
    az_search_service_create(): void {
    }

    /**
     * Deletes a Search service in the given resource group, along with its associated resources.
     *
     * Syntax: 
     *
     * az search service delete --name
     *                          --resource-group
     *                          [--subscription]
     *                          [--yes]
     */
    az_search_service_delete(): void {
    }

    /**
     * Gets a list of all Search services in the given resource group.
     *
     * Syntax: 
     *
     * az search service list --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_search_service_list(): void {
    }

    /**
     * Gets the Search service with the given name in the given resource group.
     *
     * Syntax: 
     *
     * az search service show --name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_search_service_show(): void {
    }

    /**
     * Update partition and replica of the given search service.
     *
     * Syntax: 
     *
     * az search service update --name
     *                          --resource-group
     *                          [--add]
     *                          [--force-string]
     *                          [--partition-count]
     *                          [--remove]
     *                          [--replica-count]
     *                          [--set]
     *                          [--subscription]
     */
    az_search_service_update(): void {
    }
}

/** Manage Azure Search services, admin keys and query keys. */
class az_search {
}

/** Enable control which applications can run on your Azure and non-Azure machines (Windows and Linux). */
class az_security_adaptive_application_controls {
    /**
     * Adaptive Application Controls - List.
     *
     * Syntax: 
     *
     * az security adaptive-application-controls list [--query-examples]
     *                                                [--subscription]
     */
    az_security_adaptive_application_controls_list(): void {
    }

    /**
     * Adaptive Application Controls - Get.
     *
     * Syntax: 
     *
     * az security adaptive-application-controls show --group-name
     *                                                [--query-examples]
     *                                                [--subscription]
     */
    az_security_adaptive_application_controls_show(): void {
    }
}

/** View all Adaptive Network Hardening resources. */
class az_security_adaptive_network_hardenings {
    /**
     * Gets a list of Adaptive Network Hardenings resources in scope of an extended resource.
     *
     * Syntax: 
     *
     * az security adaptive_network_hardenings list --resource-group
     *                                              --resource-name
     *                                              --resource-namespace
     *                                              --resource-type
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_security_adaptive_network_hardenings_list(): void {
    }

    /**
     * Gets a single Adaptive Network Hardening resource.
     *
     * Syntax: 
     *
     * az security adaptive_network_hardenings show --adaptive-network-hardenings-resource-name
     *                                              --resource-group
     *                                              --resource-name
     *                                              --resource-namespace
     *                                              --resource-type
     *                                              [--query-examples]
     *                                              [--subscription]
     */
    az_security_adaptive_network_hardenings_show(): void {
    }
}

/** View security alerts. */
class az_security_alert {
    /**
     * List security alerts.
     *
     * Syntax: 
     *
     * az security alert list [--location]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_security_alert_list(): void {
    }

    /**
     * Shows a security alert.
     *
     * Syntax: 
     *
     * az security alert show --location
     *                        --name
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_security_alert_show(): void {
    }

    /**
     * Updates a security alert status.
     *
     * Syntax: 
     *
     * az security alert update --location
     *                          --name
     *                          --status
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_security_alert_update(): void {
    }
}

/** View all possible traffic between resources for the subscription and location, based on connection type. */
class az_security_allowed_connections {
    /**
     * List of all possible traffic between resources for the subscription.
     *
     * Syntax: 
     *
     * az security allowed_connections list [--query-examples]
     *                                      [--subscription]
     */
    az_security_allowed_connections_list(): void {
    }

    /**
     * List all possible traffic between resources for the subscription and location, based on connection type.
     *
     * Syntax: 
     *
     * az security allowed_connections show --name
     *                                      --resource-group
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_security_allowed_connections_show(): void {
    }
}

/** View your security assessment metadata. */
class az_security_assessment_metadata {
    /**
     * Creates a customer managed security assessment type.
     *
     * Syntax: 
     *
     * az security assessment-metadata create --description
     *                                        --display-name
     *                                        --name
     *                                        --severity
     *                                        [--remediation-description]
     *                                        [--subscription]
     */
    az_security_assessment_metadata_create(): void {
    }

    /**
     * Deletes a security assessment type and all it's assessment results.
     *
     * Syntax: 
     *
     * az security assessment-metadata delete --name
     *                                        [--subscription]
     */
    az_security_assessment_metadata_delete(): void {
    }

    /**
     * List all security assessment results.
     *
     * Syntax: 
     *
     * az security assessment-metadata list [--query-examples]
     *                                      [--subscription]
     */
    az_security_assessment_metadata_list(): void {
    }

    /**
     * Shows a security assessment.
     *
     * Syntax: 
     *
     * az security assessment-metadata show --name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_security_assessment_metadata_show(): void {
    }
}

/** View your security assessment results. */
class az_security_assessment {
    /**
     * Creates a customer managed security assessment.
     *
     * Syntax: 
     *
     * az security assessment create --name
     *                               --status-code
     *                               [--additional-data]
     *                               [--assessed-resource-id]
     *                               [--status-cause]
     *                               [--status-description]
     *                               [--subscription]
     */
    az_security_assessment_create(): void {
    }

    /**
     * Deletes a security assessment.
     *
     * Syntax: 
     *
     * az security assessment delete --name
     *                               [--assessed-resource-id]
     *                               [--subscription]
     */
    az_security_assessment_delete(): void {
    }

    /**
     * List all security assessment results.
     *
     * Syntax: 
     *
     * az security assessment list [--query-examples]
     *                             [--subscription]
     */
    az_security_assessment_list(): void {
    }

    /**
     * Shows a security assessment.
     *
     * Syntax: 
     *
     * az security assessment show --name
     *                             [--assessed-resource-id]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_security_assessment_show(): void {
    }
}

/** View and manage Advanced Threat Protection settings for storage accounts. */
class az_security_atp_storage {
    /**
     * Display Advanced Threat Protection settings for a storage account.
     *
     * Syntax: 
     *
     * az security atp storage show --resource-group
     *                              --storage-account
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_security_atp_storage_show(): void {
    }

    /**
     * Toggle status of Advanced Threat Protection for a storage account.
     *
     * Syntax: 
     *
     * az security atp storage update --is-enabled {false, true}
     *                                --resource-group
     *                                --storage-account
     *                                [--subscription]
     */
    az_security_atp_storage_update(): void {
    }
}

/** View and manage Advanced Threat Protection settings. */
class az_security_atp {
}

/** View your auto provisioning settings. */
class az_security_auto_provisioning_setting {
    /**
     * List the auto provisioning settings.
     *
     * Syntax: 
     *
     * az security auto-provisioning-setting list [--query-examples]
     *                                            [--subscription]
     */
    az_security_auto_provisioning_setting_list(): void {
    }

    /**
     * Shows an auto provisioning setting.
     *
     * Syntax: 
     *
     * az security auto-provisioning-setting show --name
     *                                            [--query-examples]
     *                                            [--subscription]
     */
    az_security_auto_provisioning_setting_show(): void {
    }

    /**
     * Updates your automatic provisioning settings on the subscription.
     *
     * Syntax: 
     *
     * az security auto-provisioning-setting update --auto-provision
     *                                              --name
     *                                              [--subscription]
     */
    az_security_auto_provisioning_setting_update(): void {
    }
}

/** View your security contacts. */
class az_security_contact {
    /**
     * Creates a security contact.
     *
     * Syntax: 
     *
     * az security contact create --email
     *                            --name
     *                            [--alert-notifications]
     *                            [--alerts-admins]
     *                            [--phone]
     *                            [--subscription]
     */
    az_security_contact_create(): void {
    }

    /**
     * Deletes a security contact.
     *
     * Syntax: 
     *
     * az security contact delete --name
     *                            [--subscription]
     */
    az_security_contact_delete(): void {
    }

    /**
     * List security contact.
     *
     * Syntax: 
     *
     * az security contact list [--query-examples]
     *                          [--subscription]
     */
    az_security_contact_list(): void {
    }

    /**
     * Shows a security contact.
     *
     * Syntax: 
     *
     * az security contact show --name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_security_contact_show(): void {
    }
}

/** View your discovered security solutions. */
class az_security_discovered_security_solution {
    /**
     * List the discovered security solutions.
     *
     * Syntax: 
     *
     * az security discovered-security-solution list [--query-examples]
     *                                               [--subscription]
     */
    az_security_discovered_security_solution_list(): void {
    }

    /**
     * Shows a discovered security solution.
     *
     * Syntax: 
     *
     * az security discovered-security-solution show --name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_security_discovered_security_solution_show(): void {
    }
}

/** View your external security solutions. */
class az_security_external_security_solution {
    /**
     * List the external security solutions.
     *
     * Syntax: 
     *
     * az security external-security-solution list [--query-examples]
     *                                             [--subscription]
     */
    az_security_external_security_solution_list(): void {
    }

    /**
     * Shows an external security solution.
     *
     * Syntax: 
     *
     * az security external-security-solution show --name
     *                                             --resource-group
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_security_external_security_solution_show(): void {
    }
}

/** View IoT Security aggregated alerts. */
class az_security_iot_alerts {
    /**
     * Dismiss an aggregated IoT Security Alert.
     *
     * Syntax: 
     *
     * az security iot-alerts delete --name
     *                               --resource-group
     *                               --solution-name
     *                               [--subscription]
     */
    az_security_iot_alerts_delete(): void {
    }

    /**
     * List all yours IoT Security solution aggregated alerts.
     *
     * Syntax: 
     *
     * az security iot-alerts list --resource-group
     *                             --solution-name
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_security_iot_alerts_list(): void {
    }

    /**
     * Shows a single aggregated alert of yours IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-alerts show --name
     *                             --resource-group
     *                             --solution-name
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_security_iot_alerts_show(): void {
    }
}

/** View IoT Security Analytics metrics. */
class az_security_iot_analytics {
    /**
     * List all IoT security Analytics metrics.
     *
     * Syntax: 
     *
     * az security iot-analytics list --resource-group
     *                                --solution-name
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_security_iot_analytics_list(): void {
    }

    /**
     * Shows IoT Security Analytics metrics.
     *
     * Syntax: 
     *
     * az security iot-analytics show --resource-group
     *                                --solution-name
     *                                [--query-examples]
     *                                [--subscription]
     */
    az_security_iot_analytics_show(): void {
    }
}

/** View IoT Security aggregated recommendations. */
class az_security_iot_recommendations {
    /**
     * List all yours IoT Security solution aggregated recommendations.
     *
     * Syntax: 
     *
     * az security iot-recommendations list --resource-group
     *                                      --solution-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_security_iot_recommendations_list(): void {
    }

    /**
     * Shows a single aggregated recommendation of yours IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-recommendations show --name
     *                                      --resource-group
     *                                      --solution-name
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_security_iot_recommendations_show(): void {
    }
}

/** Manage your IoT Security solution. */
class az_security_iot_solution {
    /**
     * Create your IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-solution create --display-name
     *                                 --iot-hubs
     *                                 --location
     *                                 --resource-group
     *                                 --solution-name
     *                                 [--subscription]
     */
    az_security_iot_solution_create(): void {
    }

    /**
     * Delete your IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-solution delete --resource-group
     *                                 --solution-name
     *                                 [--subscription]
     */
    az_security_iot_solution_delete(): void {
    }

    /**
     * List all IoT Security solutions.
     *
     * Syntax: 
     *
     * az security iot-solution list [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_security_iot_solution_list(): void {
    }

    /**
     * Shows a IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-solution show --resource-group
     *                               --solution-name
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_security_iot_solution_show(): void {
    }

    /**
     * Update your IoT Security solution.
     *
     * Syntax: 
     *
     * az security iot-solution update --resource-group
     *                                 --solution-name
     *                                 [--display-name]
     *                                 [--iot-hubs]
     *                                 [--subscription]
     */
    az_security_iot_solution_update(): void {
    }
}

/** Manage your Just in Time network access policies. */
class az_security_jit_policy {
    /**
     * List your Just in Time network access policies.
     *
     * Syntax: 
     *
     * az security jit-policy list [--location]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_security_jit_policy_list(): void {
    }

    /**
     * Shows a Just in Time network access policy.
     *
     * Syntax: 
     *
     * az security jit-policy show --location
     *                             --name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_security_jit_policy_show(): void {
    }
}

/** Shows the Azure Security Center Home region location. */
class az_security_location {
    /**
     * Shows the Azure Security Center Home region location.
     *
     * Syntax: 
     *
     * az security location list [--query-examples]
     *                           [--subscription]
     */
    az_security_location_list(): void {
    }

    /**
     * Shows the Azure Security Center Home region location.
     *
     * Syntax: 
     *
     * az security location show --name
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_security_location_show(): void {
    }
}

/** Shows the Azure Security Center Pricing tier for the subscription. */
class az_security_pricing {
    /**
     * Updates the Azure Security Center Pricing tier for the subscription.
     *
     * Syntax: 
     *
     * az security pricing create --name
     *                            --tier
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_security_pricing_create(): void {
    }

    /**
     * Shows the Azure Security Center Pricing tier for the subscription.
     *
     * Syntax: 
     *
     * az security pricing list [--query-examples]
     *                          [--subscription]
     */
    az_security_pricing_list(): void {
    }

    /**
     * Shows the Azure Security Center Pricing tier for the subscription.
     *
     * Syntax: 
     *
     * az security pricing show --name
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_security_pricing_show(): void {
    }
}

/** Regulatory compliance assessments. */
class az_security_regulatory_compliance_assessments {
    /**
     * Get details and state of assessments mapped to selected regulatory compliance control.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-assessments list --control-name
     *                                                    --standard-name
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_security_regulatory_compliance_assessments_list(): void {
    }

    /**
     * Shows supported regulatory compliance details and state for selected assessment.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-assessments show --control-name
     *                                                    --name
     *                                                    --standard-name
     *                                                    [--query-examples]
     *                                                    [--subscription]
     */
    az_security_regulatory_compliance_assessments_show(): void {
    }
}

/** Regulatory compliance controls. */
class az_security_regulatory_compliance_controls {
    /**
     * List supported of regulatory compliance controls details and state for selected standard.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-controls list --standard-name
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_security_regulatory_compliance_controls_list(): void {
    }

    /**
     * Shows a regulatory compliance details state for selected standard.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-controls show --name
     *                                                 --standard-name
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_security_regulatory_compliance_controls_show(): void {
    }
}

/** Regulatory compliance standards. */
class az_security_regulatory_compliance_standards {
    /**
     * List supported regulatory compliance standards details and state results.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-standards list [--query-examples]
     *                                                  [--subscription]
     */
    az_security_regulatory_compliance_standards_list(): void {
    }

    /**
     * Shows a regulatory compliance details state for selected standard.
     *
     * Syntax: 
     *
     * az security regulatory-compliance-standards show --name
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_security_regulatory_compliance_standards_show(): void {
    }
}

/** View your security settings. */
class az_security_setting {
    /**
     * List security settings.
     *
     * Syntax: 
     *
     * az security setting list [--query-examples]
     *                          [--subscription]
     */
    az_security_setting_list(): void {
    }

    /**
     * Shows a security setting.
     *
     * Syntax: 
     *
     * az security setting show --name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_security_setting_show(): void {
    }
}

/** View your security sub assessments. */
class az_security_sub_assessment {
    /**
     * List all security sub assessment results.
     *
     * Syntax: 
     *
     * az security sub-assessment list [--assessed-resource-id]
     *                                 [--assessment-name]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_security_sub_assessment_list(): void {
    }

    /**
     * Shows a security sub assessment.
     *
     * Syntax: 
     *
     * az security sub-assessment show --assessment-name
     *                                 --name
     *                                 [--assessed-resource-id]
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_security_sub_assessment_show(): void {
    }
}

/** View security tasks (recommendations). */
class az_security_task {
    /**
     * List security tasks (recommendations).
     *
     * Syntax: 
     *
     * az security task list [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_security_task_list(): void {
    }

    /**
     * Shows a security task (recommendation).
     *
     * Syntax: 
     *
     * az security task show --name
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_security_task_show(): void {
    }
}

/** Shows the network topology in your subscription. */
class az_security_topology {
    /**
     * Shows the network topology in your subscription.
     *
     * Syntax: 
     *
     * az security topology list [--query-examples]
     *                           [--subscription]
     */
    az_security_topology_list(): void {
    }

    /**
     * Shows the network topology in your subscription.
     *
     * Syntax: 
     *
     * az security topology show --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_security_topology_show(): void {
    }
}

/** Shows the workspace settings in your subscription - these settings let you control which workspace will hold your security data. */
class az_security_workspace_setting {
    /**
     * Creates a workspace settings in your subscription - these settings let you control which workspace will hold your security data.
     *
     * Syntax: 
     *
     * az security workspace-setting create --name
     *                                      --target-workspace
     *                                      [--subscription]
     */
    az_security_workspace_setting_create(): void {
    }

    /**
     * Deletes the workspace settings in your subscription - this will make the security events on the subscription be reported to the default workspace.
     *
     * Syntax: 
     *
     * az security workspace-setting delete --name
     *                                      [--subscription]
     */
    az_security_workspace_setting_delete(): void {
    }

    /**
     * Shows the workspace settings in your subscription - these settings let you control which workspace will hold your security data.
     *
     * Syntax: 
     *
     * az security workspace-setting list [--query-examples]
     *                                    [--subscription]
     */
    az_security_workspace_setting_list(): void {
    }

    /**
     * Shows the workspace settings in your subscription - these settings let you control which workspace will hold your security data.
     *
     * Syntax: 
     *
     * az security workspace-setting show --name
     *                                    [--query-examples]
     *                                    [--subscription]
     */
    az_security_workspace_setting_show(): void {
    }
}

/** Manage your security posture with Azure Security Center. */
class az_security {
}

/** Manage Azure Authorization Rule keys for Service Bus Namespace. */
class az_servicebus_georecovery_alias_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for the Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias authorization-rule keys list --alias
     *                                                              --name
     *                                                              --namespace-name
     *                                                              --resource-group
     *                                                              [--query-examples]
     *                                                              [--subscription]
     */
    az_servicebus_georecovery_alias_authorization_rule_keys_list(): void {
    }
}

/** Manage Azure Service Bus Authorization Rule for Namespace with Geo-Disaster Recovery Configuration Alias. */
class az_servicebus_georecovery_alias_authorization_rule {
    /**
     * Shows the list of Authorization Rule by Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias authorization-rule list --alias
     *                                                         --namespace-name
     *                                                         --resource-group
     *                                                         [--query-examples]
     *                                                         [--subscription]
     */
    az_servicebus_georecovery_alias_authorization_rule_list(): void {
    }

    /**
     * Gets an authorization rule for a namespace by rule name.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias authorization-rule show [--alias]
     *                                                         [--ids]
     *                                                         [--name]
     *                                                         [--namespace-name]
     *                                                         [--query-examples]
     *                                                         [--resource-group]
     *                                                         [--subscription]
     */
    az_servicebus_georecovery_alias_authorization_rule_show(): void {
    }
}

/** Manage Azure Service Bus Geo-Disaster Recovery Configuration Alias. */
class az_servicebus_georecovery_alias {
    /**
     * Disables Service Bus Geo-Disaster Recovery Configuration Alias and stops replicating changes from primary to secondary namespaces.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias break-pair [--alias]
     *                                            [--ids]
     *                                            [--namespace-name]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_servicebus_georecovery_alias_break_pair(): void {
    }

    /**
     * Deletes Service Bus Geo-Disaster Recovery Configuration Alias request accepted.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias delete [--alias]
     *                                        [--ids]
     *                                        [--namespace-name]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_servicebus_georecovery_alias_delete(): void {
    }

    /**
     * Check if Geo Recovery Alias Name is available.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias exists --alias
     *                                        --namespace-name
     *                                        --resource-group
     *                                        [--subscription]
     */
    az_servicebus_georecovery_alias_exists(): void {
    }

    /**
     * Invokes Service Bus Geo-Disaster Recovery Configuration Alias failover and re-configure the alias to point to the secondary namespace.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias fail-over [--alias]
     *                                           [--ids]
     *                                           [--namespace-name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_servicebus_georecovery_alias_fail_over(): void {
    }

    /**
     * Gets all Alias(Disaster Recovery configurations).
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias list --namespace-name
     *                                      --resource-group
     *                                      [--query-examples]
     *                                      [--subscription]
     */
    az_servicebus_georecovery_alias_list(): void {
    }

    /**
     * Sets Service Bus Geo-Disaster Recovery Configuration Alias for the give Namespace.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias set --partner-namespace
     *                                     [--alias]
     *                                     [--alternate-name]
     *                                     [--ids]
     *                                     [--namespace-name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_servicebus_georecovery_alias_set(): void {
    }

    /**
     * Shows properties of Service Bus Geo-Disaster Recovery Configuration Alias for Primay/Secondary Namespace.
     *
     * Syntax: 
     *
     * az servicebus georecovery-alias show [--alias]
     *                                      [--ids]
     *                                      [--namespace-name]
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_servicebus_georecovery_alias_show(): void {
    }
}

/** Manage Azure Service Bus Migration of Standard to Premium. */
class az_servicebus_migration {
    /**
     * Disable the Service Bus Migration of Standard to Premium namespace.
     *
     * Syntax: 
     *
     * az servicebus migration abort [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_servicebus_migration_abort(): void {
    }

    /**
     * Completes the Service Bus Migration of Standard to Premium namespace.
     *
     * Syntax: 
     *
     * az servicebus migration complete [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_servicebus_migration_complete(): void {
    }

    /**
     * Shows properties of properties of Service Bus Migration.
     *
     * Syntax: 
     *
     * az servicebus migration show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_servicebus_migration_show(): void {
    }

    /**
     * Create and Start Service Bus Migration of Standard to Premium namespace.
     *
     * Syntax: 
     *
     * az servicebus migration start --post-migration-name
     *                               --target-namespace
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_servicebus_migration_start(): void {
    }
}

/** Manage Azure Authorization Rule connection strings for Namespace. */
class az_servicebus_namespace_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule keys list --name
     *                                                      --namespace-name
     *                                                      --resource-group
     *                                                      [--query-examples]
     *                                                      [--subscription]
     */
    az_servicebus_namespace_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for the Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                       [--ids]
     *                                                       [--key-value]
     *                                                       [--name]
     *                                                       [--namespace-name]
     *                                                       [--resource-group]
     *                                                       [--subscription]
     */
    az_servicebus_namespace_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Service Bus Namespace Authorization Rule. */
class az_servicebus_namespace_authorization_rule {
    /**
     * Create Authorization Rule for the given Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule create --name
     *                                                   --namespace-name
     *                                                   --resource-group
     *                                                   --rights {Listen, Manage, Send}
     *                                                   [--subscription]
     */
    az_servicebus_namespace_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorization Rule of the Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule delete [--ids]
     *                                                   [--name]
     *                                                   [--namespace-name]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_servicebus_namespace_authorization_rule_delete(): void {
    }

    /**
     * Shows the list of Authorization Rule by Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule list --namespace-name
     *                                                 --resource-group
     *                                                 [--query-examples]
     *                                                 [--subscription]
     */
    az_servicebus_namespace_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Service Bus Namespace Authorization Rule.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule show [--ids]
     *                                                 [--name]
     *                                                 [--namespace-name]
     *                                                 [--query-examples]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_servicebus_namespace_authorization_rule_show(): void {
    }

    /**
     * Updates Authorization Rule for the given Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace authorization-rule update --rights {Listen, Manage, Send}
     *                                                   [--add]
     *                                                   [--force-string]
     *                                                   [--ids]
     *                                                   [--name]
     *                                                   [--namespace-name]
     *                                                   [--remove]
     *                                                   [--resource-group]
     *                                                   [--set]
     *                                                   [--subscription]
     */
    az_servicebus_namespace_authorization_rule_update(): void {
    }
}

/** Manage Azure ServiceBus networkruleSet for namespace. */
class az_servicebus_namespace_network_rule {
    /**
     * Add a network rule for a namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace network-rule add --namespace-name
     *                                          --resource-group
     *                                          [--action {Allow}]
     *                                          [--ignore-missing-endpoint {false, true}]
     *                                          [--ip-address]
     *                                          [--subnet]
     *                                          [--subscription]
     *                                          [--vnet-name]
     */
    az_servicebus_namespace_network_rule_add(): void {
    }

    /**
     * Show properties of Network rule of the given Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace network-rule list --namespace-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_servicebus_namespace_network_rule_list(): void {
    }

    /**
     * Remove network rule for a namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace network-rule remove --namespace-name
     *                                             --resource-group
     *                                             [--ip-address]
     *                                             [--subnet]
     *                                             [--subscription]
     *                                             [--vnet-name]
     */
    az_servicebus_namespace_network_rule_remove(): void {
    }
}

/** Manage Azure Service Bus Namespace. */
class az_servicebus_namespace {
    /**
     * Create a Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace create --name
     *                                --resource-group
     *                                [--capacity {1, 2, 4, 8}]
     *                                [--default-action]
     *                                [--location]
     *                                [--sku {Basic, Premium, Standard}]
     *                                [--subscription]
     *                                [--tags]
     */
    az_servicebus_namespace_create(): void {
    }

    /**
     * Deletes the Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace delete [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_servicebus_namespace_delete(): void {
    }

    /**
     * Check for the availability of the given name for the Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace exists --name
     *                                [--subscription]
     */
    az_servicebus_namespace_exists(): void {
    }

    /**
     * List the Service Bus Namespaces.
     *
     * Syntax: 
     *
     * az servicebus namespace list [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_servicebus_namespace_list(): void {
    }

    /**
     * Shows the Service Bus Namespace details.
     *
     * Syntax: 
     *
     * az servicebus namespace show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_servicebus_namespace_show(): void {
    }

    /**
     * Updates a Service Bus Namespace.
     *
     * Syntax: 
     *
     * az servicebus namespace update [--add]
     *                                [--capacity {1, 2, 4, 8}]
     *                                [--default-action]
     *                                [--force-string]
     *                                [--ids]
     *                                [--name]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--set]
     *                                [--sku {Basic, Premium, Standard}]
     *                                [--subscription]
     *                                [--tags]
     */
    az_servicebus_namespace_update(): void {
    }
}

/** Manage Azure Authorization Rule keys for Service Bus Queue. */
class az_servicebus_queue_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for the given Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule keys list --name
     *                                                  --namespace-name
     *                                                  --queue-name
     *                                                  --resource-group
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_servicebus_queue_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                   [--ids]
     *                                                   [--key-value]
     *                                                   [--name]
     *                                                   [--namespace-name]
     *                                                   [--queue-name]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_servicebus_queue_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Service Bus Queue Authorization Rule. */
class az_servicebus_queue_authorization_rule {
    /**
     * Create Authorization Rule for the given Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule create --name
     *                                               --namespace-name
     *                                               --queue-name
     *                                               --resource-group
     *                                               --rights {Listen, Manage, Send}
     *                                               [--subscription]
     */
    az_servicebus_queue_authorization_rule_create(): void {
    }

    /**
     * Delete the Authorization Rule of Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule delete [--ids]
     *                                               [--name]
     *                                               [--namespace-name]
     *                                               [--queue-name]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_servicebus_queue_authorization_rule_delete(): void {
    }

    /**
     * List of Authorization Rule by Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule list --namespace-name
     *                                             --queue-name
     *                                             --resource-group
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_servicebus_queue_authorization_rule_list(): void {
    }

    /**
     * Show properties of Authorization Rule for the given Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule show [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--query-examples]
     *                                             [--queue-name]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_servicebus_queue_authorization_rule_show(): void {
    }

    /**
     * Update Authorization Rule for the given Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue authorization-rule update --rights {Listen, Manage, Send}
     *                                               [--add]
     *                                               [--force-string]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--namespace-name]
     *                                               [--queue-name]
     *                                               [--remove]
     *                                               [--resource-group]
     *                                               [--set]
     *                                               [--subscription]
     */
    az_servicebus_queue_authorization_rule_update(): void {
    }
}

/** Manage Azure Service Bus Queue and Authorization Rule. */
class az_servicebus_queue {
    /**
     * Create the Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue create --name
     *                            --namespace-name
     *                            --resource-group
     *                            [--auto-delete-on-idle]
     *                            [--default-message-time-to-live]
     *                            [--duplicate-detection-history-time-window]
     *                            [--enable-batched-operations {false, true}]
     *                            [--enable-dead-lettering-on-message-expiration {false, true}]
     *                            [--enable-duplicate-detection {false, true}]
     *                            [--enable-express {false, true}]
     *                            [--enable-partitioning {false, true}]
     *                            [--enable-session {false, true}]
     *                            [--forward-dead-lettered-messages-to]
     *                            [--forward-to]
     *                            [--lock-duration]
     *                            [--max-delivery-count]
     *                            [--max-size {1024, 10240, 2048, 20480, 3072, 4096, 40960, 5120, 81920}]
     *                            [--status {Active, Disabled, SendDisabled}]
     *                            [--subscription]
     */
    az_servicebus_queue_create(): void {
    }

    /**
     * Deletes the Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue delete [--ids]
     *                            [--name]
     *                            [--namespace-name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_servicebus_queue_delete(): void {
    }

    /**
     * List the Queue by Service Bus Namepsace.
     *
     * Syntax: 
     *
     * az servicebus queue list --namespace-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--skip]
     *                          [--subscription]
     *                          [--top]
     */
    az_servicebus_queue_list(): void {
    }

    /**
     * Shows the Service Bus Queue Details.
     *
     * Syntax: 
     *
     * az servicebus queue show [--ids]
     *                          [--name]
     *                          [--namespace-name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_servicebus_queue_show(): void {
    }

    /**
     * Updates existing Service Bus Queue.
     *
     * Syntax: 
     *
     * az servicebus queue update [--add]
     *                            [--auto-delete-on-idle]
     *                            [--default-message-time-to-live]
     *                            [--duplicate-detection-history-time-window]
     *                            [--enable-batched-operations {false, true}]
     *                            [--enable-dead-lettering-on-message-expiration {false, true}]
     *                            [--enable-duplicate-detection {false, true}]
     *                            [--enable-express {false, true}]
     *                            [--enable-partitioning {false, true}]
     *                            [--enable-session {false, true}]
     *                            [--force-string]
     *                            [--forward-dead-lettered-messages-to]
     *                            [--forward-to]
     *                            [--ids]
     *                            [--lock-duration]
     *                            [--max-delivery-count]
     *                            [--max-size {1024, 10240, 2048, 20480, 3072, 4096, 40960, 5120, 81920}]
     *                            [--name]
     *                            [--namespace-name]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--status {Active, Disabled, SendDisabled}]
     *                            [--subscription]
     */
    az_servicebus_queue_update(): void {
    }
}

/** Manage Azure Authorization Rule keys for Service Bus Topic. */
class az_servicebus_topic_authorization_rule_keys {
    /**
     * List the keys and connection strings of Authorization Rule for Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule keys list --name
     *                                                  --namespace-name
     *                                                  --resource-group
     *                                                  --topic-name
     *                                                  [--query-examples]
     *                                                  [--subscription]
     */
    az_servicebus_topic_authorization_rule_keys_list(): void {
    }

    /**
     * Regenerate keys of Authorization Rule for Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule keys renew --key {PrimaryKey, SecondaryKey}
     *                                                   [--ids]
     *                                                   [--key-value]
     *                                                   [--name]
     *                                                   [--namespace-name]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     *                                                   [--topic-name]
     */
    az_servicebus_topic_authorization_rule_keys_renew(): void {
    }
}

/** Manage Azure Service Bus Topic Authorization Rule. */
class az_servicebus_topic_authorization_rule {
    /**
     * Create Authorization Rule for given Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule create --name
     *                                               --namespace-name
     *                                               --resource-group
     *                                               --rights {Listen, Manage, Send}
     *                                               --topic-name
     *                                               [--subscription]
     */
    az_servicebus_topic_authorization_rule_create(): void {
    }

    /**
     * Deletes the Authorization Rule of the given Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule delete [--ids]
     *                                               [--name]
     *                                               [--namespace-name]
     *                                               [--resource-group]
     *                                               [--subscription]
     *                                               [--topic-name]
     */
    az_servicebus_topic_authorization_rule_delete(): void {
    }

    /**
     * Shows list of Authorization Rule by Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule list --namespace-name
     *                                             --resource-group
     *                                             --topic-name
     *                                             [--query-examples]
     *                                             [--subscription]
     */
    az_servicebus_topic_authorization_rule_list(): void {
    }

    /**
     * Shows the details of Authorization Rule for given Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule show [--ids]
     *                                             [--name]
     *                                             [--namespace-name]
     *                                             [--query-examples]
     *                                             [--resource-group]
     *                                             [--subscription]
     *                                             [--topic-name]
     */
    az_servicebus_topic_authorization_rule_show(): void {
    }

    /**
     * Create Authorization Rule for given Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic authorization-rule update --rights {Listen, Manage, Send}
     *                                               [--add]
     *                                               [--force-string]
     *                                               [--ids]
     *                                               [--name]
     *                                               [--namespace-name]
     *                                               [--remove]
     *                                               [--resource-group]
     *                                               [--set]
     *                                               [--subscription]
     *                                               [--topic-name]
     */
    az_servicebus_topic_authorization_rule_update(): void {
    }
}

/** Manage Azure Service Bus Rule. */
class az_servicebus_topic_subscription_rule {
    /**
     * Create the ServiceBus Rule for Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription rule create --name
     *                                              --namespace-name
     *                                              --resource-group
     *                                              --subscription-name
     *                                              --topic-name
     *                                              [--action-compatibility-level]
     *                                              [--action-sql-expression]
     *                                              [--content-type]
     *                                              [--correlation-id]
     *                                              [--enable-action-preprocessing {false, true}]
     *                                              [--enable-correlation-preprocessing {false, true}]
     *                                              [--enable-sql-preprocessing {false, true}]
     *                                              [--filter-sql-expression]
     *                                              [--label]
     *                                              [--message-id]
     *                                              [--reply-to]
     *                                              [--reply-to-session-id]
     *                                              [--session-id]
     *                                              [--subscription]
     *                                              [--to]
     */
    az_servicebus_topic_subscription_rule_create(): void {
    }

    /**
     * Deletes the ServiceBus Rule.
     *
     * Syntax: 
     *
     * az servicebus topic subscription rule delete [--ids]
     *                                              [--name]
     *                                              [--namespace-name]
     *                                              [--resource-group]
     *                                              [--subscription]
     *                                              [--subscription-name]
     *                                              [--topic-name]
     */
    az_servicebus_topic_subscription_rule_delete(): void {
    }

    /**
     * List the ServiceBus Rule by Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription rule list --namespace-name
     *                                            --resource-group
     *                                            --subscription-name
     *                                            --topic-name
     *                                            [--query-examples]
     *                                            [--skip]
     *                                            [--subscription]
     *                                            [--top]
     */
    az_servicebus_topic_subscription_rule_list(): void {
    }

    /**
     * Shows ServiceBus Rule Details.
     *
     * Syntax: 
     *
     * az servicebus topic subscription rule show [--ids]
     *                                            [--name]
     *                                            [--namespace-name]
     *                                            [--query-examples]
     *                                            [--resource-group]
     *                                            [--subscription]
     *                                            [--subscription-name]
     *                                            [--topic-name]
     */
    az_servicebus_topic_subscription_rule_show(): void {
    }

    /**
     * Updates the ServiceBus Rule for Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription rule update [--action-compatibility-level]
     *                                              [--action-sql-expression]
     *                                              [--add]
     *                                              [--content-type]
     *                                              [--correlation-id]
     *                                              [--enable-action-preprocessing {false, true}]
     *                                              [--enable-correlation-preprocessing {false, true}]
     *                                              [--enable-sql-preprocessing {false, true}]
     *                                              [--filter-sql-expression]
     *                                              [--force-string]
     *                                              [--ids]
     *                                              [--label]
     *                                              [--message-id]
     *                                              [--name]
     *                                              [--namespace-name]
     *                                              [--remove]
     *                                              [--reply-to]
     *                                              [--reply-to-session-id]
     *                                              [--resource-group]
     *                                              [--session-id]
     *                                              [--set]
     *                                              [--subscription]
     *                                              [--subscription-name]
     *                                              [--to]
     *                                              [--topic-name]
     */
    az_servicebus_topic_subscription_rule_update(): void {
    }
}

/** Manage Azure Service Bus Subscription. */
class az_servicebus_topic_subscription {
    /**
     * Create the ServiceBus Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription create --name
     *                                         --namespace-name
     *                                         --resource-group
     *                                         --topic-name
     *                                         [--auto-delete-on-idle]
     *                                         [--dead-letter-on-filter-exceptions {false, true}]
     *                                         [--default-message-time-to-live]
     *                                         [--enable-batched-operations {false, true}]
     *                                         [--enable-dead-lettering-on-message-expiration {false, true}]
     *                                         [--enable-session {false, true}]
     *                                         [--forward-dead-lettered-messages-to]
     *                                         [--forward-to]
     *                                         [--lock-duration]
     *                                         [--max-delivery-count]
     *                                         [--status {Active, Disabled, ReceiveDisabled, SendDisabled}]
     *                                         [--subscription]
     */
    az_servicebus_topic_subscription_create(): void {
    }

    /**
     * Deletes the Service Bus Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription delete [--ids]
     *                                         [--name]
     *                                         [--namespace-name]
     *                                         [--resource-group]
     *                                         [--subscription]
     *                                         [--topic-name]
     */
    az_servicebus_topic_subscription_delete(): void {
    }

    /**
     * List the Subscription by Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic subscription list --namespace-name
     *                                       --resource-group
     *                                       --topic-name
     *                                       [--query-examples]
     *                                       [--skip]
     *                                       [--subscription]
     *                                       [--top]
     */
    az_servicebus_topic_subscription_list(): void {
    }

    /**
     * Shows Service Bus Subscription Details.
     *
     * Syntax: 
     *
     * az servicebus topic subscription show [--ids]
     *                                       [--name]
     *                                       [--namespace-name]
     *                                       [--query-examples]
     *                                       [--resource-group]
     *                                       [--subscription]
     *                                       [--topic-name]
     */
    az_servicebus_topic_subscription_show(): void {
    }

    /**
     * Updates the ServiceBus Subscription.
     *
     * Syntax: 
     *
     * az servicebus topic subscription update [--add]
     *                                         [--auto-delete-on-idle]
     *                                         [--dead-letter-on-filter-exceptions {false, true}]
     *                                         [--default-message-time-to-live]
     *                                         [--enable-batched-operations {false, true}]
     *                                         [--enable-dead-lettering-on-message-expiration {false, true}]
     *                                         [--enable-session {false, true}]
     *                                         [--force-string]
     *                                         [--forward-dead-lettered-messages-to]
     *                                         [--forward-to]
     *                                         [--ids]
     *                                         [--lock-duration]
     *                                         [--max-delivery-count]
     *                                         [--name]
     *                                         [--namespace-name]
     *                                         [--remove]
     *                                         [--resource-group]
     *                                         [--set]
     *                                         [--status {Active, Disabled, ReceiveDisabled, SendDisabled}]
     *                                         [--subscription]
     *                                         [--topic-name]
     */
    az_servicebus_topic_subscription_update(): void {
    }
}

/** Manage Azure Service Bus Topic and Authorization Rule. */
class az_servicebus_topic {
    /**
     * Create the Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic create --name
     *                            --namespace-name
     *                            --resource-group
     *                            [--auto-delete-on-idle]
     *                            [--default-message-time-to-live]
     *                            [--duplicate-detection-history-time-window]
     *                            [--enable-batched-operations {false, true}]
     *                            [--enable-duplicate-detection {false, true}]
     *                            [--enable-express {false, true}]
     *                            [--enable-ordering {false, true}]
     *                            [--enable-partitioning {false, true}]
     *                            [--max-size {1024, 10240, 2048, 20480, 3072, 4096, 40960, 5120, 81920}]
     *                            [--status {Active, Disabled, SendDisabled}]
     *                            [--subscription]
     */
    az_servicebus_topic_create(): void {
    }

    /**
     * Deletes the Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic delete [--ids]
     *                            [--name]
     *                            [--namespace-name]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_servicebus_topic_delete(): void {
    }

    /**
     * List the Topic by Service Bus Namepsace.
     *
     * Syntax: 
     *
     * az servicebus topic list --namespace-name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--skip]
     *                          [--subscription]
     *                          [--top]
     */
    az_servicebus_topic_list(): void {
    }

    /**
     * Shows the Service Bus Topic Details.
     *
     * Syntax: 
     *
     * az servicebus topic show [--ids]
     *                          [--name]
     *                          [--namespace-name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_servicebus_topic_show(): void {
    }

    /**
     * Updates the Service Bus Topic.
     *
     * Syntax: 
     *
     * az servicebus topic update [--add]
     *                            [--auto-delete-on-idle]
     *                            [--default-message-time-to-live]
     *                            [--duplicate-detection-history-time-window]
     *                            [--enable-batched-operations {false, true}]
     *                            [--enable-duplicate-detection {false, true}]
     *                            [--enable-express {false, true}]
     *                            [--enable-ordering {false, true}]
     *                            [--enable-partitioning {false, true}]
     *                            [--force-string]
     *                            [--ids]
     *                            [--max-size {1024, 10240, 2048, 20480, 3072, 4096, 40960, 5120, 81920}]
     *                            [--name]
     *                            [--namespace-name]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--set]
     *                            [--status {Active, Disabled, SendDisabled}]
     *                            [--subscription]
     */
    az_servicebus_topic_update(): void {
    }
}

/** Manage Azure Service Bus namespaces, queues, topics, subscriptions, rules and geo-disaster recovery configuration alias. */
class az_servicebus {
}

/** Manage the certificate of an application. */
class az_sf_application_certificate {
    /**
     * Add a new certificate to the Virtual Machine Scale Sets that make up the cluster to be used by hosted applications.
     *
     * Syntax: 
     *
     * az sf application certificate add --cluster-name
     *                                   --resource-group
     *                                   [--cert-out-folder]
     *                                   [--cert-subject-name]
     *                                   [--certificate-file]
     *                                   [--certificate-password]
     *                                   [--secret-identifier]
     *                                   [--subscription]
     *                                   [--vault-name]
     *                                   [--vault-resource-group]
     */
    az_sf_application_certificate_add(): void {
    }
}

/** Manage application type versions on an Azure Service Fabric cluster. */
class az_sf_application_type_version {
    /**
     * Create a new application type on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application-type version create --application-type-name
     *                                       --application-type-version
     *                                       --cluster-name
     *                                       --package-url
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_sf_application_type_version_create(): void {
    }

    /**
     * Delete an application type version.
     *
     * Syntax: 
     *
     * az sf application-type version delete --application-type-name
     *                                       --application-type-version
     *                                       --cluster-name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_sf_application_type_version_delete(): void {
    }

    /**
     * List version of a given application type.
     *
     * Syntax: 
     *
     * az sf application-type version list --application-type-name
     *                                     --cluster-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_sf_application_type_version_list(): void {
    }

    /**
     * Show the properties of an application type version on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application-type version show --application-type-name
     *                                     --application-type-version
     *                                     --cluster-name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_sf_application_type_version_show(): void {
    }
}

/** Manage application types on an Azure Service Fabric cluster. */
class az_sf_application_type {
    /**
     * Create a new application type on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application-type create --application-type-name
     *                               --cluster-name
     *                               --resource-group
     *                               [--subscription]
     */
    az_sf_application_type_create(): void {
    }

    /**
     * Delete an application type.
     *
     * Syntax: 
     *
     * az sf application-type delete --application-type-name
     *                               --cluster-name
     *                               --resource-group
     *                               [--subscription]
     */
    az_sf_application_type_delete(): void {
    }

    /**
     * List application types of a given cluster.
     *
     * Syntax: 
     *
     * az sf application-type list --cluster-name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_sf_application_type_list(): void {
    }

    /**
     * Show the properties of an application type on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application-type show --application-type-name
     *                             --cluster-name
     *                             --resource-group
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_sf_application_type_show(): void {
    }
}

/** Manage applications running on an Azure Service Fabric cluster. */
class az_sf_application {
    /**
     * Create a new application on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application create --application-name
     *                          --application-type-name
     *                          --application-type-version
     *                          --cluster-name
     *                          --resource-group
     *                          [--application-parameters]
     *                          [--max-nodes]
     *                          [--min-nodes]
     *                          [--package-url]
     *                          [--subscription]
     */
    az_sf_application_create(): void {
    }

    /**
     * Delete an application.
     *
     * Syntax: 
     *
     * az sf application delete --application-name
     *                          --cluster-name
     *                          --resource-group
     *                          [--subscription]
     */
    az_sf_application_delete(): void {
    }

    /**
     * List applications of a given cluster.
     *
     * Syntax: 
     *
     * az sf application list --cluster-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_sf_application_list(): void {
    }

    /**
     * Show the properties of an application on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf application show --application-name
     *                        --cluster-name
     *                        --resource-group
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_sf_application_show(): void {
    }

    /**
     * Update a Azure Service Fabric application. This allows updating the application parameters and/or upgrade the application type version which will trigger an application upgrade.
     *
     * Syntax: 
     *
     * az sf application update --application-name
     *                          --cluster-name
     *                          --resource-group
     *                          [--application-parameters]
     *                          [--application-type-version]
     *                          [--consider-warning-as-error {false, true}]
     *                          [--failure-action {Manual, Rollback}]
     *                          [--force-restart {false, true}]
     *                          [--hc-retry-timeout]
     *                          [--hc-stable-duration]
     *                          [--hc-wait-duration]
     *                          [--max-nodes]
     *                          [--max-porcent-unhealthy-apps]
     *                          [--max-porcent-unhealthy-partitions]
     *                          [--max-porcent-unhealthy-replicas]
     *                          [--max-porcent-unhealthy-services]
     *                          [--min-nodes]
     *                          [--rep-check-timeout]
     *                          [--service-type-health-policy-map]
     *                          [--subscription]
     *                          [--ud-timeout]
     *                          [--upgrade-timeout]
     */
    az_sf_application_update(): void {
    }
}

/** Manage a cluster certificate. */
class az_sf_cluster_certificate {
    /**
     * Add a secondary cluster certificate to the cluster.
     *
     * Syntax: 
     *
     * az sf cluster certificate add --cluster-name
     *                               --resource-group
     *                               [--cert-out-folder]
     *                               [--cert-subject-name]
     *                               [--certificate-file]
     *                               [--certificate-password]
     *                               [--secret-identifier]
     *                               [--subscription]
     *                               [--vault-name]
     *                               [--vault-resource-group]
     */
    az_sf_cluster_certificate_add(): void {
    }

    /**
     * Remove a certificate from a cluster.
     *
     * Syntax: 
     *
     * az sf cluster certificate remove --cluster-name
     *                                  --resource-group
     *                                  --thumbprint
     *                                  [--subscription]
     */
    az_sf_cluster_certificate_remove(): void {
    }
}

/** Manage the client certificate of a cluster. */
class az_sf_cluster_client_certificate {
    /**
     * Add a common name or certificate thumbprint to the cluster for client authentication.
     *
     * Syntax: 
     *
     * az sf cluster client-certificate add --cluster-name
     *                                      --resource-group
     *                                      [--admin-client-thumbprints]
     *                                      [--cert-common-name]
     *                                      [--cert-issuer-tp]
     *                                      [--client-cert-cn]
     *                                      [--is-admin]
     *                                      [--readonly-client-thumbprints]
     *                                      [--subscription]
     *                                      [--thumbprint]
     */
    az_sf_cluster_client_certificate_add(): void {
    }

    /**
     * Remove client certificates or subject names used for authentication.
     *
     * Syntax: 
     *
     * az sf cluster client-certificate remove --cluster-name
     *                                         --resource-group
     *                                         [--cert-common-name]
     *                                         [--cert-issuer-tp]
     *                                         [--client-cert-cn]
     *                                         [--subscription]
     *                                         [--thumbprints]
     */
    az_sf_cluster_client_certificate_remove(): void {
    }
}

/** Manage the durability of a cluster. */
class az_sf_cluster_durability {
    /**
     * Update the durability tier or VM SKU of a node type in the cluster.
     *
     * Syntax: 
     *
     * az sf cluster durability update --cluster-name
     *                                 --durability-level {Bronze, Gold, Silver}
     *                                 --node-type
     *                                 --resource-group
     *                                 [--subscription]
     */
    az_sf_cluster_durability_update(): void {
    }
}

/** Manage the node-type of a cluster. */
class az_sf_cluster_node_type {
    /**
     * Add a new node type to a cluster.
     *
     * Syntax: 
     *
     * az sf cluster node-type add --capacity
     *                             --cluster-name
     *                             --node-type
     *                             --resource-group
     *                             --vm-password
     *                             --vm-user-name
     *                             [--durability-level {Bronze, Gold, Silver}]
     *                             [--subscription]
     *                             [--vm-sku]
     *                             [--vm-tier]
     */
    az_sf_cluster_node_type_add(): void {
    }
}

/** Manage the node instance of a cluster. */
class az_sf_cluster_node {
    /**
     * Add nodes to a node type in a cluster.
     *
     * Syntax: 
     *
     * az sf cluster node add --cluster-name
     *                        --node-type
     *                        --nodes-to-add
     *                        --resource-group
     *                        [--subscription]
     */
    az_sf_cluster_node_add(): void {
    }

    /**
     * Remove nodes from a node type in a cluster.
     *
     * Syntax: 
     *
     * az sf cluster node remove --cluster-name
     *                           --node-type
     *                           --nodes-to-remove
     *                           --resource-group
     *                           [--subscription]
     */
    az_sf_cluster_node_remove(): void {
    }
}

/** Manage the reliability of a cluster. */
class az_sf_cluster_reliability {
    /**
     * Update the reliability tier for the primary node in a cluster.
     *
     * Syntax: 
     *
     * az sf cluster reliability update --cluster-name
     *                                  --reliability-level {Bronze, Gold, Platinum, Silver}
     *                                  --resource-group
     *                                  [--auto-add-node]
     *                                  [--subscription]
     */
    az_sf_cluster_reliability_update(): void {
    }
}

/** Manage a cluster's settings. */
class az_sf_cluster_setting {
    /**
     * Remove settings from a cluster.
     *
     * Syntax: 
     *
     * az sf cluster setting remove --cluster-name
     *                              --resource-group
     *                              [--parameter]
     *                              [--section]
     *                              [--settings-section]
     *                              [--subscription]
     */
    az_sf_cluster_setting_remove(): void {
    }

    /**
     * Update the settings of a cluster.
     *
     * Syntax: 
     *
     * az sf cluster setting set --cluster-name
     *                           --resource-group
     *                           [--parameter]
     *                           [--section]
     *                           [--settings-section]
     *                           [--subscription]
     *                           [--value]
     */
    az_sf_cluster_setting_set(): void {
    }
}

/** Manage the upgrade type of a cluster. */
class az_sf_cluster_upgrade_type {
    /**
     * Change the  upgrade type for a cluster.
     *
     * Syntax: 
     *
     * az sf cluster upgrade-type set --cluster-name
     *                                --resource-group
     *                                --upgrade-mode {automatic, manual}
     *                                [--subscription]
     *                                [--version]
     */
    az_sf_cluster_upgrade_type_set(): void {
    }
}

/** Manage an Azure Service Fabric cluster. */
class az_sf_cluster {
    /**
     * Create a new Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf cluster create --location
     *                      --resource-group
     *                      [--cert-out-folder]
     *                      [--cert-subject-name]
     *                      [--certificate-file]
     *                      [--certificate-password]
     *                      [--cluster-name]
     *                      [--cluster-size]
     *                      [--os {UbuntuServer1604, WindowsServer1709, WindowsServer1709withContainers, WindowsServer1803withContainers, WindowsServer1809withContainers, WindowsServer2012R2Datacenter, WindowsServer2016Datacenter, WindowsServer2016DatacenterwithContainers, WindowsServer2019Datacenter, WindowsServer2019DatacenterwithContainers}]
     *                      [--parameter-file]
     *                      [--secret-identifier]
     *                      [--subscription]
     *                      [--template-file]
     *                      [--vault-name]
     *                      [--vault-resource-group]
     *                      [--vm-password]
     *                      [--vm-sku]
     *                      [--vm-user-name]
     */
    az_sf_cluster_create(): void {
    }

    /**
     * List cluster resources.
     *
     * Syntax: 
     *
     * az sf cluster list [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sf_cluster_list(): void {
    }

    /**
     * Gets a Service Fabric cluster resource.
     *
     * Syntax: 
     *
     * az sf cluster show --cluster-name
     *                    --resource-group
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_sf_cluster_show(): void {
    }
}

/** Manage client certificates of a manged cluster. */
class az_sf_managed_cluster_client_certificate {
    /**
     * Add a new client certificate to the managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster client-certificate add --cluster-name
     *                                              --resource-group
     *                                              [--common-name]
     *                                              [--is-admin {false, true}]
     *                                              [--issuer-thumbprint]
     *                                              [--subscription]
     *                                              [--thumbprint]
     */
    az_sf_managed_cluster_client_certificate_add(): void {
    }

    /**
     * Delete a client certificate from the managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster client-certificate delete --cluster-name
     *                                                 --resource-group
     *                                                 [--common-name]
     *                                                 [--subscription]
     *                                                 [--thumbprint]
     */
    az_sf_managed_cluster_client_certificate_delete(): void {
    }
}

/** Manage an Azure Service Fabric managed cluster. */
class az_sf_managed_cluster {
    /**
     * Delete a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster create --admin-password
     *                              --cluster-name
     *                              --resource-group
     *                              [--admin-user-name]
     *                              [--cert-common-name]
     *                              [--cert-is-admin {false, true}]
     *                              [--cert-issuer-thumbprint]
     *                              [--cert-thumbprint]
     *                              [--client-connection-port]
     *                              [--dns-name]
     *                              [--gateway-connection-port]
     *                              [--location]
     *                              [--sku]
     *                              [--subscription]
     *                              [--tags]
     */
    az_sf_managed_cluster_create(): void {
    }

    /**
     * Delete a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster delete --cluster-name
     *                              --resource-group
     *                              [--subscription]
     */
    az_sf_managed_cluster_delete(): void {
    }

    /**
     * List managed clusters.
     *
     * Syntax: 
     *
     * az sf managed-cluster list [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_sf_managed_cluster_list(): void {
    }

    /**
     * Show the properties of an Azure Service Fabric managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster show --cluster-name
     *                            --resource-group
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_sf_managed_cluster_show(): void {
    }

    /**
     * Update a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-cluster update --cluster-name
     *                              --resource-group
     *                              [--client-connection-port]
     *                              [--dns-name]
     *                              [--gateway-connection-port]
     *                              [--subscription]
     *                              [--tags]
     */
    az_sf_managed_cluster_update(): void {
    }
}

/** Perform operations on nodes of a node type on managed clusters. */
class az_sf_managed_node_type_node {
    /**
     * Delete nodes of a node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type node delete --cluster-name
     *                                     --name
     *                                     --node-name
     *                                     --resource-group
     *                                     [--force {false, true}]
     *                                     [--subscription]
     */
    az_sf_managed_node_type_node_delete(): void {
    }

    /**
     * Reimage nodes of a node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type node reimage --cluster-name
     *                                      --name
     *                                      --node-name
     *                                      --resource-group
     *                                      [--force {false, true}]
     *                                      [--subscription]
     */
    az_sf_managed_node_type_node_reimage(): void {
    }

    /**
     * Restart nodes of a node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type node restart --cluster-name
     *                                      --name
     *                                      --node-name
     *                                      --resource-group
     *                                      [--force {false, true}]
     *                                      [--subscription]
     */
    az_sf_managed_node_type_node_restart(): void {
    }
}

/** Managed vm extension on a node type on managed clusters. */
class az_sf_managed_node_type_vm_extension {
    /**
     * Add an extension to the node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type vm-extension add --cluster-name
     *                                          --extension-name
     *                                          --extension-type
     *                                          --name
     *                                          --publisher
     *                                          --resource-group
     *                                          --type-handler-version
     *                                          [--auto-upgrade {false, true}]
     *                                          [--force-update-tag]
     *                                          [--protected-setting]
     *                                          [--provision-after]
     *                                          [--setting]
     *                                          [--subscription]
     */
    az_sf_managed_node_type_vm_extension_add(): void {
    }

    /**
     * Delete an extension to the node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type vm-extension delete --cluster-name
     *                                             --extension-name
     *                                             --name
     *                                             --resource-group
     *                                             [--subscription]
     */
    az_sf_managed_node_type_vm_extension_delete(): void {
    }
}

/** Managed vm secrets on a node type on managed clusters. */
class az_sf_managed_node_type_vm_secret {
    /**
     * Add a secret to the node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type vm-secret add --certificate-store
     *                                       --certificate-url
     *                                       --cluster-name
     *                                       --name
     *                                       --resource-group
     *                                       --source-vault-id
     *                                       [--subscription]
     */
    az_sf_managed_node_type_vm_secret_add(): void {
    }
}

/** Manage a node type of an Azure Service Fabric managed cluster. */
class az_sf_managed_node_type {
    /**
     * Delete a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-node-type create --cluster-name
     *                                --instance-count
     *                                --name
     *                                --resource-group
     *                                [--app-end-port]
     *                                [--app-start-port]
     *                                [--capacity]
     *                                [--disk-size]
     *                                [--ephemeral-end-port]
     *                                [--ephemeral-start-port]
     *                                [--placement-property]
     *                                [--primary {false, true}]
     *                                [--subscription]
     *                                [--vm-image-offer]
     *                                [--vm-image-publisher]
     *                                [--vm-image-sku]
     *                                [--vm-image-version]
     *                                [--vm-size]
     */
    az_sf_managed_node_type_create(): void {
    }

    /**
     * Delete node type from a cluster.
     *
     * Syntax: 
     *
     * az sf managed-node-type delete --cluster-name
     *                                --name
     *                                --resource-group
     *                                [--subscription]
     */
    az_sf_managed_node_type_delete(): void {
    }

    /**
     * List node types of a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-node-type list --cluster-name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_sf_managed_node_type_list(): void {
    }

    /**
     * Show the properties of a node type.
     *
     * Syntax: 
     *
     * az sf managed-node-type show --cluster-name
     *                              --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_sf_managed_node_type_show(): void {
    }

    /**
     * Update a managed cluster.
     *
     * Syntax: 
     *
     * az sf managed-node-type update --cluster-name
     *                                --name
     *                                --resource-group
     *                                [--app-end-port]
     *                                [--app-start-port]
     *                                [--capacity]
     *                                [--ephemeral-end-port]
     *                                [--ephemeral-start-port]
     *                                [--instance-count]
     *                                [--placement-property]
     *                                [--subscription]
     */
    az_sf_managed_node_type_update(): void {
    }
}

/** Manage services running on an Azure Service Fabric cluster. */
class az_sf_service {
    /**
     * Create a new service on an Azure Service Fabric cluster.
     *
     * Syntax: 
     *
     * az sf service create --application
     *                      --cluster-name
     *                      --name
     *                      --resource-group
     *                      --service-type
     *                      --state {stateful, stateless}
     *                      [--default-move-cost {High, Low, Medium, Zero}]
     *                      [--instance-count]
     *                      [--min-replica]
     *                      [--partition-scheme {named, singleton, uniformInt64}]
     *                      [--subscription]
     *                      [--target-replica]
     */
    az_sf_service_create(): void {
    }

    /**
     * Delete a service.
     *
     * Syntax: 
     *
     * az sf service delete --application-name
     *                      --cluster-name
     *                      --name
     *                      --resource-group
     *                      [--subscription]
     */
    az_sf_service_delete(): void {
    }

    /**
     * List services of a given application.
     *
     * Syntax: 
     *
     * az sf service list --application-name
     *                    --cluster-name
     *                    --resource-group
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_sf_service_list(): void {
    }

    /**
     * Get a service.
     *
     * Syntax: 
     *
     * az sf service show --application-name
     *                    --cluster-name
     *                    --name
     *                    --resource-group
     *                    [--query-examples]
     *                    [--subscription]
     */
    az_sf_service_show(): void {
    }
}

/** Manage and administer Azure Service Fabric clusters. */
class az_sf {
}

/** Create an image definition. */
class az_sig_image_definition {
    /**
     * Create a gallery image definition.
     *
     * Syntax: 
     *
     * az sig image-definition create --gallery-image-definition
     *                                --gallery-name
     *                                --offer
     *                                --os-type {Linux, Windows}
     *                                --publisher
     *                                --resource-group
     *                                --sku
     *                                [--description]
     *                                [--disallowed-disk-types]
     *                                [--end-of-life-date]
     *                                [--eula]
     *                                [--hyper-v-generation {V1, V2}]
     *                                [--location]
     *                                [--maximum-cpu-core]
     *                                [--maximum-memory]
     *                                [--minimum-cpu-core]
     *                                [--minimum-memory]
     *                                [--os-state {Generalized, Specialized}]
     *                                [--plan-name]
     *                                [--plan-product]
     *                                [--plan-publisher]
     *                                [--privacy-statement-uri]
     *                                [--release-note-uri]
     *                                [--subscription]
     *                                [--tags]
     */
    az_sig_image_definition_create(): void {
    }

    /**
     * Delete a gallery image.
     *
     * Syntax: 
     *
     * az sig image-definition delete [--gallery-image-definition]
     *                                [--gallery-name]
     *                                [--ids]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_sig_image_definition_delete(): void {
    }

    /**
     * List gallery Image Definitions in a gallery.
     *
     * Syntax: 
     *
     * az sig image-definition list --gallery-name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_sig_image_definition_list(): void {
    }

    /**
     * Retrieves information about a gallery Image Definition.
     *
     * Syntax: 
     *
     * az sig image-definition show [--gallery-image-definition]
     *                              [--gallery-name]
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_sig_image_definition_show(): void {
    }

    /**
     * Update a share image defintiion.
     *
     * Syntax: 
     *
     * az sig image-definition update --gallery-image-definition
     *                                --gallery-name
     *                                --resource-group
     *                                [--add]
     *                                [--force-string]
     *                                [--remove]
     *                                [--set]
     *                                [--subscription]
     */
    az_sig_image_definition_update(): void {
    }
}

/** Create a new version from an image defintion. */
class az_sig_image_version {
    /**
     * Create a new image version.
     *
     * Syntax: 
     *
     * az sig image-version create --gallery-image-definition
     *                             --gallery-image-version
     *                             --gallery-name
     *                             --resource-group
     *                             [--data-snapshot-luns]
     *                             [--data-snapshots]
     *                             [--end-of-life-date]
     *                             [--exclude-from-latest {false, true}]
     *                             [--location]
     *                             [--managed-image]
     *                             [--no-wait]
     *                             [--os-snapshot]
     *                             [--replica-count]
     *                             [--storage-account-type {Premium_LRS, Standard_LRS, Standard_ZRS}]
     *                             [--subscription]
     *                             [--tags]
     *                             [--target-region-encryption]
     *                             [--target-regions]
     */
    az_sig_image_version_create(): void {
    }

    /**
     * Delete a gallery Image Version.
     *
     * Syntax: 
     *
     * az sig image-version delete --gallery-image-definition
     *                             --gallery-image-version
     *                             --gallery-name
     *                             --resource-group
     *                             [--subscription]
     */
    az_sig_image_version_delete(): void {
    }

    /**
     * List gallery Image Versions in a gallery Image Definition.
     *
     * Syntax: 
     *
     * az sig image-version list --gallery-image-definition
     *                           --gallery-name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_sig_image_version_list(): void {
    }

    /**
     * Retrieves information about a gallery Image Version.
     *
     * Syntax: 
     *
     * az sig image-version show --gallery-image-definition
     *                           --gallery-image-version
     *                           --gallery-name
     *                           --resource-group
     *                           [--expand]
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_sig_image_version_show(): void {
    }

    /**
     * Update a share image version.
     *
     * Syntax: 
     *
     * az sig image-version update --gallery-image-definition
     *                             --gallery-image-version
     *                             --gallery-name
     *                             --resource-group
     *                             [--add]
     *                             [--force-string]
     *                             [--no-wait]
     *                             [--remove]
     *                             [--replica-count]
     *                             [--set]
     *                             [--subscription]
     *                             [--target-regions]
     */
    az_sig_image_version_update(): void {
    }

    /**
     * Wait for image version related operation.
     *
     * Syntax: 
     *
     * az sig image-version wait --gallery-image-definition
     *                           --gallery-image-version
     *                           --gallery-name
     *                           --resource-group
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--expand]
     *                           [--interval]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_sig_image_version_wait(): void {
    }
}

/** Manage shared image gallery. */
class az_sig {
    /**
     * Create a share image gallery.
     *
     * Syntax: 
     *
     * az sig create --gallery-name
     *               --resource-group
     *               [--description]
     *               [--location]
     *               [--subscription]
     *               [--tags]
     */
    az_sig_create(): void {
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * Syntax: 
     *
     * az sig delete --gallery-name
     *               --resource-group
     *               [--subscription]
     */
    az_sig_delete(): void {
    }

    /**
     * List share image galleries.
     *
     * Syntax: 
     *
     * az sig list [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_sig_list(): void {
    }

    /**
     * Retrieves information about a Shared Image Gallery.
     *
     * Syntax: 
     *
     * az sig show [--gallery-name]
     *             [--ids]
     *             [--query-examples]
     *             [--resource-group]
     *             [--subscription]
     */
    az_sig_show(): void {
    }

    /**
     * Update a share image gallery.
     *
     * Syntax: 
     *
     * az sig update --gallery-name
     *               --resource-group
     *               [--add]
     *               [--force-string]
     *               [--remove]
     *               [--set]
     *               [--subscription]
     */
    az_sig_update(): void {
    }
}

/** Manage CORS for Azure SignalR Service. */
class az_signalr_cors {
    /**
     * Add allowed origins to a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr cors add --allowed-origins
     *                     --name
     *                     --resource-group
     *                     [--subscription]
     */
    az_signalr_cors_add(): void {
    }

    /**
     * List allowed origins of a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr cors list --name
     *                      --resource-group
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_signalr_cors_list(): void {
    }

    /**
     * Remove allowed origins from a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr cors remove --allowed-origins
     *                        --name
     *                        --resource-group
     *                        [--subscription]
     */
    az_signalr_cors_remove(): void {
    }
}

/** Manage keys for Azure SignalR Service. */
class az_signalr_key {
    /**
     * List the access keys for a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr key list --name
     *                     --resource-group
     *                     [--query-examples]
     *                     [--subscription]
     */
    az_signalr_key_list(): void {
    }

    /**
     * Regenerate the access key for a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr key renew --key-type {primary, secondary}
     *                      --name
     *                      --resource-group
     *                      [--subscription]
     */
    az_signalr_key_renew(): void {
    }
}

/** Manage network rules. */
class az_signalr_network_rule {
    /**
     * Get the Network access control of SignalR Service.
     *
     * Syntax: 
     *
     * az signalr network-rule list --name
     *                              --resource-group
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_signalr_network_rule_list(): void {
    }

    /**
     * Update the Network access control of SignalR Service.
     *
     * Syntax: 
     *
     * az signalr network-rule update --name
     *                                --resource-group
     *                                [--allow]
     *                                [--connection-name]
     *                                [--deny]
     *                                [--public-network {false, true}]
     *                                [--subscription]
     */
    az_signalr_network_rule_update(): void {
    }
}

/** Manage upstream settings. */
class az_signalr_upstream {
    /**
     * List upstream settings of an existing SignalR Service.
     *
     * Syntax: 
     *
     * az signalr upstream clear --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_signalr_upstream_clear(): void {
    }

    /**
     * List upstream settings of an existing SignalR Service.
     *
     * Syntax: 
     *
     * az signalr upstream list --name
     *                          --resource-group
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_signalr_upstream_list(): void {
    }

    /**
     * Update order sensitive upstream settings for an existing SignalR Service.
     *
     * Syntax: 
     *
     * az signalr upstream update --name
     *                            --resource-group
     *                            --template
     *                            [--subscription]
     */
    az_signalr_upstream_update(): void {
    }
}

/** Manage Azure SignalR Service. */
class az_signalr {
    /**
     * Creates a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr create --name
     *                   --resource-group
     *                   --sku
     *                   [--allowed-origins]
     *                   [--default-action {Allow, Deny}]
     *                   [--location]
     *                   [--service-mode {Classic, Default, Serverless}]
     *                   [--subscription]
     *                   [--tags]
     *                   [--unit-count]
     */
    az_signalr_create(): void {
    }

    /**
     * Deletes a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr delete --name
     *                   --resource-group
     *                   [--subscription]
     */
    az_signalr_delete(): void {
    }

    /**
     * Lists all the SignalR Service under the current subscription.
     *
     * Syntax: 
     *
     * az signalr list [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_signalr_list(): void {
    }

    /**
     * Restart an existing SignalR Service.
     *
     * Syntax: 
     *
     * az signalr restart --name
     *                    --resource-group
     *                    [--subscription]
     */
    az_signalr_restart(): void {
    }

    /**
     * Get the details of a SignalR Service.
     *
     * Syntax: 
     *
     * az signalr show --name
     *                 --resource-group
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_signalr_show(): void {
    }

    /**
     * Update an existing SignalR Service.
     *
     * Syntax: 
     *
     * az signalr update --name
     *                   --resource-group
     *                   [--add]
     *                   [--allowed-origins]
     *                   [--default-action {Allow, Deny}]
     *                   [--force-string]
     *                   [--remove]
     *                   [--service-mode {Classic, Default, Serverless}]
     *                   [--set]
     *                   [--sku]
     *                   [--subscription]
     *                   [--tags]
     *                   [--unit-count]
     */
    az_signalr_update(): void {
    }
}

/** Manage point-in-time copies of managed disks, native blobs, or other snapshots. */
class az_snapshot {
    /**
     * Create a snapshot.
     *
     * Syntax: 
     *
     * az snapshot create --name
     *                    --resource-group
     *                    [--disk-access]
     *                    [--disk-encryption-set]
     *                    [--encryption-type]
     *                    [--for-upload {false, true}]
     *                    [--hyper-v-generation {V1, V2}]
     *                    [--incremental {false, true}]
     *                    [--location]
     *                    [--network-access-policy {AllowAll, AllowPrivate, DenyAll}]
     *                    [--no-wait]
     *                    [--size-gb]
     *                    [--sku {Premium_LRS, Standard_LRS, Standard_ZRS}]
     *                    [--source]
     *                    [--source-storage-account-id]
     *                    [--subscription]
     *                    [--tags]
     */
    az_snapshot_create(): void {
    }

    /**
     * Deletes a snapshot.
     *
     * Syntax: 
     *
     * az snapshot delete [--ids]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_snapshot_delete(): void {
    }

    /**
     * Grant read access to a snapshot.
     *
     * Syntax: 
     *
     * az snapshot grant-access --duration-in-seconds
     *                          [--access-level {Read, Write}]
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_snapshot_grant_access(): void {
    }

    /**
     * List snapshots.
     *
     * Syntax: 
     *
     * az snapshot list [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_snapshot_list(): void {
    }

    /**
     * Revoke read access to a snapshot.
     *
     * Syntax: 
     *
     * az snapshot revoke-access [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_snapshot_revoke_access(): void {
    }

    /**
     * Gets information about a snapshot.
     *
     * Syntax: 
     *
     * az snapshot show [--ids]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_snapshot_show(): void {
    }

    /**
     * Update a snapshot.
     *
     * Syntax: 
     *
     * az snapshot update [--add]
     *                    [--disk-access]
     *                    [--disk-encryption-set]
     *                    [--encryption-type]
     *                    [--force-string]
     *                    [--ids]
     *                    [--name]
     *                    [--network-access-policy {AllowAll, AllowPrivate, DenyAll}]
     *                    [--no-wait]
     *                    [--remove]
     *                    [--resource-group]
     *                    [--set]
     *                    [--sku {Premium_LRS, Standard_LRS, Standard_ZRS}]
     *                    [--subscription]
     */
    az_snapshot_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a snapshot is met.
     *
     * Syntax: 
     *
     * az snapshot wait [--created]
     *                  [--custom]
     *                  [--deleted]
     *                  [--exists]
     *                  [--ids]
     *                  [--interval]
     *                  [--name]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--timeout]
     *                  [--updated]
     */
    az_snapshot_wait(): void {
    }
}

/** Manage a database's auditing policy. */
class az_sql_db_audit_policy {
    /**
     * Gets a database's blob auditing policy.
     *
     * Syntax: 
     *
     * az sql db audit-policy show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--server]
     *                             [--subscription]
     */
    az_sql_db_audit_policy_show(): void {
    }

    /**
     * Update a database's auditing policy.
     *
     * Syntax: 
     *
     * az sql db audit-policy update [--actions]
     *                               [--add]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--retention-days]
     *                               [--server]
     *                               [--set]
     *                               [--state {Disabled, Enabled}]
     *                               [--storage-account]
     *                               [--storage-endpoint]
     *                               [--storage-key]
     *                               [--subscription]
     */
    az_sql_db_audit_policy_update(): void {
    }
}

/** Manage sensitivity classification recommendations. */
class az_sql_db_classification_recommendation {
    /**
     * Disable sensitivity recommendations for a given column (recommendations are enabled by default on all columns).
     *
     * Syntax: 
     *
     * az sql db classification recommendation disable --column
     *                                                 --schema
     *                                                 --table
     *                                                 [--ids]
     *                                                 [--name]
     *                                                 [--resource-group]
     *                                                 [--server]
     *                                                 [--subscription]
     */
    az_sql_db_classification_recommendation_disable(): void {
    }

    /**
     * Enable sensitivity recommendations for a given column (recommendations are enabled by default on all columns).
     *
     * Syntax: 
     *
     * az sql db classification recommendation enable --column
     *                                                --schema
     *                                                --table
     *                                                [--ids]
     *                                                [--name]
     *                                                [--resource-group]
     *                                                [--server]
     *                                                [--subscription]
     */
    az_sql_db_classification_recommendation_enable(): void {
    }

    /**
     * List the recommended sensitivity classifications of a given database.
     *
     * Syntax: 
     *
     * az sql db classification recommendation list [--filter]
     *                                              [--ids]
     *                                              [--include-disabled-recommendations]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--server]
     *                                              [--subscription]
     */
    az_sql_db_classification_recommendation_list(): void {
    }
}

/** Manage sensitivity classifications. */
class az_sql_db_classification {
    /**
     * Delete the sensitivity classification of a given column.
     *
     * Syntax: 
     *
     * az sql db classification delete --column
     *                                 --schema
     *                                 --table
     *                                 [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--server]
     *                                 [--subscription]
     */
    az_sql_db_classification_delete(): void {
    }

    /**
     * Get the sensitivity classifications of a given database.
     *
     * Syntax: 
     *
     * az sql db classification list [--filter]
     *                               [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     */
    az_sql_db_classification_list(): void {
    }

    /**
     * Get the sensitivity classification of a given column.
     *
     * Syntax: 
     *
     * az sql db classification show --column
     *                               --schema
     *                               --table
     *                               [--ids]
     *                               [--name]
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     */
    az_sql_db_classification_show(): void {
    }

    /**
     * Update a columns's sensitivity classification.
     *
     * Syntax: 
     *
     * az sql db classification update --column
     *                                 --schema
     *                                 --table
     *                                 [--ids]
     *                                 [--information-type]
     *                                 [--label]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--server]
     *                                 [--subscription]
     */
    az_sql_db_classification_update(): void {
    }
}

/** Manage SQL database long term retention backups. */
class az_sql_db_ltr_backup {
    /**
     * Delete a long term retention backup.
     *
     * Syntax: 
     *
     * az sql db ltr-backup delete --database
     *                             --location
     *                             --name
     *                             --server
     *                             [--subscription]
     *                             [--yes]
     */
    az_sql_db_ltr_backup_delete(): void {
    }

    /**
     * List the long term retention backups for a location, server or database.
     *
     * Syntax: 
     *
     * az sql db ltr-backup list --location
     *                           [--database]
     *                           [--database-state]
     *                           [--latest]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--server]
     *                           [--subscription]
     */
    az_sql_db_ltr_backup_list(): void {
    }

    /**
     * Restore a long term retention backup to a new database.
     *
     * Syntax: 
     *
     * az sql db ltr-backup restore --backup-id
     *                              --dest-database
     *                              --dest-resource-group
     *                              --dest-server
     *                              [--no-wait]
     *                              [--subscription]
     */
    az_sql_db_ltr_backup_restore(): void {
    }

    /**
     * Get a long term retention backup for a database.
     *
     * Syntax: 
     *
     * az sql db ltr-backup show --database
     *                           --location
     *                           --name
     *                           --server
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_sql_db_ltr_backup_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the database is met.
     *
     * Syntax: 
     *
     * az sql db ltr-backup wait [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--ids]
     *                           [--interval]
     *                           [--name]
     *                           [--resource-group]
     *                           [--server]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_sql_db_ltr_backup_wait(): void {
    }
}

/** Manage SQL database long term retention policy. */
class az_sql_db_ltr_policy {
    /**
     * Update long term retention settings for a database.
     *
     * Syntax: 
     *
     * az sql db ltr-policy set [--ids]
     *                          [--monthly-retention]
     *                          [--name]
     *                          [--resource-group]
     *                          [--server]
     *                          [--subscription]
     *                          [--week-of-year]
     *                          [--weekly-retention]
     *                          [--yearly-retention]
     */
    az_sql_db_ltr_policy_set(): void {
    }

    /**
     * Show the long term retention policy for a database.
     *
     * Syntax: 
     *
     * az sql db ltr-policy show [--ids]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--server]
     *                           [--subscription]
     */
    az_sql_db_ltr_policy_show(): void {
    }
}

/** Manage operations on a database. */
class az_sql_db_op {
    /**
     * Cancels the asynchronous operation on the database.
     *
     * Syntax: 
     *
     * az sql db op cancel --name
     *                     [--database]
     *                     [--ids]
     *                     [--resource-group]
     *                     [--server]
     *                     [--subscription]
     */
    az_sql_db_op_cancel(): void {
    }

    /**
     * Gets a list of operations performed on the database.
     *
     * Syntax: 
     *
     * az sql db op list [--database]
     *                   [--ids]
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--server]
     *                   [--subscription]
     */
    az_sql_db_op_list(): void {
    }
}

/** Manage replication between databases. */
class az_sql_db_replica {
    /**
     * Create a database as a readable secondary replica of an existing database.
     *
     * Syntax: 
     *
     * az sql db replica create --name
     *                          --partner-server
     *                          --resource-group
     *                          --server
     *                          [--auto-pause-delay]
     *                          [--capacity]
     *                          [--compute-model {Provisioned, Serverless}]
     *                          [--elastic-pool]
     *                          [--family]
     *                          [--license-type {BasePrice, LicenseIncluded}]
     *                          [--min-capacity]
     *                          [--no-wait]
     *                          [--partner-resource-group]
     *                          [--read-replicas]
     *                          [--read-scale {Disabled, Enabled}]
     *                          [--service-objective]
     *                          [--subscription]
     *                          [--tags]
     *                          [--zone-redundant {false, true}]
     */
    az_sql_db_replica_create(): void {
    }

    /**
     * Permanently stop data replication between two database replicas.
     *
     * Syntax: 
     *
     * az sql db replica delete-link --partner-server
     *                               [--ids]
     *                               [--name]
     *                               [--partner-resource-group]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     *                               [--yes]
     */
    az_sql_db_replica_delete_link(): void {
    }

    /**
     * List the replicas of a database and their replication status.
     *
     * Syntax: 
     *
     * az sql db replica list-links [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_db_replica_list_links(): void {
    }

    /**
     * Set the primary replica database by failing over from the current primary replica database.
     *
     * Syntax: 
     *
     * az sql db replica set-primary [--allow-data-loss]
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     */
    az_sql_db_replica_set_primary(): void {
    }
}

/** Manage a database's transparent data encryption. */
class az_sql_db_tde {
    /**
     * Returns a database's transparent data encryption operation result.
     *
     * Syntax: 
     *
     * az sql db tde list-activity [--database]
     *                             [--ids]
     *                             [--resource-group]
     *                             [--server]
     *                             [--subscription]
     */
    az_sql_db_tde_list_activity(): void {
    }

    /**
     * Sets a database's transparent data encryption configuration.
     *
     * Syntax: 
     *
     * az sql db tde set --status {Disabled, Enabled}
     *                   [--database]
     *                   [--ids]
     *                   [--resource-group]
     *                   [--server]
     *                   [--subscription]
     */
    az_sql_db_tde_set(): void {
    }

    /**
     * Gets a database's transparent data encryption configuration.
     *
     * Syntax: 
     *
     * az sql db tde show [--database]
     *                    [--ids]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--server]
     *                    [--subscription]
     */
    az_sql_db_tde_show(): void {
    }
}

/** Manage a database's threat detection policies. */
class az_sql_db_threat_policy {
    /**
     * Gets a database's threat detection policy.
     *
     * Syntax: 
     *
     * az sql db threat-policy show [--ids]
     *                              [--name]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_db_threat_policy_show(): void {
    }

    /**
     * Update a database's threat detection policy.
     *
     * Syntax: 
     *
     * az sql db threat-policy update [--add]
     *                                [--disabled-alerts]
     *                                [--email-account-admins {Disabled, Enabled}]
     *                                [--email-addresses]
     *                                [--force-string]
     *                                [--ids]
     *                                [--name]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--retention-days]
     *                                [--server]
     *                                [--set]
     *                                [--state {Disabled, Enabled, New}]
     *                                [--storage-account]
     *                                [--storage-endpoint]
     *                                [--storage-key]
     *                                [--subscription]
     */
    az_sql_db_threat_policy_update(): void {
    }
}

/** Manage databases. */
class az_sql_db {
    /**
     * Create a copy of a database.
     *
     * Syntax: 
     *
     * az sql db copy --dest-name
     *                [--auto-pause-delay]
     *                [--capacity]
     *                [--compute-model {Provisioned, Serverless}]
     *                [--dest-resource-group]
     *                [--dest-server]
     *                [--elastic-pool]
     *                [--family]
     *                [--ids]
     *                [--license-type {BasePrice, LicenseIncluded}]
     *                [--min-capacity]
     *                [--name]
     *                [--no-wait]
     *                [--read-replicas]
     *                [--read-scale {Disabled, Enabled}]
     *                [--resource-group]
     *                [--server]
     *                [--service-objective]
     *                [--subscription]
     *                [--tags]
     *                [--zone-redundant {false, true}]
     */
    az_sql_db_copy(): void {
    }

    /**
     * Create a database.
     *
     * Syntax: 
     *
     * az sql db create --name
     *                  --resource-group
     *                  --server
     *                  [--auto-pause-delay]
     *                  [--capacity]
     *                  [--catalog-collation {DATABASE_DEFAULT, SQL_Latin1_General_CP1_CI_AS}]
     *                  [--collation]
     *                  [--compute-model {Provisioned, Serverless}]
     *                  [--edition]
     *                  [--elastic-pool]
     *                  [--family]
     *                  [--license-type {BasePrice, LicenseIncluded}]
     *                  [--max-size]
     *                  [--min-capacity]
     *                  [--no-wait]
     *                  [--read-replicas]
     *                  [--read-scale {Disabled, Enabled}]
     *                  [--sample-name {AdventureWorksLT}]
     *                  [--service-objective]
     *                  [--subscription]
     *                  [--tags]
     *                  [--zone-redundant {false, true}]
     */
    az_sql_db_create(): void {
    }

    /**
     * Delete a database.
     *
     * Syntax: 
     *
     * az sql db delete [--ids]
     *                  [--name]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     *                  [--yes]
     */
    az_sql_db_delete(): void {
    }

    /**
     * Export a database to a bacpac.
     *
     * Syntax: 
     *
     * az sql db export --admin-password
     *                  --admin-user
     *                  --storage-key
     *                  --storage-key-type {SharedAccessKey, StorageAccessKey}
     *                  --storage-uri
     *                  [--auth-type {ADPassword, SQL}]
     *                  [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     */
    az_sql_db_export(): void {
    }

    /**
     * Imports a bacpac into an existing database.
     *
     * Syntax: 
     *
     * az sql db import --admin-password
     *                  --admin-user
     *                  --storage-key
     *                  --storage-key-type {SharedAccessKey, StorageAccessKey}
     *                  --storage-uri
     *                  [--auth-type {ADPassword, SQL}]
     *                  [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     */
    az_sql_db_import(): void {
    }

    /**
     * List databases a server or elastic pool.
     *
     * Syntax: 
     *
     * az sql db list [--elastic-pool]
     *                [--ids]
     *                [--query-examples]
     *                [--resource-group]
     *                [--server]
     *                [--subscription]
     */
    az_sql_db_list(): void {
    }

    /**
     * Gets a list of deleted databases that can be restored.
     *
     * Syntax: 
     *
     * az sql db list-deleted [--ids]
     *                        [--resource-group]
     *                        [--server]
     *                        [--subscription]
     */
    az_sql_db_list_deleted(): void {
    }

    /**
     * Show database editions available for the currently active subscription.
     *
     * Syntax: 
     *
     * az sql db list-editions --location
     *                         [--available]
     *                         [--dtu]
     *                         [--edition]
     *                         [--service-objective]
     *                         [--show-details {max-size}]
     *                         [--subscription]
     *                         [--vcores]
     */
    az_sql_db_list_editions(): void {
    }

    /**
     * Returns database usages.
     *
     * Syntax: 
     *
     * az sql db list-usages [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--server]
     *                       [--subscription]
     */
    az_sql_db_list_usages(): void {
    }

    /**
     * Rename a database.
     *
     * Syntax: 
     *
     * az sql db rename --new-name
     *                  [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     */
    az_sql_db_rename(): void {
    }

    /**
     * Create a new database by restoring from a backup.
     *
     * Syntax: 
     *
     * az sql db restore --dest-name
     *                   [--auto-pause-delay]
     *                   [--capacity]
     *                   [--compute-model {Provisioned, Serverless}]
     *                   [--deleted-time]
     *                   [--edition]
     *                   [--elastic-pool]
     *                   [--family]
     *                   [--ids]
     *                   [--license-type {BasePrice, LicenseIncluded}]
     *                   [--min-capacity]
     *                   [--name]
     *                   [--no-wait]
     *                   [--read-replicas]
     *                   [--read-scale {Disabled, Enabled}]
     *                   [--resource-group]
     *                   [--server]
     *                   [--service-objective]
     *                   [--subscription]
     *                   [--tags]
     *                   [--time]
     *                   [--zone-redundant {false, true}]
     */
    az_sql_db_restore(): void {
    }

    /**
     * Get the details for a database.
     *
     * Syntax: 
     *
     * az sql db show [--ids]
     *                [--name]
     *                [--query-examples]
     *                [--resource-group]
     *                [--server]
     *                [--subscription]
     */
    az_sql_db_show(): void {
    }

    /**
     * Generates a connection string to a database.
     *
     * Syntax: 
     *
     * az sql db show-connection-string --client {ado.net, jdbc, odbc, php, php_pdo, sqlcmd}
     *                                  [--auth-type {ADIntegrated, ADPassword, SqlPassword}]
     *                                  [--ids]
     *                                  [--name]
     *                                  [--server]
     *                                  [--subscription]
     */
    az_sql_db_show_connection_string(): void {
    }

    /**
     * Update a database.
     *
     * Syntax: 
     *
     * az sql db update [--add]
     *                  [--auto-pause-delay]
     *                  [--capacity]
     *                  [--compute-model {Provisioned, Serverless}]
     *                  [--edition]
     *                  [--elastic-pool]
     *                  [--family]
     *                  [--force-string]
     *                  [--ids]
     *                  [--max-size]
     *                  [--min-capacity]
     *                  [--name]
     *                  [--no-wait]
     *                  [--read-replicas]
     *                  [--read-scale {Disabled, Enabled}]
     *                  [--remove]
     *                  [--resource-group]
     *                  [--server]
     *                  [--service-objective]
     *                  [--set]
     *                  [--subscription]
     *                  [--zone-redundant {false, true}]
     */
    az_sql_db_update(): void {
    }
}

/** Manage data warehouses. */
class az_sql_dw {
    /**
     * Create a data warehouse.
     *
     * Syntax: 
     *
     * az sql dw create --name
     *                  --resource-group
     *                  --server
     *                  [--collation]
     *                  [--max-size]
     *                  [--no-wait]
     *                  [--read-replica-count]
     *                  [--service-objective]
     *                  [--subscription]
     *                  [--tags]
     *                  [--zone-redundant {false, true}]
     */
    az_sql_dw_create(): void {
    }

    /**
     * Delete a data warehouse.
     *
     * Syntax: 
     *
     * az sql dw delete [--ids]
     *                  [--name]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     *                  [--yes]
     */
    az_sql_dw_delete(): void {
    }

    /**
     * List data warehouses for a server.
     *
     * Syntax: 
     *
     * az sql dw list [--ids]
     *                [--query-examples]
     *                [--resource-group]
     *                [--server]
     *                [--subscription]
     */
    az_sql_dw_list(): void {
    }

    /**
     * Pauses a datawarehouse.
     *
     * Syntax: 
     *
     * az sql dw pause [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--server]
     *                 [--subscription]
     */
    az_sql_dw_pause(): void {
    }

    /**
     * Resumes a datawarehouse.
     *
     * Syntax: 
     *
     * az sql dw resume [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--server]
     *                  [--subscription]
     */
    az_sql_dw_resume(): void {
    }

    /**
     * Get the details for a data warehouse.
     *
     * Syntax: 
     *
     * az sql dw show [--ids]
     *                [--name]
     *                [--query-examples]
     *                [--resource-group]
     *                [--server]
     *                [--subscription]
     */
    az_sql_dw_show(): void {
    }

    /**
     * Update a data warehouse.
     *
     * Syntax: 
     *
     * az sql dw update [--add]
     *                  [--force-string]
     *                  [--ids]
     *                  [--max-size]
     *                  [--name]
     *                  [--no-wait]
     *                  [--remove]
     *                  [--resource-group]
     *                  [--server]
     *                  [--service-objective]
     *                  [--set]
     *                  [--subscription]
     */
    az_sql_dw_update(): void {
    }
}

/** Manage operations on an elastic pool. */
class az_sql_elastic_pool_op {
    /**
     * Cancels the asynchronous operation on the elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool op cancel --name
     *                               [--elastic-pool]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     */
    az_sql_elastic_pool_op_cancel(): void {
    }

    /**
     * Gets a list of operations performed on the elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool op list [--elastic-pool]
     *                             [--ids]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--server]
     *                             [--subscription]
     */
    az_sql_elastic_pool_op_list(): void {
    }
}

/** Manage elastic pools. */
class az_sql_elastic_pool {
    /**
     * Create an elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool create --name
     *                            --resource-group
     *                            --server
     *                            [--capacity]
     *                            [--db-dtu-max]
     *                            [--db-dtu-min]
     *                            [--edition]
     *                            [--family]
     *                            [--license-type {BasePrice, LicenseIncluded}]
     *                            [--max-size]
     *                            [--no-wait]
     *                            [--subscription]
     *                            [--tags]
     *                            [--zone-redundant {false, true}]
     */
    az_sql_elastic_pool_create(): void {
    }

    /**
     * Deletes an elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool delete [--ids]
     *                            [--name]
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--server]
     *                            [--subscription]
     */
    az_sql_elastic_pool_delete(): void {
    }

    /**
     * Gets all elastic pools in a server.
     *
     * Syntax: 
     *
     * az sql elastic-pool list [--ids]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--server]
     *                          [--skip]
     *                          [--subscription]
     */
    az_sql_elastic_pool_list(): void {
    }

    /**
     * Gets a list of databases in an elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool list-dbs [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_elastic_pool_list_dbs(): void {
    }

    /**
     * List elastic pool editions available for the active subscription.
     *
     * Syntax: 
     *
     * az sql elastic-pool list-editions --location
     *                                   [--available]
     *                                   [--dtu]
     *                                   [--edition]
     *                                   [--show-details {db-max-dtu, db-max-size, db-min-dtu, max-size}]
     *                                   [--subscription]
     *                                   [--vcores]
     */
    az_sql_elastic_pool_list_editions(): void {
    }

    /**
     * Gets an elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool show [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--server]
     *                          [--subscription]
     */
    az_sql_elastic_pool_show(): void {
    }

    /**
     * Update an elastic pool.
     *
     * Syntax: 
     *
     * az sql elastic-pool update [--add]
     *                            [--capacity]
     *                            [--db-dtu-max]
     *                            [--db-dtu-min]
     *                            [--edition]
     *                            [--family]
     *                            [--force-string]
     *                            [--ids]
     *                            [--max-size]
     *                            [--name]
     *                            [--no-wait]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--server]
     *                            [--set]
     *                            [--subscription]
     *                            [--zone-redundant {false, true}]
     */
    az_sql_elastic_pool_update(): void {
    }
}

/** Manage SQL Failover Groups. */
class az_sql_failover_group {
    /**
     * Creates a failover group.
     *
     * Syntax: 
     *
     * az sql failover-group create --name
     *                              --partner-server
     *                              --resource-group
     *                              --server
     *                              [--add-db]
     *                              [--failover-policy {Automatic, Manual}]
     *                              [--grace-period]
     *                              [--partner-resource-group]
     *                              [--subscription]
     */
    az_sql_failover_group_create(): void {
    }

    /**
     * Deletes a failover group.
     *
     * Syntax: 
     *
     * az sql failover-group delete --name
     *                              [--ids]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_failover_group_delete(): void {
    }

    /**
     * Lists the failover groups in a server.
     *
     * Syntax: 
     *
     * az sql failover-group list [--ids]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--server]
     *                            [--subscription]
     */
    az_sql_failover_group_list(): void {
    }

    /**
     * Set the primary of the failover group by failing over all databases from the current primary server.
     *
     * Syntax: 
     *
     * az sql failover-group set-primary --name
     *                                   [--allow-data-loss]
     *                                   [--ids]
     *                                   [--resource-group]
     *                                   [--server]
     *                                   [--subscription]
     */
    az_sql_failover_group_set_primary(): void {
    }

    /**
     * Gets a failover group.
     *
     * Syntax: 
     *
     * az sql failover-group show --name
     *                            [--ids]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--server]
     *                            [--subscription]
     */
    az_sql_failover_group_show(): void {
    }

    /**
     * Updates the failover group.
     *
     * Syntax: 
     *
     * az sql failover-group update --name
     *                              [--add]
     *                              [--add-db]
     *                              [--failover-policy {Automatic, Manual}]
     *                              [--force-string]
     *                              [--grace-period]
     *                              [--ids]
     *                              [--remove]
     *                              [--remove-db]
     *                              [--resource-group]
     *                              [--server]
     *                              [--set]
     *                              [--subscription]
     */
    az_sql_failover_group_update(): void {
    }
}

/** Manage SQL Instance Failover Groups. */
class az_sql_instance_failover_group {
    /**
     * Creates an instance failover group between two connected managed instances.
     *
     * Syntax: 
     *
     * az sql instance-failover-group create --mi
     *                                       --name
     *                                       --partner-mi
     *                                       --partner-resource-group
     *                                       --resource-group
     *                                       [--failover-policy {Automatic, Manual}]
     *                                       [--grace-period]
     *                                       [--subscription]
     */
    az_sql_instance_failover_group_create(): void {
    }

    /**
     * Deletes a failover group.
     *
     * Syntax: 
     *
     * az sql instance-failover-group delete --location
     *                                       --name
     *                                       --resource-group
     *                                       [--subscription]
     */
    az_sql_instance_failover_group_delete(): void {
    }

    /**
     * Set the primary of the instance failover group by failing over all databases from the current primary managed instance.
     *
     * Syntax: 
     *
     * az sql instance-failover-group set-primary --location
     *                                            --name
     *                                            --resource-group
     *                                            [--allow-data-loss]
     *                                            [--subscription]
     */
    az_sql_instance_failover_group_set_primary(): void {
    }

    /**
     * Gets a failover group.
     *
     * Syntax: 
     *
     * az sql instance-failover-group show --location
     *                                     --name
     *                                     --resource-group
     *                                     [--query-examples]
     *                                     [--subscription]
     */
    az_sql_instance_failover_group_show(): void {
    }

    /**
     * Updates the instance failover group.
     *
     * Syntax: 
     *
     * az sql instance-failover-group update --location
     *                                       --name
     *                                       --resource-group
     *                                       [--add]
     *                                       [--failover-policy {Automatic, Manual}]
     *                                       [--force-string]
     *                                       [--grace-period]
     *                                       [--remove]
     *                                       [--set]
     *                                       [--subscription]
     */
    az_sql_instance_failover_group_update(): void {
    }
}

/** Manage instance pools. */
class az_sql_instance_pool {
    /**
     * Create an instance pool.
     *
     * Syntax: 
     *
     * az sql instance-pool create --capacity
     *                             --edition
     *                             --family
     *                             --license-type {BasePrice, LicenseIncluded}
     *                             --location
     *                             --name
     *                             --resource-group
     *                             --subnet
     *                             [--no-wait]
     *                             [--subscription]
     *                             [--tags]
     *                             [--vnet-name]
     */
    az_sql_instance_pool_create(): void {
    }

    /**
     * Delete an instance pool.
     *
     * Syntax: 
     *
     * az sql instance-pool delete --name
     *                             --resource-group
     *                             [--no-wait]
     *                             [--subscription]
     *                             [--yes]
     */
    az_sql_instance_pool_delete(): void {
    }

    /**
     * List available instance pools.
     *
     * Syntax: 
     *
     * az sql instance-pool list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_sql_instance_pool_list(): void {
    }

    /**
     * Get the details for an instance pool.
     *
     * Syntax: 
     *
     * az sql instance-pool show --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_sql_instance_pool_show(): void {
    }

    /**
     * Update an instance pool.
     *
     * Syntax: 
     *
     * az sql instance-pool update --name
     *                             --resource-group
     *                             [--subscription]
     *                             [--tags]
     */
    az_sql_instance_pool_update(): void {
    }

    /**
     * Wait for an instance pool to reach a desired state.
     *
     * Syntax: 
     *
     * az sql instance-pool wait --name
     *                           --resource-group
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_sql_instance_pool_wait(): void {
    }
}

/** Manage a managed instance's Active Directory administrator. */
class az_sql_mi_ad_admin {
    /**
     * Creates a new managed instance Active Directory administrator.
     *
     * Syntax: 
     *
     * az sql mi ad-admin create --display-name
     *                           --managed-instance
     *                           --object-id
     *                           --resource-group
     *                           [--subscription]
     */
    az_sql_mi_ad_admin_create(): void {
    }

    /**
     * Deletes an existing managed instance Active Directory Administrator.
     *
     * Syntax: 
     *
     * az sql mi ad-admin delete [--ids]
     *                           [--managed-instance]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_sql_mi_ad_admin_delete(): void {
    }

    /**
     * Returns a list of managed instance Active Directory Administrators.
     *
     * Syntax: 
     *
     * az sql mi ad-admin list [--ids]
     *                         [--managed-instance]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_sql_mi_ad_admin_list(): void {
    }

    /**
     * Updates an existing managed instance Active Directory administrator.
     *
     * Syntax: 
     *
     * az sql mi ad-admin update --display-name
     *                           --object-id
     *                           [--ids]
     *                           [--managed-instance]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_sql_mi_ad_admin_update(): void {
    }
}

/** Manage a SQL Instance's keys. */
class az_sql_mi_key {
    /**
     * Creates a SQL Instance key.
     *
     * Syntax: 
     *
     * az sql mi key create --kid
     *                      --managed-instance
     *                      --resource-group
     *                      [--subscription]
     */
    az_sql_mi_key_create(): void {
    }

    /**
     * Deletes a SQL Instance key.
     *
     * Syntax: 
     *
     * az sql mi key delete --kid
     *                      [--ids]
     *                      [--managed-instance]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_sql_mi_key_delete(): void {
    }

    /**
     * Gets a list of managed instance keys.
     *
     * Syntax: 
     *
     * az sql mi key list [--filter]
     *                    [--ids]
     *                    [--managed-instance]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sql_mi_key_list(): void {
    }

    /**
     * Shows a SQL Instance key.
     *
     * Syntax: 
     *
     * az sql mi key show --kid
     *                    [--ids]
     *                    [--managed-instance]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sql_mi_key_show(): void {
    }
}

/** Manage operations on a managed instance. */
class az_sql_mi_op {
    /**
     * Cancels the asynchronous operation on the managed instance.
     *
     * Syntax: 
     *
     * az sql mi op cancel --name
     *                     [--ids]
     *                     [--managed-instance]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_sql_mi_op_cancel(): void {
    }

    /**
     * Gets a list of operations performed on the managed instance.
     *
     * Syntax: 
     *
     * az sql mi op list [--ids]
     *                   [--managed-instance]
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_sql_mi_op_list(): void {
    }

    /**
     * Gets a management operation on a managed instance.
     *
     * Syntax: 
     *
     * az sql mi op show --name
     *                   [--ids]
     *                   [--managed-instance]
     *                   [--query-examples]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_sql_mi_op_show(): void {
    }
}

/** Manage a SQL Instance's encryption protector. */
class az_sql_mi_tde_key {
    /**
     * Sets the SQL Instance's encryption protector.
     *
     * Syntax: 
     *
     * az sql mi tde-key set --server-key-type {AzureKeyVault, ServiceManaged}
     *                       [--ids]
     *                       [--kid]
     *                       [--managed-instance]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_sql_mi_tde_key_set(): void {
    }

    /**
     * Gets a managed instance encryption protector.
     *
     * Syntax: 
     *
     * az sql mi tde-key show [--ids]
     *                        [--managed-instance]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_sql_mi_tde_key_show(): void {
    }
}

/** Manage SQL managed instances. */
class az_sql_mi {
    /**
     * Create a managed instance.
     *
     * Syntax: 
     *
     * az sql mi create --admin-password
     *                  --admin-user
     *                  --name
     *                  --resource-group
     *                  --subnet
     *                  [--assign-identity]
     *                  [--backup-storage-redundancy]
     *                  [--capacity]
     *                  [--collation]
     *                  [--edition]
     *                  [--family]
     *                  [--license-type {BasePrice, LicenseIncluded}]
     *                  [--location]
     *                  [--minimal-tls-version {1.0, 1.1, 1.2, None}]
     *                  [--no-wait]
     *                  [--proxy-override {Default, Proxy, Redirect}]
     *                  [--public-data-endpoint-enabled {false, true}]
     *                  [--storage]
     *                  [--subscription]
     *                  [--tags]
     *                  [--timezone-id]
     *                  [--vnet-name]
     *                  [--yes]
     */
    az_sql_mi_create(): void {
    }

    /**
     * Delete a managed instance.
     *
     * Syntax: 
     *
     * az sql mi delete [--ids]
     *                  [--name]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--yes]
     */
    az_sql_mi_delete(): void {
    }

    /**
     * Failover a managed instance.
     *
     * Syntax: 
     *
     * az sql mi failover [--ids]
     *                    [--name]
     *                    [--no-wait]
     *                    [--replica-type]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sql_mi_failover(): void {
    }

    /**
     * List available managed instances.
     *
     * Syntax: 
     *
     * az sql mi list [--query-examples]
     *                [--resource-group]
     *                [--subscription]
     */
    az_sql_mi_list(): void {
    }

    /**
     * Get the details for a managed instance.
     *
     * Syntax: 
     *
     * az sql mi show [--ids]
     *                [--name]
     *                [--query-examples]
     *                [--resource-group]
     *                [--subscription]
     */
    az_sql_mi_show(): void {
    }

    /**
     * Update a managed instance.
     *
     * Syntax: 
     *
     * az sql mi update [--add]
     *                  [--admin-password]
     *                  [--assign-identity]
     *                  [--capacity]
     *                  [--edition]
     *                  [--family]
     *                  [--force-string]
     *                  [--ids]
     *                  [--license-type {BasePrice, LicenseIncluded}]
     *                  [--minimal-tls-version {1.0, 1.1, 1.2, None}]
     *                  [--name]
     *                  [--no-wait]
     *                  [--proxy-override {Default, Proxy, Redirect}]
     *                  [--public-data-endpoint-enabled {false, true}]
     *                  [--remove]
     *                  [--resource-group]
     *                  [--set]
     *                  [--storage]
     *                  [--subscription]
     *                  [--tags]
     */
    az_sql_mi_update(): void {
    }
}

/** Manage SQL Managed Instance database long term retention backups. */
class az_sql_midb_ltr_backup {
    /**
     * Delete a long term retention backup.
     *
     * Syntax: 
     *
     * az sql midb ltr-backup delete [--backup-id]
     *                               [--database]
     *                               [--location]
     *                               [--managed-instance]
     *                               [--name]
     *                               [--subscription]
     *                               [--yes]
     */
    az_sql_midb_ltr_backup_delete(): void {
    }

    /**
     * List the long term retention backups for a location, instance or database.
     *
     * Syntax: 
     *
     * az sql midb ltr-backup list --location
     *                             [--database]
     *                             [--database-state]
     *                             [--latest]
     *                             [--managed-instance]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_sql_midb_ltr_backup_list(): void {
    }

    /**
     * Restore a long term retention backup to a new database.
     *
     * Syntax: 
     *
     * az sql midb ltr-backup restore --backup-id
     *                                --dest-database
     *                                --dest-mi
     *                                --dest-resource-group
     *                                [--no-wait]
     *                                [--subscription]
     */
    az_sql_midb_ltr_backup_restore(): void {
    }

    /**
     * Get a long term retention backup for a managed database.
     *
     * Syntax: 
     *
     * az sql midb ltr-backup show [--backup-id]
     *                             [--database]
     *                             [--location]
     *                             [--managed-instance]
     *                             [--name]
     *                             [--query-examples]
     *                             [--subscription]
     */
    az_sql_midb_ltr_backup_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the managed database is met.
     *
     * Syntax: 
     *
     * az sql midb ltr-backup wait --database
     *                             --managed-instance
     *                             --resource-group
     *                             [--created]
     *                             [--custom]
     *                             [--deleted]
     *                             [--exists]
     *                             [--interval]
     *                             [--subscription]
     *                             [--timeout]
     *                             [--updated]
     */
    az_sql_midb_ltr_backup_wait(): void {
    }
}

/** Manage SQL Managed Instance database long term retention policy. */
class az_sql_midb_ltr_policy {
    /**
     * Update long term retention settings for a managed database.
     *
     * Syntax: 
     *
     * az sql midb ltr-policy set [--ids]
     *                            [--managed-instance]
     *                            [--monthly-retention]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--week-of-year]
     *                            [--weekly-retention]
     *                            [--yearly-retention]
     */
    az_sql_midb_ltr_policy_set(): void {
    }

    /**
     * Show the long term retention policy for a managed database.
     *
     * Syntax: 
     *
     * az sql midb ltr-policy show [--ids]
     *                             [--managed-instance]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_sql_midb_ltr_policy_show(): void {
    }
}

/** Manage SQL Managed Instance database backup short term retention policy. */
class az_sql_midb_short_term_retention_policy {
    /**
     * Update short term retention for automated backups on a single database.
     *
     * Syntax: 
     *
     * az sql midb short-term-retention-policy set --retention-days
     *                                             [--deleted-time]
     *                                             [--ids]
     *                                             [--managed-instance]
     *                                             [--name]
     *                                             [--no-wait]
     *                                             [--resource-group]
     *                                             [--subscription]
     */
    az_sql_midb_short_term_retention_policy_set(): void {
    }

    /**
     * Show short term retention for automated backups on a single database.
     *
     * Syntax: 
     *
     * az sql midb short-term-retention-policy show [--deleted-time]
     *                                              [--ids]
     *                                              [--managed-instance]
     *                                              [--name]
     *                                              [--query-examples]
     *                                              [--resource-group]
     *                                              [--subscription]
     */
    az_sql_midb_short_term_retention_policy_show(): void {
    }
}

/** Manage SQL managed instance databases. */
class az_sql_midb {
    /**
     * Create a managed database.
     *
     * Syntax: 
     *
     * az sql midb create --managed-instance
     *                    --name
     *                    --resource-group
     *                    [--collation]
     *                    [--no-wait]
     *                    [--subscription]
     */
    az_sql_midb_create(): void {
    }

    /**
     * Delete a managed database.
     *
     * Syntax: 
     *
     * az sql midb delete [--ids]
     *                    [--managed-instance]
     *                    [--name]
     *                    [--no-wait]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--yes]
     */
    az_sql_midb_delete(): void {
    }

    /**
     * List managed databases on a managed instance.
     *
     * Syntax: 
     *
     * az sql midb list [--ids]
     *                  [--managed-instance]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_sql_midb_list(): void {
    }

    /**
     * List restorable deleted managed databases.
     *
     * Syntax: 
     *
     * az sql midb list-deleted [--ids]
     *                          [--managed-instance]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_sql_midb_list_deleted(): void {
    }

    /**
     * Restore a managed database.
     *
     * Syntax: 
     *
     * az sql midb restore --dest-name
     *                     --time
     *                     [--deleted-time]
     *                     [--dest-mi]
     *                     [--dest-resource-group]
     *                     [--ids]
     *                     [--managed-instance]
     *                     [--name]
     *                     [--no-wait]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_sql_midb_restore(): void {
    }

    /**
     * Get the details for a managed database.
     *
     * Syntax: 
     *
     * az sql midb show [--ids]
     *                  [--managed-instance]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_sql_midb_show(): void {
    }
}

/** Manage a server's Active Directory administrator. */
class az_sql_server_ad_admin {
    /**
     * Create a new server Active Directory administrator.
     *
     * Syntax: 
     *
     * az sql server ad-admin create --display-name
     *                               --object-id
     *                               --resource-group
     *                               --server
     *                               [--subscription]
     */
    az_sql_server_ad_admin_create(): void {
    }

    /**
     * Deletes the Azure Active Directory administrator with the given name.
     *
     * Syntax: 
     *
     * az sql server ad-admin delete [--ids]
     *                               [--resource-group]
     *                               [--server]
     *                               [--subscription]
     */
    az_sql_server_ad_admin_delete(): void {
    }

    /**
     * Gets a list of Azure Active Directory administrators in a server.
     *
     * Syntax: 
     *
     * az sql server ad-admin list [--ids]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--server]
     *                             [--subscription]
     */
    az_sql_server_ad_admin_list(): void {
    }

    /**
     * Update an existing server Active Directory administrator.
     *
     * Syntax: 
     *
     * az sql server ad-admin update [--add]
     *                               [--display-name]
     *                               [--force-string]
     *                               [--ids]
     *                               [--object-id]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--server]
     *                               [--set]
     *                               [--subscription]
     */
    az_sql_server_ad_admin_update(): void {
    }
}

/** Manage a server's auditing policy. */
class az_sql_server_audit_policy {
    /**
     * Gets a server's blob auditing policy.
     *
     * Syntax: 
     *
     * az sql server audit-policy show [--ids]
     *                                 [--name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_sql_server_audit_policy_show(): void {
    }

    /**
     * Update a server's auditing policy.
     *
     * Syntax: 
     *
     * az sql server audit-policy update [--actions]
     *                                   [--add]
     *                                   [--force-string]
     *                                   [--ids]
     *                                   [--name]
     *                                   [--remove]
     *                                   [--resource-group]
     *                                   [--retention-days]
     *                                   [--set]
     *                                   [--state {Disabled, Enabled}]
     *                                   [--storage-account]
     *                                   [--storage-endpoint]
     *                                   [--storage-key]
     *                                   [--subscription]
     */
    az_sql_server_audit_policy_update(): void {
    }
}

/** Manage a server's connection policy. */
class az_sql_server_conn_policy {
    /**
     * Gets a server's secure connection policy.
     *
     * Syntax: 
     *
     * az sql server conn-policy show [--ids]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--server]
     *                                [--subscription]
     */
    az_sql_server_conn_policy_show(): void {
    }

    /**
     * Updates a server's secure connection policy.
     *
     * Syntax: 
     *
     * az sql server conn-policy update --connection-type {Default, Proxy, Redirect}
     *                                  [--add]
     *                                  [--force-string]
     *                                  [--ids]
     *                                  [--remove]
     *                                  [--resource-group]
     *                                  [--server]
     *                                  [--set]
     *                                  [--subscription]
     */
    az_sql_server_conn_policy_update(): void {
    }
}

/** Manage a server's DNS aliases. */
class az_sql_server_dns_alias {
    /**
     * Creates a server dns alias.
     *
     * Syntax: 
     *
     * az sql server dns-alias create --name
     *                                --resource-group
     *                                --server
     *                                [--subscription]
     */
    az_sql_server_dns_alias_create(): void {
    }

    /**
     * Deletes the server DNS alias with the given name.
     *
     * Syntax: 
     *
     * az sql server dns-alias delete --name
     *                                [--ids]
     *                                [--resource-group]
     *                                [--server]
     *                                [--subscription]
     */
    az_sql_server_dns_alias_delete(): void {
    }

    /**
     * Gets a list of server DNS aliases for a server.
     *
     * Syntax: 
     *
     * az sql server dns-alias list [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_server_dns_alias_list(): void {
    }

    /**
     * Sets a server to which DNS alias should point.
     *
     * Syntax: 
     *
     * az sql server dns-alias set --name
     *                             --original-server
     *                             [--ids]
     *                             [--original-resource-group]
     *                             [--original-subscription-id]
     *                             [--resource-group]
     *                             [--server]
     *                             [--subscription]
     */
    az_sql_server_dns_alias_set(): void {
    }

    /**
     * Gets a server DNS alias.
     *
     * Syntax: 
     *
     * az sql server dns-alias show --name
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_server_dns_alias_show(): void {
    }
}

/** Manage a server's firewall rules. */
class az_sql_server_firewall_rule {
    /**
     * Create a firewall rule.
     *
     * Syntax: 
     *
     * az sql server firewall-rule create --end-ip-address
     *                                    --name
     *                                    --resource-group
     *                                    --server
     *                                    --start-ip-address
     *                                    [--subscription]
     */
    az_sql_server_firewall_rule_create(): void {
    }

    /**
     * Deletes a firewall rule.
     *
     * Syntax: 
     *
     * az sql server firewall-rule delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--server]
     *                                    [--subscription]
     */
    az_sql_server_firewall_rule_delete(): void {
    }

    /**
     * List a server's firewall rules.
     *
     * Syntax: 
     *
     * az sql server firewall-rule list [--ids]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server]
     *                                  [--subscription]
     */
    az_sql_server_firewall_rule_list(): void {
    }

    /**
     * Shows the details for a firewall rule.
     *
     * Syntax: 
     *
     * az sql server firewall-rule show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--server]
     *                                  [--subscription]
     */
    az_sql_server_firewall_rule_show(): void {
    }

    /**
     * Update a firewall rule.
     *
     * Syntax: 
     *
     * az sql server firewall-rule update [--end-ip-address]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--server]
     *                                    [--start-ip-address]
     *                                    [--subscription]
     */
    az_sql_server_firewall_rule_update(): void {
    }
}

/** Manage a server's keys. */
class az_sql_server_key {
    /**
     * Creates a server key.
     *
     * Syntax: 
     *
     * az sql server key create --kid
     *                          --resource-group
     *                          --server
     *                          [--subscription]
     */
    az_sql_server_key_create(): void {
    }

    /**
     * Deletes a server key.
     *
     * Syntax: 
     *
     * az sql server key delete --kid
     *                          [--ids]
     *                          [--resource-group]
     *                          [--server]
     *                          [--subscription]
     */
    az_sql_server_key_delete(): void {
    }

    /**
     * Gets a list of server keys.
     *
     * Syntax: 
     *
     * az sql server key list [--ids]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--server]
     *                        [--subscription]
     */
    az_sql_server_key_list(): void {
    }

    /**
     * Shows a server key.
     *
     * Syntax: 
     *
     * az sql server key show --kid
     *                        [--ids]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--server]
     *                        [--subscription]
     */
    az_sql_server_key_show(): void {
    }
}

/** Manage a server's encryption protector. */
class az_sql_server_tde_key {
    /**
     * Sets the server's encryption protector.
     *
     * Syntax: 
     *
     * az sql server tde-key set --server-key-type {AzureKeyVault, ServiceManaged}
     *                           [--ids]
     *                           [--kid]
     *                           [--resource-group]
     *                           [--server]
     *                           [--subscription]
     */
    az_sql_server_tde_key_set(): void {
    }

    /**
     * Gets a server encryption protector.
     *
     * Syntax: 
     *
     * az sql server tde-key show [--ids]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--server]
     *                            [--subscription]
     */
    az_sql_server_tde_key_show(): void {
    }
}

/** Manage a server's virtual network rules. */
class az_sql_server_vnet_rule {
    /**
     * Create a virtual network rule to allows access to an Azure SQL server.
     *
     * Syntax: 
     *
     * az sql server vnet-rule create --name
     *                                --resource-group
     *                                --server
     *                                --subnet
     *                                [--ignore-missing-endpoint {false, true}]
     *                                [--subscription]
     *                                [--vnet-name]
     */
    az_sql_server_vnet_rule_create(): void {
    }

    /**
     * Deletes the virtual network rule with the given name.
     *
     * Syntax: 
     *
     * az sql server vnet-rule delete --name
     *                                [--ids]
     *                                [--resource-group]
     *                                [--server]
     *                                [--subscription]
     */
    az_sql_server_vnet_rule_delete(): void {
    }

    /**
     * Gets a list of virtual network rules in a server.
     *
     * Syntax: 
     *
     * az sql server vnet-rule list [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_server_vnet_rule_list(): void {
    }

    /**
     * Gets a virtual network rule.
     *
     * Syntax: 
     *
     * az sql server vnet-rule show --name
     *                              [--ids]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--server]
     *                              [--subscription]
     */
    az_sql_server_vnet_rule_show(): void {
    }

    /**
     * Update a virtual network rule.
     *
     * Syntax: 
     *
     * az sql server vnet-rule update --name
     *                                --subnet
     *                                [--add]
     *                                [--force-string]
     *                                [--ids]
     *                                [--ignore-missing-endpoint {false, true}]
     *                                [--remove]
     *                                [--resource-group]
     *                                [--server]
     *                                [--set]
     *                                [--subscription]
     */
    az_sql_server_vnet_rule_update(): void {
    }
}

/** Manage SQL servers. */
class az_sql_server {
    /**
     * Create a server.
     *
     * Syntax: 
     *
     * az sql server create --admin-password
     *                      --admin-user
     *                      --name
     *                      --resource-group
     *                      [--assign-identity]
     *                      [--enable-public-network {false, true}]
     *                      [--location]
     *                      [--minimal-tls-version {1.0, 1.1, 1.2}]
     *                      [--no-wait]
     *                      [--subscription]
     */
    az_sql_server_create(): void {
    }

    /**
     * Deletes a server.
     *
     * Syntax: 
     *
     * az sql server delete [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--yes]
     */
    az_sql_server_delete(): void {
    }

    /**
     * List available servers.
     *
     * Syntax: 
     *
     * az sql server list [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sql_server_list(): void {
    }

    /**
     * Returns server usages.
     *
     * Syntax: 
     *
     * az sql server list-usages [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_sql_server_list_usages(): void {
    }

    /**
     * Gets a server.
     *
     * Syntax: 
     *
     * az sql server show [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--subscription]
     */
    az_sql_server_show(): void {
    }

    /**
     * Update a server.
     *
     * Syntax: 
     *
     * az sql server update [--add]
     *                      [--admin-password]
     *                      [--assign_identity]
     *                      [--enable-public-network {false, true}]
     *                      [--force-string]
     *                      [--ids]
     *                      [--minimal-tls-version {1.0, 1.1, 1.2}]
     *                      [--name]
     *                      [--no-wait]
     *                      [--remove]
     *                      [--resource-group]
     *                      [--set]
     *                      [--subscription]
     */
    az_sql_server_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the SQL server is met.
     *
     * Syntax: 
     *
     * az sql server wait [--created]
     *                    [--custom]
     *                    [--deleted]
     *                    [--exists]
     *                    [--ids]
     *                    [--interval]
     *                    [--name]
     *                    [--resource-group]
     *                    [--subscription]
     *                    [--timeout]
     *                    [--updated]
     */
    az_sql_server_wait(): void {
    }
}

/** Manage SQL virtual clusters. */
class az_sql_virtual_cluster {
    /**
     * Delete a virtual cluster.
     *
     * Syntax: 
     *
     * az sql virtual-cluster delete [--ids]
     *                               [--name]
     *                               [--no-wait]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_sql_virtual_cluster_delete(): void {
    }

    /**
     * List available virtual clusters.
     *
     * Syntax: 
     *
     * az sql virtual-cluster list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_sql_virtual_cluster_list(): void {
    }

    /**
     * Get the details for a virtual cluster.
     *
     * Syntax: 
     *
     * az sql virtual-cluster show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_sql_virtual_cluster_show(): void {
    }
}

/** Manage SQL availability group listeners. */
class az_sql_vm_group_ag_listener {
    /**
     * Creates an availability group listener.
     *
     * Syntax: 
     *
     * az sql vm group ag-listener create --ag-name
     *                                    --group-name
     *                                    --ip-address
     *                                    --load-balancer
     *                                    --name
     *                                    --probe-port
     *                                    --resource-group
     *                                    --sqlvms
     *                                    --subnet
     *                                    [--port]
     *                                    [--public-ip]
     *                                    [--subscription]
     *                                    [--vnet-name]
     */
    az_sql_vm_group_ag_listener_create(): void {
    }

    /**
     * Deletes an availability group listener.
     *
     * Syntax: 
     *
     * az sql vm group ag-listener delete --group-name
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     *                                    [--yes]
     */
    az_sql_vm_group_ag_listener_delete(): void {
    }

    /**
     * Lists all availability group listeners in a SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm group ag-listener list --group-name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--subscription]
     */
    az_sql_vm_group_ag_listener_list(): void {
    }

    /**
     * Gets an availability group listener.
     *
     * Syntax: 
     *
     * az sql vm group ag-listener show --group-name
     *                                  [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_sql_vm_group_ag_listener_show(): void {
    }

    /**
     * Updates an availability group listener.
     *
     * Syntax: 
     *
     * az sql vm group ag-listener update --group-name
     *                                    [--add]
     *                                    [--force-string]
     *                                    [--ids]
     *                                    [--name]
     *                                    [--remove]
     *                                    [--resource-group]
     *                                    [--set]
     *                                    [--sqlvms]
     *                                    [--subscription]
     */
    az_sql_vm_group_ag_listener_update(): void {
    }
}

/** Manage SQL virtual machine groups. */
class az_sql_vm_group {
    /**
     * Creates a SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm group create --domain-fqdn
     *                        --image-offer
     *                        --image-sku {Developer, Enterprise}
     *                        --name
     *                        --operator-acc
     *                        --resource-group
     *                        --service-acc
     *                        --storage-account
     *                        [--bootstrap-acc]
     *                        [--fsw-path]
     *                        [--location]
     *                        [--ou-path]
     *                        [--sa-key]
     *                        [--subscription]
     *                        [--tags]
     */
    az_sql_vm_group_create(): void {
    }

    /**
     * Deletes a SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm group delete [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--yes]
     */
    az_sql_vm_group_delete(): void {
    }

    /**
     * Lists all SQL virtual machine groups in a resource group or subscription.
     *
     * Syntax: 
     *
     * az sql vm group list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_sql_vm_group_list(): void {
    }

    /**
     * Gets a SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm group show [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_sql_vm_group_show(): void {
    }

    /**
     * Updates a SQL virtual machine group if there are not SQL virtual machines attached to the group.
     *
     * Syntax: 
     *
     * az sql vm group update [--add]
     *                        [--bootstrap-acc]
     *                        [--domain-fqdn]
     *                        [--force-string]
     *                        [--fsw-path]
     *                        [--ids]
     *                        [--name]
     *                        [--operator-acc]
     *                        [--ou-path]
     *                        [--remove]
     *                        [--resource-group]
     *                        [--sa-key]
     *                        [--service-acc]
     *                        [--set]
     *                        [--storage-account]
     *                        [--subscription]
     *                        [--tags]
     */
    az_sql_vm_group_update(): void {
    }
}

/** Manage SQL virtual machines. */
class az_sql_vm {
    /**
     * Adds SQL virtual machine to a SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm add-to-group --sqlvm-group
     *                        [--bootstrap-acc-pwd]
     *                        [--ids]
     *                        [--name]
     *                        [--operator-acc-pwd]
     *                        [--resource-group]
     *                        [--service-acc-pwd]
     *                        [--subscription]
     */
    az_sql_vm_add_to_group(): void {
    }

    /**
     * Creates a SQL virtual machine.
     *
     * Syntax: 
     *
     * az sql vm create --license-type {AHUB, DR, PAYG}
     *                  --name
     *                  --resource-group
     *                  [--backup-pwd]
     *                  [--backup-schedule-type {Automated, Manual}]
     *                  [--backup-system-dbs {false, true}]
     *                  [--connectivity-type {LOCAL, PRIVATE, PUBLIC}]
     *                  [--credential-name]
     *                  [--day-of-week {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}]
     *                  [--enable-auto-backup {false, true}]
     *                  [--enable-auto-patching {false, true}]
     *                  [--enable-encryption {false, true}]
     *                  [--enable-key-vault-credential {false, true}]
     *                  [--enable-r-services {false, true}]
     *                  [--full-backup-duration]
     *                  [--full-backup-frequency {Daily, Weekly}]
     *                  [--full-backup-start-hour]
     *                  [--image-offer]
     *                  [--image-sku {Developer, Enterprise, Express, Standard, Web}]
     *                  [--key-vault]
     *                  [--location]
     *                  [--log-backup-frequency]
     *                  [--maintenance-window-duration]
     *                  [--maintenance-window-start-hour]
     *                  [--port]
     *                  [--retention-period]
     *                  [--sa-key]
     *                  [--sp-name]
     *                  [--sp-secret]
     *                  [--sql-auth-update-pwd]
     *                  [--sql-auth-update-username]
     *                  [--sql-mgmt-type {Full, LightWeight, NoAgent}]
     *                  [--sql-workload-type {DW, GENERAL, OLTP}]
     *                  [--storage-account]
     *                  [--subscription]
     *                  [--tags]
     */
    az_sql_vm_create(): void {
    }

    /**
     * Deletes a SQL virtual machine.
     *
     * Syntax: 
     *
     * az sql vm delete [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--yes]
     */
    az_sql_vm_delete(): void {
    }

    /**
     * Lists all SQL virtual machines in a resource group or subscription.
     *
     * Syntax: 
     *
     * az sql vm list [--query-examples]
     *                [--resource-group]
     *                [--subscription]
     */
    az_sql_vm_list(): void {
    }

    /**
     * Remove SQL virtual machine from its current SQL virtual machine group.
     *
     * Syntax: 
     *
     * az sql vm remove-from-group [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_sql_vm_remove_from_group(): void {
    }

    /**
     * Gets a SQL virtual machine.
     *
     * Syntax: 
     *
     * az sql vm show [--expand]
     *                [--ids]
     *                [--name]
     *                [--query-examples]
     *                [--resource-group]
     *                [--subscription]
     */
    az_sql_vm_show(): void {
    }

    /**
     * Updates the properties of a SQL virtual machine.
     *
     * Syntax: 
     *
     * az sql vm update [--add]
     *                  [--backup-pwd]
     *                  [--backup-schedule-type {Automated, Manual}]
     *                  [--backup-system-dbs {false, true}]
     *                  [--connectivity-type {LOCAL, PRIVATE, PUBLIC}]
     *                  [--credential-name]
     *                  [--day-of-week {Friday, Monday, Saturday, Sunday, Thursday, Tuesday, Wednesday}]
     *                  [--enable-auto-backup {false, true}]
     *                  [--enable-auto-patching {false, true}]
     *                  [--enable-encryption {false, true}]
     *                  [--enable-key-vault-credential {false, true}]
     *                  [--enable-r-services {false, true}]
     *                  [--force-string]
     *                  [--full-backup-duration]
     *                  [--full-backup-frequency {Daily, Weekly}]
     *                  [--full-backup-start-hour]
     *                  [--ids]
     *                  [--image-sku {Developer, Enterprise, Express, Standard, Web}]
     *                  [--key-vault]
     *                  [--license-type {AHUB, DR, PAYG}]
     *                  [--log-backup-frequency]
     *                  [--maintenance-window-duration]
     *                  [--maintenance-window-start-hour]
     *                  [--name]
     *                  [--port]
     *                  [--remove]
     *                  [--resource-group]
     *                  [--retention-period]
     *                  [--sa-key]
     *                  [--set]
     *                  [--sp-name]
     *                  [--sp-secret]
     *                  [--sql-mgmt-type {Full}]
     *                  [--sql-workload-type {DW, GENERAL, OLTP}]
     *                  [--storage-account]
     *                  [--subscription]
     *                  [--tags]
     *                  [--yes]
     */
    az_sql_vm_update(): void {
    }
}

/** Manage Azure SQL Databases and Data Warehouses. */
class az_sql {
    /**
     * Gets all subscription usage metrics in a given location.
     *
     * Syntax: 
     *
     * az sql list-usages --location
     *                    [--subscription]
     */
    az_sql_list_usages(): void {
    }

    /**
     * Gets a subscription usage metric.
     *
     * Syntax: 
     *
     * az sql show-usage --location
     *                   --usage
     *                   [--subscription]
     */
    az_sql_show_usage(): void {
    }
}

/** Manage app settings of Functions of the static app. */
class az_staticwebapp_appsettings {
    /**
     * Delete function app settings with given keys of the static app.
     *
     * Syntax: 
     *
     * az staticwebapp appsettings delete --name
     *                                    --setting-names
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_staticwebapp_appsettings_delete(): void {
    }

    /**
     * List function app settings of the static app. A function must first be deployed to use this method.
     *
     * Syntax: 
     *
     * az staticwebapp appsettings list --name
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_staticwebapp_appsettings_list(): void {
    }

    /**
     * Set (replace) function app settings of the static app.
     *
     * Syntax: 
     *
     * az staticwebapp appsettings set --name
     *                                 --setting-names
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_staticwebapp_appsettings_set(): void {
    }
}

/** Manage environment of the static app. */
class az_staticwebapp_environment {
    /**
     * Show information about functions.
     *
     * Syntax: 
     *
     * az staticwebapp environment functions --name
     *                                       [--environment-name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_staticwebapp_environment_functions(): void {
    }

    /**
     * List all environment of the static app including production.
     *
     * Syntax: 
     *
     * az staticwebapp environment list --name
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_staticwebapp_environment_list(): void {
    }

    /**
     * Show information about the production environment or the specified environment.
     *
     * Syntax: 
     *
     * az staticwebapp environment show --name
     *                                  [--environment-name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_staticwebapp_environment_show(): void {
    }
}

/** Manage custom hostnames of Functions of the static app. */
class az_staticwebapp_hostname {
    /**
     * Delete given hostname of the static app.
     *
     * Syntax: 
     *
     * az staticwebapp hostname delete --hostname
     *                                 --name
     *                                 [--no-wait]
     *                                 [--resource-group]
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_staticwebapp_hostname_delete(): void {
    }

    /**
     * List custom hostnames of the static app.
     *
     * Syntax: 
     *
     * az staticwebapp hostname list --name
     *                               [--query-examples]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_staticwebapp_hostname_list(): void {
    }

    /**
     * Set given sub-domain hostname to the static app. Please configure a CNAME record with your DNS provider.
     *
     * Syntax: 
     *
     * az staticwebapp hostname set --hostname
     *                              --name
     *                              [--no-wait]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_staticwebapp_hostname_set(): void {
    }
}

/** Manage users of the static app. */
class az_staticwebapp_users {
    /**
     * Create invitation link for specified user to the static app.
     *
     * Syntax: 
     *
     * az staticwebapp users invite --authentication-provider
     *                              --domain
     *                              --invitation-expiration-in-hours
     *                              --name
     *                              --roles
     *                              --user-details
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_staticwebapp_users_invite(): void {
    }

    /**
     * Lists users and assigned roles, limited to users who accepted their invites.
     *
     * Syntax: 
     *
     * az staticwebapp users list --name
     *                            [--authentication-provider]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_staticwebapp_users_list(): void {
    }

    /**
     * Updates a user entry with the listed roles. Either user details or user id is required.
     *
     * Syntax: 
     *
     * az staticwebapp users update --name
     *                              --roles
     *                              [--authentication-provider]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--user-details]
     *                              [--user-id]
     */
    az_staticwebapp_users_update(): void {
    }
}

/** Manage static apps. */
class az_staticwebapp {
    /**
     * Show details of a static app.
     *
     * Syntax: 
     *
     * az staticwebapp browse --name
     *                        [--resource-group]
     *                        [--subscription]
     */
    az_staticwebapp_browse(): void {
    }

    /**
     * Create a static app with content from GitHubRepository URL provided in source on provided branch. Return the app created.
     *
     * Syntax: 
     *
     * az staticwebapp create --branch
     *                        --location
     *                        --name
     *                        --resource-group
     *                        --source
     *                        [--api-location]
     *                        [--app-artifact-location]
     *                        [--app-location]
     *                        [--no-wait]
     *                        [--subscription]
     *                        [--tags]
     *                        [--token]
     */
    az_staticwebapp_create(): void {
    }

    /**
     * Delete a static app.
     *
     * Syntax: 
     *
     * az staticwebapp delete --name
     *                        [--no-wait]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--yes]
     */
    az_staticwebapp_delete(): void {
    }

    /**
     * Disconnect source control to enable connecting to a different repo.
     *
     * Syntax: 
     *
     * az staticwebapp disconnect --name
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--subscription]
     */
    az_staticwebapp_disconnect(): void {
    }

    /**
     * List all static app resources in a subscription, or in resource group if provided.
     *
     * Syntax: 
     *
     * az staticwebapp list [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_staticwebapp_list(): void {
    }

    /**
     * Connect to a repo and branch following a disconnect command.
     *
     * Syntax: 
     *
     * az staticwebapp reconnect --branch
     *                           --name
     *                           --source
     *                           [--no-wait]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--token]
     */
    az_staticwebapp_reconnect(): void {
    }
}

/** Manage the properties of a storage account's blob service. */
class az_storage_account_blob_service_properties {
    /**
     * Show the properties of a storage account's blob service.
     *
     * Syntax: 
     *
     * az storage account blob-service-properties show --account-name
     *                                                 [--query-examples]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_storage_account_blob_service_properties_show(): void {
    }

    /**
     * Update the properties of a storage account's blob service.
     *
     * Syntax: 
     *
     * az storage account blob-service-properties update --account-name
     *                                                   [--add]
     *                                                   [--container-days]
     *                                                   [--container-retention {false, true}]
     *                                                   [--delete-retention-days]
     *                                                   [--enable-change-feed {false, true}]
     *                                                   [--enable-delete-retention {false, true}]
     *                                                   [--enable-restore-policy {false, true}]
     *                                                   [--enable-versioning {false, true}]
     *                                                   [--force-string]
     *                                                   [--remove]
     *                                                   [--resource-group]
     *                                                   [--restore-days]
     *                                                   [--set]
     *                                                   [--subscription]
     */
    az_storage_account_blob_service_properties_update(): void {
    }
}

/** Manage encryption scope for a storage account. */
class az_storage_account_encryption_scope {
    /**
     * Create an encryption scope within storage account.
     *
     * Syntax: 
     *
     * az storage account encryption-scope create --account-name
     *                                            --name
     *                                            [--key-source {Microsoft.KeyVault, Microsoft.Storage}]
     *                                            [--key-uri]
     *                                            [--resource-group]
     *                                            [--subscription]
     */
    az_storage_account_encryption_scope_create(): void {
    }

    /**
     * List encryption scopes within storage account.
     *
     * Syntax: 
     *
     * az storage account encryption-scope list --account-name
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_storage_account_encryption_scope_list(): void {
    }

    /**
     * Show properties for specified encryption scope within storage account.
     *
     * Syntax: 
     *
     * az storage account encryption-scope show --account-name
     *                                          --name
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_storage_account_encryption_scope_show(): void {
    }

    /**
     * Update properties for specified encryption scope within storage account.
     *
     * Syntax: 
     *
     * az storage account encryption-scope update --account-name
     *                                            --name
     *                                            [--key-source {Microsoft.KeyVault, Microsoft.Storage}]
     *                                            [--key-uri]
     *                                            [--resource-group]
     *                                            [--state {Disabled, Enabled}]
     *                                            [--subscription]
     */
    az_storage_account_encryption_scope_update(): void {
    }
}

/** Manage the properties of file service in storage account. */
class az_storage_account_file_service_properties {
    /**
     * Show the properties of file service in storage account.
     *
     * Syntax: 
     *
     * az storage account file-service-properties show --account-name
     *                                                 [--query-examples]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_storage_account_file_service_properties_show(): void {
    }

    /**
     * Update the properties of file service in storage account.
     *
     * Syntax: 
     *
     * az storage account file-service-properties update --account-name
     *                                                   [--delete-retention-days]
     *                                                   [--enable-delete-retention {false, true}]
     *                                                   [--resource-group]
     *                                                   [--subscription]
     */
    az_storage_account_file_service_properties_update(): void {
    }
}

/** Manage storage account keys. */
class az_storage_account_keys {
    /**
     * List the access keys or Kerberos keys (if active directory enabled) for a storage account.
     *
     * Syntax: 
     *
     * az storage account keys list --account-name
     *                              [--expand-key-type {kerb}]
     *                              [--query-examples]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_storage_account_keys_list(): void {
    }

    /**
     * Regenerate one of the access keys or Kerberos keys (if active directory enabled) for a storage account.
     *
     * Syntax: 
     *
     * az storage account keys renew --account-name
     *                               --key {primary, secondary}
     *                               [--key-type {kerb}]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_storage_account_keys_renew(): void {
    }
}

/** Manage storage account management policies. */
class az_storage_account_management_policy {
    /**
     * Creates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy create --account-name
     *                                             --policy
     *                                             --resource-group
     *                                             [--subscription]
     */
    az_storage_account_management_policy_create(): void {
    }

    /**
     * Deletes the managementpolicy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy delete --account-name
     *                                             --resource-group
     *                                             [--subscription]
     */
    az_storage_account_management_policy_delete(): void {
    }

    /**
     * Gets the managementpolicy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy show --account-name
     *                                           --resource-group
     *                                           [--query-examples]
     *                                           [--subscription]
     */
    az_storage_account_management_policy_show(): void {
    }

    /**
     * Updates the data policy rules associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account management-policy update --account-name
     *                                             --resource-group
     *                                             [--add]
     *                                             [--force-string]
     *                                             [--remove]
     *                                             [--set]
     *                                             [--subscription]
     */
    az_storage_account_management_policy_update(): void {
    }
}

/** Manage network rules. */
class az_storage_account_network_rule {
    /**
     * Add a network rule.
     *
     * Syntax: 
     *
     * az storage account network-rule add --account-name
     *                                     [--action]
     *                                     [--ip-address]
     *                                     [--resource-group]
     *                                     [--subnet]
     *                                     [--subscription]
     *                                     [--vnet-name]
     */
    az_storage_account_network_rule_add(): void {
    }

    /**
     * List network rules.
     *
     * Syntax: 
     *
     * az storage account network-rule list --account-name
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_storage_account_network_rule_list(): void {
    }

    /**
     * Remove a network rule.
     *
     * Syntax: 
     *
     * az storage account network-rule remove --account-name
     *                                        [--ip-address]
     *                                        [--resource-group]
     *                                        [--subnet]
     *                                        [--subscription]
     *                                        [--vnet-name]
     */
    az_storage_account_network_rule_remove(): void {
    }
}

/** Manage Object Replication Service Policy Rules. */
class az_storage_account_or_policy_rule {
    /**
     * Add rule to the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule add --account-name
     *                                       --destination-container
     *                                       --policy-id
     *                                       --source-container
     *                                       [--min-creation-time]
     *                                       [--prefix]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_storage_account_or_policy_rule_add(): void {
    }

    /**
     * List all the rules in the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule list --account-name
     *                                        --policy-id
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_storage_account_or_policy_rule_list(): void {
    }

    /**
     * Remove the specified rule from the specified Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule remove --account-name
     *                                          --policy-id
     *                                          --rule-id
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_storage_account_or_policy_rule_remove(): void {
    }

    /**
     * Show the properties of specified rule in Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule show --account-name
     *                                        --policy-id
     *                                        --rule-id
     *                                        [--query-examples]
     *                                        [--resource-group]
     *                                        [--subscription]
     */
    az_storage_account_or_policy_rule_show(): void {
    }

    /**
     * Update rule properties to Object Replication Service Policy.
     *
     * Syntax: 
     *
     * az storage account or-policy rule update --account-name
     *                                          --policy-id
     *                                          --rule-id
     *                                          [--destination-container]
     *                                          [--min-creation-time]
     *                                          [--prefix]
     *                                          [--resource-group]
     *                                          [--source-container]
     *                                          [--subscription]
     */
    az_storage_account_or_policy_rule_update(): void {
    }
}

/** Manage storage account Object Replication Policy. */
class az_storage_account_or_policy {
    /**
     * Create Object Replication Service Policy for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy create --account-name
     *                                     [--dcont]
     *                                     [--destination-account]
     *                                     [--min-creation-time]
     *                                     [--policy]
     *                                     [--policy-id]
     *                                     [--prefix]
     *                                     [--resource-group]
     *                                     [--rule-id]
     *                                     [--scont]
     *                                     [--source-account]
     *                                     [--subscription]
     */
    az_storage_account_or_policy_create(): void {
    }

    /**
     * Delete specified Object Replication Service Policy associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy delete --account-name
     *                                     --policy-id
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_storage_account_or_policy_delete(): void {
    }

    /**
     * List Object Replication Service Policies associated with the specified storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy list --account-name
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_storage_account_or_policy_list(): void {
    }

    /**
     * Show the properties of specified Object Replication Service Policy for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy show --account-name
     *                                   --policy-id
     *                                   [--query-examples]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_storage_account_or_policy_show(): void {
    }

    /**
     * Update Object Replication Service Policy properties for storage account.
     *
     * Syntax: 
     *
     * az storage account or-policy update --account-name
     *                                     [--add]
     *                                     [--destination-account]
     *                                     [--force-string]
     *                                     [--policy]
     *                                     [--policy-id]
     *                                     [--remove]
     *                                     [--resource-group]
     *                                     [--set]
     *                                     [--source-account]
     *                                     [--subscription]
     */
    az_storage_account_or_policy_update(): void {
    }
}

/** Manage storage account private endpoint connection. */
class az_storage_account_private_endpoint_connection {
    /**
     * Approve a private endpoint connection request for storage account.
     *
     * Syntax: 
     *
     * az storage account private-endpoint-connection approve [--account-name]
     *                                                        [--description]
     *                                                        [--id]
     *                                                        [--name]
     *                                                        [--resource-group]
     *                                                        [--subscription]
     */
    az_storage_account_private_endpoint_connection_approve(): void {
    }

    /**
     * Delete a private endpoint connection request for storage account.
     *
     * Syntax: 
     *
     * az storage account private-endpoint-connection delete [--account-name]
     *                                                       [--id]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--subscription]
     *                                                       [--yes]
     */
    az_storage_account_private_endpoint_connection_delete(): void {
    }

    /**
     * Reject a private endpoint connection request for storage account.
     *
     * Syntax: 
     *
     * az storage account private-endpoint-connection reject [--account-name]
     *                                                       [--description]
     *                                                       [--id]
     *                                                       [--name]
     *                                                       [--resource-group]
     *                                                       [--subscription]
     */
    az_storage_account_private_endpoint_connection_reject(): void {
    }

    /**
     * Show details of a private endpoint connection request for storage account.
     *
     * Syntax: 
     *
     * az storage account private-endpoint-connection show [--account-name]
     *                                                     [--id]
     *                                                     [--name]
     *                                                     [--query-examples]
     *                                                     [--resource-group]
     *                                                     [--subscription]
     */
    az_storage_account_private_endpoint_connection_show(): void {
    }
}

/** Manage storage account private link resources. */
class az_storage_account_private_link_resource {
    /**
     * Get the private link resources that need to be created for a storage account.
     *
     * Syntax: 
     *
     * az storage account private-link-resource list --account-name
     *                                               --resource-group
     *                                               [--query-examples]
     *                                               [--subscription]
     */
    az_storage_account_private_link_resource_list(): void {
    }
}

/** Manage storage accounts. */
class az_storage_account {
    /**
     * Checks that the storage account name is valid and is not already in use.
     *
     * Syntax: 
     *
     * az storage account check-name --name
     *                               [--subscription]
     */
    az_storage_account_check_name(): void {
    }

    /**
     * Create a storage account.
     *
     * Syntax: 
     *
     * az storage account create --name
     *                           --resource-group
     *                           [--access-tier {Cool, Hot}]
     *                           [--allow-blob-public-access {false, true}]
     *                           [--assign-identity]
     *                           [--azure-storage-sid]
     *                           [--bypass {AzureServices, Logging, Metrics, None}]
     *                           [--custom-domain]
     *                           [--default-action {Allow, Deny}]
     *                           [--domain-guid]
     *                           [--domain-name]
     *                           [--domain-sid]
     *                           [--enable-files-aadds {false, true}]
     *                           [--enable-files-adds {false, true}]
     *                           [--enable-hierarchical-namespace {false, true}]
     *                           [--enable-large-file-share]
     *                           [--encryption-key-type-for-queue {Account, Service}]
     *                           [--encryption-key-type-for-table {Account, Service}]
     *                           [--encryption-services {blob, file, queue, table}]
     *                           [--forest-name]
     *                           [--https-only {false, true}]
     *                           [--kind {BlobStorage, BlockBlobStorage, FileStorage, Storage, StorageV2}]
     *                           [--location]
     *                           [--min-tls-version {TLS1_0, TLS1_1, TLS1_2}]
     *                           [--net-bios-domain-name]
     *                           [--publish-internet-endpoints {false, true}]
     *                           [--publish-microsoft-endpoints {false, true}]
     *                           [--require-infrastructure-encryption {false, true}]
     *                           [--routing-choice {InternetRouting, MicrosoftRouting}]
     *                           [--sku {Premium_LRS, Premium_ZRS, Standard_GRS, Standard_GZRS, Standard_LRS, Standard_RAGRS, Standard_RAGZRS, Standard_ZRS}]
     *                           [--subscription]
     *                           [--tags]
     */
    az_storage_account_create(): void {
    }

    /**
     * Delete a storage account.
     *
     * Syntax: 
     *
     * az storage account delete [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--yes]
     */
    az_storage_account_delete(): void {
    }

    /**
     * Failover request can be triggered for a storage account in case of availability issues.
     *
     * Syntax: 
     *
     * az storage account failover [--ids]
     *                             [--name]
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--yes]
     */
    az_storage_account_failover(): void {
    }

    /**
     * Generates a shared access signature for the account.
     *
     * Syntax: 
     *
     * az storage account generate-sas --expiry
     *                                 --permissions
     *                                 --resource-types
     *                                 --services
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--connection-string]
     *                                 [--https-only]
     *                                 [--ids]
     *                                 [--ip]
     *                                 [--start]
     *                                 [--subscription]
     */
    az_storage_account_generate_sas(): void {
    }

    /**
     * List storage accounts.
     *
     * Syntax: 
     *
     * az storage account list [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_storage_account_list(): void {
    }

    /**
     * Revoke all user delegation keys for a storage account.
     *
     * Syntax: 
     *
     * az storage account revoke-delegation-keys [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--subscription]
     */
    az_storage_account_revoke_delegation_keys(): void {
    }

    /**
     * Show storage account properties.
     *
     * Syntax: 
     *
     * az storage account show [--expand]
     *                         [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_storage_account_show(): void {
    }

    /**
     * Get the connection string for a storage account.
     *
     * Syntax: 
     *
     * az storage account show-connection-string [--blob-endpoint]
     *                                           [--file-endpoint]
     *                                           [--ids]
     *                                           [--key {primary, secondary}]
     *                                           [--name]
     *                                           [--protocol {http, https}]
     *                                           [--queue-endpoint]
     *                                           [--resource-group]
     *                                           [--sas-token]
     *                                           [--subscription]
     *                                           [--table-endpoint]
     */
    az_storage_account_show_connection_string(): void {
    }

    /**
     * Show the current count and limit of the storage accounts under the subscription.
     *
     * Syntax: 
     *
     * az storage account show-usage --location
     *                               [--subscription]
     */
    az_storage_account_show_usage(): void {
    }

    /**
     * Update the properties of a storage account.
     *
     * Syntax: 
     *
     * az storage account update [--access-tier {Cool, Hot}]
     *                           [--add]
     *                           [--allow-blob-public-access {false, true}]
     *                           [--assign-identity]
     *                           [--azure-storage-sid]
     *                           [--bypass {AzureServices, Logging, Metrics, None}]
     *                           [--custom-domain]
     *                           [--default-action {Allow, Deny}]
     *                           [--domain-guid]
     *                           [--domain-name]
     *                           [--domain-sid]
     *                           [--enable-files-aadds {false, true}]
     *                           [--enable-files-adds {false, true}]
     *                           [--enable-large-file-share]
     *                           [--encryption-key-name]
     *                           [--encryption-key-source {Microsoft.Keyvault, Microsoft.Storage}]
     *                           [--encryption-key-vault]
     *                           [--encryption-key-version]
     *                           [--encryption-services {blob, file, queue, table}]
     *                           [--force-string]
     *                           [--forest-name]
     *                           [--https-only {false, true}]
     *                           [--ids]
     *                           [--min-tls-version {TLS1_0, TLS1_1, TLS1_2}]
     *                           [--name]
     *                           [--net-bios-domain-name]
     *                           [--publish-internet-endpoints {false, true}]
     *                           [--publish-microsoft-endpoints {false, true}]
     *                           [--remove]
     *                           [--resource-group]
     *                           [--routing-choice {InternetRouting, MicrosoftRouting}]
     *                           [--set]
     *                           [--sku {Premium_LRS, Premium_ZRS, Standard_GRS, Standard_GZRS, Standard_LRS, Standard_RAGRS, Standard_RAGZRS, Standard_ZRS}]
     *                           [--subscription]
     *                           [--tags]
     *                           [--use-subdomain {false, true}]
     */
    az_storage_account_update(): void {
    }
}

/** Manage blob copy operations. Use `az storage blob show` to check the status of the blobs. */
class az_storage_blob_copy {
    /**
     * Aborts a pending copy_blob operation, and leaves a destination blob with zero length and full metadata.
     *
     * Syntax: 
     *
     * az storage blob copy cancel --copy-id
     *                             --destination-blob
     *                             --destination-container
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--lease-id]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_blob_copy_cancel(): void {
    }

    /**
     * Copies a blob asynchronously. Use `az storage blob show` to check the status of the blobs.
     *
     * Syntax: 
     *
     * az storage blob copy start --destination-blob
     *                            --destination-container
     *                            [--account-key]
     *                            [--account-name]
     *                            [--auth-mode {key, login}]
     *                            [--connection-string]
     *                            [--destination-if-match]
     *                            [--destination-if-modified-since]
     *                            [--destination-if-none-match]
     *                            [--destination-if-unmodified-since]
     *                            [--destination-lease-id]
     *                            [--metadata]
     *                            [--requires-sync]
     *                            [--sas-token]
     *                            [--source-account-key]
     *                            [--source-account-name]
     *                            [--source-blob]
     *                            [--source-container]
     *                            [--source-if-match]
     *                            [--source-if-modified-since]
     *                            [--source-if-none-match]
     *                            [--source-if-unmodified-since]
     *                            [--source-lease-id]
     *                            [--source-path]
     *                            [--source-sas]
     *                            [--source-share]
     *                            [--source-snapshot]
     *                            [--source-uri]
     *                            [--subscription]
     *                            [--timeout]
     */
    az_storage_blob_copy_start(): void {
    }

    /**
     * Copy multiple blobs to a blob container. Use `az storage blob show` to check the status of the blobs.
     *
     * Syntax: 
     *
     * az storage blob copy start-batch [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--destination-container]
     *                                  [--destination-path]
     *                                  [--dryrun]
     *                                  [--pattern]
     *                                  [--sas-token]
     *                                  [--source-account-key]
     *                                  [--source-account-name]
     *                                  [--source-container]
     *                                  [--source-sas]
     *                                  [--source-share]
     *                                  [--source-uri]
     *                                  [--subscription]
     */
    az_storage_blob_copy_start_batch(): void {
    }
}

/** Manage blob incremental copy operations. */
class az_storage_blob_incremental_copy {
    /**
     * Aborts a pending copy_blob operation, and leaves a destination blob with zero length and full metadata.
     *
     * Syntax: 
     *
     * az storage blob incremental-copy cancel --container-name
     *                                         --copy-id
     *                                         --name
     *                                         [--account-key]
     *                                         [--account-name]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--lease-id]
     *                                         [--sas-token]
     *                                         [--subscription]
     *                                         [--timeout]
     */
    az_storage_blob_incremental_copy_cancel(): void {
    }

    /**
     * Copies an incremental copy of a blob asynchronously.
     *
     * Syntax: 
     *
     * az storage blob incremental-copy start --destination-blob
     *                                        --destination-container
     *                                        [--account-key]
     *                                        [--account-name]
     *                                        [--auth-mode {key, login}]
     *                                        [--connection-string]
     *                                        [--destination-if-match]
     *                                        [--destination-if-modified-since]
     *                                        [--destination-if-none-match]
     *                                        [--destination-if-unmodified-since]
     *                                        [--destination-lease-id]
     *                                        [--metadata]
     *                                        [--sas-token]
     *                                        [--source-account-key]
     *                                        [--source-account-name]
     *                                        [--source-blob]
     *                                        [--source-container]
     *                                        [--source-lease-id]
     *                                        [--source-sas]
     *                                        [--source-snapshot]
     *                                        [--source-uri]
     *                                        [--subscription]
     *                                        [--timeout]
     */
    az_storage_blob_incremental_copy_start(): void {
    }
}

/** Manage storage blob leases. */
class az_storage_blob_lease {
    /**
     * Request a new lease.
     *
     * Syntax: 
     *
     * az storage blob lease acquire --blob-name
     *                               --container-name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--lease-duration]
     *                               [--proposed-lease-id]
     *                               [--sas-token]
     *                               [--subscription]
     *                               [--timeout]
     */
    az_storage_blob_lease_acquire(): void {
    }

    /**
     * Break the lease, if the container or blob has an active lease.
     *
     * Syntax: 
     *
     * az storage blob lease break --blob-name
     *                             --container-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--lease-break-period]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_blob_lease_break(): void {
    }

    /**
     * Change the lease ID of an active lease.
     *
     * Syntax: 
     *
     * az storage blob lease change --blob-name
     *                              --container-name
     *                              --lease-id
     *                              --proposed-lease-id
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_blob_lease_change(): void {
    }

    /**
     * Release the lease.
     *
     * Syntax: 
     *
     * az storage blob lease release --blob-name
     *                               --container-name
     *                               --lease-id
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--sas-token]
     *                               [--subscription]
     *                               [--timeout]
     */
    az_storage_blob_lease_release(): void {
    }

    /**
     * Renew the lease.
     *
     * Syntax: 
     *
     * az storage blob lease renew --blob-name
     *                             --container-name
     *                             --lease-id
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--if-match]
     *                             [--if-modified-since]
     *                             [--if-none-match]
     *                             [--if-unmodified-since]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_blob_lease_renew(): void {
    }
}

/** Manage blob metadata. */
class az_storage_blob_metadata {
    /**
     * Returns all user-defined metadata for the specified blob or snapshot.
     *
     * Syntax: 
     *
     * az storage blob metadata show --container-name
     *                               --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--if-match]
     *                               [--if-modified-since]
     *                               [--if-none-match]
     *                               [--if-unmodified-since]
     *                               [--lease-id]
     *                               [--query-examples]
     *                               [--sas-token]
     *                               [--snapshot]
     *                               [--subscription]
     *                               [--timeout]
     */
    az_storage_blob_metadata_show(): void {
    }

    /**
     * Sets user-defined metadata for the specified blob as one or more name-value pairs.
     *
     * Syntax: 
     *
     * az storage blob metadata update --container-name
     *                                 --name
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--auth-mode {key, login}]
     *                                 [--connection-string]
     *                                 [--if-match]
     *                                 [--if-modified-since]
     *                                 [--if-none-match]
     *                                 [--if-unmodified-since]
     *                                 [--lease-id]
     *                                 [--metadata]
     *                                 [--sas-token]
     *                                 [--subscription]
     *                                 [--timeout]
     */
    az_storage_blob_metadata_update(): void {
    }
}

/** Manage storage blob delete-policy service properties. */
class az_storage_blob_service_properties_delete_policy {
    /**
     * Show the storage blob delete-policy.
     *
     * Syntax: 
     *
     * az storage blob service-properties delete-policy show [--account-key]
     *                                                       [--account-name]
     *                                                       [--auth-mode {key, login}]
     *                                                       [--connection-string]
     *                                                       [--query-examples]
     *                                                       [--sas-token]
     *                                                       [--subscription]
     *                                                       [--timeout]
     */
    az_storage_blob_service_properties_delete_policy_show(): void {
    }

    /**
     * Update the storage blob delete-policy.
     *
     * Syntax: 
     *
     * az storage blob service-properties delete-policy update [--account-key]
     *                                                         [--account-name]
     *                                                         [--auth-mode {key, login}]
     *                                                         [--connection-string]
     *                                                         [--days-retained]
     *                                                         [--enable {false, true}]
     *                                                         [--sas-token]
     *                                                         [--subscription]
     */
    az_storage_blob_service_properties_delete_policy_update(): void {
    }
}

/** Manage storage blob service properties. */
class az_storage_blob_service_properties {
    /**
     * Gets the properties of a storage account's Blob service, including Azure Storage Analytics.
     *
     * Syntax: 
     *
     * az storage blob service-properties show [--account-key]
     *                                         [--account-name]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--query-examples]
     *                                         [--sas-token]
     *                                         [--subscription]
     *                                         [--timeout]
     */
    az_storage_blob_service_properties_show(): void {
    }

    /**
     * Update storage blob service properties.
     *
     * Syntax: 
     *
     * az storage blob service-properties update [--404-document]
     *                                           [--account-key]
     *                                           [--account-name]
     *                                           [--add]
     *                                           [--auth-mode {key, login}]
     *                                           [--connection-string]
     *                                           [--delete-retention {false, true}]
     *                                           [--delete-retention-period]
     *                                           [--force-string]
     *                                           [--index-document]
     *                                           [--remove]
     *                                           [--sas-token]
     *                                           [--set]
     *                                           [--static-website {false, true}]
     *                                           [--subscription]
     *                                           [--timeout]
     */
    az_storage_blob_service_properties_update(): void {
    }
}

/** Manage object storage for unstructured data (blobs). */
class az_storage_blob {
    /**
     * Mark a blob or snapshot for deletion.
     *
     * Syntax: 
     *
     * az storage blob delete --container-name
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--delete-snapshots {include, only}]
     *                        [--if-match]
     *                        [--if-modified-since]
     *                        [--if-none-match]
     *                        [--if-unmodified-since]
     *                        [--lease-id]
     *                        [--sas-token]
     *                        [--snapshot]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_blob_delete(): void {
    }

    /**
     * Delete blobs from a blob container recursively.
     *
     * Syntax: 
     *
     * az storage blob delete-batch --source
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--delete-snapshots {include, only}]
     *                              [--dryrun]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--lease-id]
     *                              [--pattern]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_blob_delete_batch(): void {
    }

    /**
     * Downloads a blob to a file path, with automatic chunking and progress notifications.
     *
     * Syntax: 
     *
     * az storage blob download --container-name
     *                          --file
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--end-range]
     *                          [--if-match]
     *                          [--if-modified-since]
     *                          [--if-none-match]
     *                          [--if-unmodified-since]
     *                          [--lease-id]
     *                          [--max-connections]
     *                          [--no-progress]
     *                          [--open-mode]
     *                          [--sas-token]
     *                          [--snapshot]
     *                          [--socket-timeout]
     *                          [--start-range]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--validate-content]
     */
    az_storage_blob_download(): void {
    }

    /**
     * Download blobs from a blob container recursively.
     *
     * Syntax: 
     *
     * az storage blob download-batch --destination
     *                                --source
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--dryrun]
     *                                [--max-connections]
     *                                [--no-progress]
     *                                [--pattern]
     *                                [--sas-token]
     *                                [--socket-timeout]
     *                                [--subscription]
     */
    az_storage_blob_download_batch(): void {
    }

    /**
     * Check for the existence of a blob in a container.
     *
     * Syntax: 
     *
     * az storage blob exists --container-name
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--snapshot]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_blob_exists(): void {
    }

    /**
     * Generate a shared access signature for the blob.
     *
     * Syntax: 
     *
     * az storage blob generate-sas --container-name
     *                              --name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--as-user]
     *                              [--auth-mode {key, login}]
     *                              [--cache-control]
     *                              [--connection-string]
     *                              [--content-disposition]
     *                              [--content-encoding]
     *                              [--content-language]
     *                              [--content-type]
     *                              [--expiry]
     *                              [--full-uri]
     *                              [--https-only]
     *                              [--ip]
     *                              [--permissions]
     *                              [--policy-name]
     *                              [--start]
     *                              [--subscription]
     */
    az_storage_blob_generate_sas(): void {
    }

    /**
     * List blobs in a given container.
     *
     * Syntax: 
     *
     * az storage blob list --container-name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--delimiter]
     *                      [--include]
     *                      [--marker]
     *                      [--num-results]
     *                      [--prefix]
     *                      [--query-examples]
     *                      [--sas-token]
     *                      [--show-next-marker]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_blob_list(): void {
    }

    /**
     * Restore blobs in the specified blob ranges.
     *
     * Syntax: 
     *
     * az storage blob restore --account-name
     *                         --time-to-restore
     *                         [--blob-range]
     *                         [--no-wait]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_storage_blob_restore(): void {
    }

    /**
     * Set the block or page tiers on the blob.
     *
     * Syntax: 
     *
     * az storage blob set-tier --container-name
     *                          --name
     *                          --tier
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--rehydrate-priority {High, Standard}]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--type {block, page}]
     */
    az_storage_blob_set_tier(): void {
    }

    /**
     * Get the details of a blob.
     *
     * Syntax: 
     *
     * az storage blob show --container-name
     *                      --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--if-match]
     *                      [--if-modified-since]
     *                      [--if-none-match]
     *                      [--if-unmodified-since]
     *                      [--lease-id]
     *                      [--query-examples]
     *                      [--sas-token]
     *                      [--snapshot]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_blob_show(): void {
    }

    /**
     * Creates a read-only snapshot of a blob.
     *
     * Syntax: 
     *
     * az storage blob snapshot --container-name
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--if-match]
     *                          [--if-modified-since]
     *                          [--if-none-match]
     *                          [--if-unmodified-since]
     *                          [--lease-id]
     *                          [--metadata]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     */
    az_storage_blob_snapshot(): void {
    }

    /**
     * Sync blobs recursively to a storage blob container.
     *
     * Syntax: 
     *
     * az storage blob sync --container
     *                      --source
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--destination]
     *                      [--exclude-path]
     *                      [--exclude-pattern]
     *                      [--include-pattern]
     *                      [--sas-token]
     *                      [--subscription]
     */
    az_storage_blob_sync(): void {
    }

    /**
     * The undelete Blob operation restores the contents and metadata of soft deleted blob or snapshot.
     *
     * Syntax: 
     *
     * az storage blob undelete --container-name
     *                          --name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     */
    az_storage_blob_undelete(): void {
    }

    /**
     * Sets system properties on the blob.
     *
     * Syntax: 
     *
     * az storage blob update --container-name
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--clear-content-settings {false, true}]
     *                        [--connection-string]
     *                        [--content-cache-control]
     *                        [--content-disposition]
     *                        [--content-encoding]
     *                        [--content-language]
     *                        [--content-md5]
     *                        [--content-type]
     *                        [--if-match]
     *                        [--if-modified-since]
     *                        [--if-none-match]
     *                        [--if-unmodified-since]
     *                        [--lease-id]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_blob_update(): void {
    }

    /**
     * Upload a file to a storage blob.
     *
     * Syntax: 
     *
     * az storage blob upload --container-name
     *                        --file
     *                        --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--content-cache-control]
     *                        [--content-disposition]
     *                        [--content-encoding]
     *                        [--content-language]
     *                        [--content-md5]
     *                        [--content-type]
     *                        [--encryption-scope]
     *                        [--if-match]
     *                        [--if-modified-since]
     *                        [--if-none-match]
     *                        [--if-unmodified-since]
     *                        [--lease-id]
     *                        [--max-connections]
     *                        [--maxsize-condition]
     *                        [--metadata]
     *                        [--no-progress]
     *                        [--sas-token]
     *                        [--socket-timeout]
     *                        [--subscription]
     *                        [--tier {P10, P20, P30, P4, P40, P50, P6, P60}]
     *                        [--timeout]
     *                        [--type {append, block, page}]
     *                        [--validate-content]
     */
    az_storage_blob_upload(): void {
    }

    /**
     * Upload files from a local directory to a blob container.
     *
     * Syntax: 
     *
     * az storage blob upload-batch --destination
     *                              --source
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--content-cache-control]
     *                              [--content-disposition]
     *                              [--content-encoding]
     *                              [--content-language]
     *                              [--content-md5]
     *                              [--content-type]
     *                              [--destination-path]
     *                              [--dryrun]
     *                              [--if-match]
     *                              [--if-modified-since]
     *                              [--if-none-match]
     *                              [--if-unmodified-since]
     *                              [--lease-id]
     *                              [--max-connections]
     *                              [--maxsize-condition]
     *                              [--metadata]
     *                              [--no-progress]
     *                              [--pattern]
     *                              [--sas-token]
     *                              [--socket-timeout]
     *                              [--subscription]
     *                              [--timeout]
     *                              [--type {append, block, page}]
     *                              [--validate-content]
     */
    az_storage_blob_upload_batch(): void {
    }

    /**
     * Create the url to access a blob.
     *
     * Syntax: 
     *
     * az storage blob url --container-name
     *                     --name
     *                     [--account-key]
     *                     [--account-name]
     *                     [--auth-mode {key, login}]
     *                     [--connection-string]
     *                     [--protocol {http, https}]
     *                     [--sas-token]
     *                     [--snapshot]
     *                     [--subscription]
     */
    az_storage_blob_url(): void {
    }
}

/** Manage container immutability policies. */
class az_storage_container_immutability_policy {
    /**
     * Creates or updates an unlocked immutability policy.
     *
     * Syntax: 
     *
     * az storage container immutability-policy create --account-name
     *                                                 --container-name
     *                                                 [--allow-protected-append-writes {false, true}]
     *                                                 [--if-match]
     *                                                 [--period]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_storage_container_immutability_policy_create(): void {
    }

    /**
     * Aborts an unlocked immutability policy.
     *
     * Syntax: 
     *
     * az storage container immutability-policy delete --account-name
     *                                                 --container-name
     *                                                 --if-match
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_storage_container_immutability_policy_delete(): void {
    }

    /**
     * Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy.
     *
     * Syntax: 
     *
     * az storage container immutability-policy extend --account-name
     *                                                 --container-name
     *                                                 --if-match
     *                                                 [--allow-protected-append-writes {false, true}]
     *                                                 [--period]
     *                                                 [--resource-group]
     *                                                 [--subscription]
     */
    az_storage_container_immutability_policy_extend(): void {
    }

    /**
     * Sets the ImmutabilityPolicy to Locked state.
     *
     * Syntax: 
     *
     * az storage container immutability-policy lock --account-name
     *                                               --container-name
     *                                               --if-match
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_storage_container_immutability_policy_lock(): void {
    }

    /**
     * Gets the existing immutability policy along with the corresponding ETag in response headers and body.
     *
     * Syntax: 
     *
     * az storage container immutability-policy show --account-name
     *                                               --container-name
     *                                               [--if-match]
     *                                               [--query-examples]
     *                                               [--resource-group]
     *                                               [--subscription]
     */
    az_storage_container_immutability_policy_show(): void {
    }
}

/** Manage blob storage container leases. */
class az_storage_container_lease {
    /**
     * Requests a new lease.
     *
     * Syntax: 
     *
     * az storage container lease acquire --container-name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--if-modified-since]
     *                                    [--if-unmodified-since]
     *                                    [--lease-duration]
     *                                    [--proposed-lease-id]
     *                                    [--sas-token]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_storage_container_lease_acquire(): void {
    }

    /**
     * Break the lease, if the container has an active lease.
     *
     * Syntax: 
     *
     * az storage container lease break --container-name
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--if-modified-since]
     *                                  [--if-unmodified-since]
     *                                  [--lease-break-period]
     *                                  [--sas-token]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_container_lease_break(): void {
    }

    /**
     * Change the lease ID of an active lease.
     *
     * Syntax: 
     *
     * az storage container lease change --container-name
     *                                   --lease-id
     *                                   --proposed-lease-id
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--auth-mode {key, login}]
     *                                   [--connection-string]
     *                                   [--if-modified-since]
     *                                   [--if-unmodified-since]
     *                                   [--sas-token]
     *                                   [--subscription]
     *                                   [--timeout]
     */
    az_storage_container_lease_change(): void {
    }

    /**
     * Release the lease.
     *
     * Syntax: 
     *
     * az storage container lease release --container-name
     *                                    --lease-id
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--if-modified-since]
     *                                    [--if-unmodified-since]
     *                                    [--sas-token]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_storage_container_lease_release(): void {
    }

    /**
     * Renews the lease.
     *
     * Syntax: 
     *
     * az storage container lease renew --container-name
     *                                  --lease-id
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--if-modified-since]
     *                                  [--if-unmodified-since]
     *                                  [--sas-token]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_container_lease_renew(): void {
    }
}

/** Manage container legal holds. */
class az_storage_container_legal_hold {
    /**
     * Clears legal hold tags.
     *
     * Syntax: 
     *
     * az storage container legal-hold clear --account-name
     *                                       --container-name
     *                                       --tags
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_storage_container_legal_hold_clear(): void {
    }

    /**
     * Sets legal hold tags.
     *
     * Syntax: 
     *
     * az storage container legal-hold set --account-name
     *                                     --container-name
     *                                     --tags
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_storage_container_legal_hold_set(): void {
    }

    /**
     * Get the legal hold properties of a container.
     *
     * Syntax: 
     *
     * az storage container legal-hold show --account-name
     *                                      --container-name
     *                                      [--query-examples]
     *                                      [--resource-group]
     *                                      [--subscription]
     */
    az_storage_container_legal_hold_show(): void {
    }
}

/** Manage container metadata. */
class az_storage_container_metadata {
    /**
     * Returns all user-defined metadata for the specified container.
     *
     * Syntax: 
     *
     * az storage container metadata show --name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--lease-id]
     *                                    [--query-examples]
     *                                    [--sas-token]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_storage_container_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified container.
     *
     * Syntax: 
     *
     * az storage container metadata update --name
     *                                      [--account-key]
     *                                      [--account-name]
     *                                      [--auth-mode {key, login}]
     *                                      [--connection-string]
     *                                      [--if-modified-since]
     *                                      [--lease-id]
     *                                      [--metadata]
     *                                      [--sas-token]
     *                                      [--subscription]
     *                                      [--timeout]
     */
    az_storage_container_metadata_update(): void {
    }
}

/** Manage container stored access policies. */
class az_storage_container_policy {
    /**
     * Create a stored access policy on the containing object.
     *
     * Syntax: 
     *
     * az storage container policy create --container-name
     *                                    --name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--expiry]
     *                                    [--lease-id]
     *                                    [--permissions]
     *                                    [--sas-token]
     *                                    [--start]
     *                                    [--subscription]
     */
    az_storage_container_policy_create(): void {
    }

    /**
     * Delete a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage container policy delete --container-name
     *                                    --name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--lease-id]
     *                                    [--sas-token]
     *                                    [--subscription]
     */
    az_storage_container_policy_delete(): void {
    }

    /**
     * List stored access policies on a containing object.
     *
     * Syntax: 
     *
     * az storage container policy list --container-name
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--lease-id]
     *                                  [--query-examples]
     *                                  [--sas-token]
     *                                  [--subscription]
     */
    az_storage_container_policy_list(): void {
    }

    /**
     * Show a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage container policy show --container-name
     *                                  --name
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--lease-id]
     *                                  [--query-examples]
     *                                  [--sas-token]
     *                                  [--subscription]
     */
    az_storage_container_policy_show(): void {
    }

    /**
     * Set a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage container policy update --container-name
     *                                    --name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--expiry]
     *                                    [--lease-id]
     *                                    [--permissions]
     *                                    [--sas-token]
     *                                    [--start]
     *                                    [--subscription]
     */
    az_storage_container_policy_update(): void {
    }
}

/** Manage blob storage containers. */
class az_storage_container {
    /**
     * Create a container in a storage account.
     *
     * Syntax: 
     *
     * az storage container create --name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--default-encryption-scope]
     *                             [--fail-on-exist]
     *                             [--metadata]
     *                             [--prevent-encryption-scope-override {false, true}]
     *                             [--public-access {blob, container, off}]
     *                             [--resource-group]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_container_create(): void {
    }

    /**
     * Marks the specified container for deletion.
     *
     * Syntax: 
     *
     * az storage container delete --name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--bypass-immutability-policy]
     *                             [--connection-string]
     *                             [--fail-not-exist]
     *                             [--if-modified-since]
     *                             [--if-unmodified-since]
     *                             [--lease-id]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_container_delete(): void {
    }

    /**
     * Check for the existence of a storage container.
     *
     * Syntax: 
     *
     * az storage container exists --name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_container_exists(): void {
    }

    /**
     * Generate a SAS token for a storage container.
     *
     * Syntax: 
     *
     * az storage container generate-sas --name
     *                                   [--account-key]
     *                                   [--account-name]
     *                                   [--as-user]
     *                                   [--auth-mode {key, login}]
     *                                   [--cache-control]
     *                                   [--connection-string]
     *                                   [--content-disposition]
     *                                   [--content-encoding]
     *                                   [--content-language]
     *                                   [--content-type]
     *                                   [--expiry]
     *                                   [--https-only]
     *                                   [--ip]
     *                                   [--permissions]
     *                                   [--policy-name]
     *                                   [--start]
     *                                   [--subscription]
     */
    az_storage_container_generate_sas(): void {
    }

    /**
     * List containers in a storage account.
     *
     * Syntax: 
     *
     * az storage container list [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--include-metadata]
     *                           [--marker]
     *                           [--num-results]
     *                           [--prefix]
     *                           [--query-examples]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_container_list(): void {
    }

    /**
     * Sets the permissions for the specified container or stored access  policies that may be used with Shared Access Signatures.
     *
     * Syntax: 
     *
     * az storage container set-permission --name
     *                                     [--account-key]
     *                                     [--account-name]
     *                                     [--auth-mode {key, login}]
     *                                     [--connection-string]
     *                                     [--if-modified-since]
     *                                     [--if-unmodified-since]
     *                                     [--lease-id]
     *                                     [--public-access {blob, container, off}]
     *                                     [--sas-token]
     *                                     [--subscription]
     *                                     [--timeout]
     */
    az_storage_container_set_permission(): void {
    }

    /**
     * Returns all user-defined metadata and system properties for the specified container.
     *
     * Syntax: 
     *
     * az storage container show --name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--lease-id]
     *                           [--query-examples]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_container_show(): void {
    }

    /**
     * Gets the permissions for the specified container.
     *
     * Syntax: 
     *
     * az storage container show-permission --name
     *                                      [--account-key]
     *                                      [--account-name]
     *                                      [--auth-mode {key, login}]
     *                                      [--connection-string]
     *                                      [--lease-id]
     *                                      [--sas-token]
     *                                      [--subscription]
     *                                      [--timeout]
     */
    az_storage_container_show_permission(): void {
    }
}

/** Manage storage service Cross-Origin Resource Sharing (CORS). */
class az_storage_cors {
    /**
     * Add a CORS rule to a storage account.
     *
     * Syntax: 
     *
     * az storage cors add --methods {DELETE, GET, HEAD, MERGE, OPTIONS, POST, PUT}
     *                     --origins
     *                     --services
     *                     [--account-key]
     *                     [--account-name]
     *                     [--allowed-headers]
     *                     [--connection-string]
     *                     [--exposed-headers]
     *                     [--max-age]
     *                     [--sas-token]
     *                     [--subscription]
     *                     [--timeout]
     */
    az_storage_cors_add(): void {
    }

    /**
     * Remove all CORS rules from a storage account.
     *
     * Syntax: 
     *
     * az storage cors clear --services
     *                       [--account-key]
     *                       [--account-name]
     *                       [--connection-string]
     *                       [--sas-token]
     *                       [--subscription]
     *                       [--timeout]
     */
    az_storage_cors_clear(): void {
    }

    /**
     * List all CORS rules for a storage account.
     *
     * Syntax: 
     *
     * az storage cors list [--account-key]
     *                      [--account-name]
     *                      [--connection-string]
     *                      [--query-examples]
     *                      [--sas-token]
     *                      [--services]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_cors_list(): void {
    }
}

/** Manage file storage directory metadata. */
class az_storage_directory_metadata {
    /**
     * Returns all user-defined metadata for the specified directory.
     *
     * Syntax: 
     *
     * az storage directory metadata show --name
     *                                    --share-name
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--connection-string]
     *                                    [--query-examples]
     *                                    [--sas-token]
     *                                    [--snapshot]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_storage_directory_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified directory.
     *
     * Syntax: 
     *
     * az storage directory metadata update --name
     *                                      --share-name
     *                                      [--account-key]
     *                                      [--account-name]
     *                                      [--connection-string]
     *                                      [--metadata]
     *                                      [--sas-token]
     *                                      [--subscription]
     *                                      [--timeout]
     */
    az_storage_directory_metadata_update(): void {
    }
}

/** Manage file storage directories. */
class az_storage_directory {
    /**
     * Creates a new directory under the specified share or parent directory.
     *
     * Syntax: 
     *
     * az storage directory create --name
     *                             --share-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--connection-string]
     *                             [--fail-on-exist]
     *                             [--metadata]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_directory_create(): void {
    }

    /**
     * Deletes the specified empty directory.
     *
     * Syntax: 
     *
     * az storage directory delete --name
     *                             --share-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--connection-string]
     *                             [--fail-not-exist]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_directory_delete(): void {
    }

    /**
     * Check for the existence of a storage directory.
     *
     * Syntax: 
     *
     * az storage directory exists --name
     *                             --share-name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--connection-string]
     *                             [--sas-token]
     *                             [--snapshot]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_directory_exists(): void {
    }

    /**
     * List directories in a share.
     *
     * Syntax: 
     *
     * az storage directory list --share-name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--connection-string]
     *                           [--name]
     *                           [--query-examples]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_directory_list(): void {
    }

    /**
     * Returns all user-defined metadata and system properties for the specified directory.
     *
     * Syntax: 
     *
     * az storage directory show --name
     *                           --share-name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--connection-string]
     *                           [--query-examples]
     *                           [--sas-token]
     *                           [--snapshot]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_directory_show(): void {
    }
}

/** Manage table storage entities. */
class az_storage_entity {
    /**
     * Deletes an existing entity in a table.
     *
     * Syntax: 
     *
     * az storage entity delete --partition-key
     *                          --row-key
     *                          --table-name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--connection-string]
     *                          [--if-match]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     */
    az_storage_entity_delete(): void {
    }

    /**
     * Insert an entity into a table.
     *
     * Syntax: 
     *
     * az storage entity insert --entity
     *                          --table-name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--connection-string]
     *                          [--if-exists {fail, merge, replace}]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     */
    az_storage_entity_insert(): void {
    }

    /**
     * Updates an existing entity by merging the entity's properties.
     *
     * Syntax: 
     *
     * az storage entity merge --entity
     *                         --table-name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--if-match]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_entity_merge(): void {
    }

    /**
     * List entities which satisfy a query.
     *
     * Syntax: 
     *
     * az storage entity query --table-name
     *                         [--accept {full, minimal, none}]
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--filter]
     *                         [--marker]
     *                         [--num-results]
     *                         [--sas-token]
     *                         [--select]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_entity_query(): void {
    }

    /**
     * Updates an existing entity in a table.
     *
     * Syntax: 
     *
     * az storage entity replace --entity
     *                           --table-name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--connection-string]
     *                           [--if-match]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_entity_replace(): void {
    }

    /**
     * Get an entity from the specified table.
     *
     * Syntax: 
     *
     * az storage entity show --partition-key
     *                        --row-key
     *                        --table-name
     *                        [--accept]
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--query-examples]
     *                        [--sas-token]
     *                        [--select]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_entity_show(): void {
    }
}

/** Manage file copy operations. */
class az_storage_file_copy {
    /**
     * Aborts a pending copy_file operation, and leaves a destination file  with zero length and full metadata.
     *
     * Syntax: 
     *
     * az storage file copy cancel --copy-id
     *                             --destination-path
     *                             --destination-share
     *                             [--account-key]
     *                             [--account-name]
     *                             [--connection-string]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_file_copy_cancel(): void {
    }

    /**
     * Copy a file asynchronously.
     *
     * Syntax: 
     *
     * az storage file copy start --destination-path
     *                            --destination-share
     *                            [--account-key]
     *                            [--account-name]
     *                            [--connection-string]
     *                            [--file-snapshot]
     *                            [--metadata]
     *                            [--sas-token]
     *                            [--source-account-key]
     *                            [--source-account-name]
     *                            [--source-blob]
     *                            [--source-container]
     *                            [--source-path]
     *                            [--source-sas]
     *                            [--source-share]
     *                            [--source-snapshot]
     *                            [--source-uri]
     *                            [--subscription]
     *                            [--timeout]
     */
    az_storage_file_copy_start(): void {
    }

    /**
     * Copy multiple files or blobs to a file share.
     *
     * Syntax: 
     *
     * az storage file copy start-batch [--account-key]
     *                                  [--account-name]
     *                                  [--connection-string]
     *                                  [--destination-path]
     *                                  [--destination-share]
     *                                  [--dryrun]
     *                                  [--metadata]
     *                                  [--pattern]
     *                                  [--sas-token]
     *                                  [--source-account-key]
     *                                  [--source-account-name]
     *                                  [--source-container]
     *                                  [--source-sas]
     *                                  [--source-share]
     *                                  [--source-uri]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_file_copy_start_batch(): void {
    }
}

/** Manage file metadata. */
class az_storage_file_metadata {
    /**
     * Returns all user-defined metadata for the specified file.
     *
     * Syntax: 
     *
     * az storage file metadata show --path
     *                               --share-name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--connection-string]
     *                               [--query-examples]
     *                               [--sas-token]
     *                               [--snapshot]
     *                               [--subscription]
     *                               [--timeout]
     */
    az_storage_file_metadata_show(): void {
    }

    /**
     * Sets user-defined metadata for the specified file as one or more name-value pairs.
     *
     * Syntax: 
     *
     * az storage file metadata update --path
     *                                 --share-name
     *                                 [--account-key]
     *                                 [--account-name]
     *                                 [--connection-string]
     *                                 [--metadata]
     *                                 [--sas-token]
     *                                 [--subscription]
     *                                 [--timeout]
     */
    az_storage_file_metadata_update(): void {
    }
}

/** Manage file shares that use the SMB 3.0 protocol. */
class az_storage_file {
    /**
     * Marks the specified file for deletion.
     *
     * Syntax: 
     *
     * az storage file delete --path
     *                        --share-name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_file_delete(): void {
    }

    /**
     * Delete files from an Azure Storage File Share.
     *
     * Syntax: 
     *
     * az storage file delete-batch --source
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--dryrun]
     *                              [--pattern]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_file_delete_batch(): void {
    }

    /**
     * Downloads a file to a file path, with automatic chunking and progress notifications.
     *
     * Syntax: 
     *
     * az storage file download --path
     *                          --share-name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--connection-string]
     *                          [--dest]
     *                          [--end-range]
     *                          [--max-connections]
     *                          [--no-progress]
     *                          [--open-mode]
     *                          [--sas-token]
     *                          [--snapshot]
     *                          [--start-range]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--validate-content]
     */
    az_storage_file_download(): void {
    }

    /**
     * Download files from an Azure Storage File Share to a local directory in a batch operation.
     *
     * Syntax: 
     *
     * az storage file download-batch --destination
     *                                --source
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--dryrun]
     *                                [--max-connections]
     *                                [--no-progress]
     *                                [--pattern]
     *                                [--sas-token]
     *                                [--snapshot]
     *                                [--subscription]
     *                                [--validate-content]
     */
    az_storage_file_download_batch(): void {
    }

    /**
     * Check for the existence of a file.
     *
     * Syntax: 
     *
     * az storage file exists --path
     *                        --share-name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--snapshot]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_file_exists(): void {
    }

    /**
     * Generates a shared access signature for the file.
     *
     * Syntax: 
     *
     * az storage file generate-sas --path
     *                              --share-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--cache-control]
     *                              [--connection-string]
     *                              [--content-disposition]
     *                              [--content-encoding]
     *                              [--content-language]
     *                              [--content-type]
     *                              [--expiry]
     *                              [--https-only]
     *                              [--ip]
     *                              [--permissions]
     *                              [--policy-name]
     *                              [--start]
     *                              [--subscription]
     */
    az_storage_file_generate_sas(): void {
    }

    /**
     * List files and directories in a share.
     *
     * Syntax: 
     *
     * az storage file list --share-name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--connection-string]
     *                      [--exclude-dir]
     *                      [--marker]
     *                      [--num-results]
     *                      [--path]
     *                      [--query-examples]
     *                      [--sas-token]
     *                      [--snapshot]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_file_list(): void {
    }

    /**
     * Resizes a file to the specified size.
     *
     * Syntax: 
     *
     * az storage file resize --path
     *                        --share-name
     *                        --size
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_file_resize(): void {
    }

    /**
     * Returns all user-defined metadata, standard HTTP properties, and system properties for the file.
     *
     * Syntax: 
     *
     * az storage file show --path
     *                      --share-name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--connection-string]
     *                      [--query-examples]
     *                      [--sas-token]
     *                      [--snapshot]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_file_show(): void {
    }

    /**
     * Sets system properties on the file.
     *
     * Syntax: 
     *
     * az storage file update --path
     *                        --share-name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--clear-content-settings {false, true}]
     *                        [--connection-string]
     *                        [--content-cache-control]
     *                        [--content-disposition]
     *                        [--content-encoding]
     *                        [--content-language]
     *                        [--content-md5]
     *                        [--content-type]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_file_update(): void {
    }

    /**
     * Upload a file to a share that uses the SMB 3.0 protocol.
     *
     * Syntax: 
     *
     * az storage file upload --share-name
     *                        --source
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--content-cache-control]
     *                        [--content-disposition]
     *                        [--content-encoding]
     *                        [--content-language]
     *                        [--content-md5]
     *                        [--content-type]
     *                        [--max-connections]
     *                        [--metadata]
     *                        [--no-progress]
     *                        [--path]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     *                        [--validate-content]
     */
    az_storage_file_upload(): void {
    }

    /**
     * Upload files from a local directory to an Azure Storage File Share in a batch operation.
     *
     * Syntax: 
     *
     * az storage file upload-batch --destination
     *                              --source
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--content-cache-control]
     *                              [--content-disposition]
     *                              [--content-encoding]
     *                              [--content-language]
     *                              [--content-md5]
     *                              [--content-type]
     *                              [--destination-path]
     *                              [--dryrun]
     *                              [--max-connections]
     *                              [--metadata]
     *                              [--no-progress]
     *                              [--pattern]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--validate-content]
     */
    az_storage_file_upload_batch(): void {
    }

    /**
     * Create the url to access a file.
     *
     * Syntax: 
     *
     * az storage file url --path
     *                     --share-name
     *                     [--account-key]
     *                     [--account-name]
     *                     [--connection-string]
     *                     [--protocol {http, https}]
     *                     [--sas-token]
     *                     [--subscription]
     */
    az_storage_file_url(): void {
    }
}

/** Manage file system access and permissions for Azure Data Lake Storage Gen2 account. */
class az_storage_fs_access {
    /**
     * Set the access control properties of a path(directory or file) in Azure Data Lake Storage Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs access set --file-system
     *                          --path
     *                          [--account-key]
     *                          [--account-name]
     *                          [--acl]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--group]
     *                          [--owner]
     *                          [--permissions]
     *                          [--sas-token]
     *                          [--subscription]
     */
    az_storage_fs_access_set(): void {
    }

    /**
     * Show the access control properties of a path (directory or file) in Azure Data Lake Storage Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs access show --file-system
     *                           --path
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--query-examples]
     *                           [--sas-token]
     *                           [--subscription]
     */
    az_storage_fs_access_show(): void {
    }
}

/** Manage the metadata for directory in file system. */
class az_storage_fs_directory_metadata {
    /**
     * Return all user-defined metadata for the specified directory.
     *
     * Syntax: 
     *
     * az storage fs directory metadata show --file-system
     *                                       --name
     *                                       [--account-key]
     *                                       [--account-name]
     *                                       [--auth-mode {key, login}]
     *                                       [--connection-string]
     *                                       [--query-examples]
     *                                       [--sas-token]
     *                                       [--subscription]
     *                                       [--timeout]
     */
    az_storage_fs_directory_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified file system.
     *
     * Syntax: 
     *
     * az storage fs directory metadata update --file-system
     *                                         --metadata
     *                                         --name
     *                                         [--account-key]
     *                                         [--account-name]
     *                                         [--auth-mode {key, login}]
     *                                         [--connection-string]
     *                                         [--sas-token]
     *                                         [--subscription]
     *                                         [--timeout]
     */
    az_storage_fs_directory_metadata_update(): void {
    }
}

/** Manage directories in Azure Data Lake Storage Gen2 account. */
class az_storage_fs_directory {
    /**
     * Create a directory in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory create --file-system
     *                                --name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--metadata]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--subscription]
     *                                [--timeout]
     *                                [--umask]
     */
    az_storage_fs_directory_create(): void {
    }

    /**
     * Delete a directory in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory delete --file-system
     *                                --name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--sas-token]
     *                                [--subscription]
     *                                [--timeout]
     *                                [--yes]
     */
    az_storage_fs_directory_delete(): void {
    }

    /**
     * Check for the existence of a directory in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory exists --file-system
     *                                --name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--sas-token]
     *                                [--subscription]
     *                                [--timeout]
     */
    az_storage_fs_directory_exists(): void {
    }

    /**
     * List directories in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory list --file-system
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--num-results]
     *                              [--path]
     *                              [--query-examples]
     *                              [--recursive {false, true}]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_fs_directory_list(): void {
    }

    /**
     * Move a directory in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory move --file-system
     *                              --name
     *                              --new-directory
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_fs_directory_move(): void {
    }

    /**
     * Show properties of a directory in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs directory show --file-system
     *                              --name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     *                              [--timeout]
     */
    az_storage_fs_directory_show(): void {
    }
}

/** Manage the metadata for file in file system. */
class az_storage_fs_file_metadata {
    /**
     * Returns all user-defined metadata, standard HTTP properties, and system properties for the file.
     *
     * Syntax: 
     *
     * az storage fs file metadata show --file-system
     *                                  --path
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--query-examples]
     *                                  [--sas-token]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_fs_file_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified file system.
     *
     * Syntax: 
     *
     * az storage fs file metadata update --file-system
     *                                    --metadata
     *                                    --path
     *                                    [--account-key]
     *                                    [--account-name]
     *                                    [--auth-mode {key, login}]
     *                                    [--connection-string]
     *                                    [--sas-token]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_storage_fs_file_metadata_update(): void {
    }
}

/** Manage files in Azure Data Lake Storage Gen2 account. */
class az_storage_fs_file {
    /**
     * Append content to a file in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file append --content
     *                           --file-system
     *                           --path
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_fs_file_append(): void {
    }

    /**
     * Create a new file in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file create --file-system
     *                           --path
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--content-cache-control]
     *                           [--content-disposition]
     *                           [--content-encoding]
     *                           [--content-language]
     *                           [--content-md5]
     *                           [--content-type]
     *                           [--metadata]
     *                           [--permissions]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--umask]
     */
    az_storage_fs_file_create(): void {
    }

    /**
     * Delete a file in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file delete --file-system
     *                           --path
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--yes]
     */
    az_storage_fs_file_delete(): void {
    }

    /**
     * Download a file from the specified path in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file download --file-system
     *                             --path
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--destination]
     *                             [--overwrite {false, true}]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_fs_file_download(): void {
    }

    /**
     * Check for the existence of a file in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file exists --file-system
     *                           --path
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_fs_file_exists(): void {
    }

    /**
     * List files and directories in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file list --file-system
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--exclude-dir]
     *                         [--marker]
     *                         [--num-results]
     *                         [--path]
     *                         [--query-examples]
     *                         [--recursive {false, true}]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_fs_file_list(): void {
    }

    /**
     * Move a file in ADLS Gen2 Account.
     *
     * Syntax: 
     *
     * az storage fs file move --file-system
     *                         --new-path
     *                         --path
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--content-cache-control]
     *                         [--content-disposition]
     *                         [--content-encoding]
     *                         [--content-language]
     *                         [--content-md5]
     *                         [--content-type]
     *                         [--sas-token]
     *                         [--subscription]
     */
    az_storage_fs_file_move(): void {
    }

    /**
     * Show properties of file in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file show --file-system
     *                         --path
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--query-examples]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_fs_file_show(): void {
    }

    /**
     * Upload a file to a file path in ADLS Gen2 file system.
     *
     * Syntax: 
     *
     * az storage fs file upload --file-system
     *                           --path
     *                           --source
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--content-cache-control]
     *                           [--content-disposition]
     *                           [--content-encoding]
     *                           [--content-language]
     *                           [--content-md5]
     *                           [--content-type]
     *                           [--if-match]
     *                           [--if-modified-since]
     *                           [--if-none-match]
     *                           [--if-unmodified-since]
     *                           [--metadata]
     *                           [--overwrite {false, true}]
     *                           [--permissions]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--umask]
     */
    az_storage_fs_file_upload(): void {
    }
}

/** Manage the metadata for file system. */
class az_storage_fs_metadata {
    /**
     * Return all user-defined metadata for the specified file system.
     *
     * Syntax: 
     *
     * az storage fs metadata show --name
     *                             [--account-key]
     *                             [--account-name]
     *                             [--auth-mode {key, login}]
     *                             [--connection-string]
     *                             [--query-examples]
     *                             [--sas-token]
     *                             [--subscription]
     *                             [--timeout]
     */
    az_storage_fs_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified file system.
     *
     * Syntax: 
     *
     * az storage fs metadata update --metadata
     *                               --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--auth-mode {key, login}]
     *                               [--connection-string]
     *                               [--sas-token]
     *                               [--subscription]
     *                               [--timeout]
     */
    az_storage_fs_metadata_update(): void {
    }
}

/** Manage file systems in Azure Data Lake Storage Gen2 account. */
class az_storage_fs {
    /**
     * Create file system for Azure Data Lake Storage Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs create --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--metadata]
     *                      [--public-access {file, filesystem, off}]
     *                      [--sas-token]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_fs_create(): void {
    }

    /**
     * Delete a file system in ADLS Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs delete --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--sas-token]
     *                      [--subscription]
     *                      [--timeout]
     *                      [--yes]
     */
    az_storage_fs_delete(): void {
    }

    /**
     * Check for the existence of a file system in ADLS Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs exists --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--auth-mode {key, login}]
     *                      [--connection-string]
     *                      [--sas-token]
     *                      [--subscription]
     *                      [--timeout]
     */
    az_storage_fs_exists(): void {
    }

    /**
     * List file systems in ADLS Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs list [--account-key]
     *                    [--account-name]
     *                    [--auth-mode {key, login}]
     *                    [--connection-string]
     *                    [--include-metadata {false, true}]
     *                    [--prefix]
     *                    [--query-examples]
     *                    [--sas-token]
     *                    [--subscription]
     */
    az_storage_fs_list(): void {
    }

    /**
     * Show properties of file system in ADLS Gen2 account.
     *
     * Syntax: 
     *
     * az storage fs show --name
     *                    [--account-key]
     *                    [--account-name]
     *                    [--auth-mode {key, login}]
     *                    [--connection-string]
     *                    [--query-examples]
     *                    [--sas-token]
     *                    [--subscription]
     *                    [--timeout]
     */
    az_storage_fs_show(): void {
    }
}

/** Manage storage service logging information. */
class az_storage_logging {
    /**
     * Turn off logging for a storage account.
     *
     * Syntax: 
     *
     * az storage logging off [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--services]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_logging_off(): void {
    }

    /**
     * Show logging settings for a storage account.
     *
     * Syntax: 
     *
     * az storage logging show [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--query-examples]
     *                         [--sas-token]
     *                         [--services]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_logging_show(): void {
    }

    /**
     * Update logging settings for a storage account.
     *
     * Syntax: 
     *
     * az storage logging update --log
     *                           --retention
     *                           --services
     *                           [--account-key]
     *                           [--account-name]
     *                           [--connection-string]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--version]
     */
    az_storage_logging_update(): void {
    }
}

/** Manage queue storage messages. */
class az_storage_message {
    /**
     * Deletes all messages from the specified queue.
     *
     * Syntax: 
     *
     * az storage message clear --queue-name
     *                          [--account-key]
     *                          [--account-name]
     *                          [--auth-mode {key, login}]
     *                          [--connection-string]
     *                          [--sas-token]
     *                          [--subscription]
     *                          [--timeout]
     */
    az_storage_message_clear(): void {
    }

    /**
     * Deletes the specified message.
     *
     * Syntax: 
     *
     * az storage message delete --id
     *                           --pop-receipt
     *                           --queue-name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_message_delete(): void {
    }

    /**
     * Retrieves one or more messages from the front of the queue.
     *
     * Syntax: 
     *
     * az storage message get --queue-name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--num-messages]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     *                        [--visibility-timeout]
     */
    az_storage_message_get(): void {
    }

    /**
     * Retrieves one or more messages from the front of the queue, but does not alter the visibility of the message.
     *
     * Syntax: 
     *
     * az storage message peek --queue-name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--num-messages]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_message_peek(): void {
    }

    /**
     * Adds a new message to the back of the message queue.
     *
     * Syntax: 
     *
     * az storage message put --content
     *                        --queue-name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--time-to-live]
     *                        [--timeout]
     *                        [--visibility-timeout]
     */
    az_storage_message_put(): void {
    }

    /**
     * Updates the visibility timeout of a message.
     *
     * Syntax: 
     *
     * az storage message update --id
     *                           --pop-receipt
     *                           --queue-name
     *                           --visibility-timeout
     *                           [--account-key]
     *                           [--account-name]
     *                           [--auth-mode {key, login}]
     *                           [--connection-string]
     *                           [--content]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_message_update(): void {
    }
}

/** Manage storage service metrics. */
class az_storage_metrics {
    /**
     * Show metrics settings for a storage account.
     *
     * Syntax: 
     *
     * az storage metrics show [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--interval {both, hour, minute}]
     *                         [--query-examples]
     *                         [--sas-token]
     *                         [--services]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_metrics_show(): void {
    }

    /**
     * Update metrics settings for a storage account.
     *
     * Syntax: 
     *
     * az storage metrics update --retention
     *                           --services
     *                           [--account-key]
     *                           [--account-name]
     *                           [--api {false, true}]
     *                           [--connection-string]
     *                           [--hour {false, true}]
     *                           [--minute {false, true}]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_metrics_update(): void {
    }
}

/** Manage the metadata for a storage queue. */
class az_storage_queue_metadata {
    /**
     * Retrieves user-defined metadata and queue properties on the specified queue.
     *
     * Syntax: 
     *
     * az storage queue metadata show --name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--query-examples]
     *                                [--sas-token]
     *                                [--subscription]
     *                                [--timeout]
     */
    az_storage_queue_metadata_show(): void {
    }

    /**
     * Sets user-defined metadata on the specified queue.
     *
     * Syntax: 
     *
     * az storage queue metadata update --name
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--auth-mode {key, login}]
     *                                  [--connection-string]
     *                                  [--metadata]
     *                                  [--sas-token]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_queue_metadata_update(): void {
    }
}

/** Manage shared access policies for a storage queue. */
class az_storage_queue_policy {
    /**
     * Create a stored access policy on the containing object.
     *
     * Syntax: 
     *
     * az storage queue policy create --name
     *                                --queue-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_queue_policy_create(): void {
    }

    /**
     * Delete a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage queue policy delete --name
     *                                --queue-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--sas-token]
     *                                [--subscription]
     */
    az_storage_queue_policy_delete(): void {
    }

    /**
     * List stored access policies on a containing object.
     *
     * Syntax: 
     *
     * az storage queue policy list --queue-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_queue_policy_list(): void {
    }

    /**
     * Show a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage queue policy show --name
     *                              --queue-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--auth-mode {key, login}]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_queue_policy_show(): void {
    }

    /**
     * Set a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage queue policy update --name
     *                                --queue-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--auth-mode {key, login}]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_queue_policy_update(): void {
    }
}

/** Manage shared access policies of a storage table. */
class az_storage_queue {
    /**
     * Creates a queue under the given account.
     *
     * Syntax: 
     *
     * az storage queue create --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--fail-on-exist]
     *                         [--metadata]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_queue_create(): void {
    }

    /**
     * Deletes the specified queue and any messages it contains.
     *
     * Syntax: 
     *
     * az storage queue delete --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--fail-not-exist]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_queue_delete(): void {
    }

    /**
     * Returns a boolean indicating whether the queue exists.
     *
     * Syntax: 
     *
     * az storage queue exists --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--auth-mode {key, login}]
     *                         [--connection-string]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_queue_exists(): void {
    }

    /**
     * Generates a shared access signature for the queue.
     *
     * Syntax: 
     *
     * az storage queue generate-sas --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--connection-string]
     *                               [--expiry]
     *                               [--https-only]
     *                               [--ip]
     *                               [--permissions]
     *                               [--policy-name]
     *                               [--start]
     *                               [--subscription]
     */
    az_storage_queue_generate_sas(): void {
    }

    /**
     * List queues in a storage account.
     *
     * Syntax: 
     *
     * az storage queue list [--account-key]
     *                       [--account-name]
     *                       [--auth-mode {key, login}]
     *                       [--connection-string]
     *                       [--include-metadata]
     *                       [--marker]
     *                       [--num-results]
     *                       [--prefix]
     *                       [--query-examples]
     *                       [--sas-token]
     *                       [--subscription]
     *                       [--timeout]
     */
    az_storage_queue_list(): void {
    }

    /**
     * Retrieves statistics related to replication for the Queue service.
     *
     * Syntax: 
     *
     * az storage queue stats [--account-key]
     *                        [--account-name]
     *                        [--auth-mode {key, login}]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_queue_stats(): void {
    }
}

/** Manage the metadata of a file share. */
class az_storage_share_metadata {
    /**
     * Returns all user-defined metadata for the specified share.
     *
     * Syntax: 
     *
     * az storage share metadata show --name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--query-examples]
     *                                [--sas-token]
     *                                [--snapshot]
     *                                [--subscription]
     *                                [--timeout]
     */
    az_storage_share_metadata_show(): void {
    }

    /**
     * Sets one or more user-defined name-value pairs for the specified share.
     *
     * Syntax: 
     *
     * az storage share metadata update --name
     *                                  [--account-key]
     *                                  [--account-name]
     *                                  [--connection-string]
     *                                  [--metadata]
     *                                  [--sas-token]
     *                                  [--subscription]
     *                                  [--timeout]
     */
    az_storage_share_metadata_update(): void {
    }
}

/** Manage shared access policies of a storage file share. */
class az_storage_share_policy {
    /**
     * Create a stored access policy on the containing object.
     *
     * Syntax: 
     *
     * az storage share policy create --name
     *                                --share-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_share_policy_create(): void {
    }

    /**
     * Delete a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage share policy delete --name
     *                                --share-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--sas-token]
     *                                [--subscription]
     */
    az_storage_share_policy_delete(): void {
    }

    /**
     * List stored access policies on a containing object.
     *
     * Syntax: 
     *
     * az storage share policy list --share-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_share_policy_list(): void {
    }

    /**
     * Show a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage share policy show --name
     *                              --share-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_share_policy_show(): void {
    }

    /**
     * Set a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage share policy update --name
     *                                --share-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_share_policy_update(): void {
    }
}

/** Manage Azure file shares using the Microsoft.Storage resource provider. */
class az_storage_share_rm {
    /**
     * Create a new Azure file share under the specified storage account.
     *
     * Syntax: 
     *
     * az storage share-rm create --name
     *                            --storage-account
     *                            [--access-tier {Cool, Hot, Premium, TransactionOptimized}]
     *                            [--enabled-protocols {NFS, SMB}]
     *                            [--metadata]
     *                            [--quota]
     *                            [--resource-group]
     *                            [--root-squash {AllSquash, NoRootSquash, RootSquash}]
     *                            [--subscription]
     */
    az_storage_share_rm_create(): void {
    }

    /**
     * Delete the specified Azure file share.
     *
     * Syntax: 
     *
     * az storage share-rm delete [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--storage-account]
     *                            [--subscription]
     *                            [--yes]
     */
    az_storage_share_rm_delete(): void {
    }

    /**
     * Check for the existence of an Azure file share.
     *
     * Syntax: 
     *
     * az storage share-rm exists [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--storage-account]
     *                            [--subscription]
     */
    az_storage_share_rm_exists(): void {
    }

    /**
     * List the Azure file shares under the specified storage account.
     *
     * Syntax: 
     *
     * az storage share-rm list --storage-account
     *                          [--include-deleted]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     */
    az_storage_share_rm_list(): void {
    }

    /**
     * Restore a file share within a valid retention days if share soft delete is enabled.
     *
     * Syntax: 
     *
     * az storage share-rm restore --deleted-version
     *                             [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--restored-name]
     *                             [--storage-account]
     *                             [--subscription]
     */
    az_storage_share_rm_restore(): void {
    }

    /**
     * Show the properties for a specified Azure file share.
     *
     * Syntax: 
     *
     * az storage share-rm show [--expand]
     *                          [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--storage-account]
     *                          [--subscription]
     */
    az_storage_share_rm_show(): void {
    }

    /**
     * Get the usage bytes of the data stored on the share.
     *
     * Syntax: 
     *
     * az storage share-rm stats [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--storage-account]
     *                           [--subscription]
     */
    az_storage_share_rm_stats(): void {
    }

    /**
     * Update the properties for an Azure file share.
     *
     * Syntax: 
     *
     * az storage share-rm update [--access-tier {Cool, Hot, Premium, TransactionOptimized}]
     *                            [--add]
     *                            [--force-string]
     *                            [--ids]
     *                            [--metadata]
     *                            [--name]
     *                            [--quota]
     *                            [--remove]
     *                            [--resource-group]
     *                            [--root-squash {AllSquash, NoRootSquash, RootSquash}]
     *                            [--set]
     *                            [--storage-account]
     *                            [--subscription]
     */
    az_storage_share_rm_update(): void {
    }
}

/** Manage file shares. */
class az_storage_share {
    /**
     * Creates a new share under the specified account.
     *
     * Syntax: 
     *
     * az storage share create --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--fail-on-exist]
     *                         [--metadata]
     *                         [--quota]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_share_create(): void {
    }

    /**
     * Marks the specified share for deletion.
     *
     * Syntax: 
     *
     * az storage share delete --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--delete-snapshots {include}]
     *                         [--fail-not-exist]
     *                         [--sas-token]
     *                         [--snapshot]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_share_delete(): void {
    }

    /**
     * Check for the existence of a file share.
     *
     * Syntax: 
     *
     * az storage share exists --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--sas-token]
     *                         [--snapshot]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_share_exists(): void {
    }

    /**
     * Generates a shared access signature for the share.
     *
     * Syntax: 
     *
     * az storage share generate-sas --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--cache-control]
     *                               [--connection-string]
     *                               [--content-disposition]
     *                               [--content-encoding]
     *                               [--content-language]
     *                               [--content-type]
     *                               [--expiry]
     *                               [--https-only]
     *                               [--ip]
     *                               [--permissions]
     *                               [--policy-name]
     *                               [--start]
     *                               [--subscription]
     */
    az_storage_share_generate_sas(): void {
    }

    /**
     * List the file shares in a storage account.
     *
     * Syntax: 
     *
     * az storage share list [--account-key]
     *                       [--account-name]
     *                       [--connection-string]
     *                       [--include-metadata]
     *                       [--include-snapshots]
     *                       [--marker]
     *                       [--num-results]
     *                       [--prefix]
     *                       [--query-examples]
     *                       [--sas-token]
     *                       [--subscription]
     *                       [--timeout]
     */
    az_storage_share_list(): void {
    }

    /**
     * Returns all user-defined metadata and system properties for the specified share.
     *
     * Syntax: 
     *
     * az storage share show --name
     *                       [--account-key]
     *                       [--account-name]
     *                       [--connection-string]
     *                       [--query-examples]
     *                       [--sas-token]
     *                       [--snapshot]
     *                       [--subscription]
     *                       [--timeout]
     */
    az_storage_share_show(): void {
    }

    /**
     * Creates a snapshot of an existing share under the specified account.
     *
     * Syntax: 
     *
     * az storage share snapshot --name
     *                           [--account-key]
     *                           [--account-name]
     *                           [--connection-string]
     *                           [--metadata]
     *                           [--quota]
     *                           [--sas-token]
     *                           [--subscription]
     *                           [--timeout]
     */
    az_storage_share_snapshot(): void {
    }

    /**
     * Gets the approximate size of the data stored on the share, rounded up to the nearest gigabyte.
     *
     * Syntax: 
     *
     * az storage share stats --name
     *                        [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_share_stats(): void {
    }

    /**
     * Sets service-defined properties for the specified share.
     *
     * Syntax: 
     *
     * az storage share update --name
     *                         --quota
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_share_update(): void {
    }

    /**
     * Create a URI to access a file share.
     *
     * Syntax: 
     *
     * az storage share url --name
     *                      [--account-key]
     *                      [--account-name]
     *                      [--connection-string]
     *                      [--protocol {http, https}]
     *                      [--sas-token]
     *                      [--subscription]
     *                      [--unc]
     */
    az_storage_share_url(): void {
    }
}

/** Manage shared access policies of a storage table. */
class az_storage_table_policy {
    /**
     * Create a stored access policy on the containing object.
     *
     * Syntax: 
     *
     * az storage table policy create --name
     *                                --table-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_table_policy_create(): void {
    }

    /**
     * Delete a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage table policy delete --name
     *                                --table-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--sas-token]
     *                                [--subscription]
     */
    az_storage_table_policy_delete(): void {
    }

    /**
     * List stored access policies on a containing object.
     *
     * Syntax: 
     *
     * az storage table policy list --table-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_table_policy_list(): void {
    }

    /**
     * Show a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage table policy show --name
     *                              --table-name
     *                              [--account-key]
     *                              [--account-name]
     *                              [--connection-string]
     *                              [--query-examples]
     *                              [--sas-token]
     *                              [--subscription]
     */
    az_storage_table_policy_show(): void {
    }

    /**
     * Set a stored access policy on a containing object.
     *
     * Syntax: 
     *
     * az storage table policy update --name
     *                                --table-name
     *                                [--account-key]
     *                                [--account-name]
     *                                [--connection-string]
     *                                [--expiry]
     *                                [--permissions]
     *                                [--sas-token]
     *                                [--start]
     *                                [--subscription]
     */
    az_storage_table_policy_update(): void {
    }
}

/** Manage NoSQL key-value storage. */
class az_storage_table {
    /**
     * Creates a new table in the storage account.
     *
     * Syntax: 
     *
     * az storage table create --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--fail-on-exist]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_table_create(): void {
    }

    /**
     * Deletes the specified table and any data it contains.
     *
     * Syntax: 
     *
     * az storage table delete --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--fail-not-exist]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_table_delete(): void {
    }

    /**
     * Returns a boolean indicating whether the table exists.
     *
     * Syntax: 
     *
     * az storage table exists --name
     *                         [--account-key]
     *                         [--account-name]
     *                         [--connection-string]
     *                         [--sas-token]
     *                         [--subscription]
     *                         [--timeout]
     */
    az_storage_table_exists(): void {
    }

    /**
     * Generates a shared access signature for the table.
     *
     * Syntax: 
     *
     * az storage table generate-sas --name
     *                               [--account-key]
     *                               [--account-name]
     *                               [--connection-string]
     *                               [--end-pk]
     *                               [--end-rk]
     *                               [--expiry]
     *                               [--https-only]
     *                               [--ip]
     *                               [--permissions]
     *                               [--policy-name]
     *                               [--start]
     *                               [--start-pk]
     *                               [--start-rk]
     *                               [--subscription]
     */
    az_storage_table_generate_sas(): void {
    }

    /**
     * List tables in a storage account.
     *
     * Syntax: 
     *
     * az storage table list [--account-key]
     *                       [--account-name]
     *                       [--connection-string]
     *                       [--marker]
     *                       [--num-results]
     *                       [--query-examples]
     *                       [--sas-token]
     *                       [--subscription]
     *                       [--timeout]
     */
    az_storage_table_list(): void {
    }

    /**
     * Retrieves statistics related to replication for the Table service.
     *
     * Syntax: 
     *
     * az storage table stats [--account-key]
     *                        [--account-name]
     *                        [--connection-string]
     *                        [--sas-token]
     *                        [--subscription]
     *                        [--timeout]
     */
    az_storage_table_stats(): void {
    }
}

/** Manage Azure Cloud Storage resources. */
class az_storage {
    /**
     * Copy files or directories to or from Azure storage.
     *
     * Syntax: 
     *
     * az storage copy [--account-key]
     *                 [--account-name]
     *                 [--blob-type {AppendBlob, BlockBlob, PageBlob}]
     *                 [--connection-string]
     *                 [--content-type]
     *                 [--destination]
     *                 [--destination-account-name]
     *                 [--destination-blob]
     *                 [--destination-container]
     *                 [--destination-file-path]
     *                 [--destination-local-path]
     *                 [--destination-share]
     *                 [--exclude-path]
     *                 [--exclude-pattern]
     *                 [--follow-symlinks]
     *                 [--include-path]
     *                 [--include-pattern]
     *                 [--preserve-s2s-access-tier {false, true}]
     *                 [--put-md5]
     *                 [--recursive]
     *                 [--sas-token]
     *                 [--source]
     *                 [--source-account-key]
     *                 [--source-account-name]
     *                 [--source-blob]
     *                 [--source-connection-string]
     *                 [--source-container]
     *                 [--source-file-path]
     *                 [--source-local-path]
     *                 [--source-sas]
     *                 [--source-share]
     *                 [--subscription]
     */
    az_storage_copy(): void {
    }

    /**
     * Delete blobs or files from Azure Storage.
     *
     * Syntax: 
     *
     * az storage remove [--account-key]
     *                   [--account-name]
     *                   [--connection-string]
     *                   [--container-name]
     *                   [--exclude-path]
     *                   [--exclude-pattern]
     *                   [--include-path]
     *                   [--include-pattern]
     *                   [--name]
     *                   [--path]
     *                   [--recursive]
     *                   [--sas-token]
     *                   [--share-name]
     *                   [--subscription]
     */
    az_storage_remove(): void {
    }
}

/** Manage Synapse's role assignments. */
class az_synapse_role_assignment {
    /**
     * Create a role assignment.
     *
     * Syntax: 
     *
     * az synapse role assignment create --assignee
     *                                   --role
     *                                   --workspace-name
     *                                   [--subscription]
     */
    az_synapse_role_assignment_create(): void {
    }

    /**
     * Delete role assignments of workspace.
     *
     * Syntax: 
     *
     * az synapse role assignment delete --workspace-name
     *                                   [--assignee]
     *                                   [--ids]
     *                                   [--role]
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_synapse_role_assignment_delete(): void {
    }

    /**
     * List role assignments.
     *
     * Syntax: 
     *
     * az synapse role assignment list --workspace-name
     *                                 [--assignee]
     *                                 [--query-examples]
     *                                 [--role]
     *                                 [--subscription]
     */
    az_synapse_role_assignment_list(): void {
    }

    /**
     * Get a role assignment by id.
     *
     * Syntax: 
     *
     * az synapse role assignment show --id
     *                                 --workspace-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_synapse_role_assignment_show(): void {
    }
}

/** Manage Synapse's role definitions. */
class az_synapse_role_definition {
    /**
     * List role definitions.
     *
     * Syntax: 
     *
     * az synapse role definition list --workspace-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_synapse_role_definition_list(): void {
    }

    /**
     * Get role definition by role id/name.
     *
     * Syntax: 
     *
     * az synapse role definition show --role
     *                                 --workspace-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_synapse_role_definition_show(): void {
    }
}

/** Manage Synapse's role assignments and definitions. */
class az_synapse_role {
}

/** Manage Synapse Spark batch jobs. */
class az_synapse_spark_job {
    /**
     * Cancel a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job cancel --livy-id
     *                             --spark-pool-name
     *                             --workspace-name
     *                             [--subscription]
     *                             [--yes]
     */
    az_synapse_spark_job_cancel(): void {
    }

    /**
     * List all Spark jobs.
     *
     * Syntax: 
     *
     * az synapse spark job list --spark-pool-name
     *                           --workspace-name
     *                           [--from-index]
     *                           [--query-examples]
     *                           [--size]
     *                           [--subscription]
     */
    az_synapse_spark_job_list(): void {
    }

    /**
     * Get a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job show --livy-id
     *                           --spark-pool-name
     *                           --workspace-name
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_synapse_spark_job_show(): void {
    }

    /**
     * Submit a Spark job.
     *
     * Syntax: 
     *
     * az synapse spark job submit --executor-size {Large, Medium, Small}
     *                             --executors
     *                             --main-class-name
     *                             --main-definition-file
     *                             --name
     *                             --spark-pool-name
     *                             --workspace-name
     *                             [--archives]
     *                             [--arguments]
     *                             [--configuration]
     *                             [--language {CSharp, PySpark, Python, Scala, Spark, SparkDotNet}]
     *                             [--reference-files]
     *                             [--subscription]
     *                             [--tags]
     */
    az_synapse_spark_job_submit(): void {
    }
}

/** Manage Spark pools. */
class az_synapse_spark_pool {
    /**
     * Create a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool create --name
     *                              --node-count
     *                              --node-size {Large, Medium, Small}
     *                              --resource-group
     *                              --spark-version
     *                              --workspace-name
     *                              [--delay]
     *                              [--enable-auto-pause {false, true}]
     *                              [--enable-auto-scale {false, true}]
     *                              [--library-requirements]
     *                              [--max-node-count]
     *                              [--min-node-count]
     *                              [--no-wait]
     *                              [--node-size-family]
     *                              [--spark-events-folder]
     *                              [--spark-log-folder]
     *                              [--subscription]
     *                              [--tags]
     */
    az_synapse_spark_pool_create(): void {
    }

    /**
     * Delete a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool delete [--ids]
     *                              [--name]
     *                              [--no-wait]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--workspace-name]
     *                              [--yes]
     */
    az_synapse_spark_pool_delete(): void {
    }

    /**
     * List all Spark pools.
     *
     * Syntax: 
     *
     * az synapse spark pool list --resource-group
     *                            --workspace-name
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_synapse_spark_pool_list(): void {
    }

    /**
     * Get a Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool show [--ids]
     *                            [--name]
     *                            [--query-examples]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--workspace-name]
     */
    az_synapse_spark_pool_show(): void {
    }

    /**
     * Update the Spark pool.
     *
     * Syntax: 
     *
     * az synapse spark pool update [--delay]
     *                              [--enable-auto-pause {false, true}]
     *                              [--enable-auto-scale {false, true}]
     *                              [--force {false, true}]
     *                              [--ids]
     *                              [--library-requirements]
     *                              [--max-node-count]
     *                              [--min-node-count]
     *                              [--name]
     *                              [--no-wait]
     *                              [--node-count]
     *                              [--node-size {Large, Medium, Small}]
     *                              [--resource-group]
     *                              [--subscription]
     *                              [--tags]
     *                              [--workspace-name]
     */
    az_synapse_spark_pool_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a Spark pool is met.
     *
     * Syntax: 
     *
     * az synapse spark pool wait --big-data-pool-name
     *                            [--created]
     *                            [--custom]
     *                            [--deleted]
     *                            [--exists]
     *                            [--ids]
     *                            [--interval]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--timeout]
     *                            [--updated]
     *                            [--workspace-name]
     */
    az_synapse_spark_pool_wait(): void {
    }
}

/** Manage Synapse Spark sessions. */
class az_synapse_spark_session {
    /**
     * Cancel a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session cancel --livy-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--subscription]
     *                                 [--yes]
     */
    az_synapse_spark_session_cancel(): void {
    }

    /**
     * Create a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session create --executor-size {Large, Medium, Small}
     *                                 --executors
     *                                 --name
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--configuration]
     *                                 [--reference-files]
     *                                 [--subscription]
     *                                 [--tags]
     */
    az_synapse_spark_session_create(): void {
    }

    /**
     * List all Spark sessions.
     *
     * Syntax: 
     *
     * az synapse spark session list --spark-pool-name
     *                               --workspace-name
     *                               [--from-index]
     *                               [--query-examples]
     *                               [--size]
     *                               [--subscription]
     */
    az_synapse_spark_session_list(): void {
    }

    /**
     * Reset a Spark session timeout time.
     *
     * Syntax: 
     *
     * az synapse spark session reset-timeout --livy-id
     *                                        --spark-pool-name
     *                                        --workspace-name
     *                                        [--subscription]
     */
    az_synapse_spark_session_reset_timeout(): void {
    }

    /**
     * Get a Spark session.
     *
     * Syntax: 
     *
     * az synapse spark session show --livy-id
     *                               --spark-pool-name
     *                               --workspace-name
     *                               [--query-examples]
     *                               [--subscription]
     */
    az_synapse_spark_session_show(): void {
    }
}

/** Manage Synapse Spark statements. */
class az_synapse_spark_statement {
    /**
     * Cancel a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement cancel --livy-id
     *                                   --session-id
     *                                   --spark-pool-name
     *                                   --workspace-name
     *                                   [--subscription]
     *                                   [--yes]
     */
    az_synapse_spark_statement_cancel(): void {
    }

    /**
     * Invoke a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement invoke --code
     *                                   --language {CSharp, PySpark, Python, SQL, Scala, Spark, SparkDotNet}
     *                                   --session-id
     *                                   --spark-pool-name
     *                                   --workspace-name
     *                                   [--subscription]
     */
    az_synapse_spark_statement_invoke(): void {
    }

    /**
     * List all Spark statements.
     *
     * Syntax: 
     *
     * az synapse spark statement list --session-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_synapse_spark_statement_list(): void {
    }

    /**
     * Get a Spark statement.
     *
     * Syntax: 
     *
     * az synapse spark statement show --livy-id
     *                                 --session-id
     *                                 --spark-pool-name
     *                                 --workspace-name
     *                                 [--query-examples]
     *                                 [--subscription]
     */
    az_synapse_spark_statement_show(): void {
    }
}

/** Manage Spark pools and Spark jobs. */
class az_synapse_spark {
}

/** Manage SQL pools. */
class az_synapse_sql_pool {
    /**
     * Create a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool create --name
     *                            --performance-level
     *                            --resource-group
     *                            --workspace-name
     *                            [--no-wait]
     *                            [--subscription]
     *                            [--tags]
     */
    az_synapse_sql_pool_create(): void {
    }

    /**
     * Delete a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool delete [--ids]
     *                            [--name]
     *                            [--no-wait]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--workspace-name]
     *                            [--yes]
     */
    az_synapse_sql_pool_delete(): void {
    }

    /**
     * List all SQL pools.
     *
     * Syntax: 
     *
     * az synapse sql pool list --resource-group
     *                          --workspace-name
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_synapse_sql_pool_list(): void {
    }

    /**
     * Pause a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool pause [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--workspace-name]
     */
    az_synapse_sql_pool_pause(): void {
    }

    /**
     * Resume a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool resume [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--workspace-name]
     */
    az_synapse_sql_pool_resume(): void {
    }

    /**
     * Get a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool show [--ids]
     *                          [--name]
     *                          [--query-examples]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--workspace-name]
     */
    az_synapse_sql_pool_show(): void {
    }

    /**
     * Update a SQL pool.
     *
     * Syntax: 
     *
     * az synapse sql pool update [--ids]
     *                            [--name]
     *                            [--performance-level]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--tags]
     *                            [--workspace-name]
     */
    az_synapse_sql_pool_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a SQL pool is met.
     *
     * Syntax: 
     *
     * az synapse sql pool wait --sql-pool-name
     *                          [--created]
     *                          [--custom]
     *                          [--deleted]
     *                          [--exists]
     *                          [--ids]
     *                          [--interval]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--timeout]
     *                          [--updated]
     *                          [--workspace-name]
     */
    az_synapse_sql_pool_wait(): void {
    }
}

/** Manage SQL pools. */
class az_synapse_sql {
}

/** Manage a workspace's firewall rules. */
class az_synapse_workspace_firewall_rule {
    /**
     * Create a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule create --end-ip-address
     *                                           --name
     *                                           --resource-group
     *                                           --start-ip-address
     *                                           --workspace-name
     *                                           [--no-wait]
     *                                           [--subscription]
     */
    az_synapse_workspace_firewall_rule_create(): void {
    }

    /**
     * Delete a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule delete [--ids]
     *                                           [--name]
     *                                           [--no-wait]
     *                                           [--resource-group]
     *                                           [--subscription]
     *                                           [--workspace-name]
     *                                           [--yes]
     */
    az_synapse_workspace_firewall_rule_delete(): void {
    }

    /**
     * List all firewall rules.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule list --resource-group
     *                                         --workspace-name
     *                                         [--query-examples]
     *                                         [--subscription]
     */
    az_synapse_workspace_firewall_rule_list(): void {
    }

    /**
     * Get a firewall rule.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule show [--ids]
     *                                         [--name]
     *                                         [--query-examples]
     *                                         [--resource-group]
     *                                         [--subscription]
     *                                         [--workspace-name]
     */
    az_synapse_workspace_firewall_rule_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a firewall rule is met.
     *
     * Syntax: 
     *
     * az synapse workspace firewall-rule wait --rule-name
     *                                         [--created]
     *                                         [--custom]
     *                                         [--deleted]
     *                                         [--exists]
     *                                         [--ids]
     *                                         [--interval]
     *                                         [--resource-group]
     *                                         [--subscription]
     *                                         [--timeout]
     *                                         [--updated]
     *                                         [--workspace-name]
     */
    az_synapse_workspace_firewall_rule_wait(): void {
    }
}

/** Manage Synapse workspaces. */
class az_synapse_workspace {
    /**
     * Check if a Synapse workspace name is available or not.
     *
     * Syntax: 
     *
     * az synapse workspace check-name --name
     *                                 [--subscription]
     */
    az_synapse_workspace_check_name(): void {
    }

    /**
     * Create a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace create --file-system
     *                             --location
     *                             --name
     *                             --resource-group
     *                             --sql-admin-login-password
     *                             --sql-admin-login-user
     *                             --storage-account
     *                             [--no-wait]
     *                             [--subscription]
     *                             [--tags]
     */
    az_synapse_workspace_create(): void {
    }

    /**
     * Delete a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace delete [--ids]
     *                             [--name]
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--subscription]
     *                             [--yes]
     */
    az_synapse_workspace_delete(): void {
    }

    /**
     * List all Synapse workspaces.
     *
     * Syntax: 
     *
     * az synapse workspace list [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_synapse_workspace_list(): void {
    }

    /**
     * Get a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace show [--ids]
     *                           [--name]
     *                           [--query-examples]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_synapse_workspace_show(): void {
    }

    /**
     * Update a Synapse workspace.
     *
     * Syntax: 
     *
     * az synapse workspace update [--ids]
     *                             [--name]
     *                             [--no-wait]
     *                             [--resource-group]
     *                             [--sql-admin-login-password]
     *                             [--subscription]
     *                             [--tags]
     */
    az_synapse_workspace_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the workspace is met.
     *
     * Syntax: 
     *
     * az synapse workspace wait --resource-group
     *                           --workspace-name
     *                           [--created]
     *                           [--custom]
     *                           [--deleted]
     *                           [--exists]
     *                           [--interval]
     *                           [--subscription]
     *                           [--timeout]
     *                           [--updated]
     */
    az_synapse_workspace_wait(): void {
    }
}

/** Manage and operate Synapse Workspace, Spark Pool, SQL Pool. */
class az_synapse {
}

/** Tag Management on a resource. */
class az_tag {
    /**
     * Create a tag value.
     *
     * Syntax: 
     *
     * az tag add-value --name
     *                  --value
     *                  [--subscription]
     */
    az_tag_add_value(): void {
    }

    /**
     * Create tags on a specific resource.
     *
     * Syntax: 
     *
     * az tag create [--name]
     *               [--resource-id]
     *               [--subscription]
     *               [--tags]
     */
    az_tag_create(): void {
    }

    /**
     * Delete tags on a specific resource.
     *
     * Syntax: 
     *
     * az tag delete [--name]
     *               [--resource-id]
     *               [--subscription]
     *               [--yes]
     */
    az_tag_delete(): void {
    }

    /**
     * List the entire set of tags on a specific resource.
     *
     * Syntax: 
     *
     * az tag list [--query-examples]
     *             [--resource-id]
     *             [--subscription]
     */
    az_tag_list(): void {
    }

    /**
     * Deletes a predefined tag value for a predefined tag name.
     *
     * Syntax: 
     *
     * az tag remove-value --name
     *                     --value
     *                     [--subscription]
     */
    az_tag_remove_value(): void {
    }

    /**
     * Selectively update the set of tags on a specific resource.
     *
     * Syntax: 
     *
     * az tag update --operation {Delete, Merge, Replace}
     *               --resource-id
     *               --tags
     *               [--subscription]
     */
    az_tag_update(): void {
    }
}

/** Group resources into availability sets. */
class az_vm_availability_set {
    /**
     * Convert an Azure Availability Set to contain VMs with managed disks.
     *
     * Syntax: 
     *
     * az vm availability-set convert [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_vm_availability_set_convert(): void {
    }

    /**
     * Create an Azure Availability Set.
     *
     * Syntax: 
     *
     * az vm availability-set create --name
     *                               --resource-group
     *                               [--location]
     *                               [--no-wait]
     *                               [--platform-fault-domain-count]
     *                               [--platform-update-domain-count]
     *                               [--ppg]
     *                               [--subscription]
     *                               [--tags]
     *                               [--unmanaged]
     *                               [--validate]
     */
    az_vm_availability_set_create(): void {
    }

    /**
     * Delete an availability set.
     *
     * Syntax: 
     *
     * az vm availability-set delete [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_vm_availability_set_delete(): void {
    }

    /**
     * List availability sets.
     *
     * Syntax: 
     *
     * az vm availability-set list [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_vm_availability_set_list(): void {
    }

    /**
     * List VM sizes for an availability set.
     *
     * Syntax: 
     *
     * az vm availability-set list-sizes [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--subscription]
     */
    az_vm_availability_set_list_sizes(): void {
    }

    /**
     * Get information for an availability set.
     *
     * Syntax: 
     *
     * az vm availability-set show [--ids]
     *                             [--name]
     *                             [--query-examples]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_vm_availability_set_show(): void {
    }

    /**
     * Update an Azure Availability Set.
     *
     * Syntax: 
     *
     * az vm availability-set update [--add]
     *                               [--force-string]
     *                               [--ids]
     *                               [--name]
     *                               [--ppg]
     *                               [--remove]
     *                               [--resource-group]
     *                               [--set]
     *                               [--subscription]
     */
    az_vm_availability_set_update(): void {
    }
}

/** Troubleshoot the startup of an Azure Virtual Machine. */
class az_vm_boot_diagnostics {
    /**
     * Disable the boot diagnostics on a VM.
     *
     * Syntax: 
     *
     * az vm boot-diagnostics disable [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_vm_boot_diagnostics_disable(): void {
    }

    /**
     * Enable the boot diagnostics on a VM.
     *
     * Syntax: 
     *
     * az vm boot-diagnostics enable [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--storage]
     *                               [--subscription]
     */
    az_vm_boot_diagnostics_enable(): void {
    }

    /**
     * Get the boot diagnostics log from a VM.
     *
     * Syntax: 
     *
     * az vm boot-diagnostics get-boot-log [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_vm_boot_diagnostics_get_boot_log(): void {
    }

    /**
     * Get SAS URIs for a virtual machine's boot diagnostic logs.
     *
     * Syntax: 
     *
     * az vm boot-diagnostics get-boot-log-uris [--expire]
     *                                          [--ids]
     *                                          [--name]
     *                                          [--resource-group]
     *                                          [--subscription]
     */
    az_vm_boot_diagnostics_get_boot_log_uris(): void {
    }
}

/** Configure the Azure Virtual Machine diagnostics extension. */
class az_vm_diagnostics {
    /**
     * Get the default configuration settings for a VM.
     *
     * Syntax: 
     *
     * az vm diagnostics get-default-config [--is-windows-os]
     *                                      [--subscription]
     */
    az_vm_diagnostics_get_default_config(): void {
    }

    /**
     * Configure the Azure VM diagnostics extension.
     *
     * Syntax: 
     *
     * az vm diagnostics set --settings
     *                       [--ids]
     *                       [--no-auto-upgrade {false, true}]
     *                       [--protected-settings]
     *                       [--resource-group]
     *                       [--subscription]
     *                       [--version]
     *                       [--vm-name]
     */
    az_vm_diagnostics_set(): void {
    }
}

/** Manage the managed data disks attached to a VM. */
class az_vm_disk {
    /**
     * Attach a managed persistent disk to a VM.
     *
     * Syntax: 
     *
     * az vm disk attach --vm-name
     *                   [--caching {None, ReadOnly, ReadWrite}]
     *                   [--enable-write-accelerator]
     *                   [--ids]
     *                   [--lun]
     *                   [--name]
     *                   [--new]
     *                   [--resource-group]
     *                   [--size-gb]
     *                   [--sku {Premium_LRS, StandardSSD_LRS, Standard_LRS, UltraSSD_LRS}]
     *                   [--subscription]
     */
    az_vm_disk_attach(): void {
    }

    /**
     * Detach a managed disk from a VM.
     *
     * Syntax: 
     *
     * az vm disk detach --name
     *                   --resource-group
     *                   --vm-name
     *                   [--subscription]
     */
    az_vm_disk_detach(): void {
    }
}

/** Manage encryption of VM disks. */
class az_vm_encryption {
    /**
     * Disable disk encryption on the OS disk and/or data disks. Decrypt mounted disks.
     *
     * Syntax: 
     *
     * az vm encryption disable [--force]
     *                          [--ids]
     *                          [--name]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--volume-type {ALL, DATA, OS}]
     */
    az_vm_encryption_disable(): void {
    }

    /**
     * Enable disk encryption on the OS disk and/or data disks. Encrypt mounted disks.
     *
     * Syntax: 
     *
     * az vm encryption enable --disk-encryption-keyvault
     *                         [--aad-client-cert-thumbprint]
     *                         [--aad-client-id]
     *                         [--aad-client-secret]
     *                         [--encrypt-format-all]
     *                         [--force]
     *                         [--ids]
     *                         [--key-encryption-algorithm]
     *                         [--key-encryption-key]
     *                         [--key-encryption-keyvault]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--volume-type {ALL, DATA, OS}]
     */
    az_vm_encryption_enable(): void {
    }

    /**
     * Show encryption status.
     *
     * Syntax: 
     *
     * az vm encryption show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_vm_encryption_show(): void {
    }
}

/** Find the available VM extensions for a subscription and region. */
class az_vm_extension_image {
    /**
     * List the information on available extensions.
     *
     * Syntax: 
     *
     * az vm extension image list [--latest]
     *                            [--location]
     *                            [--name]
     *                            [--publisher]
     *                            [--query-examples]
     *                            [--subscription]
     *                            [--version]
     */
    az_vm_extension_image_list(): void {
    }

    /**
     * List the names of available extensions.
     *
     * Syntax: 
     *
     * az vm extension image list-names --location
     *                                  --publisher
     *                                  [--subscription]
     */
    az_vm_extension_image_list_names(): void {
    }

    /**
     * List the versions for available extensions.
     *
     * Syntax: 
     *
     * az vm extension image list-versions --location
     *                                     --name
     *                                     --publisher
     *                                     [--filter]
     *                                     [--orderby]
     *                                     [--subscription]
     *                                     [--top]
     */
    az_vm_extension_image_list_versions(): void {
    }

    /**
     * Display information for an extension.
     *
     * Syntax: 
     *
     * az vm extension image show --location
     *                            --name
     *                            --publisher
     *                            --version
     *                            [--query-examples]
     *                            [--subscription]
     */
    az_vm_extension_image_show(): void {
    }
}

/** Manage extensions on VMs. */
class az_vm_extension {
    /**
     * Remove an extension attached to a VM.
     *
     * Syntax: 
     *
     * az vm extension delete [--ids]
     *                        [--name]
     *                        [--no-wait]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--vm-name]
     */
    az_vm_extension_delete(): void {
    }

    /**
     * List the extensions attached to a VM.
     *
     * Syntax: 
     *
     * az vm extension list --resource-group
     *                      --vm-name
     *                      [--query-examples]
     *                      [--subscription]
     */
    az_vm_extension_list(): void {
    }

    /**
     * Set extensions for a VM.
     *
     * Syntax: 
     *
     * az vm extension set --name
     *                     --publisher
     *                     [--extension-instance-name]
     *                     [--force-update]
     *                     [--ids]
     *                     [--no-auto-upgrade {false, true}]
     *                     [--no-wait]
     *                     [--protected-settings]
     *                     [--resource-group]
     *                     [--settings]
     *                     [--subscription]
     *                     [--version]
     *                     [--vm-name]
     */
    az_vm_extension_set(): void {
    }

    /**
     * Display information about extensions attached to a VM.
     *
     * Syntax: 
     *
     * az vm extension show [--expand]
     *                      [--ids]
     *                      [--name]
     *                      [--query-examples]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--vm-name]
     */
    az_vm_extension_show(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a virtual machine extension is met.
     *
     * Syntax: 
     *
     * az vm extension wait [--created]
     *                      [--custom]
     *                      [--deleted]
     *                      [--exists]
     *                      [--expand]
     *                      [--ids]
     *                      [--interval]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     *                      [--timeout]
     *                      [--updated]
     *                      [--vm-name]
     */
    az_vm_extension_wait(): void {
    }
}

/** Manage Dedicated Host Groups. */
class az_vm_host_group {
    /**
     * Create a dedicated host group.
     *
     * Syntax: 
     *
     * az vm host group create --name
     *                         --resource-group
     *                         [--automatic-placement {false, true}]
     *                         [--location]
     *                         [--platform-fault-domain-count]
     *                         [--subscription]
     *                         [--tags]
     *                         [--zone {1, 2, 3}]
     */
    az_vm_host_group_create(): void {
    }

    /**
     * Delete a dedicated host group.
     *
     * Syntax: 
     *
     * az vm host group delete [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     *                         [--yes]
     */
    az_vm_host_group_delete(): void {
    }

    /**
     * Get instance view of a dedicated host group.
     *
     * Syntax: 
     *
     * az vm host group get-instance-view [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_vm_host_group_get_instance_view(): void {
    }

    /**
     * List dedicated host groups.
     *
     * Syntax: 
     *
     * az vm host group list [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_vm_host_group_list(): void {
    }

    /**
     * Get the details of a dedicated host group.
     *
     * Syntax: 
     *
     * az vm host group show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_vm_host_group_show(): void {
    }

    /**
     * Update a dedicated host group.
     *
     * Syntax: 
     *
     * az vm host group update [--add]
     *                         [--force-string]
     *                         [--ids]
     *                         [--name]
     *                         [--remove]
     *                         [--resource-group]
     *                         [--set]
     *                         [--subscription]
     */
    az_vm_host_group_update(): void {
    }
}

/** Manage Dedicated Hosts for Virtual Machines. */
class az_vm_host {
    /**
     * Create a dedicated host.
     *
     * Syntax: 
     *
     * az vm host create --host-group
     *                   --name
     *                   --resource-group
     *                   --sku {DSv3-Type1, ESv3-Type1, FSv2-Type2}
     *                   [--auto-replace {false, true}]
     *                   [--license-type {None, Windows_Server_Hybrid, Windows_Server_Perpetual}]
     *                   [--location]
     *                   [--platform-fault-domain]
     *                   [--subscription]
     *                   [--tags]
     */
    az_vm_host_create(): void {
    }

    /**
     * Delete a dedicated host.
     *
     * Syntax: 
     *
     * az vm host delete [--host-group]
     *                   [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     *                   [--yes]
     */
    az_vm_host_delete(): void {
    }

    /**
     * Get instance information about a dedicated host.
     *
     * Syntax: 
     *
     * az vm host get-instance-view [--host-group]
     *                              [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_vm_host_get_instance_view(): void {
    }

    /**
     * List dedicated hosts.
     *
     * Syntax: 
     *
     * az vm host list --host-group
     *                 --resource-group
     *                 [--query-examples]
     *                 [--subscription]
     */
    az_vm_host_list(): void {
    }

    /**
     * Get the details of a dedicated host.
     *
     * Syntax: 
     *
     * az vm host show [--host-group]
     *                 [--ids]
     *                 [--name]
     *                 [--query-examples]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_vm_host_show(): void {
    }

    /**
     * Update a dedicated host.
     *
     * Syntax: 
     *
     * az vm host update [--add]
     *                   [--force-string]
     *                   [--host-group]
     *                   [--ids]
     *                   [--name]
     *                   [--remove]
     *                   [--resource-group]
     *                   [--set]
     *                   [--subscription]
     */
    az_vm_host_update(): void {
    }
}

/** Manage service identities of a VM. */
class az_vm_identity {
    /**
     * Enable managed service identity on a VM.
     *
     * Syntax: 
     *
     * az vm identity assign [--identities]
     *                       [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--role]
     *                       [--scope]
     *                       [--subscription]
     */
    az_vm_identity_assign(): void {
    }

    /**
     * Remove managed service identities from a VM.
     *
     * Syntax: 
     *
     * az vm identity remove [--identities]
     *                       [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_vm_identity_remove(): void {
    }

    /**
     * Display VM's managed identity info.
     *
     * Syntax: 
     *
     * az vm identity show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_vm_identity_show(): void {
    }
}

/** Manage Azure Marketplace image terms. */
class az_vm_image_terms {
    /**
     * Accept Azure Marketplace image terms so that the image can be used to create VMs.
     *
     * Syntax: 
     *
     * az vm image terms accept [--offer]
     *                          [--plan]
     *                          [--publisher]
     *                          [--subscription]
     *                          [--urn]
     */
    az_vm_image_terms_accept(): void {
    }

    /**
     * Cancel Azure Marketplace image terms.
     *
     * Syntax: 
     *
     * az vm image terms cancel [--offer]
     *                          [--plan]
     *                          [--publisher]
     *                          [--subscription]
     *                          [--urn]
     */
    az_vm_image_terms_cancel(): void {
    }

    /**
     * Get the details of Azure Marketplace image terms.
     *
     * Syntax: 
     *
     * az vm image terms show [--offer]
     *                        [--plan]
     *                        [--publisher]
     *                        [--query-examples]
     *                        [--subscription]
     *                        [--urn]
     */
    az_vm_image_terms_show(): void {
    }
}

/** Information on available virtual machine images. */
class az_vm_image {
    /**
     * Accept Azure Marketplace term so that the image can be used to create VMs.
     *
     * Syntax: 
     *
     * az vm image accept-terms [--offer]
     *                          [--plan]
     *                          [--publisher]
     *                          [--subscription]
     *                          [--urn]
     */
    az_vm_image_accept_terms(): void {
    }

    /**
     * List the VM/VMSS images available in the Azure Marketplace.
     *
     * Syntax: 
     *
     * az vm image list [--all]
     *                  [--location]
     *                  [--offer]
     *                  [--publisher]
     *                  [--query-examples]
     *                  [--sku]
     *                  [--subscription]
     */
    az_vm_image_list(): void {
    }

    /**
     * List the VM image offers available in the Azure Marketplace.
     *
     * Syntax: 
     *
     * az vm image list-offers --location
     *                         --publisher
     *                         [--subscription]
     */
    az_vm_image_list_offers(): void {
    }

    /**
     * List the VM image publishers available in the Azure Marketplace.
     *
     * Syntax: 
     *
     * az vm image list-publishers --location
     *                             [--subscription]
     */
    az_vm_image_list_publishers(): void {
    }

    /**
     * List the VM image SKUs available in the Azure Marketplace.
     *
     * Syntax: 
     *
     * az vm image list-skus --location
     *                       --offer
     *                       --publisher
     *                       [--subscription]
     */
    az_vm_image_list_skus(): void {
    }

    /**
     * Get the details for a VM image available in the Azure Marketplace.
     *
     * Syntax: 
     *
     * az vm image show [--location]
     *                  [--offer]
     *                  [--publisher]
     *                  [--query-examples]
     *                  [--sku]
     *                  [--subscription]
     *                  [--urn]
     *                  [--version]
     */
    az_vm_image_show(): void {
    }
}

/** Manage log analytics workspace for a vm. */
class az_vm_monitor_log {
    /**
     * Execute a query against the Log Analytics workspace linked with a VM.
     *
     * Syntax: 
     *
     * az vm monitor log show --analytics-query
     *                        [--ids]
     *                        [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--subscription]
     *                        [--timespan]
     */
    az_vm_monitor_log_show(): void {
    }
}

/** Manage metrics for a vm. */
class az_vm_monitor_metrics {
    /**
     * List the metric definitions for a VM.
     *
     * Syntax: 
     *
     * az vm monitor metrics list-definitions --name
     *                                        --resource-group
     *                                        [--namespace]
     *                                        [--subscription]
     */
    az_vm_monitor_metrics_list_definitions(): void {
    }

    /**
     * List the metric values for a VM.
     *
     * Syntax: 
     *
     * az vm monitor metrics tail --name
     *                            --resource-group
     *                            [--aggregation {Average, Count, Maximum, Minimum, Total}]
     *                            [--dimension]
     *                            [--end-time]
     *                            [--filter]
     *                            [--interval]
     *                            [--metadata]
     *                            [--metrics]
     *                            [--namespace]
     *                            [--offset]
     *                            [--orderby]
     *                            [--start-time]
     *                            [--subscription]
     *                            [--top]
     */
    az_vm_monitor_metrics_tail(): void {
    }
}

/** Manage monitor aspect for a vm. */
class az_vm_monitor {
}

/** Manage network interfaces. See also `az network nic`. */
class az_vm_nic {
    /**
     * Add existing NICs to a VM.
     *
     * Syntax: 
     *
     * az vm nic add --nics
     *               --resource-group
     *               --vm-name
     *               [--primary-nic]
     *               [--subscription]
     */
    az_vm_nic_add(): void {
    }

    /**
     * List the NICs available on a VM.
     *
     * Syntax: 
     *
     * az vm nic list --resource-group
     *                --vm-name
     *                [--query-examples]
     *                [--subscription]
     */
    az_vm_nic_list(): void {
    }

    /**
     * Remove NICs from a VM.
     *
     * Syntax: 
     *
     * az vm nic remove --nics
     *                  --resource-group
     *                  --vm-name
     *                  [--primary-nic]
     *                  [--subscription]
     */
    az_vm_nic_remove(): void {
    }

    /**
     * Configure settings of a NIC attached to a VM.
     *
     * Syntax: 
     *
     * az vm nic set --nics
     *               --resource-group
     *               --vm-name
     *               [--primary-nic]
     *               [--subscription]
     */
    az_vm_nic_set(): void {
    }

    /**
     * Display information for a NIC attached to a VM.
     *
     * Syntax: 
     *
     * az vm nic show --nic
     *                --resource-group
     *                --vm-name
     *                [--query-examples]
     *                [--subscription]
     */
    az_vm_nic_show(): void {
    }
}

/** Manage run commands on a Virtual Machine. */
class az_vm_run_command {
    /**
     * Execute a specific run command on a vm.
     *
     * Syntax: 
     *
     * az vm run-command invoke --command-id
     *                          [--ids]
     *                          [--name]
     *                          [--parameters]
     *                          [--resource-group]
     *                          [--scripts]
     *                          [--subscription]
     */
    az_vm_run_command_invoke(): void {
    }

    /**
     * Lists all available run commands for a subscription in a location.
     *
     * Syntax: 
     *
     * az vm run-command list --location
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_vm_run_command_list(): void {
    }

    /**
     * Gets specific run command for a subscription in a location.
     *
     * Syntax: 
     *
     * az vm run-command show --command-id
     *                        --location
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_vm_run_command_show(): void {
    }
}

/** Manage VM secrets. */
class az_vm_secret {
    /**
     * Add a secret to a VM.
     *
     * Syntax: 
     *
     * az vm secret add --certificate
     *                  --keyvault
     *                  [--certificate-store]
     *                  [--ids]
     *                  [--name]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_vm_secret_add(): void {
    }

    /**
     * Transform secrets into a form that can be used by VMs and VMSSes.
     *
     * Syntax: 
     *
     * az vm secret format --secrets
     *                     [--certificate-store]
     *                     [--keyvault]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_vm_secret_format(): void {
    }

    /**
     * List secrets on a VM.
     *
     * Syntax: 
     *
     * az vm secret list --name
     *                   --resource-group
     *                   [--query-examples]
     *                   [--subscription]
     */
    az_vm_secret_list(): void {
    }

    /**
     * Remove a secret from a VM.
     *
     * Syntax: 
     *
     * az vm secret remove --keyvault
     *                     [--certificate]
     *                     [--ids]
     *                     [--name]
     *                     [--resource-group]
     *                     [--subscription]
     */
    az_vm_secret_remove(): void {
    }
}

/** Manage the unmanaged data disks attached to a VM. */
class az_vm_unmanaged_disk {
    /**
     * Attach an unmanaged persistent disk to a VM.
     *
     * Syntax: 
     *
     * az vm unmanaged-disk attach --resource-group
     *                             --vm-name
     *                             [--caching {None, ReadOnly, ReadWrite}]
     *                             [--lun]
     *                             [--name]
     *                             [--new]
     *                             [--size-gb]
     *                             [--subscription]
     *                             [--vhd-uri]
     */
    az_vm_unmanaged_disk_attach(): void {
    }

    /**
     * Detach an unmanaged disk from a VM.
     *
     * Syntax: 
     *
     * az vm unmanaged-disk detach --name
     *                             --resource-group
     *                             --vm-name
     *                             [--subscription]
     */
    az_vm_unmanaged_disk_detach(): void {
    }

    /**
     * List unmanaged disks of a VM.
     *
     * Syntax: 
     *
     * az vm unmanaged-disk list --name
     *                           --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_vm_unmanaged_disk_list(): void {
    }
}

/** Manage user accounts for a VM. */
class az_vm_user {
    /**
     * Delete a user account from a VM.
     *
     * Syntax: 
     *
     * az vm user delete --username
     *                   [--ids]
     *                   [--name]
     *                   [--no-wait]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_vm_user_delete(): void {
    }

    /**
     * Reset the SSH configuration on a VM.
     *
     * Syntax: 
     *
     * az vm user reset-ssh [--ids]
     *                      [--name]
     *                      [--no-wait]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_vm_user_reset_ssh(): void {
    }

    /**
     * Update a user account.
     *
     * Syntax: 
     *
     * az vm user update --username
     *                   [--ids]
     *                   [--name]
     *                   [--no-wait]
     *                   [--password]
     *                   [--resource-group]
     *                   [--ssh-key-value]
     *                   [--subscription]
     */
    az_vm_user_update(): void {
    }
}

/** Manage Linux or Windows virtual machines. */
class az_vm {
    /**
     * Assess patches on a VM.
     *
     * Syntax: 
     *
     * az vm assess-patches [--ids]
     *                      [--name]
     *                      [--resource-group]
     *                      [--subscription]
     */
    az_vm_assess_patches(): void {
    }

    /**
     * Manage auto-shutdown for VM.
     *
     * Syntax: 
     *
     * az vm auto-shutdown [--email]
     *                     [--ids]
     *                     [--location]
     *                     [--name]
     *                     [--off]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--time]
     *                     [--webhook]
     */
    az_vm_auto_shutdown(): void {
    }

    /**
     * Capture information for a stopped VM.
     *
     * Syntax: 
     *
     * az vm capture --vhd-name-prefix
     *               [--ids]
     *               [--name]
     *               [--overwrite]
     *               [--resource-group]
     *               [--storage-container]
     *               [--subscription]
     */
    az_vm_capture(): void {
    }

    /**
     * Convert a VM with unmanaged disks to use managed disks.
     *
     * Syntax: 
     *
     * az vm convert [--ids]
     *               [--name]
     *               [--resource-group]
     *               [--subscription]
     */
    az_vm_convert(): void {
    }

    /**
     * Create an Azure Virtual Machine.
     *
     * Syntax: 
     *
     * az vm create --name
     *              --resource-group
     *              [--accelerated-networking {false, true}]
     *              [--admin-password]
     *              [--admin-username]
     *              [--asgs]
     *              [--assign-identity]
     *              [--attach-data-disks]
     *              [--attach-os-disk]
     *              [--authentication-type {all, password, ssh}]
     *              [--availability-set]
     *              [--boot-diagnostics-storage]
     *              [--computer-name]
     *              [--custom-data]
     *              [--data-disk-caching]
     *              [--data-disk-encryption-sets]
     *              [--data-disk-sizes-gb]
     *              [--enable-agent {false, true}]
     *              [--enable-auto-update {false, true}]
     *              [--encryption-at-host {false, true}]
     *              [--ephemeral-os-disk {false, true}]
     *              [--eviction-policy {Deallocate, Delete}]
     *              [--generate-ssh-keys]
     *              [--host]
     *              [--host-group]
     *              [--image]
     *              [--license-type {None, RHEL_BYOS, SLES_BYOS, Windows_Client, Windows_Server}]
     *              [--location]
     *              [--max-price]
     *              [--nics]
     *              [--no-wait]
     *              [--nsg]
     *              [--nsg-rule {NONE, RDP, SSH}]
     *              [--os-disk-caching {None, ReadOnly, ReadWrite}]
     *              [--os-disk-encryption-set]
     *              [--os-disk-name]
     *              [--os-disk-size-gb]
     *              [--os-type {linux, windows}]
     *              [--patch-mode {AutomaticByOS, AutomaticByPlatform, Manual}]
     *              [--plan-name]
     *              [--plan-product]
     *              [--plan-promotion-code]
     *              [--plan-publisher]
     *              [--ppg]
     *              [--priority {Low, Regular, Spot}]
     *              [--private-ip-address]
     *              [--public-ip-address]
     *              [--public-ip-address-allocation {dynamic, static}]
     *              [--public-ip-address-dns-name]
     *              [--public-ip-sku {Basic, Standard}]
     *              [--role]
     *              [--scope]
     *              [--secrets]
     *              [--size]
     *              [--specialized {false, true}]
     *              [--ssh-dest-key-path]
     *              [--ssh-key-values]
     *              [--storage-account]
     *              [--storage-container-name]
     *              [--storage-sku]
     *              [--subnet]
     *              [--subnet-address-prefix]
     *              [--subscription]
     *              [--tags]
     *              [--ultra-ssd-enabled {false, true}]
     *              [--use-unmanaged-disk]
     *              [--validate]
     *              [--vmss]
     *              [--vnet-address-prefix]
     *              [--vnet-name]
     *              [--workspace]
     *              [--zone {1, 2, 3}]
     */
    az_vm_create(): void {
    }

    /**
     * Deallocate a VM.
     *
     * Syntax: 
     *
     * az vm deallocate [--ids]
     *                  [--name]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_vm_deallocate(): void {
    }

    /**
     * Delete a VM.
     *
     * Syntax: 
     *
     * az vm delete [--ids]
     *              [--name]
     *              [--no-wait]
     *              [--resource-group]
     *              [--subscription]
     *              [--yes]
     */
    az_vm_delete(): void {
    }

    /**
     * Mark a VM as generalized, allowing it to be imaged for multiple deployments.
     *
     * Syntax: 
     *
     * az vm generalize [--ids]
     *                  [--name]
     *                  [--no-wait]
     *                  [--resource-group]
     *                  [--subscription]
     */
    az_vm_generalize(): void {
    }

    /**
     * Get instance information about a VM.
     *
     * Syntax: 
     *
     * az vm get-instance-view [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_vm_get_instance_view(): void {
    }

    /**
     * List details of Virtual Machines.
     *
     * Syntax: 
     *
     * az vm list [--query-examples]
     *            [--resource-group]
     *            [--show-details]
     *            [--subscription]
     */
    az_vm_list(): void {
    }

    /**
     * List IP addresses associated with a VM.
     *
     * Syntax: 
     *
     * az vm list-ip-addresses [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_vm_list_ip_addresses(): void {
    }

    /**
     * List available sizes for VMs.
     *
     * Syntax: 
     *
     * az vm list-sizes --location
     *                  [--subscription]
     */
    az_vm_list_sizes(): void {
    }

    /**
     * Get details for compute-related resource SKUs.
     *
     * Syntax: 
     *
     * az vm list-skus [--all {false, true}]
     *                 [--location]
     *                 [--resource-type]
     *                 [--size]
     *                 [--subscription]
     *                 [--zone {false, true}]
     */
    az_vm_list_skus(): void {
    }

    /**
     * List available usage resources for VMs.
     *
     * Syntax: 
     *
     * az vm list-usage --location
     *                  [--subscription]
     */
    az_vm_list_usage(): void {
    }

    /**
     * List available resizing options for VMs.
     *
     * Syntax: 
     *
     * az vm list-vm-resize-options [--ids]
     *                              [--name]
     *                              [--resource-group]
     *                              [--subscription]
     */
    az_vm_list_vm_resize_options(): void {
    }

    /**
     * Opens a VM to inbound traffic on specified ports.
     *
     * Syntax: 
     *
     * az vm open-port --port
     *                 [--apply-to-subnet]
     *                 [--ids]
     *                 [--name]
     *                 [--nsg-name]
     *                 [--priority]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_vm_open_port(): void {
    }

    /**
     * The operation to perform maintenance on a virtual machine.
     *
     * Syntax: 
     *
     * az vm perform-maintenance [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_vm_perform_maintenance(): void {
    }

    /**
     * Reapply VMs.
     *
     * Syntax: 
     *
     * az vm reapply [--ids]
     *               [--name]
     *               [--no-wait]
     *               [--resource-group]
     *               [--subscription]
     */
    az_vm_reapply(): void {
    }

    /**
     * Redeploy an existing VM.
     *
     * Syntax: 
     *
     * az vm redeploy [--ids]
     *                [--name]
     *                [--no-wait]
     *                [--resource-group]
     *                [--subscription]
     */
    az_vm_redeploy(): void {
    }

    /**
     * Update a VM's size.
     *
     * Syntax: 
     *
     * az vm resize --size
     *              [--ids]
     *              [--name]
     *              [--no-wait]
     *              [--resource-group]
     *              [--subscription]
     */
    az_vm_resize(): void {
    }

    /**
     * Restart VMs.
     *
     * Syntax: 
     *
     * az vm restart [--force]
     *               [--ids]
     *               [--name]
     *               [--no-wait]
     *               [--resource-group]
     *               [--subscription]
     */
    az_vm_restart(): void {
    }

    /**
     * Get the details of a VM.
     *
     * Syntax: 
     *
     * az vm show [--ids]
     *            [--name]
     *            [--query-examples]
     *            [--resource-group]
     *            [--show-details]
     *            [--subscription]
     */
    az_vm_show(): void {
    }

    /**
     * Simulate the eviction of a Spot VM.
     *
     * Syntax: 
     *
     * az vm simulate-eviction [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_vm_simulate_eviction(): void {
    }

    /**
     * Start a stopped VM.
     *
     * Syntax: 
     *
     * az vm start [--ids]
     *             [--name]
     *             [--no-wait]
     *             [--resource-group]
     *             [--subscription]
     */
    az_vm_start(): void {
    }

    /**
     * Power off (stop) a running VM.
     *
     * Syntax: 
     *
     * az vm stop [--ids]
     *            [--name]
     *            [--no-wait]
     *            [--resource-group]
     *            [--skip-shutdown]
     *            [--subscription]
     */
    az_vm_stop(): void {
    }

    /**
     * Update the properties of a VM.
     *
     * Syntax: 
     *
     * az vm update [--add]
     *              [--disk-caching]
     *              [--force-string]
     *              [--ids]
     *              [--license-type {None, RHEL_BYOS, SLES_BYOS, Windows_Client, Windows_Server}]
     *              [--max-price]
     *              [--name]
     *              [--no-wait]
     *              [--os-disk]
     *              [--ppg]
     *              [--priority {Low, Regular, Spot}]
     *              [--remove]
     *              [--resource-group]
     *              [--set]
     *              [--subscription]
     *              [--ultra-ssd-enabled {false, true}]
     *              [--workspace]
     *              [--write-accelerator]
     */
    az_vm_update(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of the VM is met.
     *
     * Syntax: 
     *
     * az vm wait [--created]
     *            [--custom]
     *            [--deleted]
     *            [--exists]
     *            [--ids]
     *            [--interval]
     *            [--name]
     *            [--resource-group]
     *            [--subscription]
     *            [--timeout]
     *            [--updated]
     */
    az_vm_wait(): void {
    }
}

/** Configure the Azure Virtual Machine Scale Set diagnostics extension. */
class az_vmss_diagnostics {
    /**
     * Show the default config file which defines data to be collected.
     *
     * Syntax: 
     *
     * az vmss diagnostics get-default-config [--is-windows-os]
     *                                        [--subscription]
     */
    az_vmss_diagnostics_get_default_config(): void {
    }

    /**
     * Enable diagnostics on a VMSS.
     *
     * Syntax: 
     *
     * az vmss diagnostics set --resource-group
     *                         --settings
     *                         --vmss-name
     *                         [--no-auto-upgrade {false, true}]
     *                         [--protected-settings]
     *                         [--subscription]
     *                         [--version]
     */
    az_vmss_diagnostics_set(): void {
    }
}

/** Manage data disks of a VMSS. */
class az_vmss_disk {
    /**
     * Attach managed data disks to a scale set or its instances.
     *
     * Syntax: 
     *
     * az vmss disk attach [--caching {None, ReadOnly, ReadWrite}]
     *                     [--disk]
     *                     [--ids]
     *                     [--instance-id]
     *                     [--lun]
     *                     [--resource-group]
     *                     [--size-gb]
     *                     [--sku {Premium_LRS, StandardSSD_LRS, Standard_LRS, UltraSSD_LRS}]
     *                     [--subscription]
     *                     [--vmss-name]
     */
    az_vmss_disk_attach(): void {
    }

    /**
     * Detach managed data disks from a scale set or its instances.
     *
     * Syntax: 
     *
     * az vmss disk detach --lun
     *                     [--ids]
     *                     [--instance-id]
     *                     [--resource-group]
     *                     [--subscription]
     *                     [--vmss-name]
     */
    az_vmss_disk_detach(): void {
    }
}

/** Manage encryption of VMSS. */
class az_vmss_encryption {
    /**
     * Disable the encryption on a VMSS with managed disks.
     *
     * Syntax: 
     *
     * az vmss encryption disable [--force]
     *                            [--ids]
     *                            [--name]
     *                            [--resource-group]
     *                            [--subscription]
     *                            [--volume-type {ALL, DATA, OS}]
     */
    az_vmss_encryption_disable(): void {
    }

    /**
     * Encrypt a VMSS with managed disks.
     *
     * Syntax: 
     *
     * az vmss encryption enable --disk-encryption-keyvault
     *                           [--force]
     *                           [--ids]
     *                           [--key-encryption-algorithm]
     *                           [--key-encryption-key]
     *                           [--key-encryption-keyvault]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     *                           [--volume-type {ALL, DATA, OS}]
     */
    az_vmss_encryption_enable(): void {
    }

    /**
     * Show encryption status.
     *
     * Syntax: 
     *
     * az vmss encryption show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_vmss_encryption_show(): void {
    }
}

/** Find the available VM extensions for a subscription and region. */
class az_vmss_extension_image {
    /**
     * List the information on available extensions.
     *
     * Syntax: 
     *
     * az vmss extension image list [--latest]
     *                              [--location]
     *                              [--name]
     *                              [--publisher]
     *                              [--query-examples]
     *                              [--subscription]
     *                              [--version]
     */
    az_vmss_extension_image_list(): void {
    }

    /**
     * Gets a list of virtual machine extension image types.
     *
     * Syntax: 
     *
     * az vmss extension image list-names --location
     *                                    --publisher
     *                                    [--subscription]
     */
    az_vmss_extension_image_list_names(): void {
    }

    /**
     * Gets a list of virtual machine extension image versions.
     *
     * Syntax: 
     *
     * az vmss extension image list-versions --location
     *                                       --name
     *                                       --publisher
     *                                       [--filter]
     *                                       [--orderby]
     *                                       [--subscription]
     *                                       [--top]
     */
    az_vmss_extension_image_list_versions(): void {
    }

    /**
     * Gets a virtual machine extension image.
     *
     * Syntax: 
     *
     * az vmss extension image show --location
     *                              --name
     *                              --publisher
     *                              --version
     *                              [--query-examples]
     *                              [--subscription]
     */
    az_vmss_extension_image_show(): void {
    }
}

/** Manage extensions on a VM scale set. */
class az_vmss_extension {
    /**
     * Delete an extension from a VMSS.
     *
     * Syntax: 
     *
     * az vmss extension delete --name
     *                          --resource-group
     *                          --vmss-name
     *                          [--no-wait]
     *                          [--subscription]
     */
    az_vmss_extension_delete(): void {
    }

    /**
     * List extensions associated with a VMSS.
     *
     * Syntax: 
     *
     * az vmss extension list --resource-group
     *                        --vmss-name
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_vmss_extension_list(): void {
    }

    /**
     * Add an extension to a VMSS or update an existing extension.
     *
     * Syntax: 
     *
     * az vmss extension set --name
     *                       --publisher
     *                       --resource-group
     *                       --vmss-name
     *                       [--extension-instance-name]
     *                       [--force-update]
     *                       [--no-auto-upgrade {false, true}]
     *                       [--no-wait]
     *                       [--protected-settings]
     *                       [--provision-after-extensions]
     *                       [--settings]
     *                       [--subscription]
     *                       [--version]
     */
    az_vmss_extension_set(): void {
    }

    /**
     * Show details on a VMSS extension.
     *
     * Syntax: 
     *
     * az vmss extension show --name
     *                        --resource-group
     *                        --vmss-name
     *                        [--query-examples]
     *                        [--subscription]
     */
    az_vmss_extension_show(): void {
    }
}

/** Manage service identities of a VM scaleset. */
class az_vmss_identity {
    /**
     * Enable managed service identity on a VMSS.
     *
     * Syntax: 
     *
     * az vmss identity assign [--identities]
     *                         [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--role]
     *                         [--scope]
     *                         [--subscription]
     */
    az_vmss_identity_assign(): void {
    }

    /**
     * Remove user assigned identities from a VM scaleset.
     *
     * Syntax: 
     *
     * az vmss identity remove [--identities]
     *                         [--ids]
     *                         [--name]
     *                         [--resource-group]
     *                         [--subscription]
     */
    az_vmss_identity_remove(): void {
    }

    /**
     * Display VM scaleset's managed identity info.
     *
     * Syntax: 
     *
     * az vmss identity show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--subscription]
     */
    az_vmss_identity_show(): void {
    }
}

/** Manage network interfaces of a VMSS. */
class az_vmss_nic {
    /**
     * Gets all network interfaces in a virtual machine scale set.
     *
     * Syntax: 
     *
     * az vmss nic list --resource-group
     *                  --vmss-name
     *                  [--query-examples]
     *                  [--subscription]
     */
    az_vmss_nic_list(): void {
    }

    /**
     * Gets information about all network interfaces in a virtual machine in a virtual machine scale set.
     *
     * Syntax: 
     *
     * az vmss nic list-vm-nics [--ids]
     *                          [--instance-id]
     *                          [--resource-group]
     *                          [--subscription]
     *                          [--vmss-name]
     */
    az_vmss_nic_list_vm_nics(): void {
    }

    /**
     * Get the specified network interface in a virtual machine scale set.
     *
     * Syntax: 
     *
     * az vmss nic show [--expand]
     *                  [--ids]
     *                  [--instance-id]
     *                  [--name]
     *                  [--query-examples]
     *                  [--resource-group]
     *                  [--subscription]
     *                  [--vmss-name]
     */
    az_vmss_nic_show(): void {
    }
}

/** Manage rolling upgrades. */
class az_vmss_rolling_upgrade {
    /**
     * Cancels the current virtual machine scale set rolling upgrade.
     *
     * Syntax: 
     *
     * az vmss rolling-upgrade cancel [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_vmss_rolling_upgrade_cancel(): void {
    }

    /**
     * Gets the status of the latest virtual machine scale set rolling upgrade.
     *
     * Syntax: 
     *
     * az vmss rolling-upgrade get-latest [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--subscription]
     */
    az_vmss_rolling_upgrade_get_latest(): void {
    }

    /**
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version.
     *
     * Syntax: 
     *
     * az vmss rolling-upgrade start [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_vmss_rolling_upgrade_start(): void {
    }
}

/** Manage run commands on a Virtual Machine Scale Set. */
class az_vmss_run_command {
    /**
     * Execute a specific run command on a Virtual Machine Scale Set instance.
     *
     * Syntax: 
     *
     * az vmss run-command invoke --command-id
     *                            [--ids]
     *                            [--instance-id]
     *                            [--name]
     *                            [--parameters]
     *                            [--resource-group]
     *                            [--scripts]
     *                            [--subscription]
     */
    az_vmss_run_command_invoke(): void {
    }

    /**
     * Lists all available run commands for a subscription in a location.
     *
     * Syntax: 
     *
     * az vmss run-command list --location
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_vmss_run_command_list(): void {
    }

    /**
     * Gets specific run command for a subscription in a location.
     *
     * Syntax: 
     *
     * az vmss run-command show --command-id
     *                          --location
     *                          [--query-examples]
     *                          [--subscription]
     */
    az_vmss_run_command_show(): void {
    }
}

/** Manage groupings of virtual machines in an Azure Virtual Machine Scale Set (VMSS). */
class az_vmss {
    /**
     * Create an Azure Virtual Machine Scale Set.
     *
     * Syntax: 
     *
     * az vmss create --name
     *                --resource-group
     *                [--accelerated-networking {false, true}]
     *                [--admin-password]
     *                [--admin-username]
     *                [--app-gateway]
     *                [--app-gateway-capacity]
     *                [--app-gateway-sku]
     *                [--app-gateway-subnet-address-prefix]
     *                [--asgs]
     *                [--assign-identity]
     *                [--authentication-type {all, password, ssh}]
     *                [--automatic-repairs-grace-period]
     *                [--backend-pool-name]
     *                [--backend-port]
     *                [--computer-name-prefix]
     *                [--custom-data]
     *                [--data-disk-caching]
     *                [--data-disk-encryption-sets]
     *                [--data-disk-iops]
     *                [--data-disk-mbps]
     *                [--data-disk-sizes-gb]
     *                [--disable-overprovision]
     *                [--dns-servers]
     *                [--encryption-at-host {false, true}]
     *                [--ephemeral-os-disk {false, true}]
     *                [--eviction-policy {Deallocate, Delete}]
     *                [--generate-ssh-keys]
     *                [--health-probe]
     *                [--host-group]
     *                [--image]
     *                [--instance-count]
     *                [--lb]
     *                [--lb-nat-pool-name]
     *                [--lb-sku {Basic, Standard}]
     *                [--license-type {None, RHEL_BYOS, SLES_BYOS, Windows_Client, Windows_Server}]
     *                [--location]
     *                [--max-price]
     *                [--no-wait]
     *                [--nsg]
     *                [--orchestration-mode {ScaleSetVM, VM}]
     *                [--os-disk-caching {None, ReadOnly, ReadWrite}]
     *                [--os-disk-encryption-set]
     *                [--os-disk-name]
     *                [--os-disk-size-gb]
     *                [--os-type {linux, windows}]
     *                [--plan-name]
     *                [--plan-product]
     *                [--plan-promotion-code]
     *                [--plan-publisher]
     *                [--platform-fault-domain-count]
     *                [--ppg]
     *                [--priority {Low, Regular, Spot}]
     *                [--public-ip-address]
     *                [--public-ip-address-allocation {dynamic, static}]
     *                [--public-ip-address-dns-name]
     *                [--public-ip-per-vm]
     *                [--role]
     *                [--scale-in-policy {Default, NewestVM, OldestVM}]
     *                [--scope]
     *                [--secrets]
     *                [--single-placement-group {false, true}]
     *                [--specialized {false, true}]
     *                [--ssh-dest-key-path]
     *                [--ssh-key-values]
     *                [--storage-container-name]
     *                [--storage-sku]
     *                [--subnet]
     *                [--subnet-address-prefix]
     *                [--subscription]
     *                [--tags]
     *                [--terminate-notification-time]
     *                [--ultra-ssd-enabled {false, true}]
     *                [--upgrade-policy-mode {Automatic, Manual, Rolling}]
     *                [--use-unmanaged-disk]
     *                [--validate]
     *                [--vm-domain-name]
     *                [--vm-sku]
     *                [--vnet-address-prefix]
     *                [--vnet-name]
     *                [--zones {1, 2, 3}]
     */
    az_vmss_create(): void {
    }

    /**
     * Deallocate VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss deallocate --name
     *                    --resource-group
     *                    [--instance-ids]
     *                    [--no-wait]
     *                    [--subscription]
     */
    az_vmss_deallocate(): void {
    }

    /**
     * Deletes a VM scale set.
     *
     * Syntax: 
     *
     * az vmss delete [--ids]
     *                [--name]
     *                [--no-wait]
     *                [--resource-group]
     *                [--subscription]
     */
    az_vmss_delete(): void {
    }

    /**
     * Delete VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss delete-instances --instance-ids
     *                          --name
     *                          --resource-group
     *                          [--no-wait]
     *                          [--subscription]
     */
    az_vmss_delete_instances(): void {
    }

    /**
     * View an instance of a VMSS.
     *
     * Syntax: 
     *
     * az vmss get-instance-view [--ids]
     *                           [--instance-id]
     *                           [--name]
     *                           [--resource-group]
     *                           [--subscription]
     */
    az_vmss_get_instance_view(): void {
    }

    /**
     * Gets list of OS upgrades on a VM scale set instance.
     *
     * Syntax: 
     *
     * az vmss get-os-upgrade-history [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_vmss_get_os_upgrade_history(): void {
    }

    /**
     * List VMSS.
     *
     * Syntax: 
     *
     * az vmss list [--query-examples]
     *              [--resource-group]
     *              [--subscription]
     */
    az_vmss_list(): void {
    }

    /**
     * Get the IP address and port number used to connect to individual VM instances within a set.
     *
     * Syntax: 
     *
     * az vmss list-instance-connection-info [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--subscription]
     */
    az_vmss_list_instance_connection_info(): void {
    }

    /**
     * List public IP addresses of VM instances within a set.
     *
     * Syntax: 
     *
     * az vmss list-instance-public-ips [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_vmss_list_instance_public_ips(): void {
    }

    /**
     * Gets a list of all virtual machines in a VM scale sets.
     *
     * Syntax: 
     *
     * az vmss list-instances [--expand]
     *                        [--filter]
     *                        [--ids]
     *                        [--name]
     *                        [--resource-group]
     *                        [--select]
     *                        [--subscription]
     */
    az_vmss_list_instances(): void {
    }

    /**
     * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
     *
     * Syntax: 
     *
     * az vmss list-skus [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--subscription]
     */
    az_vmss_list_skus(): void {
    }

    /**
     * Perform maintenance on one or more virtual machines in a VM scale set.
     *
     * Syntax: 
     *
     * az vmss perform-maintenance [--ids]
     *                             [--instance-ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_vmss_perform_maintenance(): void {
    }

    /**
     * Reimage VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss reimage [--ids]
     *                 [--instance-id]
     *                 [--name]
     *                 [--no-wait]
     *                 [--resource-group]
     *                 [--subscription]
     */
    az_vmss_reimage(): void {
    }

    /**
     * Restart VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss restart --name
     *                 --resource-group
     *                 [--instance-ids]
     *                 [--no-wait]
     *                 [--subscription]
     */
    az_vmss_restart(): void {
    }

    /**
     * Change the number of VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss scale --new-capacity
     *               [--ids]
     *               [--name]
     *               [--no-wait]
     *               [--resource-group]
     *               [--subscription]
     */
    az_vmss_scale(): void {
    }

    /**
     * Change ServiceState property for a given service within a VMSS.
     *
     * Syntax: 
     *
     * az vmss set-orchestration-service-state --action {Resume, Suspend}
     *                                         --service-name {AutomaticRepairs}
     *                                         [--ids]
     *                                         [--name]
     *                                         [--no-wait]
     *                                         [--resource-group]
     *                                         [--subscription]
     */
    az_vmss_set_orchestration_service_state(): void {
    }

    /**
     * Get details on VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss show --name
     *              --resource-group
     *              [--instance-id]
     *              [--query-examples]
     *              [--subscription]
     */
    az_vmss_show(): void {
    }

    /**
     * Simulate the eviction of a Spot virtual machine in a VM scale set.
     *
     * Syntax: 
     *
     * az vmss simulate-eviction --instance-id
     *                           --name
     *                           --resource-group
     *                           [--subscription]
     */
    az_vmss_simulate_eviction(): void {
    }

    /**
     * Start VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss start --name
     *               --resource-group
     *               [--instance-ids]
     *               [--no-wait]
     *               [--subscription]
     */
    az_vmss_start(): void {
    }

    /**
     * Power off (stop) VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss stop --name
     *              --resource-group
     *              [--instance-ids]
     *              [--no-wait]
     *              [--skip-shutdown]
     *              [--subscription]
     */
    az_vmss_stop(): void {
    }

    /**
     * Update a VMSS.
     *
     * Syntax: 
     *
     * az vmss update [--add]
     *                [--automatic-repairs-grace-period]
     *                [--enable-automatic-repairs {false, true}]
     *                [--enable-terminate-notification {false, true}]
     *                [--force-string]
     *                [--ids]
     *                [--instance-id]
     *                [--license-type {None, RHEL_BYOS, SLES_BYOS, Windows_Client, Windows_Server}]
     *                [--max-price]
     *                [--name]
     *                [--no-wait]
     *                [--ppg]
     *                [--priority {Low, Regular, Spot}]
     *                [--protect-from-scale-in {false, true}]
     *                [--protect-from-scale-set-actions {false, true}]
     *                [--remove]
     *                [--resource-group]
     *                [--scale-in-policy {Default, NewestVM, OldestVM}]
     *                [--set]
     *                [--subscription]
     *                [--terminate-notification-time]
     *                [--ultra-ssd-enabled {false, true}]
     */
    az_vmss_update(): void {
    }

    /**
     * Upgrade VMs within a VMSS.
     *
     * Syntax: 
     *
     * az vmss update-instances --instance-ids
     *                          --name
     *                          --resource-group
     *                          [--no-wait]
     *                          [--subscription]
     */
    az_vmss_update_instances(): void {
    }

    /**
     * Place the CLI in a waiting state until a condition of a scale set is met.
     *
     * Syntax: 
     *
     * az vmss wait [--created]
     *              [--custom]
     *              [--deleted]
     *              [--exists]
     *              [--ids]
     *              [--instance-id]
     *              [--interval]
     *              [--name]
     *              [--resource-group]
     *              [--subscription]
     *              [--timeout]
     *              [--updated]
     */
    az_vmss_wait(): void {
    }
}

/** Manage webapp authentication and authorization. */
class az_webapp_auth {
    /**
     * Show the authentification settings for the webapp.
     *
     * Syntax: 
     *
     * az webapp auth show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--slot]
     *                     [--subscription]
     */
    az_webapp_auth_show(): void {
    }

    /**
     * Update the authentication settings for the webapp.
     *
     * Syntax: 
     *
     * az webapp auth update [--aad-allowed-token-audiences]
     *                       [--aad-client-id]
     *                       [--aad-client-secret]
     *                       [--aad-client-secret-certificate-thumbprint]
     *                       [--aad-token-issuer-url]
     *                       [--action {AllowAnonymous, LoginWithAzureActiveDirectory, LoginWithFacebook, LoginWithGoogle, LoginWithMicrosoftAccount, LoginWithTwitter}]
     *                       [--allowed-external-redirect-urls]
     *                       [--enabled {false, true}]
     *                       [--facebook-app-id]
     *                       [--facebook-app-secret]
     *                       [--facebook-oauth-scopes]
     *                       [--google-client-id]
     *                       [--google-client-secret]
     *                       [--google-oauth-scopes]
     *                       [--ids]
     *                       [--microsoft-account-client-id]
     *                       [--microsoft-account-client-secret]
     *                       [--microsoft-account-oauth-scopes]
     *                       [--name]
     *                       [--resource-group]
     *                       [--runtime-version]
     *                       [--slot]
     *                       [--subscription]
     *                       [--token-refresh-extension-hours]
     *                       [--token-store {false, true}]
     *                       [--twitter-consumer-key]
     *                       [--twitter-consumer-secret]
     */
    az_webapp_auth_update(): void {
    }
}

/** Methods that show, set, add, and remove access restrictions on a webapp. */
class az_webapp_config_access_restriction {
    /**
     * Adds an Access Restriction to the webapp.
     *
     * Syntax: 
     *
     * az webapp config access-restriction add --priority
     *                                         [--action {Allow, Deny}]
     *                                         [--description]
     *                                         [--ids]
     *                                         [--ignore-missing-endpoint {false, true}]
     *                                         [--ip-address]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--rule-name]
     *                                         [--scm-site {false, true}]
     *                                         [--slot]
     *                                         [--subnet]
     *                                         [--subscription]
     *                                         [--vnet-name]
     */
    az_webapp_config_access_restriction_add(): void {
    }

    /**
     * Removes an Access Restriction from the webapp.
     *
     * Syntax: 
     *
     * az webapp config access-restriction remove [--action {Allow, Deny}]
     *                                            [--ids]
     *                                            [--ip-address]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--rule-name]
     *                                            [--scm-site {false, true}]
     *                                            [--slot]
     *                                            [--subnet]
     *                                            [--subscription]
     *                                            [--vnet-name]
     */
    az_webapp_config_access_restriction_remove(): void {
    }

    /**
     * Sets if SCM site is using the same restrictions as the main site.
     *
     * Syntax: 
     *
     * az webapp config access-restriction set --use-same-restrictions-for-scm-site {false, true}
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--slot]
     *                                         [--subscription]
     */
    az_webapp_config_access_restriction_set(): void {
    }

    /**
     * Show Access Restriction settings for webapp.
     *
     * Syntax: 
     *
     * az webapp config access-restriction show [--ids]
     *                                          [--name]
     *                                          [--query-examples]
     *                                          [--resource-group]
     *                                          [--slot]
     *                                          [--subscription]
     */
    az_webapp_config_access_restriction_show(): void {
    }
}

/** Configure web app settings. Updating or removing application settings will cause an app recycle. */
class az_webapp_config_appsettings {
    /**
     * Delete web app settings.
     *
     * Syntax: 
     *
     * az webapp config appsettings delete --setting-names
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--slot]
     *                                     [--subscription]
     */
    az_webapp_config_appsettings_delete(): void {
    }

    /**
     * Get the details of a web app's settings.
     *
     * Syntax: 
     *
     * az webapp config appsettings list --name
     *                                   --resource-group
     *                                   [--query-examples]
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_webapp_config_appsettings_list(): void {
    }

    /**
     * Set a web app's settings.
     *
     * Syntax: 
     *
     * az webapp config appsettings set [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--settings]
     *                                  [--slot]
     *                                  [--slot-settings]
     *                                  [--subscription]
     */
    az_webapp_config_appsettings_set(): void {
    }
}

/** Manage backups for web apps. */
class az_webapp_config_backup {
    /**
     * Create a backup of a web app.
     *
     * Syntax: 
     *
     * az webapp config backup create --container-url
     *                                --resource-group
     *                                --webapp-name
     *                                [--backup-name]
     *                                [--db-connection-string]
     *                                [--db-name]
     *                                [--db-type {LocalMySql, MySql, PostgreSql, SqlAzure}]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_config_backup_create(): void {
    }

    /**
     * List backups of a web app.
     *
     * Syntax: 
     *
     * az webapp config backup list --resource-group
     *                              --webapp-name
     *                              [--query-examples]
     *                              [--slot]
     *                              [--subscription]
     */
    az_webapp_config_backup_list(): void {
    }

    /**
     * Restore a web app from a backup.
     *
     * Syntax: 
     *
     * az webapp config backup restore --backup-name
     *                                 --container-url
     *                                 --resource-group
     *                                 --webapp-name
     *                                 [--db-connection-string]
     *                                 [--db-name]
     *                                 [--db-type {LocalMySql, MySql, PostgreSql, SqlAzure}]
     *                                 [--ignore-hostname-conflict]
     *                                 [--overwrite]
     *                                 [--slot]
     *                                 [--subscription]
     *                                 [--target-name]
     */
    az_webapp_config_backup_restore(): void {
    }

    /**
     * Show the backup schedule for a web app.
     *
     * Syntax: 
     *
     * az webapp config backup show --resource-group
     *                              --webapp-name
     *                              [--query-examples]
     *                              [--slot]
     *                              [--subscription]
     */
    az_webapp_config_backup_show(): void {
    }

    /**
     * Configure a new backup schedule for a web app.
     *
     * Syntax: 
     *
     * az webapp config backup update --resource-group
     *                                --webapp-name
     *                                [--backup-name]
     *                                [--container-url]
     *                                [--db-connection-string]
     *                                [--db-name]
     *                                [--db-type {LocalMySql, MySql, PostgreSql, SqlAzure}]
     *                                [--frequency]
     *                                [--retain-one {false, true}]
     *                                [--retention]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_config_backup_update(): void {
    }
}

/** Manage a web app's connection strings. */
class az_webapp_config_connection_string {
    /**
     * Delete a web app's connection strings.
     *
     * Syntax: 
     *
     * az webapp config connection-string delete --setting-names
     *                                           [--ids]
     *                                           [--name]
     *                                           [--resource-group]
     *                                           [--slot]
     *                                           [--subscription]
     */
    az_webapp_config_connection_string_delete(): void {
    }

    /**
     * Get a web app's connection strings.
     *
     * Syntax: 
     *
     * az webapp config connection-string list --name
     *                                         --resource-group
     *                                         [--query-examples]
     *                                         [--slot]
     *                                         [--subscription]
     */
    az_webapp_config_connection_string_list(): void {
    }

    /**
     * Update a web app's connection strings.
     *
     * Syntax: 
     *
     * az webapp config connection-string set --connection-string-type {ApiHub, Custom, DocDb, EventHub, MySql, NotificationHub, PostgreSQL, RedisCache, SQLAzure, SQLServer, ServiceBus}
     *                                        [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--settings]
     *                                        [--slot]
     *                                        [--slot-settings]
     *                                        [--subscription]
     */
    az_webapp_config_connection_string_set(): void {
    }
}

/** Manage web app container settings. */
class az_webapp_config_container {
    /**
     * Delete a web app container's settings.
     *
     * Syntax: 
     *
     * az webapp config container delete [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_webapp_config_container_delete(): void {
    }

    /**
     * Set a web app container's settings.
     *
     * Syntax: 
     *
     * az webapp config container set [--docker-custom-image-name]
     *                                [--docker-registry-server-password]
     *                                [--docker-registry-server-url]
     *                                [--docker-registry-server-user]
     *                                [--enable-app-service-storage {false, true}]
     *                                [--ids]
     *                                [--multicontainer-config-file]
     *                                [--multicontainer-config-type {COMPOSE, KUBE}]
     *                                [--name]
     *                                [--resource-group]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_config_container_set(): void {
    }

    /**
     * Get details of a web app container's settings.
     *
     * Syntax: 
     *
     * az webapp config container show [--ids]
     *                                 [--name]
     *                                 [--query-examples]
     *                                 [--resource-group]
     *                                 [--show-multicontainer-config]
     *                                 [--slot]
     *                                 [--subscription]
     */
    az_webapp_config_container_show(): void {
    }
}

/** Configure hostnames for a web app. */
class az_webapp_config_hostname {
    /**
     * Bind a hostname to a web app.
     *
     * Syntax: 
     *
     * az webapp config hostname add [--hostname]
     *                               [--ids]
     *                               [--resource-group]
     *                               [--slot]
     *                               [--subscription]
     *                               [--webapp-name]
     */
    az_webapp_config_hostname_add(): void {
    }

    /**
     * Unbind a hostname from a web app.
     *
     * Syntax: 
     *
     * az webapp config hostname delete [--hostname]
     *                                  [--ids]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     *                                  [--webapp-name]
     */
    az_webapp_config_hostname_delete(): void {
    }

    /**
     * Get the external-facing IP address for a web app.
     *
     * Syntax: 
     *
     * az webapp config hostname get-external-ip [--ids]
     *                                           [--resource-group]
     *                                           [--subscription]
     *                                           [--webapp-name]
     */
    az_webapp_config_hostname_get_external_ip(): void {
    }

    /**
     * List all hostname bindings for a web app.
     *
     * Syntax: 
     *
     * az webapp config hostname list --resource-group
     *                                --webapp-name
     *                                [--query-examples]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_config_hostname_list(): void {
    }
}

/** Manage web app snapshots. */
class az_webapp_config_snapshot {
    /**
     * List the restorable snapshots for a web app.
     *
     * Syntax: 
     *
     * az webapp config snapshot list --name
     *                                --resource-group
     *                                [--query-examples]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_config_snapshot_list(): void {
    }

    /**
     * Restore a web app snapshot.
     *
     * Syntax: 
     *
     * az webapp config snapshot restore --time
     *                                   [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--restore-content-only]
     *                                   [--slot]
     *                                   [--source-name]
     *                                   [--source-resource-group]
     *                                   [--source-slot]
     *                                   [--subscription]
     */
    az_webapp_config_snapshot_restore(): void {
    }
}

/** Configure SSL certificates for web apps. */
class az_webapp_config_ssl {
    /**
     * Bind an SSL certificate to a web app.
     *
     * Syntax: 
     *
     * az webapp config ssl bind --certificate-thumbprint
     *                           --ssl-type {IP, SNI}
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--slot]
     *                           [--subscription]
     */
    az_webapp_config_ssl_bind(): void {
    }

    /**
     * Create a Managed Certificate for a hostname in a webapp app.
     *
     * Syntax: 
     *
     * az webapp config ssl create --hostname
     *                             --name
     *                             --resource-group
     *                             [--slot]
     *                             [--subscription]
     */
    az_webapp_config_ssl_create(): void {
    }

    /**
     * Delete an SSL certificate from a web app.
     *
     * Syntax: 
     *
     * az webapp config ssl delete --certificate-thumbprint
     *                             --resource-group
     *                             [--subscription]
     */
    az_webapp_config_ssl_delete(): void {
    }

    /**
     * Import an SSL certificate to a web app from Key Vault.
     *
     * Syntax: 
     *
     * az webapp config ssl import --key-vault
     *                             --key-vault-certificate-name
     *                             [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--subscription]
     */
    az_webapp_config_ssl_import(): void {
    }

    /**
     * List SSL certificates for a web app.
     *
     * Syntax: 
     *
     * az webapp config ssl list --resource-group
     *                           [--query-examples]
     *                           [--subscription]
     */
    az_webapp_config_ssl_list(): void {
    }

    /**
     * Unbind an SSL certificate from a web app.
     *
     * Syntax: 
     *
     * az webapp config ssl unbind --certificate-thumbprint
     *                             [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--slot]
     *                             [--subscription]
     */
    az_webapp_config_ssl_unbind(): void {
    }

    /**
     * Upload an SSL certificate to a web app.
     *
     * Syntax: 
     *
     * az webapp config ssl upload --certificate-file
     *                             --certificate-password
     *                             [--ids]
     *                             [--name]
     *                             [--resource-group]
     *                             [--slot]
     *                             [--subscription]
     */
    az_webapp_config_ssl_upload(): void {
    }
}

/** Manage a web app's Azure storage account configurations. (Linux Web Apps and Windows Containers Web Apps Only). */
class az_webapp_config_storage_account {
    /**
     * Add an Azure storage account configuration to a web app. (Linux Web Apps and Windows Containers Web Apps Only).
     *
     * Syntax: 
     *
     * az webapp config storage-account add --access-key
     *                                      --account-name
     *                                      --custom-id
     *                                      --share-name
     *                                      --storage-type {AzureBlob, AzureFiles}
     *                                      [--ids]
     *                                      [--mount-path]
     *                                      [--name]
     *                                      [--resource-group]
     *                                      [--slot]
     *                                      [--slot-setting]
     *                                      [--subscription]
     */
    az_webapp_config_storage_account_add(): void {
    }

    /**
     * Delete a web app's Azure storage account configuration. (Linux Web Apps and Windows Containers Web Apps Only).
     *
     * Syntax: 
     *
     * az webapp config storage-account delete --custom-id
     *                                         [--ids]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--slot]
     *                                         [--subscription]
     */
    az_webapp_config_storage_account_delete(): void {
    }

    /**
     * Get a web app's Azure storage account configurations. (Linux Web Apps and Windows Containers Web Apps Only).
     *
     * Syntax: 
     *
     * az webapp config storage-account list --name
     *                                       --resource-group
     *                                       [--query-examples]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_webapp_config_storage_account_list(): void {
    }

    /**
     * Update an existing Azure storage account configuration on a web app. (Linux Web Apps and Windows Containers Web Apps Only).
     *
     * Syntax: 
     *
     * az webapp config storage-account update --custom-id
     *                                         [--access-key]
     *                                         [--account-name]
     *                                         [--ids]
     *                                         [--mount-path]
     *                                         [--name]
     *                                         [--resource-group]
     *                                         [--share-name]
     *                                         [--slot]
     *                                         [--slot-setting]
     *                                         [--storage-type {AzureBlob, AzureFiles}]
     *                                         [--subscription]
     */
    az_webapp_config_storage_account_update(): void {
    }
}

/** Configure a web app. */
class az_webapp_config {
    /**
     * Set a web app's configuration.
     *
     * Syntax: 
     *
     * az webapp config set [--always-on {false, true}]
     *                      [--auto-heal-enabled {false, true}]
     *                      [--ftps-state {AllAllowed, Disabled, FtpsOnly}]
     *                      [--generic-configurations]
     *                      [--http20-enabled {false, true}]
     *                      [--ids]
     *                      [--java-container]
     *                      [--java-container-version]
     *                      [--java-version]
     *                      [--linux-fx-version]
     *                      [--min-tls-version]
     *                      [--name]
     *                      [--net-framework-version]
     *                      [--number-of-workers]
     *                      [--php-version]
     *                      [--prewarmed-instance-count]
     *                      [--python-version]
     *                      [--remote-debugging-enabled {false, true}]
     *                      [--resource-group]
     *                      [--slot]
     *                      [--startup-file]
     *                      [--subscription]
     *                      [--use-32bit-worker-process {false, true}]
     *                      [--web-sockets-enabled {false, true}]
     *                      [--windows-fx-version]
     */
    az_webapp_config_set(): void {
    }

    /**
     * Get the details of a web app's configuration.
     *
     * Syntax: 
     *
     * az webapp config show [--ids]
     *                       [--name]
     *                       [--query-examples]
     *                       [--resource-group]
     *                       [--slot]
     *                       [--subscription]
     */
    az_webapp_config_show(): void {
    }
}

/** Manage Cross-Origin Resource Sharing (CORS). */
class az_webapp_cors {
    /**
     * Add allowed origins.
     *
     * Syntax: 
     *
     * az webapp cors add --allowed-origins
     *                    [--ids]
     *                    [--name]
     *                    [--resource-group]
     *                    [--slot]
     *                    [--subscription]
     */
    az_webapp_cors_add(): void {
    }

    /**
     * Remove allowed origins.
     *
     * Syntax: 
     *
     * az webapp cors remove --allowed-origins
     *                       [--ids]
     *                       [--name]
     *                       [--resource-group]
     *                       [--slot]
     *                       [--subscription]
     */
    az_webapp_cors_remove(): void {
    }

    /**
     * Show allowed origins.
     *
     * Syntax: 
     *
     * az webapp cors show [--ids]
     *                     [--name]
     *                     [--query-examples]
     *                     [--resource-group]
     *                     [--slot]
     *                     [--subscription]
     */
    az_webapp_cors_show(): void {
    }
}

/** Manage deleted web apps. */
class az_webapp_deleted {
    /**
     * List web apps that have been deleted.
     *
     * Syntax: 
     *
     * az webapp deleted list [--name]
     *                        [--query-examples]
     *                        [--resource-group]
     *                        [--slot]
     *                        [--subscription]
     */
    az_webapp_deleted_list(): void {
    }

    /**
     * Restore a deleted web app.
     *
     * Syntax: 
     *
     * az webapp deleted restore --deleted-id
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--restore-content-only]
     *                           [--slot]
     *                           [--subscription]
     */
    az_webapp_deleted_restore(): void {
    }
}

/** Manage container-based continuous deployment. */
class az_webapp_deployment_container {
    /**
     * Configure continuous deployment via containers.
     *
     * Syntax: 
     *
     * az webapp deployment container config --enable-cd {false, true}
     *                                       [--ids]
     *                                       [--name]
     *                                       [--resource-group]
     *                                       [--slot]
     *                                       [--subscription]
     */
    az_webapp_deployment_container_config(): void {
    }

    /**
     * Get the URL which can be used to configure webhooks for continuous deployment.
     *
     * Syntax: 
     *
     * az webapp deployment container show-cd-url [--ids]
     *                                            [--name]
     *                                            [--resource-group]
     *                                            [--slot]
     *                                            [--subscription]
     */
    az_webapp_deployment_container_show_cd_url(): void {
    }
}

/** Manage web app deployment slots. */
class az_webapp_deployment_slot {
    /**
     * Configure deployment slot auto swap.
     *
     * Syntax: 
     *
     * az webapp deployment slot auto-swap --slot
     *                                     [--auto-swap-slot]
     *                                     [--disable]
     *                                     [--ids]
     *                                     [--name]
     *                                     [--resource-group]
     *                                     [--subscription]
     */
    az_webapp_deployment_slot_auto_swap(): void {
    }

    /**
     * Create a deployment slot.
     *
     * Syntax: 
     *
     * az webapp deployment slot create --name
     *                                  --resource-group
     *                                  --slot
     *                                  [--configuration-source]
     *                                  [--subscription]
     */
    az_webapp_deployment_slot_create(): void {
    }

    /**
     * Delete a deployment slot.
     *
     * Syntax: 
     *
     * az webapp deployment slot delete --slot
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--subscription]
     */
    az_webapp_deployment_slot_delete(): void {
    }

    /**
     * List all deployment slots.
     *
     * Syntax: 
     *
     * az webapp deployment slot list [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_webapp_deployment_slot_list(): void {
    }

    /**
     * Change deployment slots for a web app.
     *
     * Syntax: 
     *
     * az webapp deployment slot swap --slot
     *                                [--action {preview, reset, swap}]
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--subscription]
     *                                [--target-slot]
     */
    az_webapp_deployment_slot_swap(): void {
    }
}

/** Manage web app deployment via source control. */
class az_webapp_deployment_source {
    /**
     * Manage deployment from git or Mercurial repositories.
     *
     * Syntax: 
     *
     * az webapp deployment source config --repo-url
     *                                    [--app-working-dir]
     *                                    [--branch]
     *                                    [--cd-account-create]
     *                                    [--cd-app-type {AspNet, AspNetCore, NodeJS, PHP, Python}]
     *                                    [--cd-project-url]
     *                                    [--git-token]
     *                                    [--ids]
     *                                    [--manual-integration]
     *                                    [--name]
     *                                    [--nodejs-task-runner {Grunt, Gulp, None}]
     *                                    [--private-repo-password]
     *                                    [--private-repo-username]
     *                                    [--python-framework {Bottle, Django, Flask}]
     *                                    [--python-version {Python 2.7.12 x64, Python 2.7.12 x86, Python 2.7.13 x64, Python 2.7.13 x86, Python 3.5.3 x64, Python 3.5.3 x86, Python 3.6.0 x64, Python 3.6.0 x86, Python 3.6.1 x86, Python 3.6.2 x64}]
     *                                    [--repository-type {externalgit, git, github, localgit, mercurial, vsts}]
     *                                    [--resource-group]
     *                                    [--slot]
     *                                    [--slot-swap]
     *                                    [--subscription]
     *                                    [--test]
     */
    az_webapp_deployment_source_config(): void {
    }

    /**
     * Get a URL for a git repository endpoint to clone and push to for web app deployment.
     *
     * Syntax: 
     *
     * az webapp deployment source config-local-git [--ids]
     *                                              [--name]
     *                                              [--resource-group]
     *                                              [--slot]
     *                                              [--subscription]
     */
    az_webapp_deployment_source_config_local_git(): void {
    }

    /**
     * Perform deployment using the kudu zip push deployment for a web app.
     *
     * Syntax: 
     *
     * az webapp deployment source config-zip --src
     *                                        [--ids]
     *                                        [--name]
     *                                        [--resource-group]
     *                                        [--slot]
     *                                        [--subscription]
     *                                        [--timeout]
     */
    az_webapp_deployment_source_config_zip(): void {
    }

    /**
     * Delete a source control deployment configuration.
     *
     * Syntax: 
     *
     * az webapp deployment source delete [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_webapp_deployment_source_delete(): void {
    }

    /**
     * Get the details of a source control deployment configuration.
     *
     * Syntax: 
     *
     * az webapp deployment source show [--ids]
     *                                  [--name]
     *                                  [--query-examples]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_webapp_deployment_source_show(): void {
    }

    /**
     * Synchronize from the repository. Only needed under manual integration mode.
     *
     * Syntax: 
     *
     * az webapp deployment source sync [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_webapp_deployment_source_sync(): void {
    }

    /**
     * Update source control token cached in Azure app service.
     *
     * Syntax: 
     *
     * az webapp deployment source update-token [--git-token]
     *                                          [--subscription]
     */
    az_webapp_deployment_source_update_token(): void {
    }
}

/** Manage user credentials for deployment. */
class az_webapp_deployment_user {
    /**
     * Update deployment credentials.
     *
     * Syntax: 
     *
     * az webapp deployment user set --user-name
     *                               [--password]
     *                               [--subscription]
     */
    az_webapp_deployment_user_set(): void {
    }

    /**
     * Get deployment publishing user.
     *
     * Syntax: 
     *
     * az webapp deployment user show [--query-examples]
     *                                [--subscription]
     */
    az_webapp_deployment_user_show(): void {
    }
}

/** Manage web app deployments. */
class az_webapp_deployment {
    /**
     * Get the details for available web app publishing credentials.
     *
     * Syntax: 
     *
     * az webapp deployment list-publishing-credentials [--ids]
     *                                                  [--name]
     *                                                  [--resource-group]
     *                                                  [--slot]
     *                                                  [--subscription]
     */
    az_webapp_deployment_list_publishing_credentials(): void {
    }

    /**
     * Get the details for available web app deployment profiles.
     *
     * Syntax: 
     *
     * az webapp deployment list-publishing-profiles [--ids]
     *                                               [--name]
     *                                               [--resource-group]
     *                                               [--slot]
     *                                               [--subscription]
     *                                               [--xml]
     */
    az_webapp_deployment_list_publishing_profiles(): void {
    }
}

/** Methods that list, add and remove hybrid-connections from webapps. */
class az_webapp_hybrid_connection {
    /**
     * Add a hybrid-connection to a webapp.
     *
     * Syntax: 
     *
     * az webapp hybrid-connection add --hybrid-connection
     *                                 --name
     *                                 --namespace
     *                                 --resource-group
     *                                 [--slot]
     *                                 [--subscription]
     */
    az_webapp_hybrid_connection_add(): void {
    }

    /**
     * List the hybrid-connections on a webapp.
     *
     * Syntax: 
     *
     * az webapp hybrid-connection list --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_webapp_hybrid_connection_list(): void {
    }

    /**
     * Remove a hybrid-connection from a webapp.
     *
     * Syntax: 
     *
     * az webapp hybrid-connection remove --hybrid-connection
     *                                    --name
     *                                    --namespace
     *                                    --resource-group
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_webapp_hybrid_connection_remove(): void {
    }
}

/** Manage web app's managed service identity. */
class az_webapp_identity {
    /**
     * Assign managed service identity to the web app.
     *
     * Syntax: 
     *
     * az webapp identity assign [--identities]
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--role]
     *                           [--scope]
     *                           [--slot]
     *                           [--subscription]
     */
    az_webapp_identity_assign(): void {
    }

    /**
     * Disable web app's managed service identity.
     *
     * Syntax: 
     *
     * az webapp identity remove [--identities]
     *                           [--ids]
     *                           [--name]
     *                           [--resource-group]
     *                           [--slot]
     *                           [--subscription]
     */
    az_webapp_identity_remove(): void {
    }

    /**
     * Display web app's managed service identity.
     *
     * Syntax: 
     *
     * az webapp identity show [--ids]
     *                         [--name]
     *                         [--query-examples]
     *                         [--resource-group]
     *                         [--slot]
     *                         [--subscription]
     */
    az_webapp_identity_show(): void {
    }
}

/** Manage web app deployment logs. */
class az_webapp_log_deployment {
    /**
     * List deployments associated with web app.
     *
     * Syntax: 
     *
     * az webapp log deployment list --name
     *                               --resource-group
     *                               [--query-examples]
     *                               [--slot]
     *                               [--subscription]
     */
    az_webapp_log_deployment_list(): void {
    }

    /**
     * Show deployment logs of the latest deployment, or a specific deployment if deployment-id is specified.
     *
     * Syntax: 
     *
     * az webapp log deployment show --name
     *                               --resource-group
     *                               [--deployment-id]
     *                               [--query-examples]
     *                               [--slot]
     *                               [--subscription]
     */
    az_webapp_log_deployment_show(): void {
    }
}

/** Manage web app logs. */
class az_webapp_log {
    /**
     * Configure logging for a web app.
     *
     * Syntax: 
     *
     * az webapp log config [--application-logging {azureblobstorage, filesystem, off}]
     *                      [--detailed-error-messages {false, true}]
     *                      [--docker-container-logging {filesystem, off}]
     *                      [--failed-request-tracing {false, true}]
     *                      [--ids]
     *                      [--level {error, information, verbose, warning}]
     *                      [--name]
     *                      [--resource-group]
     *                      [--slot]
     *                      [--subscription]
     *                      [--web-server-logging {filesystem, off}]
     */
    az_webapp_log_config(): void {
    }

    /**
     * Download a web app's log history as a zip file.
     *
     * Syntax: 
     *
     * az webapp log download [--ids]
     *                        [--log-file]
     *                        [--name]
     *                        [--resource-group]
     *                        [--slot]
     *                        [--subscription]
     */
    az_webapp_log_download(): void {
    }

    /**
     * Get the details of a web app's logging configuration.
     *
     * Syntax: 
     *
     * az webapp log show [--ids]
     *                    [--name]
     *                    [--query-examples]
     *                    [--resource-group]
     *                    [--slot]
     *                    [--subscription]
     */
    az_webapp_log_show(): void {
    }

    /**
     * Start live log tracing for a web app.
     *
     * Syntax: 
     *
     * az webapp log tail [--ids]
     *                    [--name]
     *                    [--provider]
     *                    [--resource-group]
     *                    [--slot]
     *                    [--subscription]
     */
    az_webapp_log_tail(): void {
    }
}

/** Manage traffic routing for web apps. */
class az_webapp_traffic_routing {
    /**
     * Clear the routing rules and send all traffic to production.
     *
     * Syntax: 
     *
     * az webapp traffic-routing clear [--ids]
     *                                 [--name]
     *                                 [--resource-group]
     *                                 [--subscription]
     */
    az_webapp_traffic_routing_clear(): void {
    }

    /**
     * Configure routing traffic to deployment slots.
     *
     * Syntax: 
     *
     * az webapp traffic-routing set --distribution
     *                               [--ids]
     *                               [--name]
     *                               [--resource-group]
     *                               [--subscription]
     */
    az_webapp_traffic_routing_set(): void {
    }

    /**
     * Display the current distribution of traffic across slots.
     *
     * Syntax: 
     *
     * az webapp traffic-routing show [--ids]
     *                                [--name]
     *                                [--query-examples]
     *                                [--resource-group]
     *                                [--subscription]
     */
    az_webapp_traffic_routing_show(): void {
    }
}

/** Methods that list, add, and remove virtual network integrations from a webapp. */
class az_webapp_vnet_integration {
    /**
     * Add a regional virtual network integration to a webapp.
     *
     * Syntax: 
     *
     * az webapp vnet-integration add --name
     *                                --resource-group
     *                                --subnet
     *                                --vnet
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_vnet_integration_add(): void {
    }

    /**
     * List the virtual network integrations on a webapp.
     *
     * Syntax: 
     *
     * az webapp vnet-integration list --name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--slot]
     *                                 [--subscription]
     */
    az_webapp_vnet_integration_list(): void {
    }

    /**
     * Remove a regional virtual network integration from webapp.
     *
     * Syntax: 
     *
     * az webapp vnet-integration remove --name
     *                                   --resource-group
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_webapp_vnet_integration_remove(): void {
    }
}

/** Allows management operations of continuous webjobs on a web app. */
class az_webapp_webjob_continuous {
    /**
     * List all continuous webjobs on a selected web app.
     *
     * Syntax: 
     *
     * az webapp webjob continuous list --name
     *                                  --resource-group
     *                                  [--query-examples]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_webapp_webjob_continuous_list(): void {
    }

    /**
     * Delete a specific continuous webjob.
     *
     * Syntax: 
     *
     * az webapp webjob continuous remove --webjob-name
     *                                    [--ids]
     *                                    [--name]
     *                                    [--resource-group]
     *                                    [--slot]
     *                                    [--subscription]
     */
    az_webapp_webjob_continuous_remove(): void {
    }

    /**
     * Start a specific continuous webjob on a selected web app.
     *
     * Syntax: 
     *
     * az webapp webjob continuous start --webjob-name
     *                                   [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_webapp_webjob_continuous_start(): void {
    }

    /**
     * Stop a specific continuous webjob.
     *
     * Syntax: 
     *
     * az webapp webjob continuous stop --webjob-name
     *                                  [--ids]
     *                                  [--name]
     *                                  [--resource-group]
     *                                  [--slot]
     *                                  [--subscription]
     */
    az_webapp_webjob_continuous_stop(): void {
    }
}

/** Allows management operations of triggered webjobs on a web app. */
class az_webapp_webjob_triggered {
    /**
     * List all triggered webjobs hosted on a web app.
     *
     * Syntax: 
     *
     * az webapp webjob triggered list --name
     *                                 --resource-group
     *                                 [--query-examples]
     *                                 [--slot]
     *                                 [--subscription]
     */
    az_webapp_webjob_triggered_list(): void {
    }

    /**
     * Get history of a specific triggered webjob hosted on a web app.
     *
     * Syntax: 
     *
     * az webapp webjob triggered log --webjob-name
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_webjob_triggered_log(): void {
    }

    /**
     * Delete a specific triggered webjob hosted on a web app.
     *
     * Syntax: 
     *
     * az webapp webjob triggered remove --webjob-name
     *                                   [--ids]
     *                                   [--name]
     *                                   [--resource-group]
     *                                   [--slot]
     *                                   [--subscription]
     */
    az_webapp_webjob_triggered_remove(): void {
    }

    /**
     * Run a specific triggered webjob hosted on a web app.
     *
     * Syntax: 
     *
     * az webapp webjob triggered run --webjob-name
     *                                [--ids]
     *                                [--name]
     *                                [--resource-group]
     *                                [--slot]
     *                                [--subscription]
     */
    az_webapp_webjob_triggered_run(): void {
    }
}

/** Allows management operations for webjobs on a web app. */
class az_webapp_webjob {
}

/** Manage web apps. */
class az_webapp {
    /**
     * Open a web app in a browser.
     *
     * Syntax: 
     *
     * az webapp browse [--ids]
     *                  [--logs]
     *                  [--name]
     *                  [--resource-group]
     *                  [--slot]
     *                  [--subscription]
     */
    az_webapp_browse(): void {
    }

    /**
     * Create a web app.
     *
     * Syntax: 
     *
     * az webapp create --name
     *                  --plan
     *                  --resource-group
     *                  [--assign-identity]
     *                  [--deployment-container-image-name]
     *                  [--deployment-local-git]
     *                  [--deployment-source-branch]
     *                  [--deployment-source-url]
     *                  [--docker-registry-server-password]
     *                  [--docker-registry-server-user]
     *                  [--multicontainer-config-file]
     *                  [--multicontainer-config-type {COMPOSE, KUBE}]
     *                  [--role]
     *                  [--runtime]
     *                  [--scope]
     *                  [--startup-file]
     *                  [--subscription]
     *                  [--tags]
     */
    az_webapp_create(): void {
    }

    /**
     * Creates a remote connection using a tcp tunnel to your web app.
     *
     * Syntax: 
     *
     * az webapp create-remote-connection [--ids]
     *                                    [--instance]
     *                                    [--name]
     *                                    [--port]
     *                                    [--resource-group]
     *                                    [--slot]
     *                                    [--subscription]
     *                                    [--timeout]
     */
    az_webapp_create_remote_connection(): void {
    }

    /**
     * Delete a web app.
     *
     * Syntax: 
     *
     * az webapp delete [--ids]
     *                  [--keep-dns-registration]
     *                  [--keep-empty-plan]
     *                  [--keep-metrics]
     *                  [--name]
     *                  [--resource-group]
     *                  [--slot]
     *                  [--subscription]
     */
    az_webapp_delete(): void {
    }

    /**
     * List web apps.
     *
     * Syntax: 
     *
     * az webapp list [--query-examples]
     *                [--resource-group]
     *                [--subscription]
     */
    az_webapp_list(): void {
    }

    /**
     * List all scaled out instances of a web app or web app slot.
     *
     * Syntax: 
     *
     * az webapp list-instances --name
     *                          --resource-group
     *                          [--slot]
     *                          [--subscription]
     */
    az_webapp_list_instances(): void {
    }

    /**
     * List available built-in stacks which can be used for web apps.
     *
     * Syntax: 
     *
     * az webapp list-runtimes [--linux]
     *                         [--subscription]
     */
    az_webapp_list_runtimes(): void {
    }

    /**
     * Restart a web app.
     *
     * Syntax: 
     *
     * az webapp restart [--ids]
     *                   [--name]
     *                   [--resource-group]
     *                   [--slot]
     *                   [--subscription]
     */
    az_webapp_restart(): void {
    }

    /**
     * Get the details of a web app.
     *
     * Syntax: 
     *
     * az webapp show [--ids]
     *                [--name]
     *                [--query-examples]
     *                [--resource-group]
     *                [--slot]
     *                [--subscription]
     */
    az_webapp_show(): void {
    }

    /**
     * SSH command establishes a ssh session to the web container and developer would get a shell terminal remotely.
     *
     * Syntax: 
     *
     * az webapp ssh [--ids]
     *               [--instance]
     *               [--name]
     *               [--port]
     *               [--resource-group]
     *               [--slot]
     *               [--subscription]
     *               [--timeout]
     */
    az_webapp_ssh(): void {
    }

    /**
     * Start a web app.
     *
     * Syntax: 
     *
     * az webapp start [--ids]
     *                 [--name]
     *                 [--resource-group]
     *                 [--slot]
     *                 [--subscription]
     */
    az_webapp_start(): void {
    }

    /**
     * Stop a web app.
     *
     * Syntax: 
     *
     * az webapp stop [--ids]
     *                [--name]
     *                [--resource-group]
     *                [--slot]
     *                [--subscription]
     */
    az_webapp_stop(): void {
    }

    /**
     * Create a webapp and deploy code from a local workspace to the app. The command is required to run from the folder where the code is present. Current support includes Node, Python, .NET Core and ASP.NET. Node, Python apps are created as Linux apps. .Net Core, ASP.NET, and static HTML apps are created as Windows apps. Append the html flag to deploy as a static HTML app.
     *
     * Syntax: 
     *
     * az webapp up [--dryrun]
     *              [--html]
     *              [--ids]
     *              [--launch-browser]
     *              [--location]
     *              [--logs]
     *              [--name]
     *              [--plan]
     *              [--resource-group]
     *              [--sku {B1, B2, B3, D1, F1, FREE, I1, I2, I3, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED}]
     *              [--subscription]
     */
    az_webapp_up(): void {
    }

    /**
     * Update a web app.
     *
     * Syntax: 
     *
     * az webapp update [--add]
     *                  [--client-affinity-enabled {false, true}]
     *                  [--force-dns-registration {false, true}]
     *                  [--force-string]
     *                  [--https-only {false, true}]
     *                  [--ids]
     *                  [--name]
     *                  [--remove]
     *                  [--resource-group]
     *                  [--set]
     *                  [--skip-custom-domain-verification {false, true}]
     *                  [--skip-dns-registration {false, true}]
     *                  [--slot]
     *                  [--subscription]
     *                  [--ttl-in-seconds {false, true}]
     */
    az_webapp_update(): void {
    }
}
